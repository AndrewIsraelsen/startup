{"version":3,"file":"ej2-pdf-export.umd.min.js","sources":["../src/implementation/collections/utils.js","../src/implementation/collections/dictionary.js","../src/implementation/primitives/pdf-name.js","../src/implementation/input-output/pdf-operators.js","../src/implementation/input-output/pdf-dictionary-properties.js","../src/implementation/primitives/pdf-dictionary.js","../src/implementation/primitives/pdf-number.js","../src/implementation/primitives/pdf-array.js","../src/implementation/primitives/pdf-stream.js","../src/implementation/primitives/pdf-string.js","../src/implementation/primitives/pdf-reference.js","../src/implementation/actions/action.js","../src/implementation/actions/uri-action.js","../src/implementation/graphics/enum.js","../src/implementation/graphics/pdf-color.js","../src/implementation/drawing/pdf-drawing.js","../src/implementation/graphics/brushes/pdf-brush.js","../src/implementation/graphics/brushes/pdf-solid-brush.js","../src/implementation/graphics/fonts/enum.js","../src/implementation/graphics/fonts/pdf-string-format.js","../src/implementation/graphics/fonts/string-tokenizer.js","../src/implementation/graphics/fonts/string-layouter.js","../src/implementation/graphics/fonts/pdf-font.js","../src/implementation/input-output/pdf-writer.js","../src/implementation/input-output/enum.js","../src/implementation/input-output/pdf-main-object-collection.js","../src/implementation/document/pdf-document-base.js","../src/implementation/input-output/cross-table.js","../src/implementation/primitives/pdf-boolean.js","../src/implementation/document/pdf-viewer-preferences.js","../src/implementation/document/pdf-catalog.js","../src/implementation/input-output/pdf-cross-table.js","../src/implementation/pages/pdf-page-size.js","../src/implementation/pages/enum.js","../src/implementation/graphics/pdf-margins.js","../src/implementation/pages/pdf-page-settings.js","../src/implementation/input-output/pdf-stream-writer.js","../src/implementation/graphics/pdf-pen.js","../src/implementation/graphics/pdf-transformation-matrix.js","../src/implementation/graphics/constants.js","../src/implementation/collections/object-object-pair/dictionary.js","../src/implementation/graphics/pdf-transparency.js","../src/implementation/document/automatic-fields/automatic-field-info-collection.js","../src/implementation/graphics/figures/base/graphics-element.js","../src/implementation/document/automatic-fields/automatic-field.js","../src/implementation/document/automatic-fields/automatic-field-info.js","../src/implementation/graphics/images/byte-array.js","../src/implementation/graphics/images/image-decoder.js","../src/implementation/graphics/unit-convertor.js","../src/implementation/graphics/images/pdf-image.js","../src/implementation/graphics/images/pdf-bitmap.js","../src/implementation/graphics/fonts/ttf-table-info.js","../src/implementation/graphics/fonts/ttf-name-table.js","../src/implementation/graphics/fonts/ttf-name-record.js","../src/implementation/graphics/fonts/ttf-head-table.js","../src/implementation/graphics/fonts/ttf-metrics.js","../src/implementation/graphics/fonts/ttf-horizontal-header-table.js","../src/implementation/graphics/fonts/ttf-OS2-Table.js","../src/implementation/graphics/fonts/ttf-post-table.js","../src/implementation/graphics/fonts/ttf-long-hor-metric.js","../src/implementation/graphics/fonts/ttf-cmap-sub-table.js","../src/implementation/graphics/fonts/ttf-cmap-table.js","../src/implementation/graphics/fonts/ttf-glyph-info.js","../src/implementation/graphics/fonts/ttf-loca-table.js","../src/implementation/graphics/fonts/ttf-apple-cmap-sub-table.js","../src/implementation/graphics/fonts/ttf-microsoft-cmap-sub-table.js","../src/implementation/graphics/fonts/ttf-trimmed-cmap-sub-table.js","../src/implementation/graphics/fonts/ttf-glyph-header.js","../src/implementation/input-output/big-endian-writer.js","../src/implementation/graphics/fonts/ttf-reader.js","../src/implementation/graphics/fonts/pdf-font-metrics.js","../src/implementation/graphics/fonts/unicode-true-type-font.js","../src/implementation/graphics/fonts/rtl/rtl-text-shape.js","../src/implementation/graphics/fonts/rtl/rtl-bidirectional.js","../src/implementation/graphics/fonts/rtl-renderer.js","../src/implementation/graphics/figures/enum.js","../src/implementation/graphics/brushes/pdf-gradient-brush.js","../src/implementation/graphics/figures/pdf-template.js","../src/implementation/graphics/pdf-resources.js","../src/implementation/graphics/brushes/pdf-tiling-brush.js","../src/implementation/graphics/pdf-graphics.js","../src/implementation/pages/pdf-page-layer.js","../src/implementation/general/pdf-collection.js","../src/implementation/pages/pdf-page-layer-collection.js","../src/implementation/pages/pdf-page-base.js","../src/implementation/annotations/annotation-collection.js","../src/implementation/pages/pdf-page.js","../src/implementation/pages/page-added-event-arguments.js","../src/implementation/pages/pdf-section-page-collection.js","../src/implementation/document/pdf-document-template.js","../src/implementation/pages/pdf-section-templates.js","../src/implementation/pages/pdf-section.js","../src/implementation/pages/pdf-section-collection.js","../src/implementation/pages/pdf-document-page-collection.js","../src/implementation/general/pdf-cache-collection.js","../src/implementation/document/pdf-document.js","../src/implementation/graphics/fonts/pdf-standard-font-metrics-factory.js","../src/implementation/graphics/fonts/pdf-standard-font.js","../src/implementation/annotations/annotation.js","../src/implementation/annotations/link-annotation.js","../src/implementation/annotations/action-link-annotation.js","../src/implementation/annotations/document-link-annotation.js","../src/implementation/graphics/figures/base/element-layouter.js","../src/implementation/structured-elements/grid/styles/pdf-borders.js","../src/implementation/graphics/figures/layout-element.js","../src/implementation/graphics/figures/base/text-layouter.js","../src/implementation/graphics/figures/text-element.js","../src/implementation/annotations/uri-annotation.js","../src/implementation/annotations/pdf-text-web-link.js","../src/implementation/document/automatic-fields/pdf-numbers-convertor.js","../src/implementation/document/automatic-fields/pdf-template-value-pair.js","../src/implementation/document/automatic-fields/multiple-value-field.js","../src/implementation/document/automatic-fields/pdf-page-number-field.js","../src/implementation/document/automatic-fields/composite-field.js","../src/implementation/document/automatic-fields/single-value-field.js","../src/implementation/document/automatic-fields/page-count-field.js","../src/implementation/general/enum.js","../src/implementation/general/pdf-destination.js","../src/implementation/general/functions/pdf-function.js","../src/implementation/general/functions/pdf-sampled-function.js","../src/implementation/graphics/brushes/enum.js","../src/implementation/graphics/brushes/pdf-brushes.js","../src/implementation/graphics/brushes/pdf-blend.js","../src/implementation/graphics/brushes/pdf-color-blend.js","../src/implementation/graphics/brushes/pdf-linear-gradient-brush.js","../src/implementation/graphics/brushes/pdf-radial-gradient-brush.js","../src/implementation/structured-elements/tables/light-tables/enum.js","../src/implementation/structured-elements/grid/styles/style.js","../src/implementation/structured-elements/grid/pdf-grid-cell.js","../src/implementation/structured-elements/grid/pdf-grid-column.js","../src/implementation/structured-elements/grid/pdf-grid-row.js","../src/implementation/structured-elements/grid/pdf-grid.js","../src/implementation/structured-elements/grid/layout/grid-layouter.js","../src/implementation/graphics/figures/base/shape-layouter.js","../src/implementation/graphics/figures/base/pdf-shape-element.js","../src/implementation/graphics/figures/base/draw-element.js","../src/implementation/graphics/figures/base/fill-element.js","../src/implementation/graphics/figures/path.js","../src/implementation/graphics/figures/rectangle-area.js","../src/implementation/graphics/figures/ellipse-part.js","../src/implementation/graphics/figures/arc.js","../src/implementation/graphics/fonts/pdf-true-type-font.js","../src/implementation/pages/pdf-page-template-element.js"],"sourcesContent":["/**\n * @private\n * @hidden\n */\nexport function defaultToString(item) {\n    // if (item === null) {\n    //     return 'COLLECTION_NULL';\n    // } else if (typeof item === 'undefined') {\n    //     return 'COLLECTION_UNDEFINED';\n    // } else if (Object.prototype.toString.call(item) === '[object String]') {\n    if (Object.prototype.toString.call(item) === '[object String]') {\n        return '$s' + item;\n    }\n    else {\n        return '$o' + item.toString();\n    }\n}\n","/**\n * Dictionary.ts class for EJ2-PDF\n * @private\n * @hidden\n */\nimport { defaultToString } from './utils';\n/**\n * @private\n * @hidden\n */\nvar Dictionary = /** @class */ (function () {\n    /**\n     * @private\n     * @hidden\n     */\n    function Dictionary(toStringFunction) {\n        this.table = {};\n        this.nElements = 0;\n        this.toStr = toStringFunction || defaultToString;\n    }\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.getValue = function (key) {\n        var pair = this.table['$' + this.toStr(key)];\n        if (typeof pair === 'undefined') {\n            return undefined;\n        }\n        return pair.value;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.setValue = function (key, value) {\n        // if (typeof key === 'undefined' || typeof value === 'undefined') {\n        //     return undefined;\n        // }\n        var ret;\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        // if (typeof previousElement === 'undefined') {\n        this.nElements++;\n        ret = undefined;\n        // }\n        this.table[k] = {\n            key: key,\n            value: value\n        };\n        return ret;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.remove = function (key) {\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        // if (typeof previousElement !== 'undefined') {\n        delete this.table[k];\n        this.nElements--;\n        return previousElement.value;\n        // }\n        // return undefined;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.keys = function () {\n        var keysArray = [];\n        var namesOfKeys = Object.keys(this.table);\n        for (var index1 = 0; index1 < namesOfKeys.length; index1++) {\n            // if (Object.prototype.hasOwnProperty.call(this.table, namesOfKeys[index1])) {\n            var pair1 = this.table[namesOfKeys[index1]];\n            keysArray.push(pair1.key);\n            // }\n        }\n        return keysArray;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.values = function () {\n        var valuesArray = [];\n        var namesOfValues = Object.keys(this.table);\n        for (var index2 = 0; index2 < namesOfValues.length; index2++) {\n            // if (Object.prototype.hasOwnProperty.call(this.table, namesOfValues[index2])) {\n            var pair2 = this.table[namesOfValues[index2]];\n            valuesArray.push(pair2.value);\n            // }\n        }\n        return valuesArray;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.containsKey = function (key) {\n        var retutnValue = true;\n        if (typeof this.getValue(key) === 'undefined') {\n            retutnValue = true;\n        }\n        else {\n            retutnValue = false;\n        }\n        return !retutnValue;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.clear = function () {\n        this.table = {};\n        this.nElements = 0;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.size = function () {\n        return this.nElements;\n    };\n    return Dictionary;\n}()); // End of dictionary\nexport { Dictionary };\n","/**\n * `PdfName` class is used to perform name (element names) related primitive operations.\n * @private\n */\nvar PdfName = /** @class */ (function () {\n    function PdfName(value) {\n        /**\n         * `Start symbol` of the name object.\n         * @default /\n         * @private\n         */\n        this.stringStartMark = '/';\n        /**\n         * `Value` of the element.\n         * @private\n         */\n        this.internalValue = '';\n        /**\n         * Indicates if the object is currently in `saving state or not`.\n         * @default false\n         * @private\n         */\n        this.isSaving6 = false;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position6 = -1;\n        this.internalValue = this.normalizeValue(value);\n    }\n    Object.defineProperty(PdfName.prototype, \"status\", {\n        //property\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status6;\n        },\n        set: function (value) {\n            this.status6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving6;\n        },\n        set: function (value) {\n            this.isSaving6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index6;\n        },\n        set: function (value) {\n            this.index6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position6;\n        },\n        set: function (value) {\n            this.position6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"value\", {\n        /**\n         * Gets or sets the `value` of the object.\n         * @private\n         */\n        get: function () {\n            return this.internalValue;\n        },\n        set: function (value) {\n            // if (value !== this.value) {\n            var val = value;\n            if (value !== null && value.length > 0) {\n                // val = (value.substring(0, 1) === this.stringStartMark) ? value.substring(1) : value;\n                val = value;\n                this.internalValue = this.normalizeValue(val);\n            }\n            else {\n                this.internalValue = val;\n            }\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //public methods\n    /**\n     * `Saves` the name using the specified writer.\n     * @private\n     */\n    PdfName.prototype.save = function (writer) {\n        // if (writer === null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        writer.write(this.toString());\n    };\n    /**\n     * Gets `string` representation of the primitive.\n     * @private\n     */\n    PdfName.prototype.toString = function () {\n        return (this.stringStartMark + this.escapeString(this.value));\n    };\n    /**\n     * Creates a `copy of PdfName`.\n     * @private\n     */\n    PdfName.prototype.clone = function (crossTable) {\n        var newName = new PdfName();\n        newName.value = this.internalValue;\n        return newName;\n    };\n    /**\n     * Replace some characters with its `escape sequences`.\n     * @private\n     */\n    PdfName.prototype.escapeString = function (stringValue) {\n        // if (str === null) {\n        //     throw new Error('ArgumentNullException : str');\n        // }\n        // if (str === '') {\n        //     return str;\n        // }\n        var result = '';\n        var len = 0;\n        for (var i = 0, len_1 = stringValue.length; i < len_1; i++) {\n            var ch = stringValue[i];\n            var index = PdfName.delimiters.indexOf(ch);\n            // switch (ch) {\n            //     case '\\r' :\n            //         result = result + '\\\\r';\n            //         break;\n            //     case '\\n' :\n            //         result = result + '\\n';\n            //         break;\n            //     case '(' :\n            //     case ')' :\n            //     case '\\\\' :\n            //         //result.Append( '\\\\' ).Append( ch );\n            //         result = result + ch;\n            //         break;\n            //     default :\n            //         result = result + ch;\n            //         break;\n            // }\n            result = result + ch;\n        }\n        return result;\n    };\n    //methiods\n    /**\n     * Replace a symbol with its code with the precedence of the `sharp sign`.\n     * @private\n     */\n    PdfName.prototype.normalizeValue = function (value, c) {\n        // if (typeof c === undefined) {\n        //     let str : string = value;\n        //     for (let i : number = 0; i < PdfName.replacements.length; i++) {\n        //         str = this.normalizeValue(str, c);\n        //     }\n        //     return str;\n        // } else {\n        var strFormat = '#{0:X}';\n        //return value.replace(c.toString(),String.format(strFormat,c));\n        return value;\n        // }\n    };\n    /**\n     * PDF `special characters`.\n     * @private\n     */\n    PdfName.delimiters = '()<>[]{}/%}';\n    /**\n     * The symbols that are not allowed in PDF names and `should be replaced`.\n     * @private\n     */\n    PdfName.replacements = [' ', '\\t', '\\n', '\\r'];\n    return PdfName;\n}());\nexport { PdfName };\n","/**\n * PdfOperators.ts class for EJ2-PDF\n * Class of string PDF common operators.\n * @private\n */\nvar Operators = /** @class */ (function () {\n    /**\n     * Create an instance of `PdfOperator` class.\n     * @private\n     */\n    function Operators() {\n        /**\n         * Specifies the value of `test`.\n         * @private\n         */\n        this.forTest = 'test';\n        this.forTest = Operators.obj;\n    }\n    /**\n     * Specifies the value of `obj`.\n     * @private\n     */\n    Operators.obj = 'obj';\n    /**\n     * Specifies the value of `endObj`.\n     * @private\n     */\n    Operators.endObj = 'endobj';\n    /**\n     * Specifies the value of `R`.\n     * @private\n     */\n    Operators.r = 'R';\n    /**\n     * Specifies the value of ` `.\n     * @private\n     */\n    Operators.whiteSpace = ' ';\n    /**\n     * Specifies the value of `/`.\n     * @private\n     */\n    Operators.slash = '/';\n    /**\n     * Specifies the value of `\\r\\n`.\n     * @private\n     */\n    Operators.newLine = '\\r\\n';\n    /**\n     * Specifies the value of `stream`.\n     * @private\n     */\n    Operators.stream = 'stream';\n    /**\n     * Specifies the value of `endStream`.\n     * @private\n     */\n    Operators.endStream = 'endstream';\n    /**\n     * Specifies the value of `xref`.\n     * @private\n     */\n    Operators.xref = 'xref';\n    /**\n     * Specifies the value of `f`.\n     * @private\n     */\n    Operators.f = 'f';\n    /**\n     * Specifies the value of `n`.\n     * @private\n     */\n    Operators.n = 'n';\n    /**\n     * Specifies the value of `trailer`.\n     * @private\n     */\n    Operators.trailer = 'trailer';\n    /**\n     * Specifies the value of `startxref`.\n     * @private\n     */\n    Operators.startxref = 'startxref';\n    /**\n     * Specifies the value of `eof`.\n     * @private\n     */\n    Operators.eof = '%%EOF';\n    /**\n     * Specifies the value of `header`.\n     * @private\n     */\n    Operators.header = '%PDF-1.5';\n    /**\n     * Specifies the value of `beginText`.\n     * @private\n     */\n    Operators.beginText = 'BT';\n    /**\n     * Specifies the value of `endText`.\n     * @private\n     */\n    Operators.endText = 'ET';\n    /**\n     * Specifies the value of `m`.\n     * @private\n     */\n    Operators.beginPath = 'm';\n    /**\n     * Specifies the value of `l`.\n     * @private\n     */\n    Operators.appendLineSegment = 'l';\n    /**\n     * Specifies the value of `S`.\n     * @private\n     */\n    Operators.stroke = 'S';\n    /**\n     * Specifies the value of `f`.\n     * @private\n     */\n    Operators.fill = 'f';\n    /**\n     * Specifies the value of `f*`.\n     * @private\n     */\n    Operators.fillEvenOdd = 'f*';\n    /**\n     * Specifies the value of `B`.\n     * @private\n     */\n    Operators.fillStroke = 'B';\n    /**\n     * Specifies the value of `B*`.\n     * @private\n     */\n    Operators.fillStrokeEvenOdd = 'B*';\n    /**\n     * Specifies the value of `c`.\n     * @private\n     */\n    Operators.appendbeziercurve = 'c';\n    /**\n     * Specifies the value of `re`.\n     * @private\n     */\n    Operators.appendRectangle = 're';\n    /**\n     * Specifies the value of `q`.\n     * @private\n     */\n    Operators.saveState = 'q';\n    /**\n     * Specifies the value of `Q`.\n     * @private\n     */\n    Operators.restoreState = 'Q';\n    /**\n     * Specifies the value of `Do`.\n     * @private\n     */\n    Operators.paintXObject = 'Do';\n    /**\n     * Specifies the value of `cm`.\n     * @private\n     */\n    Operators.modifyCtm = 'cm';\n    /**\n     * Specifies the value of `Tm`.\n     * @private\n     */\n    Operators.modifyTM = 'Tm';\n    /**\n     * Specifies the value of `w`.\n     * @private\n     */\n    Operators.setLineWidth = 'w';\n    /**\n     * Specifies the value of `J`.\n     * @private\n     */\n    Operators.setLineCapStyle = 'J';\n    /**\n     * Specifies the value of `j`.\n     * @private\n     */\n    Operators.setLineJoinStyle = 'j';\n    /**\n     * Specifies the value of `d`.\n     * @private\n     */\n    Operators.setDashPattern = 'd';\n    /**\n     * Specifies the value of `i`.\n     * @private\n     */\n    Operators.setFlatnessTolerance = 'i';\n    /**\n     * Specifies the value of `h`.\n     * @private\n     */\n    Operators.closePath = 'h';\n    /**\n     * Specifies the value of `s`.\n     * @private\n     */\n    Operators.closeStrokePath = 's';\n    /**\n     * Specifies the value of `b`.\n     * @private\n     */\n    Operators.closeFillStrokePath = 'b';\n    /**\n     * Specifies the value of `setCharacterSpace`.\n     * @private\n     */\n    Operators.setCharacterSpace = 'Tc';\n    /**\n     * Specifies the value of `setWordSpace`.\n     * @private\n     */\n    Operators.setWordSpace = 'Tw';\n    /**\n     * Specifies the value of `setHorizontalScaling`.\n     * @private\n     */\n    Operators.setHorizontalScaling = 'Tz';\n    /**\n     * Specifies the value of `setTextLeading`.\n     * @private\n     */\n    Operators.setTextLeading = 'TL';\n    /**\n     * Specifies the value of `setFont`.\n     * @private\n     */\n    Operators.setFont = 'Tf';\n    /**\n     * Specifies the value of `setRenderingMode`.\n     * @private\n     */\n    Operators.setRenderingMode = 'Tr';\n    /**\n     * Specifies the value of `setTextRise`.\n     * @private\n     */\n    Operators.setTextRise = 'Ts';\n    /**\n     * Specifies the value of `setTextScaling`.\n     * @private\n     */\n    Operators.setTextScaling = 'Tz';\n    /**\n     * Specifies the value of `setCoords`.\n     * @private\n     */\n    Operators.setCoords = 'Td';\n    /**\n     * Specifies the value of `goToNextLine`.\n     * @private\n     */\n    Operators.goToNextLine = 'T*';\n    /**\n     * Specifies the value of `setText`.\n     * @private\n     */\n    Operators.setText = 'Tj';\n    /**\n     * Specifies the value of `setTextWithFormatting`.\n     * @private\n     */\n    Operators.setTextWithFormatting = 'TJ';\n    /**\n     * Specifies the value of `setTextOnNewLine`.\n     * @private\n     */\n    Operators.setTextOnNewLine = '\\'';\n    /**\n     * Specifies the value of `selectcolorspaceforstroking`.\n     * @private\n     */\n    Operators.selectcolorspaceforstroking = 'CS';\n    /**\n     * Specifies the value of `selectcolorspacefornonstroking`.\n     * @private\n     */\n    Operators.selectcolorspacefornonstroking = 'cs';\n    /**\n     * Specifies the value of `setrbgcolorforstroking`.\n     * @private\n     */\n    Operators.setrbgcolorforstroking = 'RG';\n    /**\n     * Specifies the value of `setrbgcolorfornonstroking`.\n     * @private\n     */\n    Operators.setrbgcolorfornonstroking = 'rg';\n    /**\n     * Specifies the value of `K`.\n     * @private\n     */\n    Operators.setcmykcolorforstroking = 'K';\n    /**\n     * Specifies the value of `k`.\n     * @private\n     */\n    Operators.setcmykcolorfornonstroking = 'k';\n    /**\n     * Specifies the value of `G`.\n     * @private\n     */\n    Operators.setgraycolorforstroking = 'G';\n    /**\n     * Specifies the value of `g`.\n     * @private\n     */\n    Operators.setgraycolorfornonstroking = 'g';\n    /**\n     * Specifies the value of `W`.\n     * @private\n     */\n    Operators.clipPath = 'W';\n    /**\n     * Specifies the value of `clipPathEvenOdd`.\n     * @private\n     */\n    Operators.clipPathEvenOdd = 'W*';\n    /**\n     * Specifies the value of `n`.\n     * @private\n     */\n    Operators.endPath = 'n';\n    /**\n     * Specifies the value of `setGraphicsState`.\n     * @private\n     */\n    Operators.setGraphicsState = 'gs';\n    /**\n     * Specifies the value of `%`.\n     * @private\n     */\n    Operators.comment = '%';\n    /**\n     * Specifies the value of `*`.\n     * @private\n     */\n    Operators.evenOdd = '*';\n    /**\n     * Specifies the value of `M`.\n     * @private\n     */\n    Operators.setMiterLimit = 'M';\n    /**\n     * Same as SC, but also supports Pattern, Separation, DeviceN, and ICCBased color spaces. For non-stroking operations.\n     * @public\n     */\n    Operators.setColorAndPattern = 'scn';\n    /**\n     * Same as SC, but also supports Pattern, Separation, DeviceN, and ICCBased color spaces. For stroking.\n     */\n    Operators.setColorAndPatternStroking = 'SCN';\n    return Operators;\n}());\nexport { Operators };\n","/**\n * dictionaryProperties.ts class for EJ2-PDF\n * PDF dictionary properties.\n * @private\n */\nvar DictionaryProperties = /** @class */ (function () {\n    /**\n     * Initialize an instance for `PdfDictionaryProperties` class.\n     * @private\n     */\n    function DictionaryProperties() {\n        /**\n         * Specifies the value of `Pages`.\n         * @private\n         */\n        this.pages = 'Pages';\n        /**\n         * Specifies the value of `Kids`.\n         * @private\n         */\n        this.kids = 'Kids';\n        /**\n         * Specifies the value of `Count`.\n         * @private\n         */\n        this.count = 'Count';\n        /**\n         * Specifies the value of `Resources`.\n         * @private\n         */\n        this.resources = 'Resources';\n        /**\n         * Specifies the value of `Type`.\n         * @private\n         */\n        this.type = 'Type';\n        /**\n         * Specifies the value of `Size`.\n         * @private\n         */\n        this.size = 'Size';\n        /**\n         * Specifies the value of `MediaBox`.\n         * @private\n         */\n        this.mediaBox = 'MediaBox';\n        /**\n         * Specifies the value of `Parent`.\n         * @private\n         */\n        this.parent = 'Parent';\n        /**\n         * Specifies the value of `Root`.\n         * @private\n         */\n        this.root = 'Root';\n        /**\n         * Specifies the value of `DecodeParms`.\n         * @private\n         */\n        this.decodeParms = 'DecodeParms';\n        /**\n         * Specifies the value of `Filter`.\n         * @private\n         */\n        this.filter = 'Filter';\n        /**\n         * Specifies the value of `Font`.\n         * @private\n         */\n        this.font = 'Font';\n        /**\n         * Specifies the value of `Type1`.\n         * @private\n         */\n        this.type1 = 'Type1';\n        /**\n         * Specifies the value of `BaseFont`.\n         * @private\n         */\n        this.baseFont = 'BaseFont';\n        /**\n         * Specifies the value of `Encoding`.\n         * @private\n         */\n        this.encoding = 'Encoding';\n        /**\n         * Specifies the value of `Subtype`.\n         * @private\n         */\n        this.subtype = 'Subtype';\n        /**\n         * Specifies the value of `Contents`.\n         * @private\n         */\n        this.contents = 'Contents';\n        /**\n         * Specifies the value of `ProcSet`.\n         * @private\n         */\n        this.procset = 'ProcSet';\n        /**\n         * Specifies the value of `ColorSpace`.\n         * @private\n         */\n        this.colorSpace = 'ColorSpace';\n        /**\n         * Specifies the value of `ExtGState`.\n         * @private\n         */\n        this.extGState = 'ExtGState';\n        /**\n         * Specifies the value of `Pattern`.\n         * @private\n         */\n        this.pattern = 'Pattern';\n        /**\n         * Specifies the value of `XObject`.\n         * @private\n         */\n        this.xObject = 'XObject';\n        /**\n         * Specifies the value of `Length`.\n         * @private\n         */\n        this.length = 'Length';\n        /**\n         * Specifies the value of `Width`.\n         * @private\n         */\n        this.width = 'Width';\n        /**\n         * Specifies the value of `Height`.\n         * @private\n         */\n        this.height = 'Height';\n        /**\n         * Specifies the value of `BitsPerComponent`.\n         * @private\n         */\n        this.bitsPerComponent = 'BitsPerComponent';\n        /**\n         * Specifies the value of `Image`.\n         * @private\n         */\n        this.image = 'Image';\n        /**\n         * Specifies the value of `dctdecode`.\n         * @private\n         */\n        this.dctdecode = 'DCTDecode';\n        /**\n         * Specifies the value of `Columns`.\n         * @private\n         */\n        this.columns = 'Columns';\n        /**\n         * Specifies the value of `BlackIs1`.\n         * @private\n         */\n        this.blackIs1 = 'BlackIs1';\n        /**\n         * Specifies the value of `K`.\n         * @private\n         */\n        this.k = 'K';\n        /**\n         * Specifies the value of `S`.\n         * @private\n         */\n        this.s = 'S';\n        /**\n         * Specifies the value of `Predictor`.\n         * @private\n         */\n        this.predictor = 'Predictor';\n        /**\n         * Specifies the value of `DeviceRGB`.\n         * @private\n         */\n        this.deviceRgb = 'DeviceRGB';\n        /**\n         * Specifies the value of `Next`.\n         * @private\n         */\n        this.next = 'Next';\n        /**\n         * Specifies the value of `Action`.\n         * @private\n         */\n        this.action = 'Action';\n        /**\n         * Specifies the value of `Link`.\n         * @private\n         */\n        this.link = 'Link';\n        /**\n         *\n         * Specifies the value of `A`.\n         * @private\n         */\n        this.a = 'A';\n        /**\n         * Specifies the value of `Annot`.\n         * @private\n         */\n        this.annot = 'Annot';\n        /**\n         * Specifies the value of `P`.\n         * @private\n         */\n        this.p = 'P';\n        /**\n         * Specifies the value of `C`.\n         * @private\n         */\n        this.c = 'C';\n        /**\n         * Specifies the value of `Rect`.\n         * @private\n         */\n        this.rect = 'Rect';\n        /**\n         * Specifies the value of `URI`.\n         * @private\n         */\n        this.uri = 'URI';\n        /**\n         * Specifies the value of `Annots`.\n         * @private\n         */\n        this.annots = 'Annots';\n        /**\n         * Specifies the value of `ca`.\n         * @private\n         */\n        this.ca = 'ca';\n        /**\n         * Specifies the value of `CA`.\n         * @private\n         */\n        this.CA = 'CA';\n        /**\n         * Specifies the value of `XYZ`.\n         * @private\n         */\n        this.xyz = 'XYZ';\n        /**\n         * Specifies the value of `Fit`.\n         * @private\n         */\n        this.fit = 'Fit';\n        /**\n         * Specifies the value of `Dest`.\n         * @private\n         */\n        this.dest = 'Dest';\n        /**\n         * Specifies the value of `BM`.\n         * @private\n         */\n        this.BM = 'BM';\n        /**\n         * Specifies the value of `flatedecode`.\n         * @private\n         */\n        this.flatedecode = 'FlateDecode';\n        /**\n         * Specifies the value of `Rotate`.\n         * @private\n         */\n        this.rotate = 'Rotate';\n        /**\n         * Specifies the value of 'bBox'.\n         * @private\n         */\n        this.bBox = 'BBox';\n        /**\n         * Specifies the value of 'form'.\n         * @private\n         */\n        this.form = 'Form';\n        /**\n         * Specifies the value of 'w'.\n         * @private\n         */\n        this.w = 'W';\n        /**\n         * Specifies the value of 'cIDFontType2'.\n         * @private\n         */\n        this.cIDFontType2 = 'CIDFontType2';\n        /**\n         * Specifies the value of 'cIDToGIDMap'.\n         * @private\n         */\n        this.cIDToGIDMap = 'CIDToGIDMap';\n        /**\n         * Specifies the value of 'cIDFontType0C'.\n         * @private\n         */\n        this.cIDFontType0C = 'CIDFontType0C';\n        /**\n         * Specifies the value of 'identity'.\n         * @private\n         */\n        this.identity = 'Identity';\n        /**\n         * Specifies the value of 'dw'.\n         * @private\n         */\n        this.dw = 'DW';\n        /**\n         * Specifies the value of 'fontDescriptor'.\n         * @private\n         */\n        this.fontDescriptor = 'FontDescriptor';\n        /**\n         * Specifies the value of 'cIDSystemInfo'.\n         * @private\n         */\n        this.cIDSystemInfo = 'CIDSystemInfo';\n        /**\n         * Specifies the value of 'CIDFontType0'.\n         * @private\n         */\n        this.cIDFontType0 = 'CIDFontType0';\n        /**\n         * Specifies the value of 'fontName'.\n         * @private\n         */\n        this.fontName = 'FontName';\n        /**\n         * Specifies the value of 'flags'.\n         * @private\n         */\n        this.flags = 'Flags';\n        /**\n         * Specifies the value of 'fontBBox'.\n         * @private\n         */\n        this.fontBBox = 'FontBBox';\n        /**\n         * Specifies the value of 'missingWidth'.\n         * @private\n         */\n        this.missingWidth = 'MissingWidth';\n        /**\n         * Specifies the value of 'stemV'.\n         * @private\n         */\n        this.stemV = 'StemV';\n        /**\n         * Specifies the value of 'italicAngle'.\n         * @private\n         */\n        this.italicAngle = 'ItalicAngle';\n        /**\n         * Specifies the value of 'capHeight'.\n         * @private\n         */\n        this.capHeight = 'CapHeight';\n        /**\n         * Specifies the value of 'ascent'.\n         * @private\n         */\n        this.ascent = 'Ascent';\n        /**\n         * Specifies the value of 'descent'.\n         * @private\n         */\n        this.descent = 'Descent';\n        /**\n         * Specifies the value of 'leading'.\n         * @private\n         */\n        this.leading = 'Leading';\n        /**\n         * Specifies the value of 'avgWidth'.\n         * @private\n         */\n        this.avgWidth = 'AvgWidth';\n        /**\n         * Specifies the value of 'fontFile2'.\n         * @private\n         */\n        this.fontFile2 = 'FontFile2';\n        /**\n         * Specifies the value of 'fontFile3'.\n         * @private\n         */\n        this.fontFile3 = 'FontFile3';\n        /**\n         * Specifies the value of 'maxWidth'.\n         * @private\n         */\n        this.maxWidth = 'MaxWidth';\n        /**\n         * Specifies the value of 'xHeight'.\n         * @private\n         */\n        this.xHeight = 'XHeight';\n        /**\n         * Specifies the value of 'stemH'.\n         * @private\n         */\n        this.stemH = 'StemH';\n        /**\n         * Specifies the value of 'registry'.\n         * @private\n         */\n        this.registry = 'Registry';\n        /**\n         * Specifies the value of 'ordering'.\n         * @private\n         */\n        this.ordering = 'Ordering';\n        /**\n         * Specifies the value of 'supplement'.\n         * @private\n         */\n        this.supplement = 'Supplement';\n        /**\n         * Specifies the value of 'type0'.\n         * @private\n         */\n        this.type0 = 'Type0';\n        /**\n         * Specifies the value of 'identityH'.\n         * @private\n         */\n        this.identityH = 'Identity-H';\n        /**\n         * Specifies the value of 'toUnicode'.\n         * @private\n         */\n        this.toUnicode = 'ToUnicode';\n        /**\n         * Specifies the value of 'descendantFonts'.\n         * @private\n         */\n        this.descendantFonts = 'DescendantFonts';\n        /**\n         * Specifies the value of 'background'.\n         * @private\n         */\n        this.background = 'Background';\n        /**\n         * Specifies the value of 'shading'.\n         * @private\n         */\n        this.shading = 'Shading';\n        /**\n         * Specifies the value of 'matrix'.\n         * @private\n         */\n        this.matrix = 'Matrix';\n        /**\n         * Specifies the value of 'antiAlias'.\n         * @private\n         */\n        this.antiAlias = 'AntiAlias';\n        /**\n         * Specifies the value of 'function'.\n         * @private\n         */\n        this.function = 'Function';\n        /**\n         * Specifies the value of 'extend'.\n         * @private\n         */\n        this.extend = 'Extend';\n        /**\n         * Specifies the value of 'shadingType'.\n         * @private\n         */\n        this.shadingType = 'ShadingType';\n        /**\n         * Specifies the value of 'coords'.\n         * @private\n         */\n        this.coords = 'Coords';\n        /**\n         * Specifies the value of 'domain'.\n         * @private\n         */\n        this.domain = 'Domain';\n        /**\n         * Specifies the value of 'range'.\n         * @private\n         */\n        this.range = 'Range';\n        /**\n         * Specifies the value of 'functionType'.\n         * @private\n         */\n        this.functionType = 'FunctionType';\n        /**\n         * Specifies the value of 'bitsPerSample'.\n         * @private\n         */\n        this.bitsPerSample = 'BitsPerSample';\n        /**\n         * Specifies the value of 'patternType'.\n         * @private\n         */\n        this.patternType = 'PatternType';\n        /**\n         * Specifies the value of 'paintType'.\n         * @private\n         */\n        this.paintType = 'PaintType';\n        /**\n         * Specifies the value of 'tilingType'.\n         * @private\n         */\n        this.tilingType = 'TilingType';\n        /**\n         * Specifies the value of 'xStep'.\n         * @private\n         */\n        this.xStep = 'XStep';\n        /**\n         * Specifies the value of 'yStep'.\n         * @private\n         */\n        this.yStep = 'YStep';\n        /**\n         * Specifies the value of viewer preferences.\n         * @private\n         */\n        this.viewerPreferences = 'ViewerPreferences';\n        /**\n         * Specifies the value of center window.\n         * @private\n         */\n        this.centerWindow = 'CenterWindow';\n        /**\n         * Specifies the value of display title.\n         * @private\n         */\n        this.displayTitle = 'DisplayTitle';\n        /**\n         * Specifies the value of fit window.\n         * @private\n         */\n        this.fitWindow = 'FitWindow';\n        /**\n         * Specifies the value of hide menu bar.\n         * @private\n         */\n        this.hideMenuBar = 'HideMenubar';\n        /**\n         * Specifies the value of hide tool bar.\n         * @private\n         */\n        this.hideToolBar = 'HideToolbar';\n        /**\n         * Specifies the value of hide window UI.\n         * @private\n         */\n        this.hideWindowUI = 'HideWindowUI';\n        /**\n         * Specifies the value of page mode.\n         * @private\n         */\n        this.pageMode = 'PageMode';\n        /**\n         * Specifies the value of page layout.\n         * @private\n         */\n        this.pageLayout = 'PageLayout';\n        /**\n         * Specifies the value of duplex.\n         * @private\n         */\n        this.duplex = 'Duplex';\n        /**\n         * Specifies the value of print scaling.\n         * @private\n         */\n        this.printScaling = 'PrintScaling';\n        //\n    }\n    return DictionaryProperties;\n}());\nexport { DictionaryProperties };\n","import { Dictionary } from './../collections/dictionary';\nimport { PdfName } from './pdf-name';\nimport { Operators } from './../input-output/pdf-operators';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfDictionary` class is used to perform primitive operations.\n * @private\n */\nvar PdfDictionary = /** @class */ (function () {\n    function PdfDictionary(dictionary) {\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position7 = -1;\n        /**\n         * The `IPdfSavable` with the specified key.\n         * @private\n         */\n        this.primitiveItems = new Dictionary();\n        /**\n         * `Start marker` for dictionary.\n         * @private\n         */\n        this.prefix = '<<';\n        /**\n         * `End marker` for dictionary.\n         * @private\n         */\n        this.suffix = '>>';\n        /**\n         * @hidden\n         * @private\n         */\n        this.resources = [];\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.object = null;\n        /**\n         * Flag for PDF file formar 1.5 is dictionary `archiving` needed.\n         * @default true\n         * @private\n         */\n        this.archive = true;\n        /**\n         * Represents the Font dictionary.\n         * @hidden\n         * @private\n         */\n        this.isResource = false;\n        if (typeof dictionary === 'undefined') {\n            this.primitiveItems = new Dictionary();\n            this.encrypt = true;\n            this.dictionaryProperties = new DictionaryProperties();\n        }\n        else {\n            this.primitiveItems = new Dictionary();\n            var keys = dictionary.items.keys();\n            var values = dictionary.items.values();\n            for (var index = 0; index < dictionary.items.size(); index++) {\n                this.primitiveItems.setValue(keys[index], values[index]);\n            }\n            this.status = dictionary.status;\n            this.freezeChanges(this);\n            this.encrypt = true;\n            this.dictionaryProperties = new DictionaryProperties();\n        }\n    }\n    Object.defineProperty(PdfDictionary.prototype, \"items\", {\n        //Properties\n        /**\n         * Gets or sets the `IPdfSavable` with the specified key.\n         * @private\n         */\n        get: function () {\n            return this.primitiveItems;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status7;\n        },\n        set: function (value) {\n            this.status7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving7;\n        },\n        set: function (value) {\n            this.isSaving7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index7;\n        },\n        set: function (value) {\n            this.index7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position7;\n        },\n        set: function (value) {\n            this.position7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"Count\", {\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.primitiveItems.size();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"Dictionary\", {\n        /**\n         * Collection of `items` in the object.\n         * @private\n         */\n        get: function () {\n            return this;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get flag if need to `archive` dictionary.\n     * @private\n     */\n    PdfDictionary.prototype.getArchive = function () {\n        return this.archive;\n    };\n    /**\n     * Set flag if need to `archive` dictionary.\n     * @private\n     */\n    PdfDictionary.prototype.setArchive = function (value) {\n        this.archive = value;\n    };\n    /**\n     * Sets flag if `encryption` is needed.\n     * @private\n     */\n    PdfDictionary.prototype.setEncrypt = function (value) {\n        this.encrypt = value;\n        this.modify();\n    };\n    /**\n     * Gets flag if `encryption` is needed.\n     * @private\n     */\n    PdfDictionary.prototype.getEncrypt = function () {\n        return this.encrypt;\n    };\n    /**\n     * `Freezes` the changes.\n     * @private\n     */\n    PdfDictionary.prototype.freezeChanges = function (freezer) {\n        this.bChanged = false;\n    };\n    /**\n     * Creates a `copy of PdfDictionary`.\n     * @private\n     */\n    PdfDictionary.prototype.clone = function (crossTable) {\n        //Need to add more codings\n        var newDict = new PdfDictionary();\n        return newDict;\n    };\n    /**\n     * `Mark` this instance modified.\n     * @private\n     */\n    PdfDictionary.prototype.modify = function () {\n        this.bChanged = true;\n    };\n    /**\n     * `Removes` the specified key.\n     * @private\n     */\n    PdfDictionary.prototype.remove = function (key) {\n        if (typeof key !== 'string') {\n            this.primitiveItems.remove(key.value);\n            this.modify();\n        }\n        else {\n            this.remove(new PdfName(key));\n        }\n    };\n    /**\n     * `Determines` whether the dictionary contains the key.\n     * @private\n     */\n    PdfDictionary.prototype.containsKey = function (key) {\n        var returnValue = false;\n        returnValue = this.primitiveItems.containsKey(key.toString());\n        return returnValue;\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onBeginSave = function () {\n        this.beginSave.sender.beginSave();\n    };\n    /**\n     * Raises event `Font Dictionary BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onFontDictionaryBeginSave = function () {\n        this.fontDictionaryBeginSave.sender.fontDictionaryBeginSave();\n    };\n    /**\n     * Raises event `Descendant Font BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onDescendantFontBeginSave = function () {\n        this.descendantFontBeginSave.sender.descendantFontBeginSave();\n    };\n    /**\n     * Raises event 'BeginSave'.\n     * @private\n     */\n    PdfDictionary.prototype.onTemplateBeginSave = function () {\n        this.pageBeginDrawTemplate.sender.pageBeginSave();\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onBeginAnnotationSave = function () {\n        this.annotationBeginSave.sender.beginSave();\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onSectionBeginSave = function (writer) {\n        var saveEvent = this.sectionBeginSave;\n        saveEvent.sender.beginSave(saveEvent.state, writer);\n    };\n    PdfDictionary.prototype.save = function (writer, bRaiseEvent) {\n        if (typeof bRaiseEvent === 'undefined') {\n            this.save(writer, true);\n        }\n        else {\n            writer.write(this.prefix);\n            if (typeof this.beginSave !== 'undefined') {\n                this.onBeginSave();\n            }\n            if (typeof this.descendantFontBeginSave !== 'undefined') {\n                this.onDescendantFontBeginSave();\n            }\n            if (typeof this.fontDictionaryBeginSave !== 'undefined') {\n                this.onFontDictionaryBeginSave();\n            }\n            if (typeof this.annotationBeginSave !== 'undefined') {\n                this.onBeginAnnotationSave();\n            }\n            if (typeof this.sectionBeginSave !== 'undefined') {\n                this.onSectionBeginSave(writer);\n            }\n            if (typeof this.pageBeginDrawTemplate !== 'undefined') {\n                this.onTemplateBeginSave();\n            }\n            // }\n            if (this.Count > 0) {\n                this.saveItems(writer);\n            }\n            writer.write(this.suffix);\n            writer.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Save dictionary items`.\n     * @private\n     */\n    PdfDictionary.prototype.saveItems = function (writer) {\n        writer.write(Operators.newLine);\n        var keys = this.primitiveItems.keys();\n        var values = this.primitiveItems.values();\n        for (var index = 0; index < keys.length; index++) {\n            var key = keys[index];\n            var name_1 = new PdfName(key);\n            name_1.save(writer);\n            writer.write(Operators.whiteSpace);\n            var resources = values[index];\n            resources.save(writer);\n            writer.write(Operators.newLine);\n        }\n    };\n    return PdfDictionary;\n}());\nexport { PdfDictionary };\nvar SaveSectionCollectionEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveSectionCollectionEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveSectionCollectionEventHandler;\n}());\nexport { SaveSectionCollectionEventHandler };\nvar SaveDescendantFontEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveDescendantFontEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveDescendantFontEventHandler;\n}());\nexport { SaveDescendantFontEventHandler };\nvar SaveFontDictionaryEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveFontDictionaryEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveFontDictionaryEventHandler;\n}());\nexport { SaveFontDictionaryEventHandler };\nvar SaveAnnotationEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save annotation event handler` class.\n     * @private\n     */\n    function SaveAnnotationEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveAnnotationEventHandler;\n}());\nexport { SaveAnnotationEventHandler };\nvar SaveSectionEventHandler = /** @class */ (function () {\n    // constructors\n    /**\n     * New instance for `save section event handler` class.\n     * @private\n     */\n    function SaveSectionEventHandler(sender, state) {\n        this.sender = sender;\n        this.state = state;\n    }\n    return SaveSectionEventHandler;\n}());\nexport { SaveSectionEventHandler };\n/**\n * SaveTemplateEventHandler class used to store information about template elements.\n * @private\n * @hidden\n */\nvar SaveTemplateEventHandler = /** @class */ (function () {\n    /**\n     * New instance for save section collection event handler class.\n     * @public\n     */\n    function SaveTemplateEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveTemplateEventHandler;\n}());\nexport { SaveTemplateEventHandler };\n","/**\n * `PdfNumber` class is used to perform number related primitive operations.\n * @private\n */\nvar PdfNumber = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfNumber` class.\n     * @private\n     */\n    function PdfNumber(value) {\n        /**\n         * Sotres the `position`.\n         * @default -1\n         * @private\n         */\n        this.position5 = -1;\n        this.value = value;\n    }\n    Object.defineProperty(PdfNumber.prototype, \"intValue\", {\n        /**\n         * Gets or sets the `integer` value.\n         * @private\n         */\n        get: function () {\n            return this.value;\n        },\n        set: function (value) {\n            this.value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"isInteger\", {\n        /**\n         * Gets or sets a value indicating whether this instance `is integer`.\n         * @private\n         */\n        get: function () {\n            return this.integer;\n        },\n        set: function (value) {\n            this.integer = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status5;\n        },\n        set: function (value) {\n            this.status5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving5;\n        },\n        set: function (value) {\n            this.isSaving5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index5;\n        },\n        set: function (value) {\n            this.index5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position5;\n        },\n        set: function (value) {\n            this.position5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var rValue = null;\n            return rValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Saves the object`.\n     * @private\n     */\n    PdfNumber.prototype.save = function (writer) {\n        writer.write(this.intValue.toString()); //tostring(CultureInfo.InletiantCulture)\n    };\n    /**\n     * Creates a `copy of PdfNumber`.\n     * @private\n     */\n    PdfNumber.prototype.clone = function (crossTable) {\n        var newNumber = new PdfNumber(this.value);\n        return newNumber;\n    };\n    /**\n     * Converts a `float value to a string` using Adobe PDF rules.\n     * @private\n     */\n    PdfNumber.floatToString = function (number) {\n        // let tempString1 : string = number.toString();\n        // let tempString2 : string = tempString1.indexOf('.') != -1 ? tempString1.substring(0, tempString1.indexOf('.')) : tempString1;\n        var returnString = number.toFixed(2);\n        if (returnString === '0.00') {\n            returnString = '.00';\n        }\n        // let prefixLength : number = (22 - tempString2.length) >= 0 ? (22 - tempString2.length) : 0;\n        // for (let index : number = 0; index < prefixLength; index++) {\n        //     returnString += '0';\n        // }\n        // returnString += tempString2 + '.00';\n        // returnString += (tempString3.length > 6) ? tempString3.substring(0,6) : tempString3;\n        // let suffixLength : number = (6 - tempString3.length) >= 0 ? (6 - tempString3.length) : 0;\n        // for (let index : number = 0; index < suffixLength; index++) {\n        //     returnString += '0';\n        // }\n        return returnString;\n    };\n    /**\n     * Determines the `minimum of the three values`.\n     * @private\n     */\n    PdfNumber.min = function (x, y, z) {\n        var r = Math.min(x, y);\n        return Math.min(z, r);\n    };\n    return PdfNumber;\n}());\nexport { PdfNumber };\n","import { PdfNumber } from './pdf-number';\nimport { Operators } from './../input-output/pdf-operators';\n/**\n * `PdfArray` class is used to perform array related primitive operations.\n * @private\n */\nvar PdfArray = /** @class */ (function () {\n    function PdfArray(array) {\n        //Fields\n        /**\n         * `startMark` - '['\n         * @private\n         */\n        this.startMark = '[';\n        /**\n         * `endMark` - ']'.\n         * @private\n         */\n        this.endMark = ']';\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position9 = -1;\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.clonedObject9 = null;\n        /**\n         * Represents the Font dictionary.\n         * @hidden\n         * @private\n         */\n        this.isFont = false;\n        if (typeof array === 'undefined') {\n            this.internalElements = [];\n        }\n        else {\n            if (typeof array !== 'undefined' && !(array instanceof PdfArray)) {\n                var tempNumberArray = array;\n                for (var index = 0; index < tempNumberArray.length; index++) {\n                    var pdfNumber = new PdfNumber(tempNumberArray[index]);\n                    this.add(pdfNumber);\n                }\n                // } else if (typeof array !== 'undefined' && (array instanceof PdfArray)) {\n            }\n            else {\n                var tempArray = array;\n                // if (tempArray.Elements.length > 0) {\n                this.internalElements = [];\n                for (var index = 0; index < tempArray.elements.length; index++) {\n                    this.internalElements.push(tempArray.elements[index]);\n                }\n                // }\n            }\n        }\n    }\n    //property\n    /**\n     * Gets the `IPdfSavable` at the specified index.\n     * @private\n     */\n    PdfArray.prototype.items = function (index) {\n        // if (index < 0 || index >= this.Count) {\n        //     throw new Error('ArgumentOutOfRangeException : index, The index can\"t be less then zero or greater then Count.');\n        // }\n        return this.internalElements[index];\n    };\n    Object.defineProperty(PdfArray.prototype, \"count\", {\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.internalElements.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status9;\n        },\n        set: function (value) {\n            this.status9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving9;\n        },\n        set: function (value) {\n            this.isSaving9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.clonedObject9;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position9;\n        },\n        set: function (value) {\n            this.position9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index9;\n        },\n        set: function (value) {\n            this.index9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"CrossTable\", {\n        /**\n         * Returns `PdfCrossTable` associated with the object.\n         * @private\n         */\n        get: function () {\n            return this.pdfCrossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"elements\", {\n        /**\n         * Gets the `elements` of the Pdf Array.\n         * @private\n         */\n        get: function () {\n            return this.internalElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Adds` the specified element to the PDF array.\n     * @private\n     */\n    PdfArray.prototype.add = function (element) {\n        // if (element === null) {\n        //     throw new Error('ArgumentNullException : obj');\n        // }\n        if (typeof this.internalElements === 'undefined') {\n            this.internalElements = [];\n        }\n        this.internalElements.push(element);\n        this.markedChange();\n    };\n    /**\n     * `Marks` the object changed.\n     * @private\n     */\n    PdfArray.prototype.markedChange = function () {\n        this.bChanged = true;\n    };\n    /**\n     * `Determines` whether the specified element is within the array.\n     * @private\n     */\n    PdfArray.prototype.contains = function (element) {\n        var returnValue = false;\n        for (var index = 0; index < this.internalElements.length; index++) {\n            var tempElement = this.internalElements[index];\n            var inputElement = element;\n            if (tempElement != null && typeof tempElement !== 'undefined' && inputElement != null && typeof inputElement !== 'undefined') {\n                if (tempElement.value === inputElement.value) {\n                    return true;\n                }\n            }\n            // if (this.internalElements[index] === element) {\n            //     returnValue = true;\n            // }\n        }\n        return returnValue;\n    };\n    /**\n     * Returns the `primitive object` of input index.\n     * @private\n     */\n    PdfArray.prototype.getItems = function (index) {\n        // if (index < 0 || index >= this.Count) {\n        //     throw new Error('ArgumentOutOfRangeException : index , The index can\"t be less then zero or greater then Count.');\n        // }\n        return this.internalElements[index];\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfArray.prototype.save = function (writer) {\n        // if (writer === null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        writer.write(this.startMark);\n        for (var i = 0, len = this.count; i < len; i++) {\n            this.getItems(i).save(writer);\n            if (i + 1 !== len) {\n                writer.write(Operators.whiteSpace);\n            }\n        }\n        writer.write(this.endMark);\n    };\n    /**\n     * Creates a `copy of PdfArray`.\n     * @private\n     */\n    PdfArray.prototype.clone = function (crossTable) {\n        // if (this.clonedObject9 !== null && this.clonedObject9.CrossTable === crossTable) {\n        //     return this.clonedObject9;\n        // } else {\n        this.clonedObject9 = null;\n        // Else clone the object.\n        var newArray = new PdfArray();\n        for (var index = 0; index < this.internalElements.length; index++) {\n            var obj = this.internalElements[index];\n            newArray.add(obj.clone(crossTable));\n        }\n        newArray.pdfCrossTable = crossTable;\n        this.clonedObject9 = newArray;\n        return newArray;\n    };\n    /**\n     * Creates filled PDF array `from the rectangle`.\n     * @private\n     */\n    PdfArray.fromRectangle = function (bounds) {\n        var values = [bounds.x, bounds.y, bounds.width, bounds.height];\n        var array = new PdfArray(values);\n        return array;\n    };\n    // /**\n    //  * Creates the rectangle from filled PDF array.\n    //  * @private\n    //  */\n    // public ToRectangle() : RectangleF {\n    //     if (this.Count < 4) {\n    //         throw Error('InvalidOperationException-Can not convert to rectangle.');\n    //     }\n    //     let x1 : number;\n    //     let x2 : number;\n    //     let y1 : number;\n    //     let y2 : number;\n    //     let num : PdfNumber = this.getItems(0) as PdfNumber;\n    //     x1 = num.IntValue;\n    //     num = this.getItems(1) as PdfNumber;\n    //     y1 = num.IntValue;\n    //     num = this.getItems(2) as PdfNumber;\n    //     x2 = num.IntValue;\n    //     num = this.getItems(3) as PdfNumber;\n    //     y2 = num.IntValue;\n    //     let x : number = Math.min(x1, x2);\n    //     let y : number = Math.min(y1, y2);\n    //     let width : number = Math.abs(x1 - x2);\n    //     let height : number = Math.abs(y1 - y2);\n    //     let rect : RectangleF = new RectangleF(new PointF(x, y), new SizeF(width, height));\n    //     return rect;\n    // }\n    /**\n     * `Inserts` the element into the array.\n     * @private\n     */\n    PdfArray.prototype.insert = function (index, element) {\n        if (index < this.internalElements.length && index > 0) {\n            var tempElements = [];\n            for (var i = 0; i < index; i++) {\n                tempElements.push(this.internalElements[i]);\n            }\n            tempElements.push(element);\n            for (var i = index; i < this.internalElements.length; i++) {\n                tempElements.push(this.internalElements[i]);\n            }\n            this.internalElements = tempElements;\n        }\n        else {\n            this.internalElements.push(element);\n        }\n        this.markChanged();\n    };\n    /**\n     * `Checks whether array contains the element`.\n     * @private\n     */\n    PdfArray.prototype.indexOf = function (element) {\n        return this.internalElements.indexOf(element);\n    };\n    /**\n     * `Removes` element from the array.\n     * @private\n     */\n    PdfArray.prototype.remove = function (element) {\n        // if (element === null) {\n        //     throw new Error('ArgumentNullException : element');\n        // }\n        var index = this.internalElements.indexOf(element);\n        // if (index >= 0 && index < this.internalElements.length) {\n        this.internalElements[index] = null;\n        // }\n        this.markChanged();\n    };\n    /**\n     * `Remove` the element from the array by its index.\n     * @private\n     */\n    PdfArray.prototype.removeAt = function (index) {\n        // this.internalElements.RemoveAt(index);\n        if (this.internalElements.length > index) {\n            var tempArray = [];\n            for (var i = 0; i < index; i++) {\n                tempArray.push(this.internalElements[i]);\n            }\n            for (var i = index + 1; i < this.internalElements.length; i++) {\n                tempArray.push(this.internalElements[i]);\n            }\n            this.internalElements = tempArray;\n        }\n        this.markChanged();\n    };\n    /**\n     * `Clear` the array.\n     * @private\n     */\n    PdfArray.prototype.clear = function () {\n        this.internalElements = [];\n        this.markChanged();\n    };\n    /**\n     * `Marks` the object changed.\n     * @private\n     */\n    PdfArray.prototype.markChanged = function () {\n        this.bChanged = true;\n    };\n    return PdfArray;\n}());\nexport { PdfArray };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDictionary } from './pdf-dictionary';\nimport { PdfNumber } from './pdf-number';\nimport { Operators } from './../input-output/pdf-operators';\nimport { PdfName } from './pdf-name';\nimport { PdfArray } from './pdf-array';\nimport { PdfReferenceHolder } from './pdf-reference';\nimport { CompressedStreamWriter } from '@syncfusion/ej2-compression';\n/**\n * `PdfStream` class is used to perform stream related primitive operations.\n * @private\n */\nvar PdfStream = /** @class */ (function (_super) {\n    __extends(PdfStream, _super);\n    function PdfStream(dictionary, data) {\n        var _this = _super.call(this, dictionary) || this;\n        //Constants\n        /**\n         * @hidden\n         * @private\n         */\n        _this.dicPrefix = 'stream';\n        /**\n         * @hidden\n         * @private\n         */\n        _this.dicSuffix = 'endstream';\n        /**\n         * Internal variable to hold `cloned object`.\n         * @private\n         */\n        _this.clonedObject2 = null;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.bCompress = true;\n        if (typeof dictionary !== 'undefined' || typeof data !== 'undefined') {\n            _this.dataStream2 = [];\n            _this.dataStream2 = data;\n            _this.bCompress2 = false;\n        }\n        else {\n            _this.dataStream2 = [];\n            _this.bCompress2 = true;\n            //Pending\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfStream.prototype, \"internalStream\", {\n        /**\n         * Gets the `internal` stream.\n         * @private\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"compress\", {\n        /**\n         * Gets or sets `compression` flag.\n         * @private\n         */\n        get: function () {\n            return this.bCompress;\n        },\n        set: function (value) {\n            this.bCompress = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"data\", {\n        /**\n         * Gets or sets the `data`.\n         * @private\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Clear` the internal stream.\n     * @private\n     */\n    PdfStream.prototype.clearStream = function () {\n        this.internalStream = [];\n        if (this.items.containsKey(this.dictionaryProperties.filter)) {\n            this.remove(this.dictionaryProperties.filter);\n        }\n        this.bCompress = true;\n        this.modify();\n    };\n    /**\n     * `Writes` the specified string.\n     * @private\n     */\n    PdfStream.prototype.write = function (text) {\n        if (text == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        if (text.length <= 0) {\n            throw new Error('ArgumentException: Can not write an empty string, text');\n        }\n        this.dataStream2.push(text);\n        this.modify();\n    };\n    /**\n     * `Writes` the specified bytes.\n     * @private\n     */\n    PdfStream.prototype.writeBytes = function (data) {\n        if (data === null) {\n            throw new Error('ArgumentNullException:data');\n        }\n        if (data.length <= 0) {\n            throw new Error('ArgumentException: Can not write an empty bytes, data');\n        }\n        var text = '';\n        for (var i = 0; i < data.length; i++) {\n            text += String.fromCharCode(data[i]);\n        }\n        this.dataStream2.push(text);\n        this.modify();\n    };\n    /**\n     * Raises event `Cmap BeginSave`.\n     * @private\n     */\n    PdfStream.prototype.onCmapBeginSave = function () {\n        this.cmapBeginSave.sender.cmapBeginSave();\n    };\n    /**\n     * Raises event `Font Program BeginSave`.\n     * @private\n     */\n    PdfStream.prototype.onFontProgramBeginSave = function () {\n        this.fontProgramBeginSave.sender.fontProgramBeginSave();\n    };\n    /**\n     * `Compresses the content` if it's required.\n     * @private\n     */\n    PdfStream.prototype.compressContent = function (data, writer) {\n        if (this.bCompress) {\n            var byteArray = [];\n            for (var i = 0; i < data.length; i++) {\n                byteArray.push(data.charCodeAt(i));\n            }\n            var dataArray = new Uint8Array(byteArray);\n            var sw = new CompressedStreamWriter();\n            // data = 'Hello World!!!';\n            sw.write(dataArray, 0, dataArray.length);\n            sw.close();\n            data = sw.getCompressedString;\n            this.addFilter(this.dictionaryProperties.flatedecode);\n        }\n        return data;\n    };\n    /**\n     * `Adds a filter` to the filter array.\n     * @private\n     */\n    PdfStream.prototype.addFilter = function (filterName) {\n        var obj = this.items.getValue(this.dictionaryProperties.filter);\n        if (obj instanceof PdfReferenceHolder) {\n            var rh = obj;\n            obj = rh.object;\n        }\n        var array = obj;\n        var name = obj;\n        if (name != null) {\n            array = new PdfArray();\n            array.insert(0, name);\n            this.items.setValue(this.dictionaryProperties.filter, array);\n        }\n        name = new PdfName(filterName);\n        if (array == null) {\n            this.items.setValue(this.dictionaryProperties.filter, name);\n        }\n        else {\n            array.insert(0, name);\n        }\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfStream.prototype.save = function (writer) {\n        if (typeof this.cmapBeginSave !== 'undefined') {\n            this.onCmapBeginSave();\n        }\n        if (typeof this.fontProgramBeginSave !== 'undefined') {\n            this.onFontProgramBeginSave();\n        }\n        var data = '';\n        for (var i = 0; i < this.data.length; i++) {\n            data = data + this.data[i];\n        }\n        if (data.length > 1 && !this.isResource) {\n            data = 'q\\r\\n' + data + 'Q\\r\\n';\n        }\n        data = this.compressContent(data, writer);\n        var length = data.length;\n        this.items.setValue(this.dictionaryProperties.length, new PdfNumber(length));\n        _super.prototype.save.call(this, writer, false);\n        writer.write(this.dicPrefix);\n        writer.write(Operators.newLine);\n        if (data.length > 0) {\n            writer.write(data);\n        }\n        writer.write(Operators.newLine);\n        writer.write(this.dicSuffix);\n        writer.write(Operators.newLine);\n    };\n    /**\n     * Converts `bytes to string`.\n     * @private\n     */\n    PdfStream.bytesToString = function (byteArray) {\n        var output = '';\n        for (var i = 0; i < byteArray.length; i++) {\n            output = output + String.fromCharCode(byteArray[i]);\n        }\n        return output;\n    };\n    return PdfStream;\n}(PdfDictionary));\nexport { PdfStream };\nvar SaveCmapEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveCmapEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveCmapEventHandler;\n}());\nexport { SaveCmapEventHandler };\nvar SaveFontProgramEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveFontProgramEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveFontProgramEventHandler;\n}());\nexport { SaveFontProgramEventHandler };\n","/**\n * `PdfString` class is used to perform string related primitive operations.\n * @private\n */\nexport var InternalEnum;\n(function (InternalEnum) {\n    //Internals\n    /**\n     * public Enum for `ForceEncoding`.\n     * @private\n     */\n    var ForceEncoding;\n    (function (ForceEncoding) {\n        /**\n         * Specifies the type of `None`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"None\"] = 0] = \"None\";\n        /**\n         * Specifies the type of `Ascii`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"Ascii\"] = 1] = \"Ascii\";\n        /**\n         * Specifies the type of `Unicode`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"Unicode\"] = 2] = \"Unicode\";\n    })(ForceEncoding = InternalEnum.ForceEncoding || (InternalEnum.ForceEncoding = {}));\n    /**\n     * public Enum for `SourceType`.\n     * @private\n     */\n    var SourceType;\n    (function (SourceType) {\n        /**\n         * Specifies the type of `StringValue`.\n         * @private\n         */\n        SourceType[SourceType[\"StringValue\"] = 0] = \"StringValue\";\n        /**\n         * Specifies the type of `ByteBuffer`.\n         * @private\n         */\n        SourceType[SourceType[\"ByteBuffer\"] = 1] = \"ByteBuffer\";\n    })(SourceType || (SourceType = {}));\n})(InternalEnum || (InternalEnum = {}));\nvar PdfString = /** @class */ (function () {\n    function PdfString(value) {\n        /**\n         * Value indicating whether the string was converted to hex.\n         * @default false\n         * @private\n         */\n        this.bHex = false;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position1 = -1;\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.clonedObject1 = null;\n        /**\n         * `Shows` if the data of the stream was decrypted.\n         * @default false\n         * @private\n         */\n        this.bDecrypted = false;\n        /**\n         * Shows if the data of the stream `was decrypted`.\n         * @default false\n         * @private\n         */\n        this.isParentDecrypted = false;\n        /**\n         * Gets a value indicating whether the object is `packed or not`.\n         * @default false\n         * @private\n         */\n        this.isPacked = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isFormField = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isColorSpace = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isHexString = true;\n        if (typeof value === 'undefined') {\n            this.bHex = false;\n        }\n        else {\n            if (!(value.length > 0 && value[0] === '0xfeff')) {\n                this.stringValue = value;\n                this.data = [];\n                for (var i = 0; i < value.length; ++i) {\n                    this.data.push(value.charCodeAt(i));\n                }\n            }\n        }\n    }\n    Object.defineProperty(PdfString.prototype, \"hex\", {\n        //Property\n        /**\n         * Gets a value indicating whether string is in `hex`.\n         * @private\n         */\n        get: function () {\n            return this.bHex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"value\", {\n        /**\n         * Gets or sets string `value` of the object.\n         * @private\n         */\n        get: function () {\n            return this.stringValue;\n        },\n        set: function (value) {\n            this.stringValue = value;\n            this.data = null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status1;\n        },\n        set: function (value) {\n            this.status1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving1;\n        },\n        set: function (value) {\n            this.isSaving1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index1;\n        },\n        set: function (value) {\n            this.index1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.clonedObject1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position1;\n        },\n        set: function (value) {\n            this.position1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"CrossTable\", {\n        /**\n         * Returns `PdfCrossTable` associated with the object.\n         * @private\n         */\n        get: function () {\n            return this.crossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"converted\", {\n        /**\n         * Gets a value indicating whether to check if the value has unicode characters.\n         * @private\n         */\n        get: function () {\n            return this.bConverted;\n        },\n        /**\n         * sets a value indicating whether to check if the value has unicode characters.\n         * @private\n         */\n        set: function (value) {\n            this.bConverted = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"encode\", {\n        /**\n         * Gets value indicating whether we should convert data to Unicode.\n         */\n        get: function () {\n            return this.bForceEncoding;\n        },\n        set: function (value) {\n            this.bForceEncoding = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * Converts `bytes to string using hex format` for representing string.\n     * @private\n     */\n    PdfString.bytesToHex = function (bytes) {\n        if (bytes == null) {\n            return '';\n        }\n        var builder = '';\n        return builder;\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfString.prototype.save = function (writer) {\n        if (writer === null) {\n            throw new Error('ArgumentNullException : writer');\n        }\n        if (this.encode !== undefined && this.encode === InternalEnum.ForceEncoding.Ascii) {\n            writer.write(this.pdfEncode());\n        }\n        else {\n            writer.write(PdfString.stringMark[0] + this.value + PdfString.stringMark[1]);\n        }\n    };\n    PdfString.prototype.pdfEncode = function () {\n        var result = '';\n        if (this.encode !== undefined && this.encode === InternalEnum.ForceEncoding.Ascii) {\n            var data = this.escapeSymbols(this.value);\n            for (var i = 0; i < data.length; i++) {\n                result += String.fromCharCode(data[i]);\n            }\n            result = PdfString.stringMark[0] + result + PdfString.stringMark[1];\n        }\n        else {\n            result = this.value;\n        }\n        return result;\n    };\n    PdfString.prototype.escapeSymbols = function (value) {\n        var data = [];\n        for (var i = 0; i < value.length; i++) {\n            var currentData = value.charCodeAt(i);\n            switch (currentData) {\n                case 40:\n                case 41:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                case 13:\n                    data.push(92);\n                    data.push(114);\n                    break;\n                case 92:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                default:\n                    data.push(currentData);\n                    break;\n            }\n        }\n        return data;\n    };\n    /**\n     * Creates a `copy of PdfString`.\n     * @private\n     */\n    PdfString.prototype.clone = function (crossTable) {\n        if (this.clonedObject1 !== null && this.clonedObject1.CrossTable === crossTable) {\n            return this.clonedObject1;\n        }\n        else {\n            this.clonedObject1 = null;\n        }\n        var newString = new PdfString(this.stringValue);\n        newString.bHex = this.bHex;\n        newString.crossTable = crossTable;\n        newString.isColorSpace = this.isColorSpace;\n        this.clonedObject1 = newString;\n        return newString;\n    };\n    /**\n     * Converts string to array of unicode symbols.\n     */\n    PdfString.toUnicodeArray = function (value, bAddPrefix) {\n        if (value == null) {\n            throw new Error('Argument Null Exception : value');\n        }\n        var startIndex = 0;\n        var output = [];\n        for (var i = 0; i < value.length; i++) {\n            var code = value.charCodeAt(i);\n            output.push(code / 256 >>> 0);\n            output.push(code & 0xff);\n        }\n        return output;\n    };\n    /**\n     * Converts byte data to string.\n     */\n    PdfString.byteToString = function (data) {\n        if (data == null) {\n            throw new Error('Argument Null Exception : stream');\n        }\n        var result = '';\n        for (var i = 0; i < data.length; ++i) {\n            result += String.fromCharCode(data[i]);\n        }\n        return result;\n    };\n    //constants = ;\n    /**\n     * `General markers` for string.\n     * @private\n     */\n    PdfString.stringMark = '()';\n    /**\n     * `Hex markers` for string.\n     * @private\n     */\n    PdfString.hexStringMark = '<>';\n    /**\n     * Format of password data.\n     * @private\n     */\n    PdfString.hexFormatPattern = '{0:X2}';\n    return PdfString;\n}());\nexport { PdfString };\n","import { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfStream } from './../primitives/pdf-stream';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfString } from './../primitives/pdf-string';\n/**\n * `PdfReference` class is used to perform reference related primitive operations.\n * @private\n */\nvar PdfReference = /** @class */ (function () {\n    function PdfReference(objNumber, genNumber) {\n        /**\n         * Holds the `index` number of the object.\n         * @default -1\n         * @private\n         */\n        this.index3 = -1;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position3 = -1;\n        /**\n         * Holds the `object number`.\n         * @default 0\n         * @private\n         */\n        this.objNumber = 0;\n        /**\n         * Holds the `generation number` of the object.\n         * @default 0\n         * @private\n         */\n        this.genNumber = 0;\n        if (typeof objNumber === 'number' && typeof genNumber === 'number') {\n            this.objNumber = objNumber;\n            this.genNumber = genNumber;\n            // } else if (typeof objNum === 'string' && typeof genNum === 'string') {\n        }\n        else {\n            this.objNumber = Number(objNumber);\n            this.genNumber = Number(genNumber);\n        }\n    }\n    Object.defineProperty(PdfReference.prototype, \"status\", {\n        //Property\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status3;\n        },\n        set: function (value) {\n            this.status3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving3;\n        },\n        set: function (value) {\n            this.isSaving3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index3;\n        },\n        set: function (value) {\n            this.index3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position3;\n        },\n        set: function (value) {\n            this.position3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var returnObject3 = null;\n            return returnObject3;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //IPdfPrimitives methods\n    /**\n     * `Saves` the object.\n     * @private\n     */\n    PdfReference.prototype.save = function (writer) {\n        writer.write(this.toString());\n    };\n    /**\n     * Returns a `string` representing the object.\n     * @private\n     */\n    PdfReference.prototype.toString = function () {\n        return this.objNumber.toString() + ' ' + this.genNumber.toString() + ' R';\n    };\n    /**\n     * Creates a `deep copy` of the IPdfPrimitive object.\n     * @private\n     */\n    PdfReference.prototype.clone = function (crossTable) {\n        return null;\n    };\n    return PdfReference;\n}());\nexport { PdfReference };\n/**\n * `PdfReferenceHolder` class is used to perform reference holder related primitive operations.\n * @private\n */\nvar PdfReferenceHolder = /** @class */ (function () {\n    function PdfReferenceHolder(obj1, obj2) {\n        /**\n         * Holds the `index` number of the object.\n         * @default -1\n         * @private\n         */\n        this.index4 = -1;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position4 = -1;\n        /**\n         * The `index` of the object within the object collection.\n         * @default -1\n         * @private\n         */\n        this.objectIndex = -1;\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // if (typeof obj2 === 'undefined') {\n        this.initialize(obj1);\n        // }\n        // else {\n        //     if (obj2 === null) {\n        //         throw new Error('ArgumentNullException : crossTable');\n        //     }\n        //     if (obj1 === null) {\n        //         throw new Error('ArgumentNullException : reference');\n        //     }\n        //     this.crossTable = obj2;\n        //     let tempObj1 : PdfReference = <PdfReference>obj1;\n        //     this.reference = tempObj1;\n        // }\n    }\n    Object.defineProperty(PdfReferenceHolder.prototype, \"status\", {\n        //Properties\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status4;\n        },\n        set: function (value) {\n            this.status4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving4;\n        },\n        set: function (value) {\n            this.isSaving4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index4;\n        },\n        set: function (value) {\n            this.index4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position4;\n        },\n        set: function (value) {\n            this.position4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"object\", {\n        /**\n         * Gets the `object` the reference is of.\n         * @private\n         */\n        get: function () {\n            // if ((this.reference != null) || (this.object == null)) {\n            //     this.object = this.GetterObject();\n            // }\n            return this.primitiveObject;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"reference\", {\n        /**\n         * Gets the `reference`.\n         * @private\n         */\n        get: function () {\n            return this.pdfReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"index\", {\n        /**\n         * Gets the `index` of the object.\n         * @private\n         */\n        get: function () {\n            // let items : PdfMainObjectCollection = this.crossTable.PdfObjects;\n            // this.objectIndex = items.GetObjectIndex(this.reference);\n            // if (this.objectIndex < 0) {\n            //     let obj : IPdfPrimitive = this.crossTable.GetObject(this.reference);\n            //     this.objectIndex = items.Count - 1;\n            // }\n            return this.objectIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"element\", {\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.primitiveObject;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfReferenceHolder.prototype.initialize = function (obj1) {\n        if (obj1 instanceof PdfArray\n            || obj1 instanceof PdfDictionary\n            || obj1 instanceof PdfName\n            || obj1 instanceof PdfNumber\n            || obj1 instanceof PdfStream\n            || obj1 instanceof PdfReference\n            || obj1 instanceof PdfString) {\n            this.primitiveObject = obj1;\n        }\n        else {\n            var tempObj = obj1;\n            this.initialize(tempObj.element);\n        }\n    };\n    /**\n     * `Writes` a reference into a PDF document.\n     * @private\n     */\n    PdfReferenceHolder.prototype.save = function (writer) {\n        // if (writer == null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        var position = writer.position;\n        var cTable = writer.document.crossTable;\n        // if (cTable.Document instanceof PdfDocument) {\n        this.object.isSaving = true;\n        // }\n        var reference = null;\n        // if (writer.Document.FileStructure.IncrementalUpdate === true && writer.Document.isStreamCopied === true) {\n        //     if (this.reference === null) {\n        //         reference = cTable.GetReference(this.Object);\n        //     } else {\n        //         reference = this.reference;\n        //     }\n        // } else {\n        //     reference = cTable.GetReference(this.Object);\n        // }\n        // if (!(writer.Document.FileStructure.IncrementalUpdate === true && writer.Document.isStreamCopied === true)) {\n        reference = cTable.getReference(this.object);\n        // }\n        // if (writer.Position !== position) {\n        //     writer.Position = position;\n        // }\n        reference.save(writer);\n    };\n    /**\n     * Creates a `copy of PdfReferenceHolder`.\n     * @private\n     */\n    PdfReferenceHolder.prototype.clone = function (crossTable) {\n        var refHolder = null;\n        var temp = null;\n        var refNum = '';\n        var reference = null;\n        // Restricts addition of same object multiple time.\n        /* if (this.Reference != null && this.crossTable != null && this.crossTable.PageCorrespondance.containsKey(this.Reference)) {\n            refHolder = new PdfReferenceHolder(this.crossTable.PageCorrespondance.getValue(this.Reference) as PdfReference, crossTable);\n            return refHolder;\n        }\n        if (Object instanceof PdfNumber) {\n            return new PdfNumber((Object as PdfNumber).IntValue);\n        }\n        */\n        // if (Object instanceof PdfDictionary) {\n        //     // Meaning the referenced page is not available for import.\n        //     let type : PdfName = new PdfName(this.dictionaryProperties.type);\n        //     let dict : PdfDictionary = Object as PdfDictionary;\n        //     if (dict.ContainsKey(type)) {\n        //         let pageName : PdfName = dict.Items.getValue(type.Value) as PdfName;\n        //         if (pageName !== null) {\n        //             if (pageName.Value === 'Page') {\n        //                 return new PdfNull();\n        //             }\n        //         }\n        //     }\n        // }\n        /* if (Object instanceof PdfName) {\n            return new PdfName ((Object as PdfName ).Value);\n        }\n        */\n        // Resolves circular references.\n        // if (crossTable.PrevReference !== null && (crossTable.PrevReference.indexOf(this.Reference) !== -1)) {\n        //     let obj : IPdfPrimitive = this.crossTable.GetObject(this.Reference).ClonedObject;\n        //     if (obj !== null) {\n        //         reference = crossTable.GetReference(obj);\n        //         return new PdfReferenceHolder(reference, crossTable);\n        //     } else {\n        //         return new PdfNull();\n        //     }\n        // }\n        /*if (this.Reference !== null) {\n            crossTable.PrevReference.push(this.Reference);\n        }\n        reference = crossTable.GetReference(temp);\n        refHolder = new PdfReferenceHolder(reference, crossTable);\n        return refHolder;\n        */\n        return null;\n    };\n    return PdfReferenceHolder;\n}());\nexport { PdfReferenceHolder };\n","import { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfName } from './../primitives/pdf-name';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfAction` class represents base class for all action types.\n * @private\n */\nvar PdfAction = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initialize instance for `Action` class.\n     * @private\n     */\n    function PdfAction() {\n        /**\n         * Specifies the Next `action` to perform.\n         * @private\n         */\n        this.action = null;\n        /**\n         * Specifies the Internal variable to store `dictionary properties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // super(); -> Object()\n        this.initialize();\n    }\n    Object.defineProperty(PdfAction.prototype, \"next\", {\n        // Properties\n        /**\n         * Gets and Sets the `Next` action to perform.\n         * @private\n         */\n        get: function () {\n            return this.action;\n        },\n        set: function (value) {\n            // if (this.action !== value) {\n            this.action = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.next, new PdfReferenceHolder(this.action));\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAction.prototype, \"dictionary\", {\n        /**\n         * Gets and Sets the instance of PdfDictionary class for `Dictionary`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfDictionary === 'undefined') {\n                this.pdfDictionary = new PdfDictionary();\n            }\n            return this.pdfDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the action type.\n     * @private\n     */\n    PdfAction.prototype.initialize = function () {\n        this.dictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.action));\n    };\n    Object.defineProperty(PdfAction.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the `Element` as IPdfPrimitive class.\n         * @private\n         */\n        get: function () {\n            return this.dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAction;\n}());\nexport { PdfAction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfAction } from './action';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * `PdfUriAction` class for initialize the uri related internals.\n * @private\n */\nvar PdfUriAction = /** @class */ (function (_super) {\n    __extends(PdfUriAction, _super);\n    function PdfUriAction(uri) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Specifies the `uri` string.\n         * @default ''.\n         * @private\n         */\n        _this.uniformResourceIdentifier = '';\n        return _this;\n    }\n    Object.defineProperty(PdfUriAction.prototype, \"uri\", {\n        // Properties\n        /**\n         * Gets and Sets the value of `Uri`.\n         * @private\n         */\n        get: function () {\n            return this.uniformResourceIdentifier;\n        },\n        set: function (value) {\n            this.uniformResourceIdentifier = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.uri, new PdfString(this.uniformResourceIdentifier));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the internals.\n     * @private\n     */\n    PdfUriAction.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.s, new PdfName(this.dictionaryProperties.uri));\n    };\n    return PdfUriAction;\n}(PdfAction));\nexport { PdfUriAction };\n","/**\n * public Enum for `PdfHorizontalAlignment`.\n * @private\n */\nexport var PdfHorizontalAlignment;\n(function (PdfHorizontalAlignment) {\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Left\"] = 0] = \"Left\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Right\"] = 2] = \"Right\";\n})(PdfHorizontalAlignment || (PdfHorizontalAlignment = {}));\n/**\n * public Enum for `PdfVerticalAlignment`.\n * @private\n */\nexport var PdfVerticalAlignment;\n(function (PdfVerticalAlignment) {\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Top\"] = 0] = \"Top\";\n    /**\n     * Specifies the type of `Middle`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Middle\"] = 1] = \"Middle\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Bottom\"] = 2] = \"Bottom\";\n})(PdfVerticalAlignment || (PdfVerticalAlignment = {}));\n/**\n * public Enum for `public`.\n * @private\n */\nexport var PdfTextAlignment;\n(function (PdfTextAlignment) {\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Left\"] = 0] = \"Left\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Right\"] = 2] = \"Right\";\n    /**\n     * Specifies the type of `Justify`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Justify\"] = 3] = \"Justify\";\n})(PdfTextAlignment || (PdfTextAlignment = {}));\n/**\n * public Enum for `TextRenderingMode`.\n * @private\n */\nexport var TextRenderingMode;\n(function (TextRenderingMode) {\n    /**\n     * Specifies the type of `Fill`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Fill\"] = 0] = \"Fill\";\n    /**\n     * Specifies the type of `Stroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Stroke\"] = 1] = \"Stroke\";\n    /**\n     * Specifies the type of `FillStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"FillStroke\"] = 2] = \"FillStroke\";\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"None\"] = 3] = \"None\";\n    /**\n     * Specifies the type of `ClipFlag`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFlag\"] = 4] = \"ClipFlag\";\n    /**\n     * Specifies the type of `ClipFill`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFill\"] = 4] = \"ClipFill\";\n    /**\n     * Specifies the type of `ClipStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipStroke\"] = 5] = \"ClipStroke\";\n    /**\n     * Specifies the type of `ClipFillStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFillStroke\"] = 6] = \"ClipFillStroke\";\n    /**\n     * Specifies the type of `Clip`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Clip\"] = 7] = \"Clip\";\n})(TextRenderingMode || (TextRenderingMode = {}));\n/**\n * public Enum for `PdfLineJoin`.\n * @private\n */\nexport var PdfLineJoin;\n(function (PdfLineJoin) {\n    /**\n     * Specifies the type of `Miter`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Miter\"] = 0] = \"Miter\";\n    /**\n     * Specifies the type of `Round`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Round\"] = 1] = \"Round\";\n    /**\n     * Specifies the type of `Bevel`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Bevel\"] = 2] = \"Bevel\";\n})(PdfLineJoin || (PdfLineJoin = {}));\n/**\n * public Enum for `PdfLineCap`.\n * @private\n */\nexport var PdfLineCap;\n(function (PdfLineCap) {\n    /**\n     * Specifies the type of `Flat`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Flat\"] = 0] = \"Flat\";\n    /**\n     * Specifies the type of `Round`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Round\"] = 1] = \"Round\";\n    /**\n     * Specifies the type of `Square`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Square\"] = 2] = \"Square\";\n})(PdfLineCap || (PdfLineCap = {}));\n/**\n * public Enum for `PdfDashStyle`.\n * @private\n */\nexport var PdfDashStyle;\n(function (PdfDashStyle) {\n    /**\n     * Specifies the type of `Solid`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Solid\"] = 0] = \"Solid\";\n    /**\n     * Specifies the type of `Dash`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Dash\"] = 1] = \"Dash\";\n    /**\n     * Specifies the type of `Dot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Dot\"] = 2] = \"Dot\";\n    /**\n     * Specifies the type of `DashDot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"DashDot\"] = 3] = \"DashDot\";\n    /**\n     * Specifies the type of `DashDotDot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"DashDotDot\"] = 4] = \"DashDotDot\";\n    /**\n     * Specifies the type of `Custom`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Custom\"] = 5] = \"Custom\";\n})(PdfDashStyle || (PdfDashStyle = {}));\n/**\n * public Enum for `PdfFillMode`.\n * @private\n */\nexport var PdfFillMode;\n(function (PdfFillMode) {\n    /**\n     * Specifies the type of `Winding`.\n     * @private\n     */\n    PdfFillMode[PdfFillMode[\"Winding\"] = 0] = \"Winding\";\n    /**\n     * Specifies the type of `Alternate`.\n     * @private\n     */\n    PdfFillMode[PdfFillMode[\"Alternate\"] = 1] = \"Alternate\";\n})(PdfFillMode || (PdfFillMode = {}));\n/**\n * public Enum for `PdfColorSpace`.\n * @private\n */\nexport var PdfColorSpace;\n(function (PdfColorSpace) {\n    /**\n     * Specifies the type of `Rgb`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Rgb\"] = 0] = \"Rgb\";\n    /**\n     * Specifies the type of `Cmyk`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Cmyk\"] = 1] = \"Cmyk\";\n    /**\n     * Specifies the type of `GrayScale`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"GrayScale\"] = 2] = \"GrayScale\";\n    /**\n     * Specifies the type of `Indexed`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Indexed\"] = 3] = \"Indexed\";\n})(PdfColorSpace || (PdfColorSpace = {}));\n/**\n * public Enum for `PdfBlendMode`.\n * @private\n */\nexport var PdfBlendMode;\n(function (PdfBlendMode) {\n    /**\n     * Specifies the type of `Normal`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Normal\"] = 0] = \"Normal\";\n    /**\n     * Specifies the type of `Multiply`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Multiply\"] = 1] = \"Multiply\";\n    /**\n     * Specifies the type of `Screen`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Screen\"] = 2] = \"Screen\";\n    /**\n     * Specifies the type of `Overlay`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Overlay\"] = 3] = \"Overlay\";\n    /**\n     * Specifies the type of `Darken`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Darken\"] = 4] = \"Darken\";\n    /**\n     * Specifies the type of `Lighten`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Lighten\"] = 5] = \"Lighten\";\n    /**\n     * Specifies the type of `ColorDodge`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"ColorDodge\"] = 6] = \"ColorDodge\";\n    /**\n     * Specifies the type of `ColorBurn`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"ColorBurn\"] = 7] = \"ColorBurn\";\n    /**\n     * Specifies the type of `HardLight`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"HardLight\"] = 8] = \"HardLight\";\n    /**\n     * Specifies the type of `SoftLight`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"SoftLight\"] = 9] = \"SoftLight\";\n    /**\n     * Specifies the type of `Difference`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Difference\"] = 10] = \"Difference\";\n    /**\n     * Specifies the type of `Exclusion`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Exclusion\"] = 11] = \"Exclusion\";\n    /**\n     * Specifies the type of `Hue`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Hue\"] = 12] = \"Hue\";\n    /**\n     * Specifies the type of `Saturation`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Saturation\"] = 13] = \"Saturation\";\n    /**\n     * Specifies the type of `Color`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Color\"] = 14] = \"Color\";\n    /**\n     * Specifies the type of `Luminosity`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Luminosity\"] = 15] = \"Luminosity\";\n})(PdfBlendMode || (PdfBlendMode = {}));\n/**\n * public Enum for `PdfGraphicsUnit`.\n * @private\n */\nexport var PdfGraphicsUnit;\n(function (PdfGraphicsUnit) {\n    /**\n     * Specifies the type of `Centimeter`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Centimeter\"] = 0] = \"Centimeter\";\n    /**\n     * Specifies the type of `Pica`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Pica\"] = 1] = \"Pica\";\n    /**\n     * Specifies the type of `Pixel`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Pixel\"] = 2] = \"Pixel\";\n    /**\n     * Specifies the type of `Point`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Point\"] = 3] = \"Point\";\n    /**\n     * Specifies the type of `Inch`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Inch\"] = 4] = \"Inch\";\n    /**\n     * Specifies the type of `Document`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Document\"] = 5] = \"Document\";\n    /**\n     * Specifies the type of `Millimeter`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Millimeter\"] = 6] = \"Millimeter\";\n})(PdfGraphicsUnit || (PdfGraphicsUnit = {}));\n/**\n * public Enum for `PdfGridImagePosition`.\n * @private\n */\nexport var PdfGridImagePosition;\n(function (PdfGridImagePosition) {\n    /**\n     * Specifies the type of `Fit`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Fit\"] = 0] = \"Fit\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Stretch`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Stretch\"] = 2] = \"Stretch\";\n    /**\n     * Specifies the type of `Tile`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Tile\"] = 3] = \"Tile\";\n})(PdfGridImagePosition || (PdfGridImagePosition = {}));\n/**\n * public Enum for `the text rendering direction`.\n * @private\n */\nexport var PdfTextDirection;\n(function (PdfTextDirection) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfTextDirection[PdfTextDirection[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `LeftToRight`.\n     * @private\n     */\n    PdfTextDirection[PdfTextDirection[\"LeftToRight\"] = 1] = \"LeftToRight\";\n    /**\n     * Specifies the type of `RightToLeft`.\n     * @private\n     */\n    PdfTextDirection[PdfTextDirection[\"RightToLeft\"] = 2] = \"RightToLeft\";\n})(PdfTextDirection || (PdfTextDirection = {}));\n","import { PdfColorSpace } from './enum';\nimport { Operators } from './../input-output/pdf-operators';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfArray } from './../primitives/pdf-array';\n/**\n * Implements structures and routines working with `color`.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * //\n * // set color\n * let brushColor : PdfColor = new PdfColor(0, 0, 0);\n * //\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(brushColor);\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n * @default black color\n */\nvar PdfColor = /** @class */ (function () {\n    function PdfColor(color1, color2, color3, color4) {\n        if (typeof color1 === 'undefined') {\n            if (typeof color2 !== 'undefined' && typeof color3 !== 'undefined' && typeof color4 !== 'undefined') {\n                this.assignRGB(color2, color3, color4);\n            }\n            else {\n                this.filled = false;\n            }\n        }\n        else if (color1 instanceof PdfColor) {\n            this.redColor = color1.r;\n            this.greenColor = color1.g;\n            this.blueColor = color1.b;\n            this.grayColor = color1.gray;\n            this.alpha = color1.alpha;\n            this.filled = (this.alpha !== 0);\n            /* tslint:disable-next-line:max-line-length */\n        }\n        else if (typeof color1 === 'number' && typeof color2 === 'undefined' && typeof color3 === 'undefined' && typeof color4 === 'undefined') {\n            if (color1 < 0) {\n                color1 = 0;\n            }\n            if (color1 > 1) {\n                color1 = 1;\n            }\n            this.redColor = color1 * PdfColor.maxColourChannelValue;\n            this.greenColor = color1 * PdfColor.maxColourChannelValue;\n            this.blueColor = color1 * PdfColor.maxColourChannelValue;\n            this.cyanColor = color1;\n            this.magentaColor = color1;\n            this.yellowColor = color1;\n            this.blackColor = color1;\n            this.grayColor = color1;\n            this.alpha = PdfColor.maxColourChannelValue;\n            this.filled = true;\n        }\n        else if (typeof color4 === 'undefined') {\n            this.assignRGB(color1, color2, color3);\n        }\n        else {\n            this.assignRGB(color2, color3, color4, color1);\n        }\n    }\n    /**\n     * `Assign` red, green, blue colors with alpha value..\n     * @private\n     */\n    PdfColor.prototype.assignRGB = function (r, g, b, a) {\n        if (typeof r === 'undefined' || typeof g === 'undefined' || typeof b === 'undefined') {\n            this.filled = false;\n        }\n        else {\n            this.cyanColor = 0;\n            this.magentaColor = 0;\n            this.yellowColor = 0;\n            this.blackColor = 0;\n            this.grayColor = 0;\n            this.redColor = r;\n            this.greenColor = g;\n            this.blueColor = b;\n            if (typeof a === 'undefined') {\n                this.a = PdfColor.maxColourChannelValue;\n            }\n            else {\n                this.a = a;\n                var isFractional = (a >= 0 && a <= 1);\n                var scaleFactor = isFractional ? a : a / 255;\n                var inverseScale = 1 - scaleFactor;\n                this.redColor = Math.max(0, Math.min(255, Math.round(r * scaleFactor + PdfColor.maxColourChannelValue * inverseScale)));\n                this.greenColor = Math.max(0, Math.min(255, Math.round(g * scaleFactor + PdfColor.maxColourChannelValue * inverseScale)));\n                this.blueColor = Math.max(0, Math.min(255, Math.round(b * scaleFactor + PdfColor.maxColourChannelValue * inverseScale)));\n            }\n            this.filled = true;\n            this.assignCMYK(r, g, b);\n        }\n    };\n    /**\n     * `Calculate and assign` cyan, megenta, yellow colors from rgb values..\n     * @private\n     */\n    PdfColor.prototype.assignCMYK = function (r, g, b) {\n        var red = r / PdfColor.maxColourChannelValue;\n        var green = g / PdfColor.maxColourChannelValue;\n        var blue = b / PdfColor.maxColourChannelValue;\n        var black = PdfNumber.min(1 - red, 1 - green, 1 - blue);\n        var cyan = (black === 1.0) ? 0 : (1 - red - black) / (1 - black);\n        var magenta = (black === 1.0) ? 0 : (1 - green - black) / (1 - black);\n        var yellow = (black === 1.0) ? 0 : (1 - blue - black) / (1 - black);\n        this.blackColor = black;\n        this.cyanColor = cyan;\n        this.magentaColor = magenta;\n        this.yellowColor = yellow;\n    };\n    Object.defineProperty(PdfColor.prototype, \"r\", {\n        //Properties\n        // public static get Empty():PdfColor\n        // {\n        //     return this.s_emptyColor\n        // }\n        /**\n         * Gets or sets `Red` channel value.\n         * @private\n         */\n        get: function () {\n            return this.redColor;\n        },\n        set: function (value) {\n            this.redColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"red\", {\n        /**\n         * Gets the `Red` color\n         * @private\n         */\n        get: function () {\n            return (this.r / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"b\", {\n        /**\n         * Gets or sets `Blue` channel value.\n         * @private\n         */\n        get: function () {\n            return this.blueColor;\n        },\n        set: function (value) {\n            this.blueColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"blue\", {\n        /**\n         * Gets the `blue` color.\n         * @private\n         */\n        get: function () {\n            return (this.b / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"c\", {\n        /**\n         * Gets or sets `Cyan` channel value.\n         * @private\n         */\n        get: function () {\n            return this.cyanColor;\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.cyanColor = 0;\n            }\n            else if (value > 1) {\n                this.cyanColor = 1;\n            }\n            else {\n                this.cyanColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"k\", {\n        /**\n         * Gets or sets `Black` channel value.\n         * @private\n         */\n        get: function () {\n            return this.blackColor;\n        },\n        set: function (value) {\n            if ((value < 0)) {\n                this.blackColor = 0;\n            }\n            else if ((value > 1)) {\n                this.blackColor = 1;\n            }\n            else {\n                this.blackColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"m\", {\n        /**\n         * Gets or sets `Magenta` channel value.\n         * @private\n         */\n        get: function () {\n            return this.magentaColor;\n        },\n        set: function (value) {\n            if ((value < 0)) {\n                this.magentaColor = 0;\n            }\n            else if ((value > 1)) {\n                this.magentaColor = 1;\n            }\n            else {\n                this.magentaColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"y\", {\n        /**\n         * Gets or sets `Yellow` channel value.\n         * @private\n         */\n        get: function () {\n            return this.yellowColor;\n        },\n        set: function (value) {\n            if ((value < 0)) {\n                this.yellowColor = 0;\n            }\n            else if ((value > 1)) {\n                this.yellowColor = 1;\n            }\n            else {\n                this.yellowColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"g\", {\n        /**\n         *  Gets or sets `Green` channel value.\n         * @private\n         */\n        get: function () {\n            return this.greenColor;\n        },\n        set: function (value) {\n            this.greenColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"green\", {\n        /**\n         * Gets the `Green` color.\n         * @private\n         */\n        get: function () {\n            return (this.g / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"gray\", {\n        /**\n         * Gets or sets `Gray` channel value.\n         * @private\n         */\n        get: function () {\n            return ((((this.redColor + this.greenColor) + this.blueColor)) / (PdfColor.maxColourChannelValue * 3));\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.grayColor = 0;\n            }\n            else if (value > 1) {\n                this.grayColor = 1;\n            }\n            else {\n                this.grayColor = value;\n            }\n            this.r = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.g = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.b = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"isEmpty\", {\n        /**\n         * Gets whether the PDFColor `is Empty` or not.\n         * @private\n         */\n        get: function () {\n            return !this.filled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"a\", {\n        /**\n         * Gets or sets `Alpha` channel value.\n         * @private\n         */\n        get: function () {\n            return this.alpha;\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.alpha = 0;\n            }\n            else {\n                // if (this.alpha !== value) {\n                this.alpha = value;\n                // }\n            }\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public methods\n    /**\n     * Converts `PDFColor to PDF string` representation.\n     * @private\n     */\n    PdfColor.prototype.toString = function (colorSpace, stroke) {\n        if (this.isEmpty) {\n            return '';\n        }\n        var str = '';\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                str = this.rgbToString(stroke);\n                break;\n            case PdfColorSpace.GrayScale:\n                str = this.grayScaleToString(stroke);\n                break;\n            case PdfColorSpace.Cmyk:\n                str = this.cmykToString(stroke);\n                break;\n        }\n        return str;\n    };\n    /**\n     * Sets `GrayScale` color.\n     * @private\n     */\n    PdfColor.prototype.grayScaleToString = function (ifStroking) {\n        var gray = this.gray;\n        var colour = '';\n        var obj = null;\n        /* tslint:disable-next-line:max-line-length */\n        obj = (ifStroking) ? PdfColor.grayStringsSroke.containsKey(gray) ? PdfColor.grayStringsSroke.getValue(gray) : null : PdfColor.grayStringsFill.containsKey(gray) ? PdfColor.grayStringsFill.getValue(gray) : null;\n        if (obj == null) {\n            if (ifStroking) {\n                colour = gray.toString() + ' G';\n                PdfColor.grayStringsSroke.setValue(gray, colour);\n            }\n        }\n        else {\n            colour = obj.toString();\n        }\n        return colour + Operators.newLine;\n    };\n    /**\n     * Sets `RGB` color.\n     * @private\n     */\n    PdfColor.prototype.rgbToString = function (ifStroking) {\n        var r = this.r;\n        var g = this.g;\n        var b = this.b;\n        var key = (r << 16) + (g << 8) + b;\n        if (ifStroking) {\n            key += 1 << 24;\n        }\n        var colour = '';\n        var obj = null;\n        if (PdfColor.rgbStrings.containsKey(key)) {\n            obj = PdfColor.rgbStrings.getValue(key);\n        }\n        if (obj == null) {\n            var red = r / PdfColor.maxColourChannelValue;\n            var green = g / PdfColor.maxColourChannelValue;\n            var blue = b / PdfColor.maxColourChannelValue;\n            if (ifStroking) {\n                colour = red.toString() + ' ' + green.toString() + ' ' + blue.toString() + ' RG';\n            }\n            else {\n                colour = red.toString() + ' ' + green.toString() + ' ' + blue.toString() + ' rg';\n            }\n            PdfColor.rgbStrings.setValue(key, colour);\n        }\n        else {\n            colour = obj.toString();\n        }\n        return colour + Operators.newLine;\n    };\n    /***\n     * Sets `CMYK` color.\n     * @private\n     */\n    PdfColor.prototype.cmykToString = function (ifStroking) {\n        var cyan = this.c;\n        var magenta = this.m;\n        var yellow = this.y;\n        var black = this.b;\n        var colour = '';\n        colour = cyan.toString() + ' ' + magenta.toString() + ' ' + yellow.toString() + ' ' + black.toString() + ' K';\n        return colour + Operators.newLine;\n    };\n    /**\n     * Converts `colour to a PDF array`.\n     * @private\n     */\n    PdfColor.prototype.toArray = function (colorSpace) {\n        var array = new PdfArray();\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                array.add(new PdfNumber(this.red));\n                array.add(new PdfNumber(this.green));\n                array.add(new PdfNumber(this.blue));\n                break;\n        }\n        return array;\n    };\n    //Fields\n    /**\n     * Holds `RGB colors` converted into strings.\n     * @private\n     */\n    PdfColor.rgbStrings = new Dictionary();\n    /**\n     * Holds Gray scale colors converted into strings for `stroking`.\n     * @private\n     */\n    PdfColor.grayStringsSroke = new Dictionary();\n    /**\n     * Holds Gray scale colors converted into strings for `filling`.\n     * @private\n     */\n    PdfColor.grayStringsFill = new Dictionary();\n    /**\n     * `Max value` of color channel.\n     * @private\n     */\n    PdfColor.maxColourChannelValue = 255.0;\n    return PdfColor;\n}());\nexport { PdfColor };\n","/**\n * Coordinates of Position for `PointF`.\n * @private\n */\nvar PointF = /** @class */ (function () {\n    function PointF(x, y) {\n        if (typeof x === 'undefined') {\n            this.x = 0;\n            this.y = 0;\n        }\n        else {\n            if (x !== null) {\n                this.x = x;\n            }\n            else {\n                this.x = 0;\n            }\n            if (y !== null) {\n                this.y = y;\n            }\n            else {\n                this.y = 0;\n            }\n        }\n    }\n    return PointF;\n}());\nexport { PointF };\n/**\n * Width and Height as `Size`.\n * @private\n */\nvar SizeF = /** @class */ (function () {\n    function SizeF(width, height) {\n        if (typeof height === 'undefined') {\n            this.height = 0;\n            this.width = 0;\n        }\n        else {\n            if (height !== null) {\n                this.height = height;\n            }\n            else {\n                this.height = 0;\n            }\n            if (width !== null) {\n                this.width = width;\n            }\n            else {\n                this.width = 0;\n            }\n        }\n    }\n    return SizeF;\n}());\nexport { SizeF };\n/**\n * `RectangleF` with Position and size.\n * @private\n */\nvar RectangleF = /** @class */ (function () {\n    function RectangleF(arg1, arg2, arg3, arg4) {\n        if (typeof arg1 === typeof arg1 && typeof arg1 === 'undefined') {\n            this.x = 0;\n            this.y = 0;\n            this.height = 0;\n            this.width = 0;\n        }\n        else {\n            if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n                var pointf = arg1;\n                this.x = pointf.x;\n                this.y = pointf.y;\n                var sizef = arg2;\n                this.height = sizef.height;\n                this.width = sizef.width;\n            }\n            else {\n                var x = arg1;\n                var y = arg2;\n                var width = arg3;\n                var height = arg4;\n                this.x = x;\n                this.y = y;\n                this.height = height;\n                this.width = width;\n            }\n        }\n    }\n    return RectangleF;\n}());\nexport { RectangleF };\n/**\n * `Rectangle` with left, right, top and bottom.\n * @private\n */\nvar Rectangle = /** @class */ (function () {\n    /**\n     * Instance of `RectangleF` class with X, Y, Width and Height.\n     * @private\n     */\n    function Rectangle(left, top, right, bottom) {\n        this.left = left;\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n    }\n    Object.defineProperty(Rectangle.prototype, \"width\", {\n        /**\n         * Gets a value of width\n         */\n        get: function () {\n            return this.right - this.left;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"height\", {\n        /**\n         * Gets a value of height\n         */\n        get: function () {\n            return this.bottom - this.top;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"topLeft\", {\n        /**\n         * Gets a value of Top and Left\n         */\n        get: function () {\n            return new PointF(this.left, this.top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"size\", {\n        /**\n         * Gets a value of size\n         */\n        get: function () {\n            return new SizeF(this.width, this.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Rectangle.prototype.toString = function () {\n        return this.topLeft + 'x' + this.size;\n    };\n    return Rectangle;\n}());\nexport { Rectangle };\n","/**\n * `PdfBrush` class provides objects used to fill the interiors of graphical shapes such as rectangles,\n * ellipses, pies, polygons, and paths.\n * @private\n */\nvar PdfBrush = /** @class */ (function () {\n    /**\n     * Creates instanceof `PdfBrush` class.\n     * @hidden\n     * @private\n     */\n    function PdfBrush() {\n        //\n    }\n    //IClonable implementation\n    PdfBrush.prototype.clone = function () {\n        return this;\n    };\n    return PdfBrush;\n}());\nexport { PdfBrush };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfColor } from './../pdf-color';\nimport { PdfColorSpace } from './../enum';\nimport { PdfBrush } from './pdf-brush';\n/**\n * Represents a brush that fills any object with a solid color.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a pages to the document\n * let page1 : PdfPage = document.pages.add();\n * // set font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // set brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSolidBrush = /** @class */ (function (_super) {\n    __extends(PdfSolidBrush, _super);\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfSolidBrush` class.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a pages to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // set font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // set brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10));\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param color color of the brush\n     */\n    function PdfSolidBrush(color) {\n        var _this = _super.call(this) || this;\n        _this.pdfColor = color;\n        return _this;\n    }\n    Object.defineProperty(PdfSolidBrush.prototype, \"color\", {\n        //Properties\n        /**\n         * Gets or sets the `color` of the brush.\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Monitors` the changes of the brush and modify PDF state respectively.\n     * @private\n     */\n    PdfSolidBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        if (streamWriter == null) {\n            throw new Error('ArgumentNullException:streamWriter');\n        }\n        var diff = false;\n        if (brush == null) {\n            diff = true;\n            streamWriter.setColorAndSpace(this.pdfColor, currentColorSpace, false);\n            return diff;\n        }\n        else {\n            var sBrush = brush;\n            diff = true;\n            streamWriter.setColorAndSpace(this.pdfColor, currentColorSpace, false);\n            return diff;\n        }\n    };\n    /**\n     * `Resets` the changes, which were made by the brush.\n     * @private\n     */\n    PdfSolidBrush.prototype.resetChanges = function (streamWriter) {\n        streamWriter.setColorAndSpace(new PdfColor(0, 0, 0), PdfColorSpace.Rgb, false);\n    };\n    return PdfSolidBrush;\n}(PdfBrush));\nexport { PdfSolidBrush };\n","/**\n * public Enum for `PdfFontStyle`.\n * @private\n */\nexport var PdfFontStyle;\n(function (PdfFontStyle) {\n    /**\n     * Specifies the type of `Regular`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Regular\"] = 0] = \"Regular\";\n    /**\n     * Specifies the type of `Bold`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Bold\"] = 1] = \"Bold\";\n    /**\n     * Specifies the type of `Italic`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Italic\"] = 2] = \"Italic\";\n    /**\n     * Specifies the type of `Underline`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Underline\"] = 4] = \"Underline\";\n    /**\n     * Specifies the type of `Strikeout`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Strikeout\"] = 8] = \"Strikeout\";\n})(PdfFontStyle || (PdfFontStyle = {}));\n/**\n * Specifies the font family from the standard font.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // create new standard font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * ```\n */\nexport var PdfFontFamily;\n(function (PdfFontFamily) {\n    /**\n     * Specifies the `Helvetica` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Helvetica\"] = 0] = \"Helvetica\";\n    /**\n     * Specifies the `Courier` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Courier\"] = 1] = \"Courier\";\n    /**\n     * Specifies the `TimesRoman` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"TimesRoman\"] = 2] = \"TimesRoman\";\n    /**\n     * Specifies the `Symbol` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Symbol\"] = 3] = \"Symbol\";\n    /**\n     * Specifies the `ZapfDingbats` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"ZapfDingbats\"] = 4] = \"ZapfDingbats\";\n})(PdfFontFamily || (PdfFontFamily = {}));\n/**\n * public Enum for `PdfFontType`.\n * @private\n */\nexport var PdfFontType;\n(function (PdfFontType) {\n    /**\n     * Specifies the type of `Standard`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"Standard\"] = 0] = \"Standard\";\n    /**\n     * Specifies the type of `TrueType`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"TrueType\"] = 1] = \"TrueType\";\n    /**\n     * Specifies the type of `TrueTypeEmbedded`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"TrueTypeEmbedded\"] = 2] = \"TrueTypeEmbedded\";\n})(PdfFontType || (PdfFontType = {}));\n/**\n * public Enum for `PdfWordWrapType`.\n * @private\n */\nexport var PdfWordWrapType;\n(function (PdfWordWrapType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Word`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"Word\"] = 1] = \"Word\";\n    /**\n     * Specifies the type of `WordOnly`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"WordOnly\"] = 2] = \"WordOnly\";\n    /**\n     * Specifies the type of `Character`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"Character\"] = 3] = \"Character\";\n})(PdfWordWrapType || (PdfWordWrapType = {}));\n/**\n * public Enum for `PdfSubSuperScript`.\n * @private\n */\nexport var PdfSubSuperScript;\n(function (PdfSubSuperScript) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `SuperScript`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"SuperScript\"] = 1] = \"SuperScript\";\n    /**\n     * Specifies the type of `SubScript`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"SubScript\"] = 2] = \"SubScript\";\n})(PdfSubSuperScript || (PdfSubSuperScript = {}));\n/**\n * public Enum for `FontEncoding`.\n * @private\n */\nexport var FontEncoding;\n(function (FontEncoding) {\n    /**\n     * Specifies the type of `Unknown`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Specifies the type of `StandardEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"StandardEncoding\"] = 1] = \"StandardEncoding\";\n    /**\n     * Specifies the type of `MacRomanEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"MacRomanEncoding\"] = 2] = \"MacRomanEncoding\";\n    /**\n     * Specifies the type of `MacExpertEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"MacExpertEncoding\"] = 3] = \"MacExpertEncoding\";\n    /**\n     * Specifies the type of `WinAnsiEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"WinAnsiEncoding\"] = 4] = \"WinAnsiEncoding\";\n    /**\n     * Specifies the type of `PdfDocEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"PdfDocEncoding\"] = 5] = \"PdfDocEncoding\";\n    /**\n     * Specifies the type of `IdentityH`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"IdentityH\"] = 6] = \"IdentityH\";\n})(FontEncoding || (FontEncoding = {}));\n/**\n * public Enum for `TtfCmapFormat`.\n * @private\n */\nexport var TtfCmapFormat;\n(function (TtfCmapFormat) {\n    /**\n     * This is the Apple standard character to glyph index mapping table.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Apple\"] = 0] = \"Apple\";\n    /**\n     * This is the Microsoft standard character to glyph index mapping table.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Microsoft\"] = 4] = \"Microsoft\";\n    /**\n     * Format 6: Trimmed table mapping.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Trimmed\"] = 6] = \"Trimmed\";\n})(TtfCmapFormat || (TtfCmapFormat = {}));\n/**\n * Enumerator that implements CMAP encodings.\n * @private\n */\nexport var TtfCmapEncoding;\n(function (TtfCmapEncoding) {\n    /**\n     * Unknown encoding.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * When building a symbol font for Windows.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Symbol\"] = 1] = \"Symbol\";\n    /**\n     * When building a Unicode font for Windows.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Unicode\"] = 2] = \"Unicode\";\n    /**\n     * For font that will be used on a Macintosh.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Macintosh\"] = 3] = \"Macintosh\";\n})(TtfCmapEncoding || (TtfCmapEncoding = {}));\n/**\n * Ttf platform ID.\n * @private\n */\nexport var TtfPlatformID;\n(function (TtfPlatformID) {\n    /**\n     * Apple platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"AppleUnicode\"] = 0] = \"AppleUnicode\";\n    /**\n     * Macintosh platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Macintosh\"] = 1] = \"Macintosh\";\n    /**\n     * Iso platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Iso\"] = 2] = \"Iso\";\n    /**\n     * Microsoft platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Microsoft\"] = 3] = \"Microsoft\";\n})(TtfPlatformID || (TtfPlatformID = {}));\n/**\n * Microsoft encoding ID.\n * @private\n */\nexport var TtfMicrosoftEncodingID;\n(function (TtfMicrosoftEncodingID) {\n    /**\n     * Undefined encoding.\n     * @private\n     */\n    TtfMicrosoftEncodingID[TtfMicrosoftEncodingID[\"Undefined\"] = 0] = \"Undefined\";\n    /**\n     * Unicode encoding.\n     * @private\n     */\n    TtfMicrosoftEncodingID[TtfMicrosoftEncodingID[\"Unicode\"] = 1] = \"Unicode\";\n})(TtfMicrosoftEncodingID || (TtfMicrosoftEncodingID = {}));\n/**\n * Macintosh encoding ID.\n * @private\n */\nexport var TtfMacintoshEncodingID;\n(function (TtfMacintoshEncodingID) {\n    /**\n     * Roman encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Roman\"] = 0] = \"Roman\";\n    /**\n     * Japanese encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Japanese\"] = 1] = \"Japanese\";\n    /**\n     * Chinese encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Chinese\"] = 2] = \"Chinese\";\n})(TtfMacintoshEncodingID || (TtfMacintoshEncodingID = {}));\n/**\n * Enumerator that implements font descriptor flags.\n * @private\n */\nexport var FontDescriptorFlags;\n(function (FontDescriptorFlags) {\n    /**\n     * All glyphs have the same width (as opposed to proportional or variable-pitch fonts, which have different widths).\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"FixedPitch\"] = 1] = \"FixedPitch\";\n    /**\n     * Glyphs have serifs, which are short strokes drawn at an angle on the top and\n     * bottom of glyph stems (as opposed to sans serif fonts, which do not).\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Serif\"] = 2] = \"Serif\";\n    /**\n     * Font contains glyphs outside the Adobe standard Latin character set. The\n     * flag and the nonsymbolic flag cannot both be set or both be clear.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Symbolic\"] = 4] = \"Symbolic\";\n    /**\n     * Glyphs resemble cursive handwriting.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Script\"] = 8] = \"Script\";\n    /**\n     * Font uses the Adobe standard Latin character set or a subset of it.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Nonsymbolic\"] = 32] = \"Nonsymbolic\";\n    /**\n     * Glyphs have dominant vertical strokes that are slanted.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Italic\"] = 64] = \"Italic\";\n    /**\n     * Bold font.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"ForceBold\"] = 262144] = \"ForceBold\";\n})(FontDescriptorFlags || (FontDescriptorFlags = {}));\n/**\n * true type font composite glyph flags.\n * @private\n */\nexport var TtfCompositeGlyphFlags;\n(function (TtfCompositeGlyphFlags) {\n    /**\n     * The Arg1And2AreWords.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"Arg1And2AreWords\"] = 1] = \"Arg1And2AreWords\";\n    /**\n     * The ArgsAreXyValues.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"ArgsAreXyValues\"] = 2] = \"ArgsAreXyValues\";\n    /**\n     * The RoundXyToGrid.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"RoundXyToGrid\"] = 4] = \"RoundXyToGrid\";\n    /**\n     * The WeHaveScale.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveScale\"] = 8] = \"WeHaveScale\";\n    /**\n     * The Reserved.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"Reserved\"] = 16] = \"Reserved\";\n    /**\n     * The MoreComponents.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"MoreComponents\"] = 32] = \"MoreComponents\";\n    /**\n     * The WeHaveAnXyScale.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveAnXyScale\"] = 64] = \"WeHaveAnXyScale\";\n    /**\n     * The WeHaveTwoByTwo\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveTwoByTwo\"] = 128] = \"WeHaveTwoByTwo\";\n    /**\n     * The WeHaveInstructions.\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveInstructions\"] = 256] = \"WeHaveInstructions\";\n    /**\n     * The UseMyMetrics.\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"UseMyMetrics\"] = 512] = \"UseMyMetrics\";\n})(TtfCompositeGlyphFlags || (TtfCompositeGlyphFlags = {}));\n","/**\n * PdfStringFormat.ts class for EJ2-PDF\n */\nimport { PdfVerticalAlignment } from './../../graphics/enum';\nimport { PdfSubSuperScript, PdfWordWrapType } from './../../graphics/fonts/enum';\n/**\n * `PdfStringFormat` class represents the text layout information on PDF.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a pages to the document\n * let page1 : PdfPage = document.pages.add();\n * // set font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // set brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * //\n * // set the format for string\n * let stringFormat : PdfStringFormat = new PdfStringFormat();\n * // set the text alignment\n * stringFormat.alignment = PdfTextAlignment.Center;\n * // set the vertical alignment\n * stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n * //\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStringFormat = /** @class */ (function () {\n    function PdfStringFormat(arg1, arg2) {\n        /**\n         * The `scaling factor` of the text being drawn.\n         * @private\n         */\n        this.scalingFactor = 100.0;\n        /**\n         * Indicates text `wrapping` type.\n         * @private\n         */\n        this.wordWrapType = PdfWordWrapType.Word;\n        this.internalLineLimit = true;\n        this.wordWrapType = PdfWordWrapType.Word;\n        if ((typeof arg1 !== 'undefined') && (typeof arg1 !== 'string')) {\n            this.textAlignment = arg1;\n        }\n        if (typeof arg2 !== 'undefined') {\n            this.verticalAlignment = arg2;\n        }\n    }\n    Object.defineProperty(PdfStringFormat.prototype, \"alignment\", {\n        //Properties\n        /**\n         * Gets or sets the `horizontal` text alignment\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set the text alignment\n         * stringFormat.alignment = PdfTextAlignment.Center;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.textAlignment;\n        },\n        set: function (value) {\n            this.textAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"textDirection\", {\n        get: function () {\n            return this.direction;\n        },\n        set: function (value) {\n            this.direction = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineAlignment\", {\n        /**\n         * Gets or sets the `vertical` text alignment.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set the vertical alignment\n         * stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.verticalAlignment === 'undefined' || this.verticalAlignment == null) {\n                return PdfVerticalAlignment.Top;\n            }\n            else {\n                return this.verticalAlignment;\n            }\n        },\n        set: function (value) {\n            this.verticalAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"rightToLeft\", {\n        /**\n         * Gets or sets the value that indicates text `direction` mode.\n         * @private\n         */\n        get: function () {\n            if (typeof this.isRightToLeft === 'undefined' || this.isRightToLeft == null) {\n                return false;\n            }\n            else {\n                return this.isRightToLeft;\n            }\n        },\n        set: function (value) {\n            this.isRightToLeft = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"characterSpacing\", {\n        /**\n         * Gets or sets value that indicates a `size` among the characters in the text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set character spacing\n         * stringFormat.characterSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.internalCharacterSpacing === 'undefined' || this.internalCharacterSpacing == null) {\n                return 0;\n            }\n            else {\n                return this.internalCharacterSpacing;\n            }\n        },\n        set: function (value) {\n            this.internalCharacterSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"wordSpacing\", {\n        /**\n         * Gets or sets value that indicates a `size` among the words in the text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set word spacing\n         * stringFormat.wordSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.internalWordSpacing === 'undefined' || this.internalWordSpacing == null) {\n                return 0;\n            }\n            else {\n                return this.internalWordSpacing;\n            }\n        },\n        set: function (value) {\n            this.internalWordSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineSpacing\", {\n        /**\n         * Gets or sets value that indicates the `vertical distance` between the baselines of adjacent lines of text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // set string\n         * let text : string = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n         * incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitati';\n         * // set rectangle bounds\n         * let rectangle : RectangleF = new RectangleF({x : 0, y : 0}, {width : 300, height : 100})\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set line spacing\n         * stringFormat.lineSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString(text, font, blackBrush, rectangle, stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.leading === 'undefined' || this.leading == null) {\n                return 0;\n            }\n            else {\n                return this.leading;\n            }\n        },\n        set: function (value) {\n            this.leading = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"clipPath\", {\n        /**\n         * Gets or sets a value indicating whether the text is `clipped` or not.\n         * @private\n         */\n        get: function () {\n            if (typeof this.clip === 'undefined' || this.clip == null) {\n                return false;\n            }\n            else {\n                return this.clip;\n            }\n        },\n        set: function (value) {\n            this.clip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"subSuperScript\", {\n        /**\n         * Gets or sets value indicating whether the text is in `subscript or superscript` mode.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfSubSuperScript === 'undefined' || this.pdfSubSuperScript == null) {\n                return PdfSubSuperScript.None;\n            }\n            else {\n                return this.pdfSubSuperScript;\n            }\n        },\n        set: function (value) {\n            this.pdfSubSuperScript = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"paragraphIndent\", {\n        /**\n         * Gets or sets the `indent` of the first line in the paragraph.\n         * @private\n         */\n        get: function () {\n            if (typeof this.internalParagraphIndent === 'undefined' || this.internalParagraphIndent == null) {\n                return 0;\n            }\n            else {\n                return this.internalParagraphIndent;\n            }\n        },\n        set: function (value) {\n            this.internalParagraphIndent = value;\n            this.firstLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineLimit\", {\n        /**\n         * Gets or sets a value indicating whether [`line limit`].\n         * @private\n         */\n        get: function () {\n            return this.internalLineLimit;\n        },\n        set: function (value) {\n            this.internalLineLimit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"measureTrailingSpaces\", {\n        /**\n         * Gets or sets a value indicating whether [`measure trailing spaces`].\n         * @private\n         */\n        get: function () {\n            if (typeof this.trailingSpaces === 'undefined' || this.trailingSpaces == null) {\n                return false;\n            }\n            else {\n                return this.trailingSpaces;\n            }\n        },\n        set: function (value) {\n            this.trailingSpaces = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"noClip\", {\n        /**\n         * Gets or sets a value indicating whether [`no clip`].\n         * @private\n         */\n        get: function () {\n            if (typeof this.isNoClip === 'undefined' || this.isNoClip == null) {\n                return false;\n            }\n            else {\n                return this.isNoClip;\n            }\n        },\n        set: function (value) {\n            this.isNoClip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"wordWrap\", {\n        /**\n         * Gets or sets value indicating type of the text `wrapping`.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.wrapType === 'undefined' || this.wrapType == null) {\n            //     return PdfWordWrapType.Word;\n            // } else {\n            return this.wordWrapType;\n            // }\n        },\n        set: function (value) {\n            this.wordWrapType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"horizontalScalingFactor\", {\n        /**\n         * Gets or sets the `scaling factor`.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.scalingFactor === 'undefined' || this.scalingFactor == null) {\n            //     return 100;\n            // } else {\n            return this.scalingFactor;\n            // }\n        },\n        set: function (value) {\n            if (value <= 0) {\n                throw new Error('ArgumentOutOfRangeException:The scaling factor cant be less of equal to zero, ScalingFactor');\n            }\n            this.scalingFactor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"firstLineIndent\", {\n        /**\n         * Gets or sets the `indent` of the first line in the text.\n         * @private\n         */\n        get: function () {\n            if (typeof this.initialLineIndent === 'undefined' || this.initialLineIndent == null) {\n                return 0;\n            }\n            else {\n                return this.initialLineIndent;\n            }\n        },\n        set: function (value) {\n            this.initialLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Clones` the object.\n     * @private\n     */\n    //IClonable implementation\n    PdfStringFormat.prototype.clone = function () {\n        var format = this;\n        return format;\n    };\n    return PdfStringFormat;\n}());\nexport { PdfStringFormat };\n","/**\n * StringTokenizer.ts class for EJ2-PDF\n * Utility class for working with strings.\n * @private\n */\nvar StringTokenizer = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringTokenizer` class.\n     * @private\n     */\n    function StringTokenizer(textValue) {\n        /**\n         * Current `position`.\n         * @private\n         */\n        this.currentPosition = 0;\n        if (textValue == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        this.text = textValue;\n    }\n    Object.defineProperty(StringTokenizer.prototype, \"length\", {\n        // Properties\n        /**\n         * Gets text `length`.\n         * @private\n         */\n        get: function () {\n            return this.text.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StringTokenizer.prototype, \"end\", {\n        get: function () {\n            return (this.currentPosition === this.text.length);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StringTokenizer.prototype, \"position\", {\n        /**\n         * Gets or sets the position.\n         * @private\n         */\n        get: function () {\n            return this.currentPosition;\n        },\n        set: function (value) {\n            this.currentPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StringTokenizer.getCharsCount = function (text, symbols) {\n        if (typeof symbols === 'string') {\n            if (text == null) {\n                throw new Error('ArgumentNullException:wholeText');\n            }\n            var numSymbols = 0;\n            var curIndex = 0;\n            for (;;) {\n                curIndex = text.indexOf(symbols, curIndex);\n                if (curIndex === -1) {\n                    break;\n                }\n                else {\n                    numSymbols++;\n                    curIndex++;\n                }\n            }\n            return numSymbols;\n        }\n        else {\n            if (text == null) {\n                throw new Error('ArgumentNullException:text');\n            }\n            if (symbols == null) {\n                throw new Error('ArgumentNullException:symbols');\n            }\n            var count = 0;\n            for (var i = 0, len = text.length; i < len; i++) {\n                var ch = text[i];\n                if (this.contains(symbols, ch)) {\n                    count++;\n                }\n            }\n            return count;\n        }\n    };\n    /**\n     * Reads line of the text.\n     * @private\n     */\n    StringTokenizer.prototype.readLine = function () {\n        var pos = this.currentPosition;\n        while (pos < this.length) {\n            var ch = this.text[pos];\n            switch (ch) {\n                case '\\r':\n                case '\\n': {\n                    var text = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos + 1;\n                    if (((ch === '\\r') && (this.currentPosition < this.length)) && (this.text[this.currentPosition] === '\\n')) {\n                        this.currentPosition++;\n                    }\n                    return text;\n                }\n            }\n            pos++;\n        }\n        // The remaining text.\n        if (pos > this.currentPosition) {\n            var text2 = this.text.substr(this.currentPosition, pos - this.currentPosition);\n            this.currentPosition = pos;\n            return text2;\n        }\n        return null;\n    };\n    /**\n     * Reads line of the text.\n     * @private\n     */\n    StringTokenizer.prototype.peekLine = function () {\n        var pos = this.currentPosition;\n        var line = this.readLine();\n        this.currentPosition = pos;\n        return line;\n    };\n    /**\n     * Reads a word from the text.\n     * @private\n     */\n    StringTokenizer.prototype.readWord = function () {\n        var pos = this.currentPosition;\n        while (pos < this.length) {\n            var ch = this.text[pos];\n            switch (ch) {\n                case '\\r':\n                case '\\n':\n                    var textValue = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos + 1;\n                    if (((ch === '\\r') && (this.currentPosition < this.length)) && (this.text[this.currentPosition] === '\\n')) {\n                        this.currentPosition++;\n                    }\n                    return textValue;\n                case ' ':\n                case '\\t': {\n                    if (pos === this.currentPosition) {\n                        pos++;\n                    }\n                    var text = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos;\n                    return text;\n                }\n            }\n            pos++;\n        }\n        // The remaining text.\n        if (pos > this.currentPosition) {\n            var text2 = this.text.substr(this.currentPosition, pos - this.currentPosition);\n            this.currentPosition = pos;\n            return text2;\n        }\n        return null;\n    };\n    /**\n     * Peeks a word from the text.\n     * @private\n     */\n    StringTokenizer.prototype.peekWord = function () {\n        var pos = this.currentPosition;\n        var word = this.readWord();\n        this.currentPosition = pos;\n        return word;\n    };\n    StringTokenizer.prototype.read = function (count) {\n        if (typeof count === 'undefined') {\n            var ch = '0';\n            if (!this.end) {\n                ch = this.text[this.currentPosition];\n                this.currentPosition++;\n            }\n            return ch;\n        }\n        else {\n            var num = 0;\n            var builder = '';\n            while (!this.end && num < count) {\n                var ch = this.read();\n                builder = builder + ch;\n                num++;\n            }\n            return builder;\n        }\n    };\n    /**\n     * Peeks char form the data.\n     * @private\n     */\n    StringTokenizer.prototype.peek = function () {\n        var ch = '0';\n        if (!this.end) {\n            ch = this.text[this.currentPosition];\n        }\n        return ch;\n    };\n    /**\n     * Closes a reader.\n     * @private\n     */\n    StringTokenizer.prototype.close = function () {\n        this.text = null;\n    };\n    StringTokenizer.prototype.readToEnd = function () {\n        var text;\n        if (this.currentPosition === 0) {\n            text = this.text;\n        }\n        else {\n            text = this.text.substr(this.currentPosition, this.length - this.currentPosition);\n        }\n        this.currentPosition = this.length;\n        return text;\n    };\n    //Implementation\n    /**\n     * Checks whether array contains a symbol.\n     * @private\n     */\n    StringTokenizer.contains = function (array, symbol) {\n        var contains = false;\n        for (var i = 0; i < array.length; i++) {\n            if (array[i] === symbol) {\n                contains = true;\n                break;\n            }\n        }\n        return contains;\n    };\n    // Constants\n    /**\n     * `Whitespace` symbol.\n     * @private\n     */\n    StringTokenizer.whiteSpace = ' ';\n    /**\n     * `tab` symbol.\n     * @private\n     */\n    StringTokenizer.tab = '\\t';\n    /**\n     * Array of `spaces`.\n     * @private\n     */\n    StringTokenizer.spaces = [StringTokenizer.whiteSpace, StringTokenizer.tab];\n    /**\n     * `Pattern` for WhiteSpace.\n     * @private\n     */\n    StringTokenizer.whiteSpacePattern = '^[ \\t]+$';\n    return StringTokenizer;\n}());\nexport { StringTokenizer };\n","import { SizeF, RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfWordWrapType } from './enum';\nimport { StringTokenizer } from './string-tokenizer';\n/**\n * Class `lay outing the text`.\n */\nvar PdfStringLayouter = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringLayouter` class.\n     * @private\n     */\n    function PdfStringLayouter() {\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isOverloadWithPosition = false;\n        //\n    }\n    PdfStringLayouter.prototype.layout = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        if (arg4 instanceof RectangleF) {\n            this.initialize(arg1, arg2, arg3, arg4, arg5);\n            this.isOverloadWithPosition = arg6;\n            this.clientSize = arg7;\n            var result = this.doLayout();\n            this.clear();\n            return result;\n        }\n        else {\n            this.initialize(arg1, arg2, arg3, arg4);\n            this.isOverloadWithPosition = arg5;\n            this.clientSize = arg6;\n            var result = this.doLayout();\n            this.clear();\n            return result;\n        }\n    };\n    PdfStringLayouter.prototype.initialize = function (text, font, format, rectSize, pageHeight) {\n        if (typeof pageHeight === 'number') {\n            if (text == null) {\n                throw new Error('ArgumentNullException:text');\n            }\n            if (font == null) {\n                throw new Error('ArgumentNullException:font');\n            }\n            this.text = text;\n            this.font = font;\n            this.format = format;\n            this.size = new SizeF(rectSize.width, rectSize.height);\n            this.rectangle = rectSize;\n            this.pageHeight = pageHeight;\n            this.reader = new StringTokenizer(text);\n        }\n        else {\n            this.initialize(text, font, format, new RectangleF(new PointF(0, 0), rectSize), 0);\n        }\n    };\n    /**\n     * `Clear` all resources.\n     * @private\n     */\n    PdfStringLayouter.prototype.clear = function () {\n        this.font = null;\n        this.format = null;\n        this.reader.close();\n        this.reader = null;\n        this.text = null;\n    };\n    /**\n     * `Layouts` the text.\n     * @private\n     */\n    PdfStringLayouter.prototype.doLayout = function () {\n        var result = new PdfStringLayoutResult();\n        var lineResult = new PdfStringLayoutResult();\n        var lines = [];\n        var line = this.reader.peekLine();\n        var lineIndent = this.getLineIndent(true);\n        while (line != null) {\n            lineResult = this.layoutLine(line, lineIndent);\n            if (lineResult !== null || typeof lineResult !== 'undefined') {\n                var numSymbolsInserted = 0;\n                /* tslint:disable */\n                var returnedValue = this.copyToResult(result, lineResult, lines, /*out*/ numSymbolsInserted);\n                /* tslint:enable */\n                var success = returnedValue.success;\n                numSymbolsInserted = returnedValue.numInserted;\n                if (!success) {\n                    this.reader.read(numSymbolsInserted);\n                    break;\n                }\n            }\n            // if (lineResult.textRemainder != null && lineResult.textRemainder.length > 0 ) {\n            //     break;\n            // }\n            this.reader.readLine();\n            line = this.reader.peekLine();\n            lineIndent = this.getLineIndent(false);\n        }\n        this.finalizeResult(result, lines);\n        return result;\n    };\n    /**\n     * Returns `line indent` for the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineIndent = function (firstLine) {\n        var lineIndent = 0;\n        if (this.format != null) {\n            lineIndent = (firstLine) ? this.format.firstLineIndent : this.format.paragraphIndent;\n            lineIndent = (this.size.width > 0) ? Math.min(this.size.width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    /**\n     * Calculates `height` of the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineHeight = function () {\n        var height = this.font.height;\n        if (this.format != null && this.format.lineSpacing !== 0) {\n            height = this.format.lineSpacing + this.font.height;\n        }\n        return height;\n    };\n    /**\n     * Calculates `width` of the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineWidth = function (line) {\n        var width = this.font.getLineWidth(line, this.format);\n        return width;\n    };\n    // tslint:disable\n    /**\n     * `Layouts` line.\n     * @private\n     */\n    PdfStringLayouter.prototype.layoutLine = function (line, lineIndent) {\n        var lineResult = new PdfStringLayoutResult();\n        lineResult.layoutLineHeight = this.getLineHeight();\n        var lines = [];\n        var maxWidth = this.size.width;\n        var lineWidth = this.getLineWidth(line) + lineIndent;\n        var lineType = LineType.FirstParagraphLine;\n        var readWord = true;\n        // line is in bounds.\n        if (maxWidth <= 0 || Math.round(lineWidth) <= Math.round(maxWidth)) {\n            this.addToLineResult(lineResult, lines, line, lineWidth, LineType.NewLineBreak | lineType);\n        }\n        else {\n            var builder = '';\n            var curLine = '';\n            lineWidth = lineIndent;\n            var curIndent = lineIndent;\n            var reader = new StringTokenizer(line);\n            var word = reader.peekWord();\n            var isSingleWord = false;\n            if (word.length !== reader.length) {\n                if (word === ' ') {\n                    curLine = curLine + word;\n                    builder = builder + word;\n                    reader.position += 1;\n                    word = reader.peekWord();\n                }\n            }\n            while (word != null) {\n                curLine = curLine + word;\n                var curLineWidth = this.getLineWidth(curLine.toString()) + curIndent /*)*/;\n                if (curLine.toString() === ' ') {\n                    curLine = '';\n                    curLineWidth = 0;\n                }\n                if (curLineWidth > maxWidth) {\n                    if (this.getWrapType() === PdfWordWrapType.None) {\n                        break;\n                    }\n                    if (curLine.length === word.length) {\n                        //  Character wrap is disabled or one symbol is greater than bounds.\n                        if (this.getWrapType() === PdfWordWrapType.WordOnly) {\n                            lineResult.textRemainder = line.substring(reader.position);\n                            break;\n                        }\n                        else if (curLine.length === 1) {\n                            builder = builder + word;\n                            break;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            word = reader.peek().toString();\n                            continue;\n                        }\n                    }\n                    else {\n                        if (this.getLineWidth(word.toString()) > maxWidth) {\n                            this.format.wordWrap = PdfWordWrapType.Character;\n                        }\n                        else {\n                            if (typeof this.format !== 'undefined' && this.format !== null) {\n                                this.format.wordWrap = PdfWordWrapType.Word;\n                            }\n                        }\n                        if (this.getWrapType() !== PdfWordWrapType.Character || !readWord) {\n                            var ln = builder.toString();\n                            // if (ln.indexOf(' ') === -1) {\n                            //     isSingleWord = true;\n                            //     this.addToLineResult(lineResult, lines, curLine, lineWidth, LineType.LayoutBreak | lineType);\n                            // } else {\n                            //     this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.LayoutBreak | lineType);\n                            // }                          \n                            if (ln !== ' ') {\n                                this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.LayoutBreak | lineType);\n                            }\n                            if (this.isOverloadWithPosition) {\n                                maxWidth = this.clientSize.width;\n                            }\n                            curLine = '';\n                            builder = '';\n                            lineWidth = 0;\n                            curIndent = 0;\n                            curLineWidth = 0;\n                            lineType = LineType.None;\n                            // if (isSingleWord) {\n                            //     reader.readWord();\n                            //     readWord = false;\n                            // }\n                            word = (readWord) ? word : reader.peekWord();\n                            //isSingleWord = false;\n                            readWord = true;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            curLine = curLine + builder.toString();\n                            word = reader.peek().toString();\n                        }\n                        continue;\n                    }\n                }\n                /*tslint:disable:max-func-body-length */\n                builder = builder + word;\n                lineWidth = curLineWidth;\n                if (readWord) {\n                    reader.readWord();\n                    word = reader.peekWord();\n                    //isSingleWord = false;\n                }\n                else {\n                    reader.read();\n                    word = reader.peek().toString();\n                }\n            }\n            if (builder.length > 0) {\n                var ln = builder.toString();\n                this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.NewLineBreak | LineType.LastParagraphLine);\n            }\n            reader.close();\n        }\n        lineResult.layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            lineResult.layoutLines.push(lines[index]);\n        }\n        lines = [];\n        return lineResult;\n    };\n    /**\n     * `Adds` line to line result.\n     * @private\n     */\n    PdfStringLayouter.prototype.addToLineResult = function (lineResult, lines, line, lineWidth, breakType) {\n        var info = new LineInfo();\n        info.text = line;\n        info.width = lineWidth;\n        info.lineType = breakType;\n        lines.push(info);\n        var size = lineResult.actualSize;\n        size.height += this.getLineHeight();\n        size.width = Math.max(size.width, lineWidth);\n        lineResult.size = size;\n    };\n    /**\n     * `Copies` layout result from line result to entire result. Checks whether we can proceed lay outing or not.\n     * @private\n     */\n    PdfStringLayouter.prototype.copyToResult = function (result, lineResult, lines, \n    /*out*/ numInserted) {\n        var success = true;\n        var allowPartialLines = (this.format != null && !this.format.lineLimit);\n        var height = result.actualSize.height;\n        var maxHeight = this.size.height;\n        if ((this.pageHeight > 0) && (maxHeight + this.rectangle.y > this.pageHeight)) {\n            maxHeight = this.rectangle.y - this.pageHeight;\n            maxHeight = Math.max(maxHeight, -maxHeight);\n        }\n        numInserted = 0;\n        if (lineResult.lines != null) {\n            for (var i = 0, len = lineResult.lines.length; i < len; i++) {\n                var expHeight = height + lineResult.lineHeight;\n                if (expHeight <= maxHeight || maxHeight <= 0 || allowPartialLines) {\n                    var info = lineResult.lines[i];\n                    numInserted += info.text.length;\n                    info = this.trimLine(info, (lines.length === 0));\n                    lines.push(info);\n                    // Update width.\n                    var size = result.actualSize;\n                    size.width = Math.max(size.width, info.width);\n                    result.size = size;\n                    // The part of the line fits only and it's allowed to use partial lines.\n                    // if (expHeight >= maxHeight && maxHeight > 0 && allowPartialLines)\n                    // {\n                    //     let shouldClip : boolean = (this.format == null || !this.format.noClip);\n                    //     if (shouldClip)\n                    //     {\n                    //         let exceededHeight : number = expHeight - maxHeight;\n                    //         let fitHeight : number  = /*Utils.Round(*/ lineResult.lineHeight - exceededHeight /*)*/;\n                    //         height = /*Utils.Round(*/ height + fitHeight /*)*/;\n                    //     }\n                    //     else\n                    //     {\n                    //         height = expHeight;\n                    //     }\n                    //     success = false;\n                    //     break;\n                    // } else {\n                    height = expHeight;\n                    // }\n                }\n                else {\n                    success = false;\n                    break;\n                }\n            }\n        }\n        if (height != result.size.height) {\n            var size1 = result.actualSize;\n            size1.height = height;\n            result.size = size1;\n        }\n        return { success: success, numInserted: numInserted };\n    };\n    /**\n     * `Finalizes` final result.\n     * @private\n     */\n    PdfStringLayouter.prototype.finalizeResult = function (result, lines) {\n        result.layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            result.layoutLines.push(lines[index]);\n        }\n        result.layoutLineHeight = this.getLineHeight();\n        if (!this.reader.end) {\n            result.textRemainder = this.reader.readToEnd();\n        }\n        lines = [];\n    };\n    /**\n     * `Trims` whitespaces at the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.trimLine = function (info, firstLine) {\n        var line = info.text;\n        var lineWidth = info.width;\n        // Trim start whitespaces if the line is not a start of the paragraph only.\n        var trimStartSpaces = ((info.lineType & LineType.FirstParagraphLine) === 0);\n        var start = (this.format == null || !this.format.rightToLeft);\n        var spaces = StringTokenizer.spaces;\n        line = (start) ? line.trim() : line.trim();\n        // Recalculate line width.\n        if (line.length !== info.text.length) {\n            lineWidth = this.getLineWidth(line);\n            if ((info.lineType & LineType.FirstParagraphLine) > 0) {\n                lineWidth += this.getLineIndent(firstLine);\n            }\n        }\n        info.text = line;\n        info.width = lineWidth;\n        return info;\n    };\n    /**\n     * Returns `wrap` type.\n     * @private\n     */\n    PdfStringLayouter.prototype.getWrapType = function () {\n        var wrapType = (this.format != null) ? this.format.wordWrap : PdfWordWrapType.Word;\n        return wrapType;\n    };\n    return PdfStringLayouter;\n}());\nexport { PdfStringLayouter };\n//Internal declaration\nvar PdfStringLayoutResult = /** @class */ (function () {\n    function PdfStringLayoutResult() {\n    }\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"remainder\", {\n        // Properties\n        /**\n         * Gets the `text` which is not lay outed.\n         * @private\n         */\n        get: function () {\n            return this.textRemainder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"actualSize\", {\n        /**\n         * Gets the actual layout text `bounds`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.size === 'undefined') {\n                this.size = new SizeF(0, 0);\n            }\n            return this.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lines\", {\n        /**\n         * Gets layout `lines` information.\n         * @private\n         */\n        get: function () {\n            return this.layoutLines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lineHeight\", {\n        /**\n         * Gets the `height` of the line.\n         * @private\n         */\n        get: function () {\n            return this.layoutLineHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"empty\", {\n        /**\n         * Gets value that indicates whether any layout text [`empty`].\n         * @private\n         */\n        get: function () {\n            return (this.layoutLines == null || this.layoutLines.length === 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lineCount\", {\n        /**\n         * Gets `number of` the layout lines.\n         * @private\n         */\n        get: function () {\n            var count = (!this.empty) ? this.layoutLines.length : 0;\n            return count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfStringLayoutResult;\n}());\nexport { PdfStringLayoutResult };\nvar LineInfo = /** @class */ (function () {\n    function LineInfo() {\n    }\n    Object.defineProperty(LineInfo.prototype, \"lineType\", {\n        //Properties\n        /**\n         * Gets the `type` of the line text.\n         * @private\n         */\n        get: function () {\n            return this.type;\n        },\n        set: function (value) {\n            this.type = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineInfo.prototype, \"text\", {\n        /**\n         * Gets the line `text`.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineInfo.prototype, \"width\", {\n        /**\n         * Gets `width` of the line text.\n         * @private\n         */\n        get: function () {\n            return this.lineWidth;\n        },\n        set: function (value) {\n            this.lineWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return LineInfo;\n}());\nexport { LineInfo };\n/**\n* Break type of the `line`.\n* @private\n*/\nexport var LineType;\n(function (LineType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    LineType[LineType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `NewLineBreak`.\n     * @private\n     */\n    LineType[LineType[\"NewLineBreak\"] = 1] = \"NewLineBreak\";\n    /**\n     * Specifies the type of `LayoutBreak`.\n     * @private\n     */\n    LineType[LineType[\"LayoutBreak\"] = 2] = \"LayoutBreak\";\n    /**\n     * Specifies the type of `FirstParagraphLine`.\n     * @private\n     */\n    LineType[LineType[\"FirstParagraphLine\"] = 4] = \"FirstParagraphLine\";\n    /**\n     * Specifies the type of `LastParagraphLine`.\n     * @private\n     */\n    LineType[LineType[\"LastParagraphLine\"] = 8] = \"LastParagraphLine\";\n})(LineType || (LineType = {}));\n","/**\n * PdfFont.ts class for EJ2-PDF\n */\nimport { PdfFontStyle } from './enum';\nimport { SizeF } from './../../drawing/pdf-drawing';\nimport { PdfStringFormat } from './pdf-string-format';\nimport { PdfStringLayouter } from './string-layouter';\nimport { StringTokenizer } from './string-tokenizer';\n/**\n * Defines a particular format for text, including font face, size, and style attributes.\n * @private\n */\nvar PdfFont = /** @class */ (function () {\n    function PdfFont(size, style) {\n        /**\n         * `Style` of the font.\n         * @private\n         */\n        this.fontStyle = PdfFontStyle.Regular;\n        if (typeof size === 'number' && typeof style === 'undefined') {\n            this.fontSize = size;\n        }\n        else {\n            this.fontSize = size;\n            this.setStyle(style);\n        }\n    }\n    Object.defineProperty(PdfFont.prototype, \"name\", {\n        //Properties\n        /**\n         * Gets the face name of this Font.\n         * @private\n         */\n        get: function () {\n            return this.metrics.name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"size\", {\n        /**\n         * Gets the size of this font.\n         * @private\n         */\n        get: function () {\n            return this.fontSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"height\", {\n        /**\n         * Gets the height of the font in points.\n         * @private\n         */\n        get: function () {\n            return this.metrics.getHeight(null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"style\", {\n        /**\n         * Gets the style information for this font.\n         * @private\n         */\n        get: function () {\n            return this.fontStyle;\n        },\n        set: function (value) {\n            this.fontStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"bold\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `bold`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Bold) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"italic\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` has the `italic` style applied.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Italic) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"strikeout\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `strikeout`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Strikeout) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"underline\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `underline`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Underline) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"metrics\", {\n        /**\n         * Gets or sets the `metrics` for this font.\n         * @private\n         */\n        get: function () {\n            return this.fontMetrics;\n        },\n        set: function (value) {\n            this.fontMetrics = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"element\", {\n        // /**\n        //  * Gets and Sets the font `internals`.\n        //  * @private\n        //  */\n        // public get fontInternal() : IPdfPrimitive {\n        //     return this.pdfFontInternals;\n        // }\n        // public set fontInternal(value : IPdfPrimitive) {\n        //     this.pdfFontInternals = value;\n        // }\n        //IPdfWrapper Members\n        /**\n         * Gets the `element` representing the font.\n         * @private\n         */\n        get: function () {\n            return this.pdfFontInternals;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFont.prototype.measureString = function (text, arg2, arg3, arg4, arg5) {\n        if (typeof text === 'string' && typeof arg2 === 'undefined') {\n            return this.measureString(text, null);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) && typeof arg3 === 'undefined' && typeof arg4 === 'undefined') {\n            var temparg2 = arg2;\n            var charactersFitted = 0;\n            var linesFilled = 0;\n            return this.measureString(text, temparg2, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) && typeof arg3 === 'number' && typeof arg4 === 'number') {\n            var temparg2 = arg2;\n            return this.measureString(text, 0, temparg2, arg3, arg4);\n            // } else if (typeof text === 'string' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            //     return this.measureString(text, arg2, null);\n            // } else if (typeof text === 'string' && typeof arg2 === 'number' && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'undefined' && typeof arg5 === 'undefined') {\n            //     let temparg3 : PdfStringFormat = arg3 as PdfStringFormat;\n            //     let charactersFitted : number = 0;\n            //     let linesFilled : number = 0;\n            //     return this.measureString(text, arg2, temparg3, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && typeof arg2 === 'number' && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'number' && typeof arg5 === 'number') {\n            var layoutArea = new SizeF(arg2, 0);\n            var temparg3 = arg3;\n            return this.measureString(text, layoutArea, temparg3, arg4, arg5);\n            // } else if (typeof text === 'string' && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n            //     return this.measureString(text, arg2, null);\n            // } else if (typeof text === 'string' && arg2 instanceof SizeF && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'undefined' && typeof arg5 === 'undefined') {\n            //     let temparg3 : PdfStringFormat = arg3 as PdfStringFormat;\n            //     let charactersFitted : number = 0;\n            //     let linesFilled : number = 0;\n            //     return this.measureString(text, arg2, temparg3, charactersFitted, linesFilled);\n        }\n        else {\n            if (text == null) {\n                throw Error(\"ArgumentNullException(\\\"text\\\")\");\n            }\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var layouter = new PdfStringLayouter();\n            var result = layouter.layout(text, this, temparg3, temparg2, false, new SizeF(0, 0));\n            // arg4 = (result.Remainder == null) ? text.length : text.length - result.Remainder.length;\n            arg4 = text.length;\n            arg5 = (result.empty) ? 0 : result.lines.length;\n            return result.actualSize;\n        }\n    };\n    /* tslint:enable */\n    //IPdfCache Members\n    /**\n     * `Checks` whether the object is similar to another object.\n     * @private\n     */\n    PdfFont.prototype.equalsTo = function (obj) {\n        var result = this.equalsToFont(obj);\n        return result;\n    };\n    /**\n     * Returns `internals` of the object.\n     * @private\n     */\n    PdfFont.prototype.getInternals = function () {\n        return this.pdfFontInternals;\n    };\n    /**\n     * Sets `internals` to the object.\n     * @private\n     */\n    PdfFont.prototype.setInternals = function (internals) {\n        if (internals == null) {\n            throw new Error('ArgumentNullException:internals');\n        }\n        this.pdfFontInternals = internals;\n    };\n    /**\n     * Sets the `style` of the font.\n     * @private\n     */\n    PdfFont.prototype.setStyle = function (style) {\n        this.fontStyle = style;\n    };\n    /**\n     * Applies `settings` to the default line width.\n     * @private\n     */\n    PdfFont.prototype.applyFormatSettings = function (line, format, width) {\n        // if (line == null) {\n        //     throw new Error(`ArgumentNullException:line`);\n        // }\n        var realWidth = width;\n        if (format != null && width > 0) {\n            // Space among characters is not default.\n            if (format.characterSpacing !== 0) {\n                realWidth += (line.length - 1) * format.characterSpacing;\n            }\n            // Space among words is not default.\n            if (format.wordSpacing !== 0) {\n                var symbols = StringTokenizer.spaces;\n                var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n                realWidth += whitespacesCount * format.wordSpacing;\n            }\n        }\n        return realWidth;\n    };\n    //Constants\n    /**\n     * `Multiplier` of the symbol width.\n     * @default 0.001\n     * @private\n     */\n    PdfFont.charSizeMultiplier = 0.001;\n    /**\n     * `Synchronization` object.\n     * @private\n     */\n    PdfFont.syncObject = new Object();\n    return PdfFont;\n}());\nexport { PdfFont };\n","/**\n * Helper class for chunk buffer.\n * @private\n */\nvar _PdfChunkBuffer = /** @class */ (function () {\n    /**\n     * Initialize an instance of `_PdfChunkBuffer` class.\n     * @private\n     */\n    function _PdfChunkBuffer(chunkSize) {\n        if (chunkSize === void 0) { chunkSize = 1048576; }\n        /**\n         * Specifies the `chunks`.\n         * @private\n         */\n        this.chunks = [];\n        /**\n         * Specifies the `offset`.\n         * @private\n         */\n        this.offset = 0;\n        /**\n         * Specifies the `committed`.\n         * @private\n         */\n        this.committed = 0;\n        this.chunkSize = chunkSize;\n        this.current = new Uint8Array(this.chunkSize);\n        this.chunks.push(this.current);\n    }\n    Object.defineProperty(_PdfChunkBuffer.prototype, \"length\", {\n        /**\n         * Gets the `length`.\n         * @private\n         */\n        get: function () {\n            return this.committed + this.offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Grows the buffer by allocating a new chunk.\n     * @private\n     */\n    _PdfChunkBuffer.prototype.grow = function () {\n        this.committed += this.offset;\n        this.current = new Uint8Array(this.chunkSize);\n        this.chunks.push(this.current);\n        this.offset = 0;\n    };\n    /**\n     * Writes ASCII string as bytes (each charCodeAt masked to 0..255).\n     * @private\n     */\n    _PdfChunkBuffer.prototype.writeAscii = function (str) {\n        var idx = 0;\n        while (idx < str.length) {\n            if (this.offset >= this.current.byteLength) {\n                this.grow();\n            }\n            var space = this.current.byteLength - this.offset;\n            var toWrite = Math.min(space, str.length - idx);\n            for (var i = 0; i < toWrite; i++) {\n                this.current[this.offset + i] = str.charCodeAt(idx + i) & 0xFF;\n            }\n            this.offset += toWrite;\n            idx += toWrite;\n        }\n    };\n    /**\n     * Converts to `Uint8Array`.\n     * @private\n     */\n    _PdfChunkBuffer.prototype.toUint8Array = function () {\n        var total = this.length;\n        var out = new Uint8Array(total);\n        var pos = 0;\n        var lastIdx = this.chunks.length - 1;\n        for (var i = 0; i <= lastIdx; i++) {\n            var chunk = this.chunks[i];\n            if (i === lastIdx) {\n                out.set(chunk.subarray(0, this.offset), pos);\n                pos += this.offset;\n            }\n            else {\n                out.set(chunk, pos);\n                pos += chunk.byteLength;\n            }\n        }\n        return out;\n    };\n    /**\n     * Destroys the array buffer.\n     * @private\n     */\n    _PdfChunkBuffer.prototype.destroy = function () {\n        this.chunks = [];\n        this.current = undefined;\n        this.offset = 0;\n        this.committed = 0;\n    };\n    return _PdfChunkBuffer;\n}());\nexport { _PdfChunkBuffer };\n/**\n * Used to `write a string` into output file.\n * @private\n */\nvar PdfWriter = /** @class */ (function () {\n    function PdfWriter(stream) {\n        /**\n         * Specifies the `byteCountForStreamWriter`.\n         * @private\n         */\n        this.byteCountForStreamWriter = 0;\n        this.streamWriter = stream;\n    }\n    Object.defineProperty(PdfWriter.prototype, \"document\", {\n        /**\n         * Gets and Sets the `document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"position\", {\n        /**\n         * Gets the `position`.\n         * @private\n         */\n        get: function () {\n            if (this.streamWriter instanceof PdfWriterHelper) {\n                return this.streamWriter.buffer.size;\n            }\n            // For StreamWriter, we keep an internal count based on written characters\n            return this.byteCountForStreamWriter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"length\", {\n        /**\n         * Gets  the `length` of the stream'.\n         * @private\n         */\n        get: function () {\n            return this.position;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"stream\", {\n        /**\n         * Gets the `stream`.\n         * @private\n         */\n        get: function () {\n            return this.streamWriter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Writes the specified data`.\n     * @private\n     */\n    PdfWriter.prototype.write = function (data) {\n        if (typeof data === 'number') {\n            data = String.fromCharCode(data);\n        }\n        if (this.streamWriter instanceof PdfWriterHelper) {\n            this.streamWriter.write(data);\n        }\n        else {\n            this.streamWriter.write(data);\n            this.byteCountForStreamWriter += data.length;\n        }\n    };\n    return PdfWriter;\n}());\nexport { PdfWriter };\n/**\n * Helper class for PDF writer.\n * @private\n */\nvar PdfWriterHelper = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfWriterHelper` class.\n     * @private\n     */\n    function PdfWriterHelper(chunkSize) {\n        if (chunkSize === void 0) { chunkSize = 1048576; }\n        this.buffer = new PdfArrayBuffer(chunkSize);\n    }\n    /**\n     * Writes the specified data.\n     * @private\n     */\n    PdfWriterHelper.prototype.write = function (data) {\n        this.buffer.write(data);\n    };\n    /**\n     * Destroy the array buffer.\n     * @private\n     */\n    PdfWriterHelper.prototype.destroy = function () {\n        if (this.buffer) {\n            this.buffer.destroy();\n            this.buffer = undefined;\n        }\n    };\n    return PdfWriterHelper;\n}());\nexport { PdfWriterHelper };\n/**\n * Helper class for PDF writer.\n * @private\n */\nvar PdfArrayBuffer = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfArrayBuffer` class.\n     * @private\n     */\n    function PdfArrayBuffer(chunkSize) {\n        if (chunkSize === void 0) { chunkSize = 1048576; }\n        this.buf = new _PdfChunkBuffer(chunkSize);\n    }\n    Object.defineProperty(PdfArrayBuffer.prototype, \"size\", {\n        /**\n         * Gets the `size`.\n         * @private\n         */\n        get: function () {\n            return this.buf.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Writes the specified data.\n     * @private\n     */\n    PdfArrayBuffer.prototype.write = function (value) {\n        this.buf.writeAscii(value);\n    };\n    /**\n     * Converts to `Uint8Array`.\n     * @private\n     */\n    PdfArrayBuffer.prototype.toUint8Array = function () {\n        return this.buf.toUint8Array();\n    };\n    /**\n     * Destroys the buffer.\n     * @private\n     */\n    PdfArrayBuffer.prototype.destroy = function () {\n        if (this.buf) {\n            this.buf.destroy();\n            this.buf = undefined;\n        }\n    };\n    return PdfArrayBuffer;\n}());\nexport { PdfArrayBuffer };\n","/**\n * public Enum for `CompositeFontType`.\n * @private\n */\nexport var ObjectStatus;\n(function (ObjectStatus) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    ObjectStatus[ObjectStatus[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Registered`.\n     * @private\n     */\n    ObjectStatus[ObjectStatus[\"Registered\"] = 1] = \"Registered\";\n})(ObjectStatus || (ObjectStatus = {}));\n","/**\n * PdfMainObjectCollection.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../collections/dictionary';\nimport { ObjectStatus } from './enum';\n/**\n * The collection of all `objects` within a PDF document.\n * @private\n */\nvar PdfMainObjectCollection = /** @class */ (function () {\n    function PdfMainObjectCollection() {\n        //Fields\n        /**\n         * The collection of the `indirect objects`.\n         * @default []\n         * @private\n         */\n        this.objectCollections = [];\n        /**\n         * The collection of the `Indirect objects`.\n         * @default new Dictionary<number, ObjectInfo>()\n         * @private\n         */\n        this.mainObjectCollection = new Dictionary();\n        /**\n         * The collection of `primitive objects`.\n         * @private\n         */\n        this.primitiveObjectCollection = new Dictionary();\n    }\n    Object.defineProperty(PdfMainObjectCollection.prototype, \"count\", {\n        //Properties\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.objectCollections.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the value of `ObjectInfo` from object collection.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.items = function (index) {\n        return this.objectCollections[index];\n    };\n    Object.defineProperty(PdfMainObjectCollection.prototype, \"outIsNew\", {\n        //Methods\n        /**\n         * Specifies the value of `IsNew`.\n         * @private\n         */\n        get: function () {\n            return this.isNew;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Adds` the specified element.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.add = function (element) {\n        var objInfo = new ObjectInfo(element);\n        this.objectCollections.push(objInfo);\n        if (!this.primitiveObjectCollection.containsKey(element)) {\n            this.primitiveObjectCollection.setValue(element, this.objectCollections.length - 1);\n        }\n        element.position = this.index = this.objectCollections.length - 1;\n        element.status = ObjectStatus.Registered;\n    };\n    /**\n     * `Looks` through the collection for the object specified.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.lookFor = function (obj) {\n        var index = -1;\n        if (obj.position !== -1) {\n            return obj.position;\n        }\n        if (this.primitiveObjectCollection.containsKey(obj) && this.count === this.primitiveObjectCollection.size()) {\n            index = this.primitiveObjectCollection.getValue(obj);\n        }\n        else {\n            for (var i = this.count - 1; i >= 0; i--) {\n                var oi = this.objectCollections[i];\n                if (oi.object === obj) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    /**\n     * Gets the `reference of the object`.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.getReference = function (index, isNew) {\n        this.index = this.lookFor(index);\n        var reference;\n        this.isNew = false;\n        var oi = this.objectCollections[this.index];\n        reference = oi.reference;\n        var obj = { reference: reference, wasNew: isNew };\n        return obj;\n    };\n    /**\n     * Tries to set the `reference to the object`.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.trySetReference = function (obj, reference, found) {\n        var result = true;\n        found = true;\n        this.index = this.lookFor(obj);\n        var oi = this.objectCollections[this.index];\n        oi.setReference(reference);\n        return result;\n    };\n    PdfMainObjectCollection.prototype.destroy = function () {\n        for (var _i = 0, _a = this.objectCollections; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            if (obj !== undefined) {\n                obj.pdfObject.position = -1;\n                obj.pdfObject.isSaving = undefined;\n                obj.pdfObject.objectCollectionIndex = undefined;\n                obj.pdfObject.position = undefined;\n            }\n        }\n        this.objectCollections = [];\n        this.mainObjectCollection = new Dictionary();\n        this.primitiveObjectCollection = new Dictionary();\n    };\n    return PdfMainObjectCollection;\n}());\nexport { PdfMainObjectCollection };\nvar ObjectInfo = /** @class */ (function () {\n    function ObjectInfo(obj, reference) {\n        this.pdfObject = obj;\n        this.pdfReference = reference;\n    }\n    Object.defineProperty(ObjectInfo.prototype, \"object\", {\n        //Properties\n        /**\n         * Gets the `object`.\n         * @private\n         */\n        get: function () {\n            return this.pdfObject;\n        },\n        set: function (value) {\n            this.pdfObject = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ObjectInfo.prototype, \"reference\", {\n        /**\n         * Gets the `reference`.\n         * @private\n         */\n        get: function () {\n            return this.pdfReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the `reference`.\n     * @private\n     */\n    ObjectInfo.prototype.setReference = function (reference) {\n        this.pdfReference = reference;\n    };\n    return ObjectInfo;\n}());\nexport { ObjectInfo };\n","import { Encoding, StreamWriter } from '@syncfusion/ej2-file-utils';\nimport { PdfDocument } from './pdf-document';\n/**\n * `PdfDocumentBase` class represent common properties of PdfDocument classes.\n * @private\n */\nvar PdfDocumentBase = /** @class */ (function () {\n    function PdfDocumentBase(document) {\n        /**\n         * If the stream is copied,  then it specifies true.\n         * @private\n         */\n        this.isStreamCopied = false;\n        if (document instanceof PdfDocument) {\n            this.document = document;\n        }\n    }\n    Object.defineProperty(PdfDocumentBase.prototype, \"pdfObjects\", {\n        //Prpperties\n        /**\n         * Gets the `PDF objects` collection, which stores all objects and references to it..\n         * @private\n         */\n        get: function () {\n            return this.objects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"crossTable\", {\n        /**\n         * Gets the `cross-reference` table.\n         * @private\n         */\n        get: function () {\n            return this.pdfCrossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"currentSavingObj\", {\n        /**\n         * Gets or sets the current saving `object number`.\n         * @private\n         */\n        get: function () {\n            return this.currentSavingObject;\n        },\n        set: function (value) {\n            this.currentSavingObject = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"catalog\", {\n        /**\n         * Gets the PDF document `catalog`.\n         * @private\n         */\n        get: function () {\n            return this.pdfCatalog;\n        },\n        set: function (value) {\n            this.pdfCatalog = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"viewerPreferences\", {\n        /**\n         * Gets viewer preferences for presenting the PDF document in a viewer.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets viewer preferences\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfCatalog.viewerPreferences;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public methods\n    /**\n     * Sets the `main object collection`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setMainObjectCollection = function (mainObjectCollection) {\n        this.objects = mainObjectCollection;\n    };\n    /**\n     * Sets the `cross table`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setCrossTable = function (cTable) {\n        this.pdfCrossTable = cTable;\n    };\n    /**\n     * Sets the `catalog`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setCatalog = function (catalog) {\n        this.pdfCatalog = catalog;\n    };\n    PdfDocumentBase.prototype.save = function (filename) {\n        var _this = this;\n        var encoding = new Encoding(true);\n        var SW = new StreamWriter(encoding);\n        if (typeof filename === 'undefined') {\n            var encoding_1 = new Encoding(true);\n            var SW_1 = new StreamWriter(encoding_1);\n            return new Promise(function (resolve, reject) {\n                /* tslint:disable-next-line:no-any */\n                var obj = {};\n                obj.blobData = new Blob([_this.document.docSave(SW_1, true)], { type: 'application/pdf' });\n                resolve(obj);\n            });\n        }\n        else {\n            this.document.docSave(SW, filename, true);\n        }\n    };\n    /**\n     * `Clone` of parent object - PdfDocument.\n     * @private\n     */\n    PdfDocumentBase.prototype.clone = function () {\n        return this.document;\n    };\n    /**\n     * Save PDF document.\n     * @private\n     */\n    PdfDocumentBase.prototype._save = function () {\n        return this.document._docSave();\n    };\n    return PdfDocumentBase;\n}());\nexport { PdfDocumentBase };\n","/**\n * public Enum for `ObjectType`.\n * @private\n */\nexport var ObjectType;\n(function (ObjectType) {\n    /**\n     * Specifies the type of `Free`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Free\"] = 0] = \"Free\";\n    /**\n     * Specifies the type of `Normal`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Normal\"] = 1] = \"Normal\";\n    /**\n     * Specifies the type of `Packed`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Packed\"] = 2] = \"Packed\";\n})(ObjectType || (ObjectType = {}));\n","/**\n * `PdfBoolean` class is used to perform boolean related primitive operations.\n * @private\n */\nvar PdfBoolean = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfBoolean` class.\n     * @private\n     */\n    function PdfBoolean(value) {\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.currentPosition = -1;\n        this.value = value;\n    }\n    Object.defineProperty(PdfBoolean.prototype, \"status\", {\n        //Properties\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.objectStatus;\n        },\n        set: function (value) {\n            this.objectStatus = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.saving;\n        },\n        set: function (value) {\n            this.saving = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index;\n        },\n        set: function (value) {\n            this.index = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.currentPosition;\n        },\n        set: function (value) {\n            this.currentPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var rValue = null;\n            return rValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfBoolean.prototype.save = function (writer) {\n        writer.write(this.boolToStr(this.value));\n    };\n    /**\n     * Creates a `copy of PdfBoolean`.\n     * @private\n     */\n    PdfBoolean.prototype.clone = function (crossTable) {\n        var newNumber = new PdfBoolean(this.value);\n        return newNumber;\n    };\n    // Implementation\n    /**\n     * Converts `boolean to string` - 0/1 'true'/'false'.\n     * @private\n     */\n    PdfBoolean.prototype.boolToStr = function (value) {\n        return value ? 'true' : 'false';\n    };\n    return PdfBoolean;\n}());\nexport { PdfBoolean };\n","import { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfBoolean } from './../primitives/pdf-boolean';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * Defines the way the document is to be presented on the screen or in print.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets viewer preferences\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfViewerPreferences = /** @class */ (function () {\n    /**\n     * Initialize a new instance of `PdfViewerPreferences` class.\n     *\n     * @private\n     * ```\n    */\n    function PdfViewerPreferences(catalog) {\n        this._dictionaryProperties = new DictionaryProperties();\n        this._centerWindow = false;\n        this._fitWindow = false;\n        this._displayTitle = false;\n        this._splitWindow = false;\n        this._hideMenuBar = false;\n        this._hideToolBar = false;\n        this._hideWindowUI = false;\n        this._pageMode = PdfPageMode.UseNone;\n        this._pageLayout = PdfPageLayout.SinglePage;\n        this._dictionary = new PdfDictionary();\n        this._duplex = DuplexMode.None;\n        this._catalog = catalog;\n    }\n    Object.defineProperty(PdfViewerPreferences.prototype, \"centerWindow\", {\n        /**\n         * A flag specifying whether to position the document’s window in the center of the screen.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the center window\n         * let centerWindow : boolean = viewerPreferences.centerWindow;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._centerWindow;\n        },\n        /**\n         * A flag specifying whether to position the document’s window in the center of the screen.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the center window\n         * viewerPreferences.centerWindow = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._centerWindow = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.centerWindow, new PdfBoolean(this._centerWindow));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"displayTitle\", {\n        /**\n         * A flag specifying whether the window’s title bar should display the document title taken\n         * from the Title entry of the document information dictionary. If false, the title bar\n         * should instead display the name of the PDF file containing the document.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the display title\n         * let displayTitle : boolean = viewerPreferences.displayTitle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._displayTitle;\n        },\n        /**\n         * A flag specifying whether the window’s title bar should display the document title taken\n         * from the Title entry of the document information dictionary. If false, the title bar\n         * should instead display the name of the PDF file containing the document.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the display title\n         * viewerPreferences.displayTitle = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._displayTitle = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.displayTitle, new PdfBoolean(this._displayTitle));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"fitWindow\", {\n        /**\n         * A flag specifying whether to resize the document’s window to fit the size of the first\n         * displayed page.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the fit window\n         * let fitWindow : boolean = viewerPreferences.fitWindow;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fitWindow;\n        },\n        /**\n         * A flag specifying whether to resize the document’s window to fit the size of the first\n         * displayed page.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the fit window\n         * viewerPreferences.fitWindow = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._fitWindow = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.fitWindow, new PdfBoolean(this._fitWindow));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"hideMenuBar\", {\n        /**\n         * A flag specifying whether to hide the viewer application’s menu bar when the\n         * document is active.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the hide menu bar\n         * let hideMenuBar: boolean = viewerPreferences.hideMenuBar;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._hideMenuBar;\n        },\n        /**\n         * A flag specifying whether to hide the viewer application’s menu bar when the\n         * document is active.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the hide menu bar\n         * viewerPreferences.hideMenuBar = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._hideMenuBar = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.hideMenuBar, new PdfBoolean(this._hideMenuBar));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"hideToolBar\", {\n        /**\n         * A flag specifying whether to hide the viewer application’s tool bar when the\n         * document is active.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the hide tool bar\n         * let hideToolBar: boolean = viewerPreferences.hideToolBar;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._hideToolBar;\n        },\n        /**\n         * A flag specifying whether to hide the viewer application’s tool bar when the\n         * document is active.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the hide tool bar\n         * viewerPreferences.hideToolbar = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._hideToolBar = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.hideToolBar, new PdfBoolean(this._hideToolBar));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"hideWindowUI\", {\n        /**\n         * A flag specifying whether to hide user interface elements in the document’s window\n         * (such as scroll bars and navigation controls), leaving only the document’s contents displayed.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the hide window UI\n         * let hideWindowUI: boolean = viewerPreferences.hideWindowUI;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._hideWindowUI;\n        },\n        /**\n         * A flag specifying whether to hide user interface elements in the document’s window\n         * (such as scroll bars and navigation controls), leaving only the document’s contents displayed.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the hide window UI\n         * viewerPreferences.hideWindowUI = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._hideWindowUI = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.hideWindowUI, new PdfBoolean(this._hideWindowUI));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"pageMode\", {\n        /**\n         * A name object specifying how the document should be displayed when opened.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the page mode\n         * let pageMode: PdfPageMode = viewerPreferences.pageMode;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._pageMode;\n        },\n        /**\n         * A name object specifying how the document should be displayed when opened.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the page mode\n         * viewerPreferences.pageMode = PdfPageMode.UseOutlines;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pageMode = value;\n            this._catalog.items.setValue(this._dictionaryProperties.pageMode, new PdfName(this._mapPageMode(this._pageMode)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"duplex\", {\n        /**\n         * Gets print duplex mode handling option to use when printing the file from the print dialog.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the duplex\n         * let duplex : DuplexMode = viewerPreferences.duplex;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._duplex;\n        },\n        /**\n         * Sets print duplex mode handling option to use when printing the file from the print dialog.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the duplex\n         * viewerPreferences.duplex = DuplexMode.DuplexFlipLongEdge;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._duplex = value;\n            this._catalog.items.setValue(this._dictionaryProperties.duplex, new PdfName(this._mapDuplexMode(this._duplex)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"pageLayout\", {\n        /**\n         * A name object specifying the page layout to be used when the document is opened.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the page layout\n         * let pageLayout : PdfPageLayout = viewerPreferences.pageLayout;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._pageLayout;\n        },\n        /**\n         * A name object specifying the page layout to be used when the document is opened.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the page layout\n         * viewerPreferences.pageLayout = PdfPageLayout.TwoColumnLeft;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pageLayout = value;\n            this._catalog.items.setValue(this._dictionaryProperties.pageLayout, new PdfName(this._mapPageLayout(this._pageLayout)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"pageScaling\", {\n        /**\n         * Gets the page scaling option to be selected\n         * when a print dialog is displayed for this document.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the page scaling\n         * let pageScaling : PageScalingMode = viewerPreferences.pageScaling;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._pageScaling;\n        },\n        /**\n         * Sets the page scaling option to be selected\n         * when a print dialog is displayed for this document.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the page scaling\n         * viewerPreferences.pageScaling = PageScalingMode.None;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pageScaling = value;\n            if (this._pageScaling === PageScalingMode.AppDefault && this._dictionary.items.containsKey(this._dictionaryProperties.printScaling)) {\n                this._dictionary.items.remove(this._dictionaryProperties.printScaling);\n            }\n            else if (this._pageScaling === PageScalingMode.None) {\n                this._dictionary.items.setValue(this._dictionaryProperties.printScaling, new PdfName('None'));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"element\", {\n        /**\n         * Primivie element\n         *\n         * @private\n         */\n        get: function () {\n            return this._dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfViewerPreferences.prototype._mapDuplexMode = function (mode) {\n        switch (mode) {\n            case DuplexMode.Simplex:\n                return 'Simplex';\n            case DuplexMode.DuplexFlipShortEdge:\n                return 'DuplexFlipShortEdge';\n            case DuplexMode.DuplexFlipLongEdge:\n                return 'DuplexFlipLongEdge';\n            case DuplexMode.None:\n                return 'None';\n        }\n    };\n    PdfViewerPreferences.prototype._mapPageMode = function (mode) {\n        switch (mode) {\n            case PdfPageMode.UseNone:\n                return 'UseNone';\n            case PdfPageMode.UseOutlines:\n                return 'UseOutlines';\n            case PdfPageMode.UseThumbs:\n                return 'UseThumbs';\n            case PdfPageMode.FullScreen:\n                return 'FullScreen';\n            case PdfPageMode.UseOC:\n                return 'UseOC';\n            case PdfPageMode.UseAttachments:\n                return 'UseAttachments';\n        }\n    };\n    PdfViewerPreferences.prototype._mapPageLayout = function (layout) {\n        switch (layout) {\n            case PdfPageLayout.SinglePage:\n                return 'SinglePage';\n            case PdfPageLayout.OneColumn:\n                return 'OneColumn';\n            case PdfPageLayout.TwoColumnLeft:\n                return 'TwoColumnLeft';\n            case PdfPageLayout.TwoColumnRight:\n                return 'TwoColumnRight';\n            case PdfPageLayout.TwoPageLeft:\n                return 'TwoPageLeft';\n            case PdfPageLayout.TwoPageRight:\n                return 'TwoPageRight';\n        }\n    };\n    return PdfViewerPreferences;\n}());\nexport { PdfViewerPreferences };\n/**\n * Represents mode of document displaying.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets the viewer preferences of the document\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Sets the page mode\n * viewerPreferences.pageMode = PdfPageMode.UseOutlines;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPageMode;\n(function (PdfPageMode) {\n    /**\n     * Default value. Neither document outline nor thumbnail images visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseNone\"] = 0] = \"UseNone\";\n    /**\n     * Document outline visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseOutlines\"] = 1] = \"UseOutlines\";\n    /**\n     * Thumbnail images visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseThumbs\"] = 2] = \"UseThumbs\";\n    /**\n     * Full-screen mode, with no menu bar, window controls, or any other window visible.\n     */\n    PdfPageMode[PdfPageMode[\"FullScreen\"] = 3] = \"FullScreen\";\n    /**\n     * Optional content group panel visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseOC\"] = 4] = \"UseOC\";\n    /**\n     * Attachments are visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseAttachments\"] = 5] = \"UseAttachments\";\n})(PdfPageMode || (PdfPageMode = {}));\n/**\n * A name object specifying the page layout to be used when the document is opened.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets the viewer preferences of the document\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Sets the page layout\n * viewerPreferences.pageLayout = PdfPageLayout.TwoColumnLeft;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPageLayout;\n(function (PdfPageLayout) {\n    /**\n     * Default Value. Display one page at a time.\n     */\n    PdfPageLayout[PdfPageLayout[\"SinglePage\"] = 0] = \"SinglePage\";\n    /**\n     * Display the pages in one column.\n     */\n    PdfPageLayout[PdfPageLayout[\"OneColumn\"] = 1] = \"OneColumn\";\n    /**\n     * Display the pages in two columns, with odd numbered\n     * pages on the left.\n     */\n    PdfPageLayout[PdfPageLayout[\"TwoColumnLeft\"] = 2] = \"TwoColumnLeft\";\n    /**\n     * Display the pages in two columns, with odd numbered\n     * pages on the right.\n     */\n    PdfPageLayout[PdfPageLayout[\"TwoColumnRight\"] = 3] = \"TwoColumnRight\";\n    /**\n     * Display the pages two at a time, with odd-numbered pages on the left.\n     */\n    PdfPageLayout[PdfPageLayout[\"TwoPageLeft\"] = 4] = \"TwoPageLeft\";\n    /**\n     * Display the pages two at a time, with odd-numbered pages on the right.\n     */\n    PdfPageLayout[PdfPageLayout[\"TwoPageRight\"] = 5] = \"TwoPageRight\";\n})(PdfPageLayout || (PdfPageLayout = {}));\n/**\n * The paper handling option to use when printing the file from the print dialog.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets the viewer preferences of the document\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Sets the duplex\n * viewerPreferences.duplex = DuplexMode.DuplexFlipLongEdge;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var DuplexMode;\n(function (DuplexMode) {\n    /**\n     * Print single-sided.\n     */\n    DuplexMode[DuplexMode[\"Simplex\"] = 0] = \"Simplex\";\n    /**\n     * Duplex and flip on the short edge of the sheet.\n     */\n    DuplexMode[DuplexMode[\"DuplexFlipShortEdge\"] = 1] = \"DuplexFlipShortEdge\";\n    /**\n     * Duplex and flip on the long edge of the sheet.\n     */\n    DuplexMode[DuplexMode[\"DuplexFlipLongEdge\"] = 2] = \"DuplexFlipLongEdge\";\n    /**\n     * Default value.\n     */\n    DuplexMode[DuplexMode[\"None\"] = 3] = \"None\";\n})(DuplexMode || (DuplexMode = {}));\n/**\n * Specifies the different page scaling option that shall be selected\n * when a print dialog is displayed for this document.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets the viewer preferences of the document\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Sets the page scaling\n * viewerPreferences.pageScaling = PageScalingMode.None;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PageScalingMode;\n(function (PageScalingMode) {\n    /**\n     * Indicates the conforming reader’s default print scaling.\n     */\n    PageScalingMode[PageScalingMode[\"AppDefault\"] = 0] = \"AppDefault\";\n    /**\n     * Indicates no page scaling.\n     */\n    PageScalingMode[PageScalingMode[\"None\"] = 1] = \"None\";\n})(PageScalingMode || (PageScalingMode = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfCatalog.ts class for EJ2-PDF\n */\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfViewerPreferences } from './pdf-viewer-preferences';\n/**\n * `PdfCatalog` class represents internal catalog of the Pdf document.\n * @private\n */\nvar PdfCatalog = /** @class */ (function (_super) {\n    __extends(PdfCatalog, _super);\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfCatalog` class.\n     * @private\n     */\n    function PdfCatalog() {\n        var _this = _super.call(this) || this;\n        //fields\n        /**\n         * Internal variable to store collection of `sections`.\n         * @default null\n         * @private\n         */\n        _this.sections = null;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @private\n         */\n        _this.tempDictionaryProperties = new DictionaryProperties();\n        _this.items.setValue(new DictionaryProperties().type, new PdfName('Catalog'));\n        return _this;\n    }\n    Object.defineProperty(PdfCatalog.prototype, \"pages\", {\n        //Properties\n        /**\n         * Gets or sets the sections, which contain `pages`.\n         * @private\n         */\n        get: function () {\n            return this.sections;\n        },\n        set: function (value) {\n            var dictionary = value.element;\n            // if (this.sections !== value) {\n            //     this.sections = value;\n            //     this.Items.setValue(this.tempDictionaryProperties.pages, new PdfReferenceHolder(value));\n            // }\n            this.sections = value;\n            this.items.setValue(this.tempDictionaryProperties.pages, new PdfReferenceHolder(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCatalog.prototype, \"viewerPreferences\", {\n        /**\n         * Gets the viewer preferences of the PDF document.\n         * @private\n         */\n        get: function () {\n            if (this._viewerPreferences === null || typeof this._viewerPreferences === 'undefined') {\n                this._viewerPreferences = new PdfViewerPreferences(this);\n                this.items.setValue(this.tempDictionaryProperties.viewerPreferences, new PdfReferenceHolder(this._viewerPreferences.element));\n            }\n            return this._viewerPreferences;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCatalog;\n}(PdfDictionary));\nexport { PdfCatalog };\n","import { ObjectStatus } from './../input-output/enum';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './pdf-dictionary-properties';\nimport { Operators } from './pdf-operators';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfReference } from './../primitives/pdf-reference';\nimport { ObjectType } from './cross-table';\nimport { PdfStream } from './../primitives/pdf-stream';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfCatalog } from './../document/pdf-catalog';\n/**\n * `PdfCrossTable` is responsible for intermediate level parsing\n * and savingof a PDF document.\n * @private\n */\nvar PdfCrossTable = /** @class */ (function () {\n    function PdfCrossTable() {\n        /**\n         * The modified `objects` that should be saved.\n         * @private\n         */\n        this.objects = new Dictionary();\n        /**\n         * Holds `maximal generation number` or offset to object.\n         * @default 0\n         * @private\n         */\n        this.maxGenNumIndex = 0;\n        /**\n         * The `number of the objects`.\n         * @default 0\n         * @private\n         */\n        this.objectCount = 0;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @default new PdfDictionaryProperties()\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n    }\n    Object.defineProperty(PdfCrossTable.prototype, \"isMerging\", {\n        //Properties\n        /**\n         * Gets or sets if the document `is merged`.\n         * @private\n         */\n        get: function () {\n            return this.merging;\n        },\n        set: function (value) {\n            this.merging = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"trailer\", {\n        /**\n         * Gets the `trailer`.\n         * @private\n         */\n        get: function () {\n            if (this.internalTrailer == null) {\n                this.internalTrailer = new PdfStream();\n            }\n            return this.internalTrailer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"document\", {\n        /**\n         * Gets or sets the main `PdfDocument` class instance.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n            this.items = this.pdfDocument.pdfObjects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"pdfObjects\", {\n        /**\n         * Gets the catched `PDF object` main collection.\n         * @private\n         */\n        get: function () {\n            return this.items;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"objectCollection\", {\n        /**\n         * Gets the `object collection`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument.pdfObjects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"count\", {\n        /**\n         * Gets or sets the `number of the objects` within the document.\n         * @private\n         */\n        get: function () {\n            return this.objectCount;\n        },\n        set: function (value) {\n            this.objectCount = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"nextObjNumber\", {\n        /**\n         * Returns `next available object number`.\n         * @private\n         */\n        get: function () {\n            this.count = this.count + 1;\n            return this.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCrossTable.prototype.save = function (writer, filename) {\n        this._saveProcess(writer);\n        if (typeof filename === 'undefined') {\n            return writer.stream.buffer;\n        }\n        else {\n            writer.stream.save(filename);\n        }\n    };\n    /**\n     * Saves the cross-reference table into the stream.\n     * @private\n     */\n    PdfCrossTable.prototype._saveProcess = function (writer) {\n        this.saveHead(writer);\n        this.mappedReferences = null;\n        this.objects.clear();\n        this.markTrailerReferences();\n        this.saveObjects(writer);\n        var saveCount = this.count;\n        var xrefPos = writer.position;\n        this.registerObject(0, new PdfReference(0, -1), true);\n        var prevXRef = 0;\n        writer.write(Operators.xref);\n        writer.write(Operators.newLine);\n        this.saveSections(writer);\n        this.saveTrailer(writer, this.count, prevXRef);\n        this.saveTheEndess(writer, xrefPos);\n        this.count = saveCount;\n        for (var i = 0; i < this.objectCollection.count; ++i) {\n            var oi = this.objectCollection.items(i);\n            oi.object.isSaving = false;\n        }\n    };\n    /**\n     * Saves the cross-reference table into the stream.\n     * @private\n     */\n    PdfCrossTable.prototype._save = function (writer) {\n        this._saveProcess(writer);\n        var helper = writer.stream;\n        return helper.buffer.toUint8Array();\n    };\n    /**\n     * `Saves the endess` of the file.\n     * @private\n     */\n    PdfCrossTable.prototype.saveTheEndess = function (writer, xrefPos) {\n        writer.write(Operators.newLine + Operators.startxref + Operators.newLine);\n        writer.write(xrefPos.toString() + Operators.newLine);\n        writer.write(Operators.eof + Operators.newLine);\n    };\n    /**\n     * `Saves the new trailer` dictionary.\n     * @private\n     */\n    PdfCrossTable.prototype.saveTrailer = function (writer, count, prevXRef) {\n        writer.write(Operators.trailer + Operators.newLine);\n        // Save the dictionary.\n        var trailer = this.trailer;\n        trailer.items.setValue(this.dictionaryProperties.size, new PdfNumber(this.objectCount + 1));\n        trailer = new PdfDictionary(trailer); // Make it real dictionary.\n        trailer.setEncrypt(false);\n        trailer.save(writer);\n    };\n    /**\n     * `Saves the xref section`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveSections = function (writer) {\n        var objectNum = 0;\n        var count = 0;\n        do {\n            count = this.prepareSubsection(objectNum);\n            this.saveSubsection(writer, objectNum, count);\n            objectNum += count;\n        } while (count !== 0);\n    };\n    /**\n     * `Saves a subsection`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveSubsection = function (writer, objectNum, count) {\n        if (count <= 0 || objectNum >= this.count) {\n            return;\n        }\n        var subsectionHead = '{0} {1}{2}';\n        writer.write(objectNum + ' ' + (count + 1) + Operators.newLine);\n        for (var i = objectNum; i <= objectNum + count; ++i) {\n            var obj = this.objects.getValue(i);\n            var str = '';\n            if (obj.type === ObjectType.Free) {\n                str = this.getItem(obj.offset, 65535, true);\n            }\n            else {\n                str = this.getItem(obj.offset, obj.generation, false);\n            }\n            writer.write(str);\n        }\n    };\n    /**\n     * Generates string for `xref table item`.\n     * @private\n     */\n    PdfCrossTable.prototype.getItem = function (offset, genNumber, isFree) {\n        var returnString = '';\n        var addOffsetLength = 10 - offset.toString().length;\n        if (genNumber <= 0) {\n            genNumber = 0;\n        }\n        var addGenNumberLength = (5 - genNumber.toString().length) <= 0 ? 0 : (5 - genNumber.toString().length);\n        for (var index = 0; index < addOffsetLength; index++) {\n            returnString = returnString + '0';\n        }\n        returnString = returnString + offset.toString() + ' ';\n        for (var index = 0; index < addGenNumberLength; index++) {\n            returnString = returnString + '0';\n        }\n        returnString = returnString + genNumber.toString() + ' ';\n        returnString = returnString + ((isFree) ? Operators.f : Operators.n) + Operators.newLine;\n        return returnString;\n    };\n    /**\n     * `Prepares a subsection` of the current section within the cross-reference table.\n     * @private\n     */\n    PdfCrossTable.prototype.prepareSubsection = function (objectNum) {\n        var count = 0;\n        var i;\n        var total = this.count;\n        for (var k = 0; k < this.document.pdfObjects.count; k++) {\n            var reference = this.document.pdfObjects.items(k).reference;\n            var refString = reference.toString();\n            var refArray = refString.split(' ');\n        }\n        if (objectNum >= total) {\n            return count;\n        }\n        // search for first changed indirect object.\n        for (i = objectNum; i < total; ++i) {\n            break;\n        }\n        objectNum = i;\n        // look up for all indirect objects in one subsection.\n        for (; i < total; ++i) {\n            ++count;\n        }\n        return count;\n    };\n    /**\n     * `Marks the trailer references` being saved.\n     * @private\n     */\n    PdfCrossTable.prototype.markTrailerReferences = function () {\n        var tempArray;\n        var keys = this.trailer.items.keys();\n        var values = this.trailer.items.values();\n    };\n    /**\n     * `Saves the head`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveHead = function (writer) {\n        var version = this.generateFileVersion(writer.document);\n        writer.write('%PDF-' + version);\n        writer.write(Operators.newLine);\n    };\n    /**\n     * Generates the `version` of the file.\n     * @private\n     */\n    PdfCrossTable.prototype.generateFileVersion = function (document) {\n        var iVersion = 4;\n        var version = '1.' + iVersion.toString();\n        return version;\n    };\n    PdfCrossTable.prototype.getReference = function (obj, bNew) {\n        if (typeof bNew === 'undefined') {\n            var wasNew = false;\n            return this.getReference(obj, wasNew);\n        }\n        else {\n            //code splitted for reducing lines of code exceeds 100.\n            return this.getSubReference(obj, bNew);\n        }\n    };\n    /**\n     * Retrieves the `reference` of the object given.\n     * @private\n     */\n    PdfCrossTable.prototype.getSubReference = function (obj, bNew) {\n        var isNew = false;\n        var wasNew;\n        var reference = null;\n        // if (obj.IsSaving) {\n        if (this.items.count > 0 && obj.objectCollectionIndex > 0 && this.items.count > obj.objectCollectionIndex - 1) {\n            var tempObj = this.document.pdfObjects.getReference(obj, wasNew);\n            reference = tempObj.reference;\n            wasNew = tempObj.wasNew;\n        }\n        if (reference == null) {\n            if (obj.status === ObjectStatus.Registered) {\n                wasNew = false;\n            }\n            else {\n                wasNew = true;\n            }\n        }\n        else {\n            wasNew = false;\n        }\n        // need to add mapped reference code\n        if (reference == null) {\n            var objnumber = this.nextObjNumber;\n            reference = new PdfReference(objnumber, 0);\n            var found = void 0;\n            if (wasNew) {\n                this.document.pdfObjects.add(obj);\n                this.document.pdfObjects.trySetReference(obj, reference, found);\n                var tempIndex = this.document.pdfObjects.count - 1;\n                var tempkey = this.document.pdfObjects.objectCollections[tempIndex].reference.objNumber;\n                var tempvalue = this.document.pdfObjects.objectCollections[this.document.pdfObjects.count - 1];\n                this.document.pdfObjects.mainObjectCollection.setValue(tempkey, tempvalue);\n                obj.position = -1;\n            }\n            else {\n                this.document.pdfObjects.trySetReference(obj, reference, found);\n            }\n            obj.objectCollectionIndex = reference.objNumber;\n            obj.status = ObjectStatus.None;\n            isNew = true;\n        }\n        bNew = isNew || this.bForceNew;\n        return reference;\n    };\n    /**\n     * `Saves all objects` in the collection.\n     * @private\n     */\n    PdfCrossTable.prototype.saveObjects = function (writer) {\n        var objectCollection = this.objectCollection;\n        for (var i = 0; i < objectCollection.count; ++i) {\n            var oi = objectCollection.items(i);\n            var obj = oi.object;\n            obj.isSaving = true;\n            this.saveIndirectObject(obj, writer);\n        }\n    };\n    /**\n     * `Saves indirect object`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveIndirectObject = function (obj, writer) {\n        var reference = this.getReference(obj);\n        if (obj instanceof PdfCatalog) {\n            this.trailer.items.setValue(this.dictionaryProperties.root, reference);\n        }\n        // NOTE :  This is needed for correct string objects encryption.\n        this.pdfDocument.currentSavingObj = reference;\n        var tempArchive = false;\n        tempArchive = obj.getArchive();\n        var allowedType = !((obj instanceof PdfStream) || !tempArchive || (obj instanceof PdfCatalog));\n        var sigFlag = false;\n        this.registerObject(writer.position, reference);\n        this.doSaveObject(obj, reference, writer);\n    };\n    /**\n     * Performs `real saving` of the save object.\n     * @private\n     */\n    PdfCrossTable.prototype.doSaveObject = function (obj, reference, writer) {\n        writer.write(reference.objNumber.toString());\n        writer.write(Operators.whiteSpace);\n        writer.write(reference.genNumber.toString());\n        writer.write(Operators.whiteSpace);\n        writer.write(Operators.obj);\n        writer.write(Operators.newLine);\n        obj.save(writer);\n        writer.write(Operators.endObj);\n        writer.write(Operators.newLine);\n    };\n    PdfCrossTable.prototype.registerObject = function (offset, reference, free) {\n        if (typeof free === 'boolean') {\n            // Register the object by its number.\n            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference, free));\n            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);\n        }\n        else if (typeof free === 'undefined') {\n            // Register the object by its number.\n            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference));\n            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);\n        }\n    };\n    /**\n     * `Dereferences` the specified primitive object.\n     * @private\n     */\n    PdfCrossTable.dereference = function (obj) {\n        var rh = obj;\n        if (rh != null) {\n            obj = rh.object;\n        }\n        return obj;\n    };\n    return PdfCrossTable;\n}());\nexport { PdfCrossTable };\nvar RegisteredObject = /** @class */ (function () {\n    function RegisteredObject(offset, reference, free) {\n        var tempOffset = offset;\n        this.offsetNumber = tempOffset;\n        var tempReference = reference;\n        this.generation = tempReference.genNumber;\n        this.object = tempReference.objNumber;\n        if (typeof free === 'undefined') {\n            this.type = ObjectType.Normal;\n        }\n        else {\n            this.type = ObjectType.Free;\n        }\n    }\n    Object.defineProperty(RegisteredObject.prototype, \"objectNumber\", {\n        //Properties\n        /**\n         * Gets the `object number`.\n         * @private\n         */\n        get: function () {\n            return this.object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RegisteredObject.prototype, \"offset\", {\n        /**\n         * Gets the `offset`.\n         * @private\n         */\n        get: function () {\n            var result;\n            result = this.offsetNumber;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RegisteredObject;\n}());\nexport { RegisteredObject };\n","/**\n * PdfPageSize.ts class for EJ2-PDF\n */\nimport { SizeF } from './../drawing/pdf-drawing';\n/**\n * Represents information about various predefined `page sizes`.\n */\nvar PdfPageSize = /** @class */ (function () {\n    //constructor\n    /**\n     * Initialize an instance for `PdfPageSize` class.\n     * @private\n     */\n    function PdfPageSize() {\n        // \n    }\n    /**\n     * Specifies the size of `letter`.\n     * @private\n     */\n    PdfPageSize.letter = new SizeF(612, 792);\n    /**\n     * Specifies the size of `note`.\n     * @private\n     */\n    PdfPageSize.note = new SizeF(540, 720);\n    /**\n     * Specifies the size of `legal`.\n     * @private\n     */\n    PdfPageSize.legal = new SizeF(612, 1008);\n    /**\n     * Specifies the size of `a0`.\n     * @private\n     */\n    PdfPageSize.a0 = new SizeF(2380, 3368);\n    /**\n     * Specifies the size of `a1`.\n     * @private\n     */\n    PdfPageSize.a1 = new SizeF(1684, 2380);\n    /**\n     * Specifies the size of `a2`.\n     * @private\n     */\n    PdfPageSize.a2 = new SizeF(1190, 1684);\n    /**\n     * Specifies the size of `a3`.\n     * @private\n     */\n    PdfPageSize.a3 = new SizeF(842, 1190);\n    /**\n     * Specifies the size of `a4`.\n     * @private\n     */\n    PdfPageSize.a4 = new SizeF(595, 842);\n    /**\n     * Specifies the size of `a5`.\n     * @private\n     */\n    PdfPageSize.a5 = new SizeF(421, 595);\n    /**\n     * Specifies the size of `a6`.\n     * @private\n     */\n    PdfPageSize.a6 = new SizeF(297, 421);\n    /**\n     * Specifies the size of `a7`.\n     * @private\n     */\n    PdfPageSize.a7 = new SizeF(210, 297);\n    /**\n     * Specifies the size of `a8`.\n     * @private\n     */\n    PdfPageSize.a8 = new SizeF(148, 210);\n    /**\n     * Specifies the size of `a9`.\n     * @private\n     */\n    PdfPageSize.a9 = new SizeF(105, 148);\n    /**\n     * Specifies the size of `a10`.\n     * @private\n     */\n    PdfPageSize.a10 = new SizeF(74, 105);\n    /**\n     * Specifies the size of `b0`.\n     * @private\n     */\n    PdfPageSize.b0 = new SizeF(2836, 4008);\n    /**\n     * Specifies the size of `b1`.\n     * @private\n     */\n    PdfPageSize.b1 = new SizeF(2004, 2836);\n    /**\n     * Specifies the size of `b2`.\n     * @private\n     */\n    PdfPageSize.b2 = new SizeF(1418, 2004);\n    /**\n     * Specifies the size of `b3`.\n     * @private\n     */\n    PdfPageSize.b3 = new SizeF(1002, 1418);\n    /**\n     * Specifies the size of `b4`.\n     * @private\n     */\n    PdfPageSize.b4 = new SizeF(709, 1002);\n    /**\n     * Specifies the size of `b5`.\n     * @private\n     */\n    PdfPageSize.b5 = new SizeF(501, 709);\n    /**\n     * Specifies the size of `archE`.\n     * @private\n     */\n    PdfPageSize.archE = new SizeF(2592, 3456);\n    /**\n     * Specifies the size of `archD`.\n     * @private\n     */\n    PdfPageSize.archD = new SizeF(1728, 2592);\n    /**\n     * Specifies the size of `archC`.\n     * @private\n     */\n    PdfPageSize.archC = new SizeF(1296, 1728);\n    /**\n     * Specifies the size of `archB`.\n     * @private\n     */\n    PdfPageSize.archB = new SizeF(864, 1296);\n    /**\n     * Specifies the size of `archA`.\n     * @private\n     */\n    PdfPageSize.archA = new SizeF(648, 864);\n    /**\n     * Specifies the size of `flsa`.\n     * @private\n     */\n    PdfPageSize.flsa = new SizeF(612, 936);\n    /**\n     * Specifies the size of `halfLetter`.\n     * @private\n     */\n    PdfPageSize.halfLetter = new SizeF(396, 612);\n    /**\n     * Specifies the size of `letter11x17`.\n     * @private\n     */\n    PdfPageSize.letter11x17 = new SizeF(792, 1224);\n    /**\n     * Specifies the size of `ledger`.\n     * @private\n     */\n    PdfPageSize.ledger = new SizeF(1224, 792);\n    return PdfPageSize;\n}());\nexport { PdfPageSize };\n","/**\n * public Enum for `PdfPageOrientation`.\n * @private\n */\nexport var PdfPageOrientation;\n(function (PdfPageOrientation) {\n    /**\n     * Specifies the type of `Portrait`.\n     * @private\n     */\n    PdfPageOrientation[PdfPageOrientation[\"Portrait\"] = 0] = \"Portrait\";\n    /**\n     * Specifies the type of `Landscape`.\n     * @private\n     */\n    PdfPageOrientation[PdfPageOrientation[\"Landscape\"] = 1] = \"Landscape\";\n})(PdfPageOrientation || (PdfPageOrientation = {}));\n/**\n * public Enum for `PdfPageRotateAngle`.\n * @private\n */\nexport var PdfPageRotateAngle;\n(function (PdfPageRotateAngle) {\n    /**\n     * Specifies the type of `RotateAngle0`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle0\"] = 0] = \"RotateAngle0\";\n    /**\n     * Specifies the type of `RotateAngle90`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle90\"] = 1] = \"RotateAngle90\";\n    /**\n     * Specifies the type of `RotateAngle180`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle180\"] = 2] = \"RotateAngle180\";\n    /**\n     * Specifies the type of `RotateAngle270`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle270\"] = 3] = \"RotateAngle270\";\n})(PdfPageRotateAngle || (PdfPageRotateAngle = {}));\n/**\n * public Enum for `PdfNumberStyle`.\n * @private\n */\nexport var PdfNumberStyle;\n(function (PdfNumberStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Numeric`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"Numeric\"] = 1] = \"Numeric\";\n    /**\n     * Specifies the type of `LowerLatin`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"LowerLatin\"] = 2] = \"LowerLatin\";\n    /**\n     * Specifies the type of `LowerRoman`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"LowerRoman\"] = 3] = \"LowerRoman\";\n    /**\n     * Specifies the type of `UpperLatin`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"UpperLatin\"] = 4] = \"UpperLatin\";\n    /**\n     * Specifies the type of `UpperRoman`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"UpperRoman\"] = 5] = \"UpperRoman\";\n})(PdfNumberStyle || (PdfNumberStyle = {}));\n/**\n * public Enum for `PdfDockStyle`.\n * @private\n */\nexport var PdfDockStyle;\n(function (PdfDockStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Bottom\"] = 1] = \"Bottom\";\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Top\"] = 2] = \"Top\";\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Left\"] = 3] = \"Left\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Right\"] = 4] = \"Right\";\n    /**\n     * Specifies the type of `Fill`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Fill\"] = 5] = \"Fill\";\n})(PdfDockStyle || (PdfDockStyle = {}));\n/**\n * public Enum for `PdfAlignmentStyle`.\n * @private\n */\nexport var PdfAlignmentStyle;\n(function (PdfAlignmentStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `TopLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopLeft\"] = 1] = \"TopLeft\";\n    /**\n     * Specifies the type of `TopCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopCenter\"] = 2] = \"TopCenter\";\n    /**\n     * Specifies the type of `TopRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopRight\"] = 3] = \"TopRight\";\n    /**\n     * Specifies the type of `MiddleLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleLeft\"] = 4] = \"MiddleLeft\";\n    /**\n     * Specifies the type of `MiddleCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleCenter\"] = 5] = \"MiddleCenter\";\n    /**\n     * Specifies the type of `MiddleRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleRight\"] = 6] = \"MiddleRight\";\n    /**\n     * Specifies the type of `BottomLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomLeft\"] = 7] = \"BottomLeft\";\n    /**\n     * Specifies the type of `BottomCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomCenter\"] = 8] = \"BottomCenter\";\n    /**\n     * Specifies the type of `BottomRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomRight\"] = 9] = \"BottomRight\";\n})(PdfAlignmentStyle || (PdfAlignmentStyle = {}));\n/**\n * public Enum for `TemplateType`.\n * @private\n */\nexport var TemplateType;\n(function (TemplateType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    TemplateType[TemplateType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Top\"] = 1] = \"Top\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Bottom\"] = 2] = \"Bottom\";\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Left\"] = 3] = \"Left\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Right\"] = 4] = \"Right\";\n})(TemplateType || (TemplateType = {}));\n","/**\n * PdfMargins.ts class for EJ2-PDF\n * A class representing PDF page margins.\n */\nvar PdfMargins = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfMargins` class.\n     * @private\n     */\n    function PdfMargins() {\n        /**\n         * Represents the `Default Page Margin` value.\n         * @default 0.0\n         * @private\n         */\n        this.pdfMargin = 40.0;\n        this.setMargins(this.pdfMargin);\n    }\n    Object.defineProperty(PdfMargins.prototype, \"left\", {\n        //Properties\n        /**\n         * Gets or sets the `left margin` size.\n         * @private\n         */\n        get: function () {\n            return this.leftMargin;\n        },\n        set: function (value) {\n            this.leftMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"top\", {\n        /**\n         * Gets or sets the `top margin` size.\n         * @private\n         */\n        get: function () {\n            return this.topMargin;\n        },\n        set: function (value) {\n            this.topMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"right\", {\n        /**\n         * Gets or sets the `right margin` size.\n         * @private\n         */\n        get: function () {\n            return this.rightMargin;\n        },\n        set: function (value) {\n            this.rightMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `bottom margin` size.\n         * @private\n         */\n        get: function () {\n            return this.bottomMargin;\n        },\n        set: function (value) {\n            this.bottomMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"all\", {\n        /**\n         * Sets the `margins`.\n         * @private\n         */\n        set: function (value) {\n            this.setMargins(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfMargins.prototype.setMargins = function (margin1, margin2, margin3, margin4) {\n        if (typeof margin2 === 'undefined') {\n            this.leftMargin = this.topMargin = this.rightMargin = this.bottomMargin = margin1;\n        }\n        else {\n            if (typeof margin3 === 'undefined') {\n                this.leftMargin = this.rightMargin = margin1;\n                this.bottomMargin = this.topMargin = margin2;\n            }\n            else {\n                this.leftMargin = margin1;\n                this.topMargin = margin2;\n                this.rightMargin = margin3;\n                this.bottomMargin = margin4;\n            }\n        }\n    };\n    /**\n     * `Clones` the object.\n     * @private\n     */\n    PdfMargins.prototype.clone = function () {\n        return this;\n    };\n    return PdfMargins;\n}());\nexport { PdfMargins };\n","/**\n * PdfPageSettings.ts class for EJ2-PDF\n */\nimport { SizeF, PointF } from './../drawing/pdf-drawing';\nimport { PdfPageSize } from './pdf-page-size';\nimport { PdfPageRotateAngle, PdfPageOrientation } from './enum';\nimport { PdfMargins } from './../graphics/pdf-margins';\n/**\n * The class provides various `setting` related with PDF pages.\n */\nvar PdfPageSettings = /** @class */ (function () {\n    function PdfPageSettings(margins) {\n        //Fields\n        /**\n         * The page `margins`.\n         * @private\n         */\n        this.pageMargins = new PdfMargins();\n        /**\n         * The page `size`.\n         * @default a4\n         * @private\n         */\n        this.pageSize = PdfPageSize.a4;\n        /**\n         * The page `rotation angle`.\n         * @default PdfPageRotateAngle.RotateAngle0\n         * @private\n         */\n        this.rotateAngle = PdfPageRotateAngle.RotateAngle0;\n        /**\n         * The page `orientation`.\n         * @default PdfPageOrientation.Portrait\n         * @private\n         */\n        this.pageOrientation = PdfPageOrientation.Portrait;\n        /**\n         * The page `origin`.\n         * @default 0,0\n         * @private\n         */\n        this.pageOrigin = new PointF(0, 0);\n        /**\n         * Checks the Whether the `rotation` is applied or not.\n         * @default false\n         * @private\n         */\n        this.isRotation = false;\n        if (typeof margins === 'number') {\n            this.pageMargins.setMargins(margins);\n        }\n    }\n    Object.defineProperty(PdfPageSettings.prototype, \"size\", {\n        //Properties\n        /**\n         * Gets or sets the `size` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize;\n        },\n        set: function (value) {\n            this.setSize(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"orientation\", {\n        /**\n         * Gets or sets the page `orientation`.\n         * @private\n         */\n        get: function () {\n            return this.pageOrientation;\n        },\n        set: function (orientation) {\n            if (this.pageOrientation !== orientation) {\n                this.pageOrientation = orientation;\n                this.updateSize(orientation);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"margins\", {\n        /**\n         * Gets or sets the `margins` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageMargins;\n        },\n        set: function (value) {\n            this.pageMargins = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize.width;\n        },\n        set: function (value) {\n            this.pageSize.width = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"height\", {\n        /**\n         * Gets or sets the `height` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize.height;\n        },\n        set: function (value) {\n            this.pageSize.height = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"origin\", {\n        /**\n         * Gets or sets the `origin` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageOrigin;\n        },\n        set: function (value) {\n            this.pageOrigin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"rotate\", {\n        /**\n         * Gets or sets the number of degrees by which the page should be `rotated` clockwise when displayed or printed.\n         * @private\n         */\n        get: function () {\n            return this.rotateAngle;\n        },\n        set: function (value) {\n            this.rotateAngle = value;\n            this.isRotation = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * `Update page size` depending on orientation.\n     * @private\n     */\n    PdfPageSettings.prototype.updateSize = function (orientation) {\n        var min = Math.min(this.pageSize.width, this.pageSize.height);\n        var max = Math.max(this.pageSize.width, this.pageSize.height);\n        switch (orientation) {\n            case PdfPageOrientation.Portrait:\n                this.pageSize = new SizeF(min, max);\n                break;\n            case PdfPageOrientation.Landscape:\n                this.pageSize = new SizeF(max, min);\n                break;\n        }\n    };\n    /**\n     * Creates a `clone` of the object.\n     * @private\n     */\n    PdfPageSettings.prototype.clone = function () {\n        var settings = this;\n        settings.pageMargins = this.pageMargins.clone();\n        // if (GetTransition() != null)\n        // {\n        //     settings.Transition = (PdfPageTransition)Transition.clone();\n        // }\n        return settings;\n    };\n    /**\n     * Returns `size`, shrinked by the margins.\n     * @private\n     */\n    PdfPageSettings.prototype.getActualSize = function () {\n        var width = this.width - (this.margins.left + this.margins.right);\n        var height = this.height - (this.margins.top + this.margins.bottom);\n        var size = new SizeF(width, height);\n        return size;\n    };\n    /**\n     * Sets `size` to the page aaccording to the orientation.\n     * @private\n     */\n    PdfPageSettings.prototype.setSize = function (size) {\n        var min = Math.min(size.width, size.height);\n        var max = Math.max(size.width, size.height);\n        if (this.orientation === PdfPageOrientation.Portrait) {\n            this.pageSize = new SizeF(min, max);\n        }\n        else {\n            this.pageSize = new SizeF(max, min);\n        }\n    };\n    return PdfPageSettings;\n}());\nexport { PdfPageSettings };\n","import { Operators } from './pdf-operators';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * Helper class to `write PDF graphic streams` easily.\n * @private\n */\nvar PdfStreamWriter = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfStreamWriter` class.\n     * @private\n     */\n    function PdfStreamWriter(stream) {\n        if (stream == null) {\n            throw new Error('ArgumentNullException:stream');\n        }\n        this.stream = stream;\n    }\n    //Implementation\n    /**\n     * `Clear` the stream.\n     * @public\n     */\n    PdfStreamWriter.prototype.clear = function () {\n        this.stream.clearStream();\n    };\n    PdfStreamWriter.prototype.setGraphicsState = function (dictionaryName) {\n        if (dictionaryName instanceof PdfName) {\n            this.stream.write(dictionaryName.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setGraphicsState);\n        }\n        else {\n            this.stream.write(Operators.slash);\n            this.stream.write(dictionaryName);\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setGraphicsState);\n        }\n    };\n    /**\n     * `Executes the XObject`.\n     * @private\n     */\n    PdfStreamWriter.prototype.executeObject = function (name) {\n        this.stream.write(name.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.paintXObject);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * `Closes path object`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closePath = function () {\n        this.writeOperator(Operators.closePath);\n    };\n    /**\n     * `Clips the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.clipPath = function (useEvenOddRule) {\n        this.stream.write(Operators.clipPath);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n        }\n        this.stream.write(Operators.whiteSpace);\n        this.stream.write(Operators.endPath);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * `Closes, then fills and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillStrokePath = function (useEvenOddRule) {\n        this.stream.write(Operators.closeFillStrokePath);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Fills and strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillStrokePath = function (useEvenOddRule) {\n        this.stream.write(Operators.fillStroke);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Fills path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillPath = function (useEvenOddRule) {\n        this.stream.write(Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Ends the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endPath = function () {\n        this.writeOperator(Operators.n);\n    };\n    /**\n     * `Closes and fills the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillPath = function (useEvenOddRule) {\n        this.writeOperator(Operators.closePath);\n        this.stream.write(Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Closes and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeStrokePath = function () {\n        this.writeOperator(Operators.closeStrokePath);\n    };\n    /**\n     * `Sets the text scaling`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextScaling = function (textScaling) {\n        this.stream.write(PdfNumber.floatToString(textScaling));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setTextScaling);\n    };\n    /**\n     * `Strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.strokePath = function () {\n        this.writeOperator(Operators.stroke);\n    };\n    /**\n     * `Restores` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.restoreGraphicsState = function () {\n        this.writeOperator(Operators.restoreState);\n    };\n    /**\n     * `Saves` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.saveGraphicsState = function () {\n        this.writeOperator(Operators.saveState);\n    };\n    PdfStreamWriter.prototype.startNextLine = function (arg1, arg2) {\n        if (typeof arg1 === 'undefined') {\n            this.writeOperator(Operators.goToNextLine);\n        }\n        else if (arg1 instanceof PointF) {\n            this.writePoint(arg1);\n            this.writeOperator(Operators.setCoords);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(Operators.setCoords);\n        }\n    };\n    /**\n     * Shows the `text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.showText = function (text) {\n        this.checkTextParam(text);\n        this.writeText(text);\n        this.writeOperator(Operators.setText);\n    };\n    /**\n     * Sets `text leading`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLeading = function (leading) {\n        this.stream.write(PdfNumber.floatToString(leading));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setTextLeading);\n    };\n    /**\n     * `Begins the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginPath = function (x, y) {\n        this.writePoint(x, y);\n        this.writeOperator(Operators.beginPath);\n    };\n    /**\n     * `Begins text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginText = function () {\n        this.writeOperator(Operators.beginText);\n    };\n    /**\n     * `Ends text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endText = function () {\n        this.writeOperator(Operators.endText);\n    };\n    PdfStreamWriter.prototype.appendRectangle = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof RectangleF) {\n            this.appendRectangle(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writePoint(arg3, arg4);\n            this.writeOperator(Operators.appendRectangle);\n        }\n    };\n    PdfStreamWriter.prototype.appendLineSegment = function (arg1, arg2) {\n        if (arg1 instanceof PointF) {\n            this.appendLineSegment(arg1.x, arg1.y);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(Operators.appendLineSegment);\n        }\n    };\n    /**\n     * Sets the `text rendering mode`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextRenderingMode = function (renderingMode) {\n        this.stream.write(renderingMode.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setRenderingMode);\n    };\n    /**\n     * Sets the `character spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setCharacterSpacing = function (charSpacing) {\n        this.stream.write(PdfNumber.floatToString(charSpacing));\n        this.stream.write(Operators.whiteSpace);\n        this.stream.write(Operators.setCharacterSpace);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * Sets the `word spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setWordSpacing = function (wordSpacing) {\n        this.stream.write(PdfNumber.floatToString(wordSpacing));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setWordSpace);\n    };\n    PdfStreamWriter.prototype.showNextLineText = function (arg1, arg2) {\n        if (arg1 instanceof PdfString) {\n            this.checkTextParam(arg1);\n            this.writeText(arg1);\n            this.writeOperator(Operators.setTextOnNewLine);\n        }\n        else {\n            this.checkTextParam(arg1);\n            this.writeText(arg1, arg2);\n            this.writeOperator(Operators.setTextOnNewLine);\n        }\n    };\n    PdfStreamWriter.prototype.setColorSpace = function (arg1, arg2) {\n        if (arg1 instanceof PdfName && typeof arg2 === 'boolean') {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            // if (temparg1 == null) {\n            //     throw new Error('ArgumentNullException:name');\n            // }\n            var op = (temparg2) ? Operators.selectcolorspaceforstroking : Operators.selectcolorspacefornonstroking;\n            this.stream.write(temparg1.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.stream.write(op);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            this.setColorSpace(new PdfName(temparg1), temparg2);\n        }\n    };\n    /**\n     * Modifies current `transformation matrix`.\n     * @private\n     */\n    PdfStreamWriter.prototype.modifyCtm = function (matrix) {\n        if (matrix == null) {\n            throw new Error('ArgumentNullException:matrix');\n        }\n        this.stream.write(matrix.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.modifyCtm);\n    };\n    PdfStreamWriter.prototype.setFont = function (font, name, size) {\n        if (typeof name === 'string') {\n            this.setFont(font, new PdfName(name), size);\n        }\n        else {\n            if (font == null) {\n                throw new Error('ArgumentNullException:font');\n            }\n            this.stream.write(name.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.stream.write(PdfNumber.floatToString(size));\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setFont);\n        }\n    };\n    /**\n     * `Writes the operator`.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeOperator = function (opcode) {\n        this.stream.write(opcode);\n        this.stream.write(Operators.newLine);\n    };\n    PdfStreamWriter.prototype.checkTextParam = function (text) {\n        if (text == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        if (typeof text === 'string' && text === '') {\n            throw new Error('ArgumentException:The text can not be an empty string, text');\n        }\n    };\n    PdfStreamWriter.prototype.writeText = function (arg1, arg2) {\n        if ((arg1 instanceof PdfString) && (typeof arg2 === 'undefined')) {\n            this.stream.write(arg1.pdfEncode());\n        }\n        else {\n            var start = void 0;\n            var end = void 0;\n            if (arg2) {\n                start = PdfString.hexStringMark[0];\n                end = PdfString.hexStringMark[1];\n            }\n            else {\n                start = PdfString.stringMark[0];\n                end = PdfString.stringMark[1];\n            }\n            this.stream.write(start);\n            this.stream.write(arg1);\n            this.stream.write(end);\n        }\n    };\n    PdfStreamWriter.prototype.writePoint = function (arg1, arg2) {\n        if ((arg1 instanceof PointF) && (typeof arg2 === 'undefined')) {\n            this.writePoint(arg1.x, arg1.y);\n        }\n        else {\n            var temparg1 = arg1;\n            this.stream.write(PdfNumber.floatToString(temparg1));\n            this.stream.write(Operators.whiteSpace);\n            // NOTE: Change Y co-ordinate because we shifted co-ordinate system only.\n            arg2 = this.updateY(arg2);\n            this.stream.write(PdfNumber.floatToString(arg2));\n            this.stream.write(Operators.whiteSpace);\n        }\n    };\n    /**\n     * `Updates y` co-ordinate.\n     * @private\n     */\n    PdfStreamWriter.prototype.updateY = function (arg) {\n        return -arg;\n    };\n    /**\n     * `Writes string` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.write = function (string) {\n        var builder = '';\n        builder += string;\n        builder += Operators.newLine;\n        this.writeOperator(builder);\n    };\n    /**\n     * `Writes comment` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeComment = function (comment) {\n        if (comment != null && comment.length > 0) {\n            var builder = '';\n            builder += Operators.comment;\n            builder += Operators.whiteSpace;\n            builder += comment;\n            //builder.Append( Operators.NewLine );\n            this.writeOperator(builder);\n        }\n        else {\n            throw new Error('Invalid comment');\n        }\n    };\n    /**\n     * Sets the `color and space`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setColorAndSpace = function (color, colorSpace, forStroking) {\n        if (!color.isEmpty) {\n            // bool test = color is PdfExtendedColor;\n            this.stream.write(color.toString(colorSpace, forStroking));\n            this.stream.write(Operators.newLine);\n        }\n    };\n    // public setLineDashPattern(pattern : number[], patternOffset : number) : void\n    // {\n    //     let pat : PdfArray = new PdfArray(pattern);\n    //     let off : PdfNumber = new PdfNumber(patternOffset);\n    //     this.setLineDashPatternHelper(pat, off);\n    // }\n    // private setLineDashPatternHelper(pattern : PdfArray, patternOffset : PdfNumber) : void\n    // {\n    //     pattern.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     patternOffset.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     this.writeOperator(Operators.setDashPattern);\n    // }\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPattern = function (pattern, patternOffset) {\n        // let pat : PdfArray = new PdfArray(pattern);\n        // let off : PdfNumber = new PdfNumber(patternOffset);\n        // this.setLineDashPatternHelper(pat, off);\n        this.setLineDashPatternHelper(pattern, patternOffset);\n    };\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPatternHelper = function (pattern, patternOffset) {\n        var tempPattern = '[';\n        if (pattern.length > 1) {\n            for (var index = 0; index < pattern.length; index++) {\n                if (index === pattern.length - 1) {\n                    tempPattern += pattern[index].toString();\n                }\n                else {\n                    tempPattern += pattern[index].toString() + ' ';\n                }\n            }\n        }\n        tempPattern += '] ';\n        tempPattern += patternOffset.toString();\n        tempPattern += ' ' + Operators.setDashPattern;\n        this.stream.write(tempPattern);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * Sets the `miter limit`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setMiterLimit = function (miterLimit) {\n        this.stream.write(PdfNumber.floatToString(miterLimit));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setMiterLimit);\n    };\n    /**\n     * Sets the `width of the line`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineWidth = function (width) {\n        this.stream.write(PdfNumber.floatToString(width));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineWidth);\n    };\n    /**\n     * Sets the `line cap`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineCap = function (lineCapStyle) {\n        this.stream.write((lineCapStyle).toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineCapStyle);\n    };\n    /**\n     * Sets the `line join`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineJoin = function (lineJoinStyle) {\n        this.stream.write((lineJoinStyle).toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineJoinStyle);\n    };\n    Object.defineProperty(PdfStreamWriter.prototype, \"position\", {\n        //IPdfWriter members\n        /**\n         * Gets or sets the current `position` within the stream.\n         * @private\n         */\n        get: function () {\n            return this.stream.position;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"length\", {\n        /**\n         * Gets `stream length`.\n         * @private\n         */\n        get: function () {\n            var returnValue = 0;\n            if (this.stream.data.length !== 0 && this.stream.data.length !== -1) {\n                for (var index = 0; index < this.stream.data.length; index++) {\n                    returnValue += this.stream.data[index].length;\n                }\n            }\n            return returnValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"document\", {\n        /**\n         * Gets and Sets the `current document`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /* tslint:disable-next-line:max-line-length */\n    PdfStreamWriter.prototype.appendBezierSegment = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof PointF && arg2 instanceof PointF && arg3 instanceof PointF) {\n            this.writePoint(arg1.x, arg1.y);\n            this.writePoint(arg2.x, arg2.y);\n            this.writePoint(arg3.x, arg3.y);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writePoint(arg3, arg4);\n            this.writePoint(arg5, arg6);\n        }\n        this.writeOperator(Operators.appendbeziercurve);\n    };\n    PdfStreamWriter.prototype.setColourWithPattern = function (colours, patternName, forStroking) {\n        if ((colours != null)) {\n            var count = colours.length;\n            var i = 0;\n            for (i = 0; i < count; ++i) {\n                this.stream.write(colours[i].toString());\n                this.stream.write(Operators.whiteSpace);\n            }\n        }\n        if ((patternName != null)) {\n            this.stream.write(patternName.toString());\n            this.stream.write(Operators.whiteSpace);\n        }\n        if (forStroking) {\n            this.writeOperator(Operators.setColorAndPatternStroking);\n        }\n        else {\n            this.writeOperator(Operators.setColorAndPattern);\n        }\n    };\n    return PdfStreamWriter;\n}());\nexport { PdfStreamWriter };\n","/**\n * PdfPen.ts class for EJ2-PDF\n */\nimport { PdfColor } from './pdf-color';\nimport { PdfSolidBrush } from './brushes/pdf-solid-brush';\nimport { PdfDashStyle, PdfColorSpace } from './enum';\nimport { PdfBrush } from './brushes/pdf-brush';\n/**\n * `PdfPen` class defining settings for drawing operations, that determines the color,\n * width, and style of the drawing elements.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // create a new page\n * let page1 : PdfPage = document.pages.add();\n * // set pen\n * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n * // draw rectangle\n * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPen = /** @class */ (function () {\n    function PdfPen(arg1, arg2) {\n        //Fields\n        /**\n         * Specifies the `color of the pen`.\n         * @default new PdfColor()\n         * @private\n         */\n        this.pdfColor = new PdfColor(0, 0, 0);\n        /**\n         * Specifies the `dash offset of the pen`.\n         * @default 0\n         * @private\n         */\n        this.dashOffsetValue = 0;\n        /**\n         * Specifies the `dash pattern of the pen`.\n         * @default [0]\n         * @private\n         */\n        this.penDashPattern = [0];\n        /**\n         * Specifies the `dash style of the pen`.\n         * @default Solid\n         * @private\n         */\n        this.pdfDashStyle = PdfDashStyle.Solid;\n        /**\n         * Specifies the `line cap of the pen`.\n         * @default 0\n         * @private\n         */\n        this.pdfLineCap = 0;\n        /**\n         * Specifies the `line join of the pen`.\n         * @default 0\n         * @private\n         */\n        this.pdfLineJoin = 0;\n        /**\n         * Specifies the `width of the pen`.\n         * @default 1.0\n         * @private\n         */\n        this.penWidth = 1.0;\n        /**\n         * Specifies the `mitter limit of the pen`.\n         * @default 0.0\n         * @private\n         */\n        this.internalMiterLimit = 0.0;\n        /**\n         * Stores the `colorspace` value.\n         * @default Rgb\n         * @private\n         */\n        this.colorSpace = PdfColorSpace.Rgb;\n        if (arg1 instanceof PdfBrush) {\n            this.setBrush(arg1);\n        }\n        else if (arg1 instanceof PdfColor) {\n            this.color = arg1;\n        }\n        if (typeof arg2 === 'number') {\n            this.width = arg2;\n        }\n    }\n    Object.defineProperty(PdfPen.prototype, \"color\", {\n        //Properties\n        /**\n         * Gets or sets the `color of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashOffset\", {\n        /**\n         * Gets or sets the `dash offset of the pen`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.dashOffsetValue === 'undefined' || this.dashOffsetValue == null) {\n                return 0;\n            }\n            else {\n                return this.dashOffsetValue;\n            }\n        },\n        set: function (value) {\n            this.dashOffsetValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashPattern\", {\n        /**\n         * Gets or sets the `dash pattern of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.penDashPattern;\n        },\n        set: function (value) {\n            this.penDashPattern = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashStyle\", {\n        /**\n         * Gets or sets the `dash style of the pen`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create a new page\n         * let page1 : PdfPage = document.pages.add();\n         * // set pen\n         * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n         * //\n         * // set pen style\n         * pen.dashStyle = PdfDashStyle.DashDot;\n         * // get pen style\n         * let style : PdfDashStyle = pen.dashStyle;\n         * //\n         * // draw rectangle\n         * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfDashStyle;\n        },\n        set: function (value) {\n            if (this.pdfDashStyle !== value) {\n                this.pdfDashStyle = value;\n                switch (this.pdfDashStyle) {\n                    case PdfDashStyle.Custom:\n                        break;\n                    case PdfDashStyle.Dash:\n                        this.penDashPattern = [3, 1];\n                        break;\n                    case PdfDashStyle.Dot:\n                        this.penDashPattern = [1, 1];\n                        break;\n                    case PdfDashStyle.DashDot:\n                        this.penDashPattern = [3, 1, 1, 1];\n                        break;\n                    case PdfDashStyle.DashDotDot:\n                        this.penDashPattern = [3, 1, 1, 1, 1, 1];\n                        break;\n                    case PdfDashStyle.Solid:\n                        break;\n                    default:\n                        this.pdfDashStyle = PdfDashStyle.Solid;\n                        this.penDashPattern = [0];\n                        break;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"lineCap\", {\n        /**\n         * Gets or sets the `line cap of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfLineCap;\n        },\n        set: function (value) {\n            this.pdfLineCap = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"lineJoin\", {\n        /**\n         * Gets or sets the `line join style of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfLineJoin;\n        },\n        set: function (value) {\n            this.pdfLineJoin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"miterLimit\", {\n        /**\n         * Gets or sets the `miter limit`.\n         * @private\n         */\n        get: function () {\n            return this.internalMiterLimit;\n        },\n        set: function (value) {\n            this.internalMiterLimit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"width\", {\n        /**\n         * Gets or sets the `width of the pen`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create a new page\n         * let page1 : PdfPage = document.pages.add();\n         * // set pen\n         * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n         * //\n         * // set pen width\n         * pen.width = 2;\n         * //\n         * // draw rectangle\n         * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.penWidth;\n        },\n        set: function (value) {\n            this.penWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Helper\n    /**\n     * `Clones` this instance of PdfPen class.\n     * @private\n     */\n    PdfPen.prototype.clone = function () {\n        var pen = this;\n        return pen;\n    };\n    /**\n     * `Sets the brush`.\n     * @private\n     */\n    PdfPen.prototype.setBrush = function (brush) {\n        var sBrush = brush;\n        if ((sBrush != null && sBrush instanceof PdfSolidBrush)) {\n            this.color = sBrush.color;\n            this.pdfBrush = sBrush;\n        }\n        this.color = sBrush.color;\n        this.pdfBrush = sBrush;\n    };\n    /**\n     * `Monitors the changes`.\n     * @private\n     */\n    PdfPen.prototype.monitorChanges = function (currentPen, streamWriter, getResources, saveState, currentColorSpace, matrix) {\n        var diff = false;\n        saveState = true;\n        if (currentPen == null) {\n            diff = true;\n        }\n        diff = this.dashControl(currentPen, saveState, streamWriter);\n        streamWriter.setLineWidth(this.width);\n        streamWriter.setLineJoin(this.lineJoin);\n        streamWriter.setLineCap(this.lineCap);\n        var miterLimit = this.miterLimit;\n        if (miterLimit > 0) {\n            streamWriter.setMiterLimit(miterLimit);\n            diff = true;\n        }\n        var brush = this.pdfBrush;\n        streamWriter.setColorAndSpace(this.color, currentColorSpace, true);\n        diff = true;\n        return diff;\n    };\n    /**\n     * `Controls the dash style` and behaviour of each line.\n     * @private\n     */\n    PdfPen.prototype.dashControl = function (pen, saveState, streamWriter) {\n        saveState = true;\n        var lineWidth = this.width;\n        var pattern = this.getPattern();\n        streamWriter.setLineDashPattern(pattern, this.dashOffset * lineWidth);\n        return saveState;\n    };\n    /**\n     * `Gets the pattern` of PdfPen.\n     * @private\n     */\n    PdfPen.prototype.getPattern = function () {\n        var pattern = this.dashPattern;\n        for (var i = 0; i < pattern.length; ++i) {\n            pattern[i] *= this.width;\n        }\n        return pattern;\n    };\n    return PdfPen;\n}());\nexport { PdfPen };\n","/**\n * PdfTransformationMatrix.ts class for EJ2-PDF\n */\nimport { PointF } from './../drawing/pdf-drawing';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\n * Class for representing Root `transformation matrix`.\n */\nvar PdfTransformationMatrix = /** @class */ (function () {\n    function PdfTransformationMatrix(value) {\n        /**\n         * Value for `angle converting`.\n         * @default 180.0 / Math.PI\n         * @private\n         */\n        this.radDegFactor = 180.0 / Math.PI;\n        if (typeof value === 'undefined') {\n            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, 1.00, 0.00, 0.00);\n        }\n        else {\n            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, -1.00, 0.00, 0.00);\n        }\n    }\n    Object.defineProperty(PdfTransformationMatrix.prototype, \"matrix\", {\n        // Properties\n        /**\n         * Gets or sets the `internal matrix object`.\n         * @private\n         */\n        get: function () {\n            return this.transformationMatrix;\n        },\n        set: function (value) {\n            this.transformationMatrix = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /**\n     * `Translates` coordinates by specified coordinates.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.translate = function (offsetX, offsetY) {\n        this.transformationMatrix.translate(offsetX, offsetY);\n    };\n    /**\n     * `Scales` coordinates by specified coordinates.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.scale = function (scaleX, scaleY) {\n        this.transformationMatrix.elements[0] = scaleX;\n        this.transformationMatrix.elements[3] = scaleY;\n    };\n    /**\n     * `Rotates` coordinate system in counterclockwise direction.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.rotate = function (angle) {\n        //Convert from degree to radian \n        angle = (angle * Math.PI) / 180;\n        //Rotation \n        this.transformationMatrix.elements[0] = Math.cos(angle);\n        this.transformationMatrix.elements[1] = Math.sin(angle);\n        this.transformationMatrix.elements[2] = -Math.sin(angle);\n        this.transformationMatrix.elements[3] = Math.cos(angle);\n    };\n    // Overrides\n    /**\n     * Gets `PDF representation`.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.toString = function () {\n        var builder = '';\n        var whitespace = ' ';\n        for (var i = 0, len = this.transformationMatrix.elements.length; i < len; i++) {\n            var temp = this.matrix.elements[i];\n            builder += PdfNumber.floatToString(this.transformationMatrix.elements[i]);\n            builder += whitespace;\n        }\n        return builder;\n    };\n    // Implementation\n    /**\n     * `Multiplies` matrices (changes coordinate system.)\n     * @private\n     */\n    PdfTransformationMatrix.prototype.multiply = function (matrix) {\n        this.transformationMatrix.multiply(matrix.matrix);\n    };\n    /**\n     * Converts `degrees to radians`.\n     * @private\n     */\n    PdfTransformationMatrix.degreesToRadians = function (degreesX) {\n        return this.degRadFactor * degreesX;\n    };\n    /**\n     * Converts `radians to degrees`.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.radiansToDegrees = function (radians) {\n        return this.radDegFactor * radians;\n    };\n    /**\n     * `Clones` this instance of PdfTransformationMatrix.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.clone = function () {\n        return this;\n    };\n    // Constants\n    /**\n     * Value for `angle converting`.\n     * @default Math.PI / 180.0\n     * @private\n     */\n    PdfTransformationMatrix.degRadFactor = Math.PI / 180.0;\n    return PdfTransformationMatrix;\n}());\nexport { PdfTransformationMatrix };\nvar Matrix = /** @class */ (function () {\n    function Matrix(arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (typeof arg1 === 'undefined') {\n            this.metrixElements = [];\n        }\n        else if (typeof arg1 === 'number') {\n            this.metrixElements = [];\n            this.metrixElements.push(arg1);\n            this.metrixElements.push(arg2);\n            this.metrixElements.push(arg3);\n            this.metrixElements.push(arg4);\n            this.metrixElements.push(arg5);\n            this.metrixElements.push(arg6);\n        }\n        else {\n            this.metrixElements = arg1;\n        }\n    }\n    Object.defineProperty(Matrix.prototype, \"elements\", {\n        // Properties\n        /**\n         * Gets the `elements`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"offsetX\", {\n        /**\n         * Gets the off set `X`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements[4];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"offsetY\", {\n        /**\n         * Gets the off set `Y`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements[5];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Translates` coordinates by specified coordinates.\n     * @private\n     */\n    Matrix.prototype.translate = function (offsetX, offsetY) {\n        this.metrixElements[4] = offsetX;\n        this.metrixElements[5] = offsetY;\n    };\n    /**\n     * `Translates` the specified offset X.\n     * @private\n     */\n    Matrix.prototype.transform = function (point) {\n        var x = point.x;\n        var y = point.y;\n        var x2 = x * this.elements[0] + y * this.elements[2] + this.offsetX;\n        var y2 = x * this.elements[1] + y * this.elements[3] + this.offsetY;\n        return new PointF(x2, y2);\n    };\n    /**\n     * `Multiplies matrices` (changes coordinate system.)\n     * @private\n     */\n    Matrix.prototype.multiply = function (matrix) {\n        var tempMatrix = [];\n        tempMatrix.push(this.elements[0] * matrix.elements[0] + this.elements[1] * matrix.elements[2]);\n        tempMatrix[1] = (this.elements[0] * matrix.elements[1] + this.elements[1] * matrix.elements[3]);\n        tempMatrix[2] = (this.elements[2] * matrix.elements[0] + this.elements[3] * matrix.elements[2]);\n        tempMatrix[3] = (this.elements[2] * matrix.elements[1] + this.elements[3] * matrix.elements[3]);\n        tempMatrix[4] = (this.offsetX * matrix.elements[0] + this.offsetY * matrix.elements[2] + matrix.offsetX);\n        tempMatrix[5] = (this.offsetX * matrix.elements[1] + this.offsetY * matrix.elements[3] + matrix.offsetY);\n        for (var i = 0; i < tempMatrix.length; i++) {\n            this.elements[i] = tempMatrix[i];\n        }\n    };\n    // IDisposable Members\n    /**\n     * `Dispose` this instance of PdfTransformationMatrix class.\n     * @private\n     */\n    Matrix.prototype.dispose = function () {\n        this.metrixElements = null;\n    };\n    // ICloneable Members\n    /**\n     * `Clones` this instance of PdfTransformationMatrix class.\n     * @private\n     */\n    Matrix.prototype.clone = function () {\n        var m = new Matrix(this.metrixElements);\n        return m;\n    };\n    return Matrix;\n}());\nexport { Matrix };\n","/**\n * `constants.ts` class for EJ2-PDF\n * @private\n */\nvar ProcedureSets = /** @class */ (function () {\n    function ProcedureSets() {\n        /**\n         * Specifies the `PDF` procedure set.\n         * @private\n         */\n        this.pdf = 'PDF';\n        /**\n         * Specifies the `Text` procedure set.\n         * @private\n         */\n        this.text = 'Text';\n        /**\n         * Specifies the `ImageB` procedure set.\n         * @private\n         */\n        this.imageB = 'ImageB';\n        /**\n         * Specifies the `ImageC` procedure set.\n         * @private\n         */\n        this.imageC = 'ImageC';\n        /**\n         * Specifies the `ImageI` procedure set.\n         * @private\n         */\n        this.imageI = 'ImageI';\n    }\n    return ProcedureSets;\n}());\nexport { ProcedureSets };\n","/**\n * Dictionary class\n * @private\n * @hidden\n */\nvar TemporaryDictionary = /** @class */ (function () {\n    function TemporaryDictionary() {\n        /**\n         * @hidden\n         * @private\n         */\n        this.mKeys = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.mValues = [];\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.size = function () {\n        return this.mKeys.length;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.add = function (key, value) {\n        if (key === undefined || key === null || value === undefined || value === null) {\n            throw new ReferenceError('Provided key or value is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            this.mKeys.push(key);\n            this.mValues.push(value);\n            return 1;\n        }\n        else {\n            throw new RangeError('An item with the same key has already been added.');\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.keys = function () {\n        return this.mKeys;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.values = function () {\n        return this.mValues;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.getValue = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            throw new RangeError('No item with the specified key has been added.');\n        }\n        else {\n            return this.mValues[index];\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.setValue = function (key, value) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            this.mKeys.push(key);\n            this.mValues.push(value);\n        }\n        else {\n            this.mValues[index] = value;\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.remove = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            throw new RangeError('No item with the specified key has been added.');\n        }\n        else {\n            this.mKeys.splice(index, 1);\n            this.mValues.splice(index, 1);\n            return true;\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.containsKey = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.clear = function () {\n        this.mKeys = [];\n        this.mValues = [];\n    };\n    return TemporaryDictionary;\n}());\nexport { TemporaryDictionary };\n","import { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * Represents a simple `transparency`.\n * @private\n */\nvar PdfTransparency = /** @class */ (function () {\n    // Properties\n    // /**\n    //  * Gets the `stroke` operation alpha value.\n    //  * @private\n    //  */\n    // public get stroke() : number {\n    //     let result : number = this.getNumber(this.dictionaryProperties.CA);\n    //     return result;\n    // }\n    // /**\n    //  * Gets the `fill` operation alpha value.\n    //  * @private\n    //  */\n    // public get fill() : number {\n    //     let result : number = this.getNumber(this.dictionaryProperties.ca);\n    //     return result;\n    // }\n    // /**\n    //  * Gets the `blend mode`.\n    //  * @private\n    //  */\n    // public get mode() : PdfBlendMode {\n    //     let result : string = this.getName(this.dictionaryProperties.ca);\n    //     return PdfBlendMode.Normal;\n    // }\n    // Constructors\n    /**\n     * Initializes a new instance of the `Transparency` class.\n     * @private\n     */\n    function PdfTransparency(stroke, fill, mode) {\n        // Fields\n        /**\n         * Internal variable to store `dictionary`.\n         * @default new PdfDictionary()\n         * @private\n         */\n        this.dictionary = new PdfDictionary();\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @default new DictionaryProperties()\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.dictionary.items.setValue(this.dictionaryProperties.CA, new PdfNumber(stroke));\n        this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(fill));\n        this.dictionary.items.setValue(this.dictionaryProperties.BM, new PdfName(mode.toString()));\n    }\n    Object.defineProperty(PdfTransparency.prototype, \"element\", {\n        // // Implementation\n        // /**\n        //  * Gets the `number value`.\n        //  * @private\n        //  */\n        // private getNumber(keyName : string) : number {\n        //     let result : number = 0.0;\n        //     let numb : PdfNumber = this.dictionary.items.getValue(keyName) as PdfNumber;\n        //     result = numb.intValue;\n        //     return result;\n        // }\n        // /**\n        //  * Gets the `name value`.\n        //  * @private\n        //  */\n        // private getName(keyName : string) : string {\n        //     let result : string = null;\n        //     let name : PdfName = this.dictionary.items.getValue(keyName) as PdfName;\n        //     result = name.value;\n        //     return result;\n        // }\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTransparency;\n}());\nexport { PdfTransparency };\n","/**\n * Represent a `collection of automatic fields information`.\n * @private\n */\nvar PdfAutomaticFieldInfoCollection = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the 'PdfPageNumberFieldInfoCollection' class.\n     * @private\n     */\n    function PdfAutomaticFieldInfoCollection() {\n        /**\n         * Internal variable to store instance of `pageNumberFields` class.\n         * @private\n         */\n        this.automaticFieldsInformation = [];\n        //\n    }\n    Object.defineProperty(PdfAutomaticFieldInfoCollection.prototype, \"automaticFields\", {\n        /**\n         * Gets the `page number fields collection`.\n         * @private\n         */\n        get: function () {\n            return this.automaticFieldsInformation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /// Adds the specified field info.\n    /**\n     * Add page number field into collection.\n     * @private\n     */\n    PdfAutomaticFieldInfoCollection.prototype.add = function (fieldInfo) {\n        return this.automaticFields.push(fieldInfo);\n    };\n    return PdfAutomaticFieldInfoCollection;\n}());\nexport { PdfAutomaticFieldInfoCollection };\n","/**\n * Represents a base class for all page graphics elements.\n */\nvar PdfGraphicsElement = /** @class */ (function () {\n    // Constructors\n    function PdfGraphicsElement() {\n        //\n    }\n    /**\n     * `Draws` the page number field.\n     * @public\n     */\n    PdfGraphicsElement.prototype.drawHelper = function (graphics, x, y) {\n        var bNeedSave = (x !== 0 || y !== 0);\n        var gState = null;\n        // Translate co-ordinates.\n        if (bNeedSave) {\n            // Save state.\n            gState = graphics.save();\n            graphics.translateTransform(x, y);\n        }\n        this.drawInternal(graphics);\n        if (bNeedSave) {\n            // Restore state.\n            graphics.restore(gState);\n        }\n    };\n    return PdfGraphicsElement;\n}());\nexport { PdfGraphicsElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfAutomaticField.ts class for EJ2-PDF\n */\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfSolidBrush } from './../../graphics/brushes/pdf-solid-brush';\nimport { PdfColor } from './../../graphics/pdf-color';\nimport { PdfDocument } from './../pdf-document';\nimport { PdfGraphicsElement } from './../../graphics/figures/base/graphics-element';\nimport { PdfAutomaticFieldInfo } from './automatic-field-info';\n/**\n * Represents a fields which is calculated before the document saves.\n */\nvar PdfAutomaticField = /** @class */ (function (_super) {\n    __extends(PdfAutomaticField, _super);\n    // Constructors\n    function PdfAutomaticField() {\n        var _this = _super.call(this) || this;\n        // Fields\n        _this.internalBounds = new RectangleF(0, 0, 0, 0);\n        _this.internalTemplateSize = new SizeF(0, 0);\n        return _this;\n    }\n    Object.defineProperty(PdfAutomaticField.prototype, \"bounds\", {\n        // Properties\n        get: function () {\n            return this.internalBounds;\n        },\n        set: function (value) {\n            this.internalBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"size\", {\n        get: function () {\n            return new SizeF(this.bounds.width, this.bounds.height);\n        },\n        set: function (value) {\n            this.bounds.width = value.width;\n            this.bounds.height = value.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"location\", {\n        get: function () {\n            return new PointF(this.bounds.x, this.bounds.y);\n        },\n        set: function (value) {\n            this.bounds.x = value.x;\n            this.bounds.y = value.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"font\", {\n        get: function () {\n            return this.internalFont;\n        },\n        set: function (value) {\n            this.internalFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"brush\", {\n        get: function () {\n            return this.internalBrush;\n        },\n        set: function (value) {\n            this.internalBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"pen\", {\n        get: function () {\n            return this.internalPen;\n        },\n        set: function (value) {\n            this.internalPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"stringFormat\", {\n        get: function () {\n            return this.internalStringFormat;\n        },\n        set: function (value) {\n            this.internalStringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAutomaticField.prototype.performDrawHelper = function (graphics, location, scalingX, scalingY) {\n        if (this.bounds.height === 0 || this.bounds.width === 0) {\n            var text = this.getValue(graphics);\n            this.internalTemplateSize = this.getFont().measureString(text, this.size, this.stringFormat);\n        }\n    };\n    PdfAutomaticField.prototype.draw = function (arg1, arg2, arg3) {\n        if (typeof arg2 === 'undefined') {\n            var location_1 = new PointF(0, 0);\n            this.draw(arg1, location_1);\n        }\n        else if (arg2 instanceof PointF) {\n            this.draw(arg1, arg2.x, arg2.y);\n        }\n        else {\n            this.drawHelper(arg1, arg2, arg3);\n            var info = new PdfAutomaticFieldInfo(this, new PointF(arg2, arg3));\n            arg1.automaticFields.add(info);\n        }\n    };\n    PdfAutomaticField.prototype.getSize = function () {\n        if (this.bounds.height === 0 || this.bounds.width === 0) {\n            return this.internalTemplateSize;\n        }\n        else {\n            return this.size;\n        }\n    };\n    PdfAutomaticField.prototype.drawInternal = function (graphics) {\n        //\n    };\n    /* tslint:disable */\n    PdfAutomaticField.prototype.getBrush = function () {\n        return (typeof this.internalBrush === 'undefined' || this.internalBrush == null) ? new PdfSolidBrush(new PdfColor(0, 0, 0)) : this.internalBrush;\n    };\n    PdfAutomaticField.prototype.getFont = function () {\n        return (typeof this.internalFont === 'undefined' || this.internalFont == null) ? PdfDocument.defaultFont : this.internalFont;\n    };\n    /* tslint:enable */\n    PdfAutomaticField.prototype.getPageFromGraphics = function (graphics) {\n        if (typeof graphics.page !== 'undefined' && graphics.page !== null) {\n            var page = graphics.page;\n            return page;\n        }\n        else {\n            var page = graphics.currentPage;\n            return page;\n        }\n    };\n    return PdfAutomaticField;\n}(PdfGraphicsElement));\nexport { PdfAutomaticField };\n","/**\n * PdfAutomaticFieldInfo.ts class for EJ2-PDF\n * @private\n */\nimport { PointF } from './../../drawing/pdf-drawing';\nimport { PdfAutomaticField } from './automatic-field';\n/**\n * Represents information about the automatic field.\n * @private\n */\nvar PdfAutomaticFieldInfo = /** @class */ (function () {\n    function PdfAutomaticFieldInfo(field, location, scaleX, scaleY) {\n        // Fields\n        /**\n         * Internal variable to store location of the field.\n         * @private\n         */\n        this.pageNumberFieldLocation = new PointF();\n        /**\n         * Internal variable to store field.\n         * @private\n         */\n        this.pageNumberField = null;\n        /**\n         * Internal variable to store x scaling factor.\n         * @private\n         */\n        this.scaleX = 1;\n        /**\n         * Internal variable to store y scaling factor.\n         * @private\n         */\n        this.scaleY = 1;\n        if (typeof location === 'undefined' && field instanceof PdfAutomaticFieldInfo) {\n            this.pageNumberField = field.field;\n            this.pageNumberFieldLocation = field.location;\n            this.scaleX = field.scalingX;\n            this.scaleY = field.scalingY;\n        }\n        else if (typeof scaleX === 'undefined' && location instanceof PointF && field instanceof PdfAutomaticField) {\n            this.pageNumberField = field;\n            this.pageNumberFieldLocation = location;\n        }\n        else {\n            this.pageNumberField = field;\n            this.pageNumberFieldLocation = location;\n            this.scaleX = scaleX;\n            this.scaleY = scaleY;\n        }\n    }\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"location\", {\n        /* tslint:enable */\n        // Properties\n        /**\n         * Gets or sets the location.\n         * @private\n         */\n        get: function () {\n            return this.pageNumberFieldLocation;\n        },\n        set: function (value) {\n            this.pageNumberFieldLocation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"field\", {\n        /**\n         * Gets or sets the field.\n         * @private\n         */\n        get: function () {\n            return this.pageNumberField;\n        },\n        set: function (value) {\n            this.pageNumberField = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"scalingX\", {\n        /**\n         * Gets or sets the scaling X factor.\n         * @private\n         */\n        get: function () {\n            return this.scaleX;\n        },\n        set: function (value) {\n            this.scaleX = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"scalingY\", {\n        /**\n         * Gets or sets the scaling Y factor.\n         * @private\n         */\n        get: function () {\n            return this.scaleY;\n        },\n        set: function (value) {\n            this.scaleY = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAutomaticFieldInfo;\n}());\nexport { PdfAutomaticFieldInfo };\n","/**\n * ByteArray class\n * Used to keep information about image stream as byte array.\n * @private\n */\nvar ByteArray = /** @class */ (function () {\n    /**\n     * Initialize the new instance for `byte-array` class\n     * @hidden\n     * @private\n     */\n    function ByteArray(length) {\n        /**\n         * Current stream `position`.\n         * @default 0\n         * @private\n         */\n        this.mPosition = 0;\n        this.buffer = new Uint8Array(length);\n        this.dataView = new DataView(this.buffer.buffer);\n    }\n    Object.defineProperty(ByteArray.prototype, \"position\", {\n        /**\n         * Gets and Sets a current `position` of byte array.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mPosition;\n        },\n        set: function (value) {\n            this.mPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Read` from current stream position.\n     * @default 0\n     * @hidden\n     * @private\n     */\n    ByteArray.prototype.read = function (buffer, offset, count) {\n        for (var index = offset; index < count; index++) {\n            var position = this.position;\n            buffer.buffer[index] = this.readByte(position);\n            this.position++;\n        }\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.getBuffer = function (index) {\n        return this.buffer[index];\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.writeFromBase64String = function (base64) {\n        var arr = this.encodedString(base64);\n        this.buffer = arr;\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.encodedString = function (input) {\n        var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        var chr1;\n        var chr2;\n        var chr3;\n        var enc1;\n        var enc2;\n        var enc3;\n        var enc4;\n        var i = 0;\n        var resultIndex = 0;\n        var dataUrlPrefix = 'data:';\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n        var totalLength = input.length * 3 / 4;\n        if (input.charAt(input.length - 1) === keyStr.charAt(64)) {\n            totalLength--;\n        }\n        var output = new Uint8Array(totalLength | 0);\n        while (i < input.length) {\n            enc1 = keyStr.indexOf(input.charAt(i++));\n            enc2 = keyStr.indexOf(input.charAt(i++));\n            enc3 = keyStr.indexOf(input.charAt(i++));\n            enc4 = keyStr.indexOf(input.charAt(i++));\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n            output[resultIndex++] = chr1;\n            output[resultIndex++] = chr2;\n            output[resultIndex++] = chr3;\n        }\n        return output;\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.readByte = function (offset) {\n        return (this.buffer[offset]);\n    };\n    Object.defineProperty(ByteArray.prototype, \"internalBuffer\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ByteArray.prototype, \"count\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this.buffer.byteLength;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * 'readNextTwoBytes' stream\n     * @hidden\n     * @private\n     */\n    ByteArray.prototype.readNextTwoBytes = function (stream) {\n        var data = stream.readByte(this.position);\n        this.position++;\n        data <<= 8;\n        data |= stream.readByte(this.position);\n        this.position++;\n        return data;\n    };\n    return ByteArray;\n}());\nexport { ByteArray };\n","/**\n * ImageDecoder class\n */\nimport { ByteArray } from './byte-array';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfBoolean } from './../../primitives/pdf-boolean';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\n/**\n * Specifies the image `format`.\n * @private\n */\nexport var ImageFormat;\n(function (ImageFormat) {\n    /**\n     * Specifies the type of `Unknown`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Specifies the type of `Bmp`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Bmp\"] = 1] = \"Bmp\";\n    /**\n     * Specifies the type of `Emf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Emf\"] = 2] = \"Emf\";\n    /**\n     * Specifies the type of `Gif`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Gif\"] = 3] = \"Gif\";\n    /**\n     * Specifies the type of `Jpeg`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Jpeg\"] = 4] = \"Jpeg\";\n    /**\n     * Specifies the type of `Png`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Png\"] = 5] = \"Png\";\n    /**\n     * Specifies the type of `Wmf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Wmf\"] = 6] = \"Wmf\";\n    /**\n     * Specifies the type of `Icon`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Icon\"] = 7] = \"Icon\";\n})(ImageFormat || (ImageFormat = {}));\n/**\n * `Decode the image stream`.\n * @private\n */\nvar ImageDecoder = /** @class */ (function () {\n    /**\n     * Initialize the new instance for `image-decoder` class.\n     * @private\n     */\n    function ImageDecoder(stream) {\n        /**\n         * Start of file markers.\n         * @hidden\n         * @private\n         */\n        this.sof1Marker = 0x00C1;\n        this.sof2Marker = 0x00C2;\n        this.sof3Marker = 0x00C3;\n        this.sof5Marker = 0x00C5;\n        this.sof6Marker = 0x00C6;\n        this.sof7Marker = 0x00C7;\n        this.sof9Marker = 0x00C9;\n        this.sof10Marker = 0x00CA;\n        this.sof11Marker = 0x00CB;\n        this.sof13Marker = 0x00CD;\n        this.sof14Marker = 0x00CE;\n        this.sof15Marker = 0x00CF;\n        /**\n         * Specifies `format` of image.\n         * @hidden\n         * @private\n         */\n        this.mFormat = ImageFormat.Unknown;\n        /**\n         * `Bits per component`.\n         * @default 8\n         * @hidden\n         * @private\n         */\n        this.mbitsPerComponent = 8;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.mStream = stream;\n        this.initialize();\n    }\n    Object.defineProperty(ImageDecoder.prototype, \"height\", {\n        /**\n         * Gets the `height` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"width\", {\n        /**\n         * Gets the `width` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"bitsPerComponent\", {\n        /**\n         * Gets `bits per component`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mbitsPerComponent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"size\", {\n        /**\n         * Gets the `size` of an image data.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageData\", {\n        /**\n         * Gets the value of an `image data`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageDataAsNumberArray\", {\n        /**\n         * Gets the value of an `image data as number array`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.internalBuffer.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Initialize` image data and image stream.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.initialize = function () {\n        if (this.mFormat === ImageFormat.Unknown && this.checkIfJpeg()) {\n            this.mFormat = ImageFormat.Jpeg;\n            this.parseJpegImage();\n        }\n        else {\n            throw new TypeError('Only the JPEG format is supported');\n        }\n        this.reset();\n        this.mImageData = new ByteArray(this.mStream.count);\n        this.mStream.read(this.mImageData, 0, this.mImageData.count);\n    };\n    /**\n     * `Reset` stream position into 0.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.reset = function () {\n        this.mStream.position = 0;\n    };\n    /**\n     * `Parse` Jpeg image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.parseJpegImage = function () {\n        this.reset();\n        var imgData = new ByteArray(this.mStream.count);\n        this.mStream.read(imgData, 0, imgData.count);\n        var i = 4;\n        var isLengthExceed = false;\n        /* tslint:disable */\n        var length = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n        while (i < imgData.count) {\n            i += length;\n            if (i < imgData.count) {\n                if (imgData.getBuffer(i + 1) === 192) {\n                    this.mHeight = imgData.getBuffer(i + 5) * 256 + imgData.getBuffer(i + 6);\n                    this.mWidth = imgData.getBuffer(i + 7) * 256 + imgData.getBuffer(i + 8);\n                    return;\n                }\n                else {\n                    i += 2;\n                    length = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n                }\n            }\n            else {\n                isLengthExceed = true;\n                break;\n            }\n        }\n        if (isLengthExceed) {\n            this.mStream.position = 0;\n            this.skip(this.mStream, 2);\n            this.readExceededJPGImage(this.mStream);\n        }\n        /* tslint:enable */\n    };\n    Object.defineProperty(ImageDecoder.prototype, \"format\", {\n        /**\n         * Gets the image `format`.\n         * @private\n         * @hidden\n         */\n        get: function () {\n            return this.mFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Checks if JPG`.\n     * @private\n     * @hidden\n     */\n    ImageDecoder.prototype.checkIfJpeg = function () {\n        this.reset();\n        for (var i = 0; i < ImageDecoder.mJpegHeader.length; i++) {\n            if (ImageDecoder.mJpegHeader[i] !== this.mStream.readByte(i)) {\n                return false;\n            }\n            this.mStream.position++;\n        }\n        return true;\n    };\n    /**\n     * Return image `dictionary`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getImageDictionary = function () {\n        if (this.mFormat === ImageFormat.Jpeg) {\n            var tempArrayBuffer = this.imageData.internalBuffer.length;\n            this.imageStream = new PdfStream();\n            this.imageStream.isResource = true;\n            var tempString = '';\n            var decodedString = '';\n            for (var i = 0; i < this.imageDataAsNumberArray.byteLength; i++) {\n                tempString += String.fromCharCode(null, this.mStream.readByte(i));\n            }\n            for (var i = 0; i < tempString.length; i++) {\n                if (i % 2 !== 0) {\n                    decodedString += tempString[i];\n                }\n            }\n            this.imageStream.data = [decodedString];\n            this.imageStream.compress = false;\n            this.imageStream.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.xObject));\n            this.imageStream.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.image));\n            this.imageStream.items.setValue(this.dictionaryProperties.width, new PdfNumber(this.width));\n            this.imageStream.items.setValue(this.dictionaryProperties.height, new PdfNumber(this.height));\n            this.imageStream.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n            this.imageStream.items.setValue(this.dictionaryProperties.filter, new PdfName(this.dictionaryProperties.dctdecode));\n            this.imageStream.items.setValue(this.dictionaryProperties.colorSpace, new PdfName(this.getColorSpace()));\n            this.imageStream.items.setValue(this.dictionaryProperties.decodeParms, this.getDecodeParams());\n            return this.imageStream;\n        }\n        else {\n            return this.imageStream;\n        }\n    };\n    /**\n     * Return `colorSpace` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getColorSpace = function () {\n        return this.dictionaryProperties.deviceRgb;\n    };\n    /**\n     * Return `decode parameters` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getDecodeParams = function () {\n        var decodeParams = new PdfDictionary();\n        decodeParams.items.setValue(this.dictionaryProperties.columns, new PdfNumber(this.width));\n        decodeParams.items.setValue(this.dictionaryProperties.blackIs1, new PdfBoolean(true));\n        decodeParams.items.setValue(this.dictionaryProperties.k, new PdfNumber(-1));\n        decodeParams.items.setValue(this.dictionaryProperties.predictor, new PdfNumber(15));\n        decodeParams.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n        return decodeParams;\n    };\n    /**\n     * 'readExceededJPGImage' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.readExceededJPGImage = function (stream) {\n        this.mStream = stream;\n        var isContinueReading = true;\n        while (isContinueReading) {\n            var marker = this.getMarker(stream);\n            switch (marker) {\n                case this.sof1Marker:\n                case this.sof2Marker:\n                case this.sof3Marker:\n                case this.sof5Marker:\n                case this.sof6Marker:\n                case this.sof7Marker:\n                case this.sof9Marker:\n                case this.sof10Marker:\n                case this.sof11Marker:\n                case this.sof13Marker:\n                case this.sof14Marker:\n                case this.sof15Marker:\n                    stream.position += 3;\n                    this.mHeight = this.mStream.readNextTwoBytes(stream);\n                    this.mWidth = this.mStream.readNextTwoBytes(stream);\n                    isContinueReading = false;\n                    break;\n                default:\n                    this.skipStream(stream);\n                    break;\n            }\n        }\n    };\n    /**\n     * 'skip' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.skip = function (stream, noOfBytes) {\n        this.mStream = stream;\n        var temp = new ByteArray(noOfBytes);\n        this.mStream.read(temp, 0, temp.count);\n    };\n    /**\n     * 'getMarker' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getMarker = function (stream) {\n        var skippedByte = 0;\n        var marker = 32;\n        marker = stream.readByte(this.mStream.position);\n        stream.position++;\n        while (marker !== 255) {\n            skippedByte++;\n            marker = stream.readByte(this.mStream.position);\n            stream.position++;\n        }\n        do {\n            marker = stream.readByte(this.mStream.position);\n            stream.position++;\n        } while (marker === 255);\n        return marker;\n    };\n    /**\n     * 'skipStream' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.skipStream = function (stream) {\n        var markerLength = this.mStream.readNextTwoBytes(stream) - 2;\n        if (markerLength > 0) {\n            stream.position += markerLength;\n        }\n    };\n    /**\n     * Number array for `png header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mPngHeader = [137, 80, 78, 71, 13, 10, 26, 10];\n    /**\n     * Number Array for `jpeg header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mJpegHeader = [255, 216];\n    /**\n     * Number array for `gif header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.GIF_HEADER = 'G,I,F,8';\n    /**\n     * Number array for `bmp header.`\n     * @hidden\n     * @private\n     */\n    ImageDecoder.BMP_HEADER = 'B,M';\n    return ImageDecoder;\n}());\nexport { ImageDecoder };\n","/**\n * Used to perform `convertion between pixels and points`.\n * @private\n */\nvar PdfUnitConverter = /** @class */ (function () {\n    //constructors\n    /**\n     * Initializes a new instance of the `UnitConvertor` class with DPI value.\n     * @private\n     */\n    function PdfUnitConverter(dpi) {\n        this.updateProportionsHelper(dpi);\n    }\n    /**\n     * `Converts` the value, from one graphics unit to another graphics unit.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertUnits = function (value, from, to) {\n        return this.convertFromPixels(this.convertToPixels(value, from), to);\n    };\n    /**\n     * Converts the value `to pixel` from specified graphics unit.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertToPixels = function (value, from) {\n        var index = from;\n        var result = (value * this.proportions[index]);\n        return result;\n    };\n    /**\n     * Converts value, to specified graphics unit `from Pixel`.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertFromPixels = function (value, to) {\n        var index = to;\n        var result = (value / this.proportions[index]);\n        return result;\n    };\n    /**\n     * `Update proportions` matrix according to Graphics settings.\n     * @private\n     */\n    PdfUnitConverter.prototype.updateProportionsHelper = function (pixelPerInch) {\n        this.proportions = [\n            pixelPerInch / 2.54,\n            pixelPerInch / 6.0,\n            1,\n            pixelPerInch / 72.0,\n            pixelPerInch,\n            pixelPerInch / 300.0,\n            pixelPerInch / 25.4 // Millimeter\n        ];\n    };\n    //Fields\n    /**\n     * Indicates default `horizontal resolution`.\n     * @default 96\n     * @private\n     */\n    PdfUnitConverter.horizontalResolution = 96;\n    /**\n     * Indicates default `vertical resolution`.\n     * @default 96\n     * @private\n     */\n    PdfUnitConverter.verticalResolution = 96;\n    return PdfUnitConverter;\n}());\nexport { PdfUnitConverter };\n","import { SizeF } from './../../drawing/pdf-drawing';\nimport { PdfGraphicsUnit } from './../enum';\nimport { PdfUnitConverter } from './../unit-convertor';\n/**\n * `PdfImage` class represents the base class for images and provides functionality for the 'PdfBitmap' class.\n * @private\n */\nvar PdfImage = /** @class */ (function () {\n    function PdfImage() {\n    }\n    Object.defineProperty(PdfImage.prototype, \"width\", {\n        /**\n         * Gets and Sets the `width` of an image.\n         * @private\n         */\n        get: function () {\n            return this.imageWidth;\n        },\n        set: function (value) {\n            this.imageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"height\", {\n        /**\n         * Gets and Sets the `height` of an image.\n         * @private\n         */\n        get: function () {\n            return this.imageHeight;\n        },\n        set: function (value) {\n            this.imageHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"size\", {\n        /**\n         * Gets or sets the size of the image.\n         * @private\n         */\n        set: function (value) {\n            this.width = value.width;\n            this.height = value.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"physicalDimension\", {\n        /**\n         * Gets the `physical dimension` of an image.\n         * @private\n         */\n        get: function () {\n            this.imagePhysicalDimension = this.getPointSize(this.width, this.height, this.horizontalResolution, this.verticalResolution);\n            return new SizeF(this.width, this.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"element\", {\n        // /**\n        //  * Gets the `image stream as string`.\n        //  * @private\n        //  */\n        // public static fromString(string : string) : PdfImage {\n        //     let image : PdfImage = new PdfBitmap(string);\n        //     return image;\n        // }\n        /**\n         * Gets the `element` image stream.\n         * @private\n         */\n        get: function () {\n            return this.imageStream;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfImage.prototype.getPointSize = function (width, height, horizontalResolution, verticalResolution) {\n        if (typeof horizontalResolution === 'undefined') {\n            var dpiX = PdfUnitConverter.horizontalResolution;\n            var dpiY = PdfUnitConverter.verticalResolution;\n            var size = this.getPointSize(width, height, dpiX, dpiY);\n            return size;\n        }\n        else {\n            var ucX = new PdfUnitConverter(horizontalResolution);\n            var ucY = new PdfUnitConverter(verticalResolution);\n            var ptWidth = ucX.convertUnits(width, PdfGraphicsUnit.Pixel, PdfGraphicsUnit.Point);\n            var ptHeight = ucY.convertUnits(height, PdfGraphicsUnit.Pixel, PdfGraphicsUnit.Point);\n            var size = new SizeF(ptWidth, ptHeight);\n            return size;\n        }\n    };\n    return PdfImage;\n}());\nexport { PdfImage };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfBitmap.ts class for EJ2-PDF\n */\nimport { ImageDecoder } from './../../graphics/images/image-decoder';\nimport { ByteArray } from './../../graphics/images/byte-array';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfImage } from './pdf-image';\n/**\n * The 'PdfBitmap' contains methods and properties to handle the Bitmap images.\n * ```typescript\n * // create a new PDF document.\n * let document : PdfDocument = new PdfDocument();\n * // add a page to the document.\n * let page1 : PdfPage = document.pages.add();\n * // base64 string of an image\n * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\n * // load the image from the base64 string of original image.\n * let image : PdfBitmap = new PdfBitmap(imageString);\n * // draw the image\n * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBitmap = /** @class */ (function (_super) {\n    __extends(PdfBitmap, _super);\n    /**\n     * Create an instance for `PdfBitmap` class.\n     * @param encodedString Base64 string of an image.\n     * ```typescript\n     * // create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // add a page to the document.\n     * let page1 : PdfPage = document.pages.add();\n     * // base64 string of an image\n     * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\n     * //\n     * // load the image from the base64 string of original image.\n     * let image : PdfBitmap = new PdfBitmap(imageString);\n     * //\n     * // draw the image\n     * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfBitmap(encodedString) {\n        var _this = _super.call(this) || this;\n        //Fields\n        /**\n         * Specifies the `status` of an image.\n         * @default true.\n         * @hidden\n         * @private\n         */\n        _this.imageStatus = true;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @hidden\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        _this.loadImage(encodedString);\n        return _this;\n    }\n    /**\n     * `Load image`.\n     * @hidden\n     * @private\n     */\n    PdfBitmap.prototype.loadImage = function (encodedString) {\n        var task = this.initializeAsync(encodedString);\n    };\n    /**\n     * `Initialize` image parameters.\n     * @private\n     */\n    PdfBitmap.prototype.initializeAsync = function (encodedString) {\n        var byteArray = new ByteArray(encodedString.length);\n        byteArray.writeFromBase64String(encodedString);\n        this.decoder = new ImageDecoder(byteArray);\n        this.height = this.decoder.height;\n        this.width = this.decoder.width;\n        // FrameCount = BitmapImageDecoder.FrameCount;\n        this.bitsPerComponent = this.decoder.bitsPerComponent;\n    };\n    /**\n     * `Saves` the image into stream.\n     * @private\n     */\n    PdfBitmap.prototype.save = function () {\n        this.imageStatus = true;\n        this.imageStream = this.decoder.getImageDictionary();\n    };\n    return PdfBitmap;\n}(PdfImage));\nexport { PdfBitmap };\n","/**\n * TtfTableInfo.ts class for EJ2-PDF\n */\nvar TtfTableInfo = /** @class */ (function () {\n    function TtfTableInfo() {\n    }\n    Object.defineProperty(TtfTableInfo.prototype, \"empty\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this table is empty.\n         * @private\n         */\n        get: function () {\n            var empty = (this.offset === this.length && this.length === this.checksum && this.checksum === 0);\n            return empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TtfTableInfo;\n}());\nexport { TtfTableInfo };\n","var TtfNameTable = /** @class */ (function () {\n    function TtfNameTable() {\n    }\n    return TtfNameTable;\n}());\nexport { TtfNameTable };\n","/**\n * TtfNameRecord.ts class for EJ2-PDF\n */\nvar TtfNameRecord = /** @class */ (function () {\n    function TtfNameRecord() {\n    }\n    return TtfNameRecord;\n}());\nexport { TtfNameRecord };\n","/**\n * TtfHeadTable.ts class for EJ2-PDF\n */\nvar TtfHeadTable = /** @class */ (function () {\n    function TtfHeadTable() {\n    }\n    return TtfHeadTable;\n}());\nexport { TtfHeadTable };\n","var TtfMetrics = /** @class */ (function () {\n    function TtfMetrics() {\n    }\n    Object.defineProperty(TtfMetrics.prototype, \"isItalic\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this instance is italic.\n         */\n        get: function () {\n            return ((this.macStyle & 2) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfMetrics.prototype, \"isBold\", {\n        /**\n         * Gets a value indicating whether this instance is bold.\n         */\n        get: function () {\n            return ((this.macStyle & 1) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TtfMetrics;\n}());\nexport { TtfMetrics };\n","/**\n * TtfHorizontalHeaderTable.ts class for EJ2-PDF\n */\nvar TtfHorizontalHeaderTable = /** @class */ (function () {\n    function TtfHorizontalHeaderTable() {\n    }\n    return TtfHorizontalHeaderTable;\n}());\nexport { TtfHorizontalHeaderTable };\n","/**\n * TtfOS2Table.ts class for EJ2-PDF\n * The OS/2 table consists of a set of metrics that are required by Windows and OS/2.\n */\nvar TtfOS2Table = /** @class */ (function () {\n    function TtfOS2Table() {\n    }\n    return TtfOS2Table;\n}());\nexport { TtfOS2Table };\n","/**\n * TtfPostTable.ts class for EJ2-PDF\n */\nvar TtfPostTable = /** @class */ (function () {\n    function TtfPostTable() {\n    }\n    return TtfPostTable;\n}());\nexport { TtfPostTable };\n","/**\n * TtfLongHorMetric.ts class for EJ2-PDF\n */\nvar TtfLongHorMetric = /** @class */ (function () {\n    function TtfLongHorMetric() {\n    }\n    return TtfLongHorMetric;\n}());\nexport { TtfLongHorMetric };\n","/**\n * TtfCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfCmapSubTable = /** @class */ (function () {\n    function TtfCmapSubTable() {\n    }\n    return TtfCmapSubTable;\n}());\nexport { TtfCmapSubTable };\n","/**\n * TtfCmapTable.ts class for EJ2-PDF\n */\nvar TtfCmapTable = /** @class */ (function () {\n    function TtfCmapTable() {\n    }\n    return TtfCmapTable;\n}());\nexport { TtfCmapTable };\n","/**\n * TtfGlyphInfo.ts class for EJ2-PDF\n */\nvar TtfGlyphInfo = /** @class */ (function () {\n    function TtfGlyphInfo() {\n    }\n    Object.defineProperty(TtfGlyphInfo.prototype, \"empty\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this TtfGlyphInfo is empty.\n         */\n        get: function () {\n            var empty = (this.index === this.width && this.width === this.charCode && this.charCode === 0);\n            return empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //IComparable implementation\n    /**\n     * Compares two WidthDescriptor objects.\n     */\n    TtfGlyphInfo.prototype.compareTo = function (obj) {\n        var glyph = obj;\n        return this.index - glyph.index;\n    };\n    return TtfGlyphInfo;\n}());\nexport { TtfGlyphInfo };\n","/**\n * TtfLocaTable.ts class for EJ2-PDF\n */\nvar TtfLocaTable = /** @class */ (function () {\n    function TtfLocaTable() {\n    }\n    return TtfLocaTable;\n}());\nexport { TtfLocaTable };\n","/**\n * TtfAppleCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfAppleCmapSubTable = /** @class */ (function () {\n    function TtfAppleCmapSubTable() {\n    }\n    return TtfAppleCmapSubTable;\n}());\nexport { TtfAppleCmapSubTable };\n","/**\n * TtfMicrosoftCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfMicrosoftCmapSubTable = /** @class */ (function () {\n    function TtfMicrosoftCmapSubTable() {\n    }\n    return TtfMicrosoftCmapSubTable;\n}());\nexport { TtfMicrosoftCmapSubTable };\n","/**\n * TtfTrimmedCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfTrimmedCmapSubTable = /** @class */ (function () {\n    function TtfTrimmedCmapSubTable() {\n    }\n    return TtfTrimmedCmapSubTable;\n}());\nexport { TtfTrimmedCmapSubTable };\n","/**\n * TtfLocaTable.ts class for EJ2-PDF\n */\nvar TtfGlyphHeader = /** @class */ (function () {\n    function TtfGlyphHeader() {\n    }\n    return TtfGlyphHeader;\n}());\nexport { TtfGlyphHeader };\n","/**\n * Writes data in BigEndian order.\n */\nvar BigEndianWriter = /** @class */ (function () {\n    //Constructors\n    /**\n     * Creates a new writer.\n     */\n    function BigEndianWriter(capacity) {\n        //Constants\n        /**\n         * Size of Int32 type.\n         */\n        this.int32Size = 4;\n        /**\n         * Size of Int16 type.\n         */\n        this.int16Size = 2;\n        /**\n         * Size of long type.\n         */\n        this.int64Size = 8;\n        this.bufferLength = capacity;\n        this.buffer = [];\n    }\n    Object.defineProperty(BigEndianWriter.prototype, \"data\", {\n        //Properties\n        /**\n         * Gets data written to the writer.\n         */\n        get: function () {\n            if (this.buffer.length < this.bufferLength) {\n                var length_1 = this.bufferLength - this.buffer.length;\n                for (var i = 0; i < length_1; i++) {\n                    this.buffer.push(0);\n                }\n            }\n            return this.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BigEndianWriter.prototype, \"position\", {\n        /// <summary>\n        /// Gets position of the internal buffer.\n        /// </summary>\n        get: function () {\n            if (this.internalPosition === undefined || this.internalPosition === null) {\n                this.internalPosition = 0;\n            }\n            return this.internalPosition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Writes short value.\n     */\n    BigEndianWriter.prototype.writeShort = function (value) {\n        var bytes = [((value & 0x0000ff00) >> 8), value & 0x000000ff];\n        this.flush(bytes);\n    };\n    /**\n     * Writes int value.\n     */\n    BigEndianWriter.prototype.writeInt = function (value) {\n        var i1 = (value & 0xff000000) >> 24;\n        i1 = i1 < 0 ? 256 + i1 : i1;\n        var i2 = (value & 0x00ff0000) >> 16;\n        i2 = i2 < 0 ? 256 + i2 : i2;\n        var i3 = (value & 0x0000ff00) >> 8;\n        i3 = i3 < 0 ? 256 + i3 : i3;\n        var i4 = value & 0x000000ff;\n        i4 = i4 < 0 ? 256 + i4 : i4;\n        var bytes = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this.flush(bytes);\n    };\n    /**\n     * Writes u int value.\n     */\n    BigEndianWriter.prototype.writeUInt = function (value) {\n        var buff = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this.flush(buff);\n    };\n    /**\n     * Writes string value.\n     */\n    BigEndianWriter.prototype.writeString = function (value) {\n        if (value == null) {\n            throw new Error('Argument Null Exception : value');\n        }\n        var bytes = [];\n        for (var i = 0; i < value.length; i++) {\n            bytes.push(value.charCodeAt(i));\n        }\n        this.flush(bytes);\n    };\n    /**\n     * Writes byte[] value.\n     */\n    BigEndianWriter.prototype.writeBytes = function (value) {\n        this.flush(value);\n    };\n    // //Implementation\n    BigEndianWriter.prototype.flush = function (buff) {\n        if (buff === null) {\n            throw new Error('Argument Null Exception : buff');\n        }\n        var position = this.position;\n        for (var i = 0; i < buff.length; i++) {\n            this.buffer[position] = buff[i];\n            position++;\n        }\n        this.internalPosition += buff.length;\n    };\n    return BigEndianWriter;\n}());\nexport { BigEndianWriter };\n","/**\n * TtfReader.ts class for EJ2-PDF\n */\nimport { TtfTableInfo } from './ttf-table-info';\nimport { Dictionary } from './../../collections/dictionary';\nimport { TtfNameTable } from './ttf-name-table';\nimport { TtfNameRecord } from './ttf-name-record';\nimport { TtfHeadTable } from './ttf-head-table';\nimport { TtfMetrics } from './ttf-metrics';\nimport { TtfHorizontalHeaderTable } from './ttf-horizontal-header-table';\nimport { TtfOS2Table } from './ttf-OS2-Table';\nimport { TtfPostTable } from './ttf-post-table';\nimport { TtfLongHorMetric } from './ttf-long-hor-metric';\nimport { TtfCmapSubTable } from './ttf-cmap-sub-table';\nimport { TtfCmapTable } from './ttf-cmap-table';\nimport { TtfGlyphInfo } from './ttf-glyph-info';\nimport { TtfLocaTable } from './ttf-loca-table';\nimport { TtfAppleCmapSubTable } from './ttf-apple-cmap-sub-table';\nimport { TtfMicrosoftCmapSubTable } from './ttf-microsoft-cmap-sub-table';\nimport { TtfTrimmedCmapSubTable } from './ttf-trimmed-cmap-sub-table';\nimport { TtfGlyphHeader } from './ttf-glyph-header';\nimport { Rectangle } from './../../drawing/pdf-drawing';\nimport { StringTokenizer } from './string-tokenizer';\nimport { TtfCmapFormat, TtfCmapEncoding, TtfPlatformID } from './enum';\nimport { TtfMicrosoftEncodingID, TtfMacintoshEncodingID, TtfCompositeGlyphFlags } from './enum';\nimport { BigEndianWriter } from './../../input-output/big-endian-writer';\nvar TtfReader = /** @class */ (function () {\n    //Constructors\n    function TtfReader(fontData) {\n        this.int32Size = 4;\n        this.isTtcFont = false;\n        this.isMacTtf = false;\n        this.metricsName = '';\n        this.isMacTTF = false;\n        this.missedGlyphs = 0;\n        this.tableNames = ['cvt ', 'fpgm', 'glyf', 'head', 'hhea', 'hmtx', 'loca', 'maxp', 'prep'];\n        this.entrySelectors = [0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4];\n        this._isOpenTypeFont = false;\n        this.fontData = fontData;\n        this.initialize();\n    }\n    Object.defineProperty(TtfReader.prototype, \"macintosh\", {\n        //Properties\n        /**\n         * Gets glyphs for Macintosh or Symbol fonts (char - key, glyph - value).\n         */\n        get: function () {\n            if (this.macintoshDictionary === null || this.macintoshDictionary === undefined) {\n                this.macintoshDictionary = new Dictionary();\n            }\n            return this.macintoshDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"microsoft\", {\n        /**\n         * Gets glyphs for Microsoft or Symbol fonts (char - key, glyph - value).\n         */\n        get: function () {\n            if (this.microsoftDictionary === null || this.microsoftDictionary === undefined) {\n                this.microsoftDictionary = new Dictionary();\n            }\n            return this.microsoftDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"macintoshGlyphs\", {\n        /**\n         * Gets glyphs for Macintosh or Symbol fonts (glyph index - key, glyph - value).\n         */\n        get: function () {\n            if (this.internalMacintoshGlyphs === null || this.internalMacintoshGlyphs === undefined) {\n                this.internalMacintoshGlyphs = new Dictionary();\n            }\n            return this.internalMacintoshGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"microsoftGlyphs\", {\n        /**\n         * Gets glyphs for Microsoft Unicode fonts (glyph index - key, glyph - value).\n         */\n        get: function () {\n            if (this.internalMicrosoftGlyphs === null || this.internalMicrosoftGlyphs === undefined) {\n                this.internalMicrosoftGlyphs = new Dictionary();\n            }\n            return this.internalMicrosoftGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    TtfReader.prototype.initialize = function () {\n        if (this.metrics === undefined) {\n            this.metrics = new TtfMetrics();\n        }\n        this.readFontDictionary();\n        var nameTable = this.readNameTable();\n        var headTable = this.readHeadTable();\n        this.initializeFontName(nameTable);\n        this.metrics.macStyle = headTable.macStyle;\n    };\n    TtfReader.prototype.readFontDictionary = function () {\n        this.offset = 0;\n        var version = this.checkPreambula();\n        //this.offset += 4;\n        var numTables = this.readInt16(this.offset);\n        var searchRange = this.readInt16(this.offset);\n        var entrySelector = this.readInt16(this.offset);\n        var rangeShift = this.readInt16(this.offset);\n        if (this.tableDirectory === undefined) {\n            this.tableDirectory = new Dictionary();\n        }\n        for (var i = 0; i < numTables; ++i) {\n            var table = new TtfTableInfo();\n            var tableKey = this.readString(this.int32Size);\n            table.checksum = this.readInt32(this.offset);\n            table.offset = this.readInt32(this.offset);\n            table.length = this.readInt32(this.offset);\n            this.tableDirectory.setValue(tableKey, table);\n        }\n        this.lowestPosition = this.offset;\n        if (!this.isTtcFont) {\n            this.fixOffsets();\n        }\n    };\n    TtfReader.prototype.fixOffsets = function () {\n        var minOffset = Number.MAX_VALUE;\n        // Search for a smallest offset and compare it with the lowest position found.\n        var tableKeys = this.tableDirectory.keys();\n        for (var i = 0; i < tableKeys.length; i++) {\n            var value = this.tableDirectory.getValue(tableKeys[i]);\n            var offset = value.offset;\n            if (minOffset > offset) {\n                minOffset = offset;\n                if (minOffset <= this.lowestPosition) {\n                    break;\n                }\n            }\n        }\n        var shift = minOffset - this.lowestPosition;\n        if (shift !== 0) {\n            var table = new Dictionary();\n            for (var i = 0; i < tableKeys.length; i++) {\n                var value = this.tableDirectory.getValue(tableKeys[i]);\n                value.offset -= shift;\n                table.setValue(tableKeys[i], value);\n            }\n            this.tableDirectory = table;\n        }\n    };\n    TtfReader.prototype.checkPreambula = function () {\n        var version = this.readInt32(this.offset);\n        this.isMacTtf = (version === 0x74727565) ? true : false;\n        if (version !== 0x10000 && version !== 0x74727565 && version !== 0x4f54544f) {\n            this.isTtcFont = true;\n            this.offset = 0;\n            var fontTag = this.readString(4);\n            if (fontTag !== 'ttcf') {\n                throw new Error('Can not read TTF font data');\n            }\n            //skip 4\n            this.offset += 4;\n            var ttcIdentificationNumber = this.readInt32(this.offset);\n            if (ttcIdentificationNumber < 0) {\n                throw new Error('Can not read TTF font data');\n            }\n            this.offset = this.readInt32(this.offset);\n            version = this.readInt32(this.offset);\n        }\n        if (version === 0x4f54544f) {\n            this._isOpenTypeFont = true;\n        }\n        return version;\n    };\n    TtfReader.prototype.readNameTable = function () {\n        var tableInfo = this.getTable('name');\n        this.offset = tableInfo.offset;\n        var table = new TtfNameTable();\n        table.formatSelector = this.readUInt16(this.offset);\n        table.recordsCount = this.readUInt16(this.offset);\n        table.offset = this.readUInt16(this.offset);\n        table.nameRecords = [];\n        var recordSize = 12;\n        var position = this.offset;\n        for (var i = 0; i < table.recordsCount; i++) {\n            this.offset = position;\n            var record = new TtfNameRecord();\n            record.platformID = this.readUInt16(this.offset);\n            record.encodingID = this.readUInt16(this.offset);\n            record.languageID = this.readUInt16(this.offset);\n            record.nameID = this.readUInt16(this.offset);\n            record.length = this.readUInt16(this.offset);\n            record.offset = this.readUInt16(this.offset);\n            this.offset = tableInfo.offset + table.offset + record.offset;\n            var unicode = (record.platformID === 0 || record.platformID === 3);\n            record.name = this.readString(record.length, unicode);\n            table.nameRecords[i] = record;\n            position += recordSize;\n        }\n        return table;\n    };\n    TtfReader.prototype.readHeadTable = function () {\n        var tableInfo = this.getTable('head');\n        this.offset = tableInfo.offset;\n        var table = new TtfHeadTable();\n        table.version = this.readFixed(this.offset);\n        table.fontRevision = this.readFixed(this.offset);\n        table.checkSumAdjustment = this.readUInt32(this.offset);\n        table.magicNumber = this.readUInt32(this.offset);\n        table.flags = this.readUInt16(this.offset);\n        table.unitsPerEm = this.readUInt16(this.offset);\n        table.created = this.readInt64(this.offset);\n        table.modified = this.readInt64(this.offset);\n        table.xMin = this.readInt16(this.offset);\n        table.yMin = this.readInt16(this.offset);\n        table.xMax = this.readInt16(this.offset);\n        table.yMax = this.readInt16(this.offset);\n        table.macStyle = this.readUInt16(this.offset);\n        table.lowestReadableSize = this.readUInt16(this.offset);\n        table.fontDirectionHint = this.readInt16(this.offset);\n        table.indexToLocalFormat = this.readInt16(this.offset);\n        table.glyphDataFormat = this.readInt16(this.offset);\n        return table;\n    };\n    TtfReader.prototype.readHorizontalHeaderTable = function () {\n        var tableInfo = this.getTable('hhea');\n        this.offset = tableInfo.offset;\n        var table = new TtfHorizontalHeaderTable();\n        table.version = this.readFixed(this.offset);\n        table.ascender = this.readInt16(this.offset);\n        table.descender = this.readInt16(this.offset);\n        table.lineGap = this.readInt16(this.offset);\n        table.advanceWidthMax = this.readUInt16(this.offset);\n        table.minLeftSideBearing = this.readInt16(this.offset);\n        table.minRightSideBearing = this.readInt16(this.offset);\n        table.xMaxExtent = this.readInt16(this.offset);\n        table.caretSlopeRise = this.readInt16(this.offset);\n        table.caretSlopeRun = this.readInt16(this.offset);\n        //skip 2 * 5\n        this.offset += 10;\n        table.metricDataFormat = this.readInt16(this.offset);\n        table.numberOfHMetrics = this.readUInt16(this.offset);\n        return table;\n    };\n    TtfReader.prototype.readOS2Table = function () {\n        var tableInfo = this.getTable('OS/2');\n        this.offset = tableInfo.offset;\n        var table = new TtfOS2Table();\n        table.version = this.readUInt16(this.offset);\n        table.xAvgCharWidth = this.readInt16(this.offset);\n        table.usWeightClass = this.readUInt16(this.offset);\n        table.usWidthClass = this.readUInt16(this.offset);\n        table.fsType = this.readInt16(this.offset);\n        table.ySubscriptXSize = this.readInt16(this.offset);\n        table.ySubscriptYSize = this.readInt16(this.offset);\n        table.ySubscriptXOffset = this.readInt16(this.offset);\n        table.ySubscriptYOffset = this.readInt16(this.offset);\n        table.ySuperscriptXSize = this.readInt16(this.offset);\n        table.ySuperscriptYSize = this.readInt16(this.offset);\n        table.ySuperscriptXOffset = this.readInt16(this.offset);\n        table.ySuperscriptYOffset = this.readInt16(this.offset);\n        table.yStrikeoutSize = this.readInt16(this.offset);\n        table.yStrikeoutPosition = this.readInt16(this.offset);\n        table.sFamilyClass = this.readInt16(this.offset);\n        table.panose = this.readBytes(10);\n        table.ulUnicodeRange1 = this.readUInt32(this.offset);\n        table.ulUnicodeRange2 = this.readUInt32(this.offset);\n        table.ulUnicodeRange3 = this.readUInt32(this.offset);\n        table.ulUnicodeRange4 = this.readUInt32(this.offset);\n        table.vendorIdentifier = this.readBytes(4);\n        table.fsSelection = this.readUInt16(this.offset);\n        table.usFirstCharIndex = this.readUInt16(this.offset);\n        table.usLastCharIndex = this.readUInt16(this.offset);\n        table.sTypoAscender = this.readInt16(this.offset);\n        table.sTypoDescender = this.readInt16(this.offset);\n        table.sTypoLineGap = this.readInt16(this.offset);\n        table.usWinAscent = this.readUInt16(this.offset);\n        table.usWinDescent = this.readUInt16(this.offset);\n        table.ulCodePageRange1 = this.readUInt32(this.offset);\n        table.ulCodePageRange2 = this.readUInt32(this.offset);\n        if (table.version > 1) {\n            table.sxHeight = this.readInt16(this.offset);\n            table.sCapHeight = this.readInt16(this.offset);\n            table.usDefaultChar = this.readUInt16(this.offset);\n            table.usBreakChar = this.readUInt16(this.offset);\n            table.usMaxContext = this.readUInt16(this.offset);\n        }\n        else {\n            table.sxHeight = 0;\n            table.sCapHeight = 0;\n            table.usDefaultChar = 0;\n            table.usBreakChar = 0;\n            table.usMaxContext = 0;\n        }\n        return table;\n    };\n    TtfReader.prototype.readPostTable = function () {\n        var tableInfo = this.getTable('post');\n        this.offset = tableInfo.offset;\n        var table = new TtfPostTable();\n        table.formatType = this.readFixed(this.offset);\n        table.italicAngle = this.readFixed(this.offset);\n        table.underlinePosition = this.readInt16(this.offset);\n        table.underlineThickness = this.readInt16(this.offset);\n        table.isFixedPitch = this.readUInt32(this.offset);\n        table.minType42 = this.readUInt32(this.offset);\n        table.maxType42 = this.readUInt32(this.offset);\n        table.minType1 = this.readUInt32(this.offset);\n        table.maxType1 = this.readUInt32(this.offset);\n        return table;\n    };\n    /**\n     * Reads Width of the glyphs.\n     */\n    TtfReader.prototype.readWidthTable = function (glyphCount, unitsPerEm) {\n        var tableInfo = this.getTable('hmtx');\n        this.offset = tableInfo.offset;\n        var width = [];\n        for (var i = 0; i < glyphCount; i++) {\n            var glyph = new TtfLongHorMetric();\n            glyph.advanceWidth = this.readUInt16(this.offset);\n            glyph.lsb = this.readInt16(this.offset);\n            var glyphWidth = glyph.advanceWidth * 1000 / unitsPerEm;\n            width.push(Math.floor(glyphWidth));\n        }\n        return width;\n    };\n    /**\n     * Reads the cmap table.\n     */\n    TtfReader.prototype.readCmapTable = function () {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset;\n        var table = new TtfCmapTable();\n        table.version = this.readUInt16(this.offset);\n        table.tablesCount = this.readUInt16(this.offset);\n        var position = this.offset;\n        var subTables = [];\n        for (var i = 0; i < table.tablesCount; i++) {\n            this.offset = position;\n            var subTable = new TtfCmapSubTable();\n            subTable.platformID = this.readUInt16(this.offset);\n            subTable.encodingID = this.readUInt16(this.offset);\n            subTable.offset = this.readUInt32(this.offset);\n            position = this.offset;\n            this.readCmapSubTable(subTable);\n            subTables[i] = subTable;\n        }\n        return subTables;\n    };\n    /**\n     * Reads the cmap sub table.\n     */\n    TtfReader.prototype.readCmapSubTable = function (subTable) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var format = this.readUInt16(this.offset);\n        var encoding = this.getCmapEncoding(subTable.platformID, subTable.encodingID);\n        var platform = (encoding === TtfCmapEncoding.Macintosh) ? TtfPlatformID.Macintosh : TtfPlatformID.Microsoft;\n        if (encoding !== TtfCmapEncoding.Unknown) {\n            switch (format) {\n                case TtfCmapFormat.Apple:\n                    this.readAppleCmapTable(subTable, encoding);\n                    break;\n                case TtfCmapFormat.Microsoft:\n                    this.readMicrosoftCmapTable(subTable, encoding);\n                    break;\n                case TtfCmapFormat.Trimmed:\n                    this.readTrimmedCmapTable(subTable, encoding);\n                    break;\n            }\n        }\n    };\n    /**\n     * Reads Symbol cmap table.\n     */\n    TtfReader.prototype.readAppleCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var table = new TtfAppleCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        if (this.maxMacIndex === null || this.maxMacIndex === undefined) {\n            this.maxMacIndex = 0;\n        }\n        for (var i = 0; i < 256; ++i) {\n            var glyphInfo = new TtfGlyphInfo();\n            glyphInfo.index = this.readByte(this.offset);\n            glyphInfo.width = this.getWidth(glyphInfo.index);\n            glyphInfo.charCode = i;\n            this.macintosh.setValue(i, glyphInfo);\n            this.addGlyph(glyphInfo, encoding);\n            // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n            this.maxMacIndex = Math.max(i, this.maxMacIndex);\n        }\n    };\n    /**\n     * Reads Symbol cmap table.\n     */\n    TtfReader.prototype.readMicrosoftCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var collection = (encoding === TtfCmapEncoding.Unicode) ? this.microsoft : this.macintosh;\n        var table = new TtfMicrosoftCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        table.segCountX2 = this.readUInt16(this.offset);\n        table.searchRange = this.readUInt16(this.offset);\n        table.entrySelector = this.readUInt16(this.offset);\n        table.rangeShift = this.readUInt16(this.offset);\n        var segCount = table.segCountX2 / 2;\n        table.endCount = this.readUshortArray(segCount);\n        table.reservedPad = this.readUInt16(this.offset);\n        table.startCount = this.readUshortArray(segCount);\n        table.idDelta = this.readUshortArray(segCount);\n        table.idRangeOffset = this.readUshortArray(segCount);\n        var length = (table.length / 2 - 8) - (segCount * 4);\n        table.glyphID = this.readUshortArray(length);\n        // Process glyphIdArray array.\n        var codeOffset = 0;\n        var index = 0;\n        for (var j = 0; j < segCount; j++) {\n            for (var k = table.startCount[j]; k <= table.endCount[j] && k !== 65535; k++) {\n                if (table.idRangeOffset[j] === 0) {\n                    codeOffset = (k + table.idDelta[j]) & 65535;\n                }\n                else {\n                    index = j + table.idRangeOffset[j] / 2 - segCount + k - table.startCount[j];\n                    if (index >= table.glyphID.length) {\n                        continue;\n                    }\n                    codeOffset = (table.glyphID[index] + table.idDelta[j]) & 65535;\n                }\n                var glyph = new TtfGlyphInfo();\n                glyph.index = codeOffset;\n                glyph.width = this.getWidth(glyph.index);\n                var id = (encoding === TtfCmapEncoding.Symbol) ? ((k & 0xff00) === 0xf000 ? k & 0xff : k) : k;\n                glyph.charCode = id;\n                collection.setValue(id, glyph);\n                this.addGlyph(glyph, encoding);\n            }\n        }\n    };\n    /**\n     * Reads Trimed cmap table.\n     */\n    TtfReader.prototype.readTrimmedCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var table = new TtfTrimmedCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        table.firstCode = this.readUInt16(this.offset);\n        table.entryCount = this.readUInt16(this.offset);\n        for (var i = 0; i < table.entryCount; ++i) {\n            var glyphInfo = new TtfGlyphInfo();\n            glyphInfo.index = this.readUInt16(this.offset);\n            glyphInfo.width = this.getWidth(glyphInfo.index);\n            glyphInfo.charCode = i + table.firstCode;\n            this.macintosh.setValue(i, glyphInfo);\n            this.addGlyph(glyphInfo, encoding);\n            // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n            this.maxMacIndex = Math.max(i, this.maxMacIndex);\n        }\n    };\n    TtfReader.prototype.initializeFontName = function (nameTable) {\n        for (var i = 0; i < nameTable.recordsCount; i++) {\n            var record = nameTable.nameRecords[i];\n            if (record.nameID === 1) {\n                //font family\n                this.metrics.fontFamily = record.name;\n            }\n            else if (record.nameID === 6) {\n                //post script name\n                this.metrics.postScriptName = record.name;\n            }\n            /* tslint:disable */\n            if (this.metrics.fontFamily !== null && this.metrics.fontFamily !== undefined && this.metrics.postScriptName !== null && this.metrics.postScriptName !== undefined) {\n                break;\n            }\n            /* tslint:disable */\n        }\n    };\n    TtfReader.prototype.getTable = function (name) {\n        // if (name === null) {\n        //     throw new Error('Argument Null Exception : name');\n        // }\n        var table = new TtfTableInfo();\n        var obj;\n        if (this.tableDirectory.containsKey(name)) {\n            obj = this.tableDirectory.getValue(name);\n        }\n        if (obj !== null && obj !== undefined) {\n            table = obj;\n        }\n        return table;\n    };\n    /**\n     * Returns width of the glyph.\n     */\n    TtfReader.prototype.getWidth = function (glyphCode) {\n        glyphCode = (glyphCode < this.width.length) ? glyphCode : this.width.length - 1;\n        return this.width[glyphCode];\n    };\n    /**\n     * Gets CMAP encoding based on platform ID and encoding ID.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.getCmapEncoding = function (platformID, encodingID) {\n        var format = TtfCmapEncoding.Unknown;\n        if (platformID == TtfPlatformID.Microsoft && encodingID == TtfMicrosoftEncodingID.Undefined) {\n            // When building a symbol font for Windows,\n            // the platform ID should be 3 and the encoding ID should be 0.\n            format = TtfCmapEncoding.Symbol;\n        }\n        else if (platformID == TtfPlatformID.Microsoft && encodingID == TtfMicrosoftEncodingID.Unicode) {\n            // When building a Unicode font for Windows,\n            // the platform ID should be 3 and the encoding ID should be 1.\n            format = TtfCmapEncoding.Unicode;\n        }\n        else if (platformID == TtfPlatformID.Macintosh && encodingID == TtfMacintoshEncodingID.Roman) {\n            // When building a font that will be used on the Macintosh,\n            // the platform ID should be 1 and the encoding ID should be 0.\n            format = TtfCmapEncoding.Macintosh;\n        }\n        return format;\n    };\n    /* tslint:enable */\n    /**\n     * Adds glyph to the collection.\n     */\n    TtfReader.prototype.addGlyph = function (glyph, encoding) {\n        var collection = null;\n        switch (encoding) {\n            case TtfCmapEncoding.Unicode:\n                collection = this.microsoftGlyphs;\n                break;\n            case TtfCmapEncoding.Macintosh:\n            case TtfCmapEncoding.Symbol:\n                collection = this.macintoshGlyphs;\n                break;\n        }\n        collection.setValue(glyph.index, glyph);\n    };\n    /**\n     * Initializes metrics.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.initializeMetrics = function (nameTable, headTable, horizontalHeadTable, os2Table, postTable, cmapTables) {\n        /* tslint:enable */\n        // if (cmapTables === null) {\n        //     throw new Error('ArgumentNullException : cmapTables');\n        // }\n        this.initializeFontName(nameTable);\n        // Get font encoding.\n        var bSymbol = false;\n        for (var i = 0; i < cmapTables.length; i++) {\n            var subTable = cmapTables[i];\n            var encoding = this.getCmapEncoding(subTable.platformID, subTable.encodingID);\n            if (encoding === TtfCmapEncoding.Symbol) {\n                bSymbol = true;\n                break;\n            }\n        }\n        this.metrics.isSymbol = bSymbol;\n        this.metrics.macStyle = headTable.macStyle;\n        this.metrics.isFixedPitch = (postTable.isFixedPitch !== 0);\n        this.metrics.italicAngle = postTable.italicAngle;\n        var factor = 1000 / headTable.unitsPerEm;\n        this.metrics.winAscent = os2Table.sTypoAscender * factor;\n        this.metrics.macAscent = horizontalHeadTable.ascender * factor;\n        //m_metrics.MacAscent = os2Table.UsWinAscent * factor;\n        // NOTE: This is stange workaround. The value is good if os2Table.SCapHeight != 0, otherwise it should be properly computed.\n        this.metrics.capHeight = (os2Table.sCapHeight !== 0) ? os2Table.sCapHeight : 0.7 * headTable.unitsPerEm * factor;\n        this.metrics.winDescent = os2Table.sTypoDescender * factor;\n        this.metrics.macDescent = horizontalHeadTable.descender * factor;\n        //m_metrics.MacDescent = -os2Table.UsWinDescent * factor;\n        this.metrics.leading = (os2Table.sTypoAscender - os2Table.sTypoDescender + os2Table.sTypoLineGap) * factor;\n        this.metrics.lineGap = Math.ceil(horizontalHeadTable.lineGap * factor);\n        var left = headTable.xMin * factor;\n        var top = Math.ceil(this.metrics.macAscent + this.metrics.lineGap);\n        var right = headTable.xMax * factor;\n        var bottom = this.metrics.macDescent;\n        this.metrics.fontBox = new Rectangle(left, top, right, bottom);\n        // NOTE: Strange!\n        this.metrics.stemV = 80;\n        this.metrics.widthTable = this.updateWidth();\n        this.metrics.contains = this.tableDirectory.containsKey('CFF ');\n        this.metrics.subScriptSizeFactor = headTable.unitsPerEm / os2Table.ySubscriptYSize;\n        this.metrics.superscriptSizeFactor = headTable.unitsPerEm / os2Table.ySuperscriptYSize;\n    };\n    /**\n     * Updates chars structure which is used in the case of ansi encoding (256 bytes).\n     */\n    TtfReader.prototype.updateWidth = function () {\n        var count = 256;\n        var bytes = [];\n        if (this.metrics.isSymbol) {\n            for (var i = 0; i < count; i++) {\n                var glyphInfo = this.getGlyph(String.fromCharCode(i));\n                bytes[i] = (glyphInfo.empty) ? 0 : glyphInfo.width;\n            }\n        }\n        else {\n            var byteToProcess = [];\n            var unknown = '?';\n            var space = String.fromCharCode(32);\n            for (var i = 0; i < count; i++) {\n                byteToProcess[0] = i;\n                var text = this.getString(byteToProcess, 0, byteToProcess.length);\n                var ch = (text.length > 0) ? text[0] : unknown;\n                var glyphInfo = this.getGlyph(ch);\n                if (!glyphInfo.empty) {\n                    bytes[i] = glyphInfo.width;\n                }\n                else {\n                    glyphInfo = this.getGlyph(space);\n                    bytes[i] = (glyphInfo.empty) ? 0 : glyphInfo.width;\n                }\n            }\n        }\n        return bytes;\n    };\n    /**\n     * Returns default glyph.\n     */\n    TtfReader.prototype.getDefaultGlyph = function () {\n        var glyph = this.getGlyph(StringTokenizer.whiteSpace);\n        return glyph;\n    };\n    /**\n     * Reads unicode string from byte array.\n     */\n    TtfReader.prototype.getString = function (byteToProcess, start, length) {\n        var result = '';\n        for (var index = 0; index < length; index++) {\n            result += String.fromCharCode(byteToProcess[index + start]);\n        }\n        return result;\n    };\n    /**\n     * Reads loca table.\n     */\n    TtfReader.prototype.readLocaTable = function (bShort) {\n        var tableInfo = this.getTable('loca');\n        this.offset = tableInfo.offset;\n        var table = new TtfLocaTable();\n        var buffer = null;\n        if (bShort) {\n            var len = tableInfo.length / 2;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[i] = this.readUInt16(this.offset) * 2;\n            }\n        }\n        else {\n            var len = tableInfo.length / 4;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[i] = this.readUInt32(this.offset);\n            }\n        }\n        table.offsets = buffer;\n        return table;\n    };\n    /**\n     * Updates hash table of used glyphs.\n     */\n    TtfReader.prototype.updateGlyphChars = function (glyphChars, locaTable) {\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        // Add zero key.\n        if (!glyphChars.containsKey(0)) {\n            glyphChars.setValue(0, 0);\n        }\n        var clone = new Dictionary();\n        var glyphCharKeys = glyphChars.keys();\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            clone.setValue(glyphCharKeys[i], glyphChars.getValue(glyphCharKeys[i]));\n        }\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            var nextKey = glyphCharKeys[i];\n            this.processCompositeGlyph(glyphChars, nextKey, locaTable);\n        }\n    };\n    /**\n     * Checks if glyph is composite or not.\n     */\n    TtfReader.prototype.processCompositeGlyph = function (glyphChars, glyph, locaTable) {\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        // Is in range.\n        if (glyph < locaTable.offsets.length - 1) {\n            var glyphOffset = locaTable.offsets[glyph];\n            if (glyphOffset !== locaTable.offsets[glyph + 1]) {\n                var tableInfo = this.getTable('glyf');\n                this.offset = tableInfo.offset + glyphOffset;\n                var glyphHeader = new TtfGlyphHeader();\n                glyphHeader.numberOfContours = this.readInt16(this.offset);\n                glyphHeader.xMin = this.readInt16(this.offset);\n                glyphHeader.yMin = this.readInt16(this.offset);\n                glyphHeader.xMax = this.readInt16(this.offset);\n                glyphHeader.yMax = this.readInt16(this.offset);\n                // Glyph is composite.\n                if (glyphHeader.numberOfContours < 0) {\n                    var skipBytes = 0;\n                    var entry = true;\n                    while (entry) {\n                        var flags = this.readUInt16(this.offset);\n                        var glyphIndex = this.readUInt16(this.offset);\n                        if (!glyphChars.containsKey(glyphIndex)) {\n                            glyphChars.setValue(glyphIndex, 0);\n                        }\n                        if ((flags & TtfCompositeGlyphFlags.MoreComponents) === 0) {\n                            break;\n                        }\n                        skipBytes = ((flags & TtfCompositeGlyphFlags.Arg1And2AreWords) !== 0) ? 4 : 2;\n                        if ((flags & TtfCompositeGlyphFlags.WeHaveScale) !== 0) {\n                            skipBytes += 2;\n                        }\n                        else if ((flags & TtfCompositeGlyphFlags.WeHaveAnXyScale) !== 0) {\n                            skipBytes += 4;\n                        }\n                        else if ((flags & TtfCompositeGlyphFlags.WeHaveTwoByTwo) !== 0) {\n                            skipBytes += 2 * 4;\n                        }\n                        this.offset += skipBytes;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Creates new glyph tables based on chars that are used for output.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.generateGlyphTable = function (glyphChars, locaTable, newLocaTable, newGlyphTable) {\n        /* tslint:enable */\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        newLocaTable = [];\n        // Sorting used glyphs keys.\n        var activeGlyphs = glyphChars.keys();\n        activeGlyphs.sort(function (a, b) { return a - b; });\n        var glyphSize = 0;\n        for (var i = 0; i < activeGlyphs.length; i++) {\n            var glyphIndex = activeGlyphs[i];\n            if (locaTable.offsets.length > 0) {\n                glyphSize += locaTable.offsets[glyphIndex + 1] - locaTable.offsets[glyphIndex];\n            }\n        }\n        var glyphSizeAligned = this.align(glyphSize);\n        newGlyphTable = [];\n        for (var i = 0; i < glyphSizeAligned; i++) {\n            newGlyphTable.push(0);\n        }\n        var nextGlyphOffset = 0;\n        var nextGlyphIndex = 0;\n        var table = this.getTable('glyf');\n        // Creating NewLocaTable - that would hold offsets for filtered glyphs.\n        for (var i = 0; i < locaTable.offsets.length; i++) {\n            newLocaTable.push(nextGlyphOffset);\n            if (nextGlyphIndex < activeGlyphs.length && activeGlyphs[nextGlyphIndex] === i) {\n                ++nextGlyphIndex;\n                newLocaTable[i] = nextGlyphOffset;\n                var oldGlyphOffset = locaTable.offsets[i];\n                var oldNextGlyphOffset = locaTable.offsets[i + 1] - oldGlyphOffset;\n                if (oldNextGlyphOffset > 0) {\n                    this.offset = table.offset + oldGlyphOffset;\n                    var result = this.read(newGlyphTable, nextGlyphOffset, oldNextGlyphOffset);\n                    newGlyphTable = result.buffer;\n                    nextGlyphOffset += oldNextGlyphOffset;\n                }\n            }\n        }\n        return { glyphTableSize: glyphSize, newLocaTable: newLocaTable, newGlyphTable: newGlyphTable };\n    };\n    /**\n     * Updates new Loca table.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.updateLocaTable = function (newLocaTable, bLocaIsShort, newLocaTableOut) {\n        /* tslint:enable */\n        if (newLocaTable === null) {\n            throw new Error('Argument Null Exception : newLocaTable');\n        }\n        var size = (bLocaIsShort) ? newLocaTable.length * 2 : newLocaTable.length * 4;\n        var count = this.align(size);\n        //BigEndianWiter\n        var writer = new BigEndianWriter(count);\n        for (var i = 0; i < newLocaTable.length; i++) {\n            var value = newLocaTable[i];\n            if (bLocaIsShort) {\n                value /= 2;\n                writer.writeShort(value);\n            }\n            else {\n                writer.writeInt(value);\n            }\n        }\n        return { newLocaUpdated: writer.data, newLocaSize: size };\n    };\n    /**\n     * Aligns number to be divisible on 4.\n     */\n    TtfReader.prototype.align = function (value) {\n        return (value + 3) & (~3);\n    };\n    /**\n     * Returns font program data.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.getFontProgram = function (newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        /* tslint:enable */\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        var result = this.getFontProgramLength(newLocaTableOut, newGlyphTable, 0);\n        var fontProgramLength = result.fontProgramLength;\n        var numTables = result.numTables;\n        var writer = new BigEndianWriter(fontProgramLength);\n        writer.writeInt(0x10000);\n        writer.writeShort(numTables);\n        var entrySelector = this.entrySelectors[numTables];\n        writer.writeShort((1 << (entrySelector & 31)) * 16);\n        writer.writeShort(entrySelector);\n        writer.writeShort((numTables - (1 << (entrySelector & 31))) * 16);\n        // Writing to destination buffer - checksums && sizes of used tables.\n        this.writeCheckSums(writer, numTables, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize);\n        // // Writing to destination buffer - used glyphs.\n        this.writeGlyphs(writer, newLocaTableOut, newGlyphTable);\n        return writer.data;\n    };\n    /* tslint:disable */\n    TtfReader.prototype.getFontProgramLength = function (newLocaTableOut, newGlyphTable, numTables) {\n        /* tslint:enable */\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        // glyf and loca are used by default;\n        numTables = 2;\n        var tableNames = this.tableNames;\n        var fontProgramLength = 0;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            if (tableName !== 'glyf' && tableName !== 'loca') {\n                var table = this.getTable(tableName);\n                if (!table.empty) {\n                    ++numTables;\n                    fontProgramLength += this.align(table.length);\n                }\n            }\n        }\n        fontProgramLength += newLocaTableOut.length;\n        fontProgramLength += newGlyphTable.length;\n        var usedTablesSize = numTables * 16 + (3 * 4);\n        fontProgramLength += usedTablesSize;\n        return { fontProgramLength: fontProgramLength, numTables: numTables };\n    };\n    /**\n     * Writing to destination buffer - checksums and sizes of used tables.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.writeCheckSums = function (writer, numTables, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        /* tslint:enable */\n        if (writer === null) {\n            throw new Error('Argument Null Exception : writer');\n        }\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        var usedTablesSize = numTables * 16 + (3 * 4);\n        var nextTableSize = 0;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            var tableInfo = this.getTable(tableName);\n            if (tableInfo.empty) {\n                continue;\n            }\n            writer.writeString(tableName);\n            if (tableName === 'glyf') {\n                var checksum = this.calculateCheckSum(newGlyphTable);\n                writer.writeInt(checksum);\n                nextTableSize = glyphTableSize;\n            }\n            else if (tableName === 'loca') {\n                var checksum = this.calculateCheckSum(newLocaTableOut);\n                writer.writeInt(checksum);\n                nextTableSize = locaTableSize;\n            }\n            else {\n                writer.writeInt(tableInfo.checksum);\n                nextTableSize = tableInfo.length;\n            }\n            writer.writeUInt(usedTablesSize);\n            writer.writeUInt(nextTableSize);\n            usedTablesSize += this.align(nextTableSize);\n        }\n    };\n    /**\n     * Gets checksum from source buffer.\n     */\n    TtfReader.prototype.calculateCheckSum = function (bytes) {\n        if (bytes === null) {\n            throw new Error('Argument Null Exception : bytes');\n        }\n        var pos = 0;\n        var byte1 = 0;\n        var byte2 = 0;\n        var byte3 = 0;\n        var byte4 = 0;\n        for (var i = 0; i < (bytes.length + 1) / 4; i++) {\n            byte4 += (bytes[pos++] & 255);\n            byte3 += (bytes[pos++] & 255);\n            byte2 += (bytes[pos++] & 255);\n            byte1 += (bytes[pos++] & 255);\n        }\n        var result = byte1;\n        result += (byte2 << 8);\n        result += (byte3 << 16);\n        result += (byte4 << 24);\n        return result;\n    };\n    /**\n     * Writing to destination buffer - used glyphs.\n     */\n    TtfReader.prototype.writeGlyphs = function (writer, newLocaTable, newGlyphTable) {\n        if (writer === null) {\n            throw new Error('Argument Null Exception : writer');\n        }\n        if (newLocaTable === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            var tableInfo = this.getTable(tableName);\n            if (tableInfo.empty) {\n                continue;\n            }\n            if (tableName === 'glyf') {\n                writer.writeBytes(newGlyphTable);\n            }\n            else if (tableName === 'loca') {\n                writer.writeBytes(newLocaTable);\n            }\n            else {\n                var count = this.align(tableInfo.length);\n                var buff = [];\n                for (var i_1 = 0; i_1 < count; i_1++) {\n                    buff.push(0);\n                }\n                this.offset = tableInfo.offset;\n                var result = this.read(buff, 0, tableInfo.length);\n                writer.writeBytes(result.buffer);\n            }\n        }\n    };\n    //public methods\n    /**\n     * Sets position value of font data.\n     */\n    TtfReader.prototype.setOffset = function (offset) {\n        this.offset = offset;\n    };\n    /**\n     * Creates font Internals\n     * @private\n     */\n    TtfReader.prototype.createInternals = function () {\n        this.metrics = new TtfMetrics();\n        var nameTable = this.readNameTable();\n        var headTable = this.readHeadTable();\n        this.bIsLocaShort = (headTable.indexToLocalFormat === 0);\n        var horizontalHeadTable = this.readHorizontalHeaderTable();\n        var os2Table = this.readOS2Table();\n        var postTable = this.readPostTable();\n        this.width = this.readWidthTable(horizontalHeadTable.numberOfHMetrics, headTable.unitsPerEm);\n        var subTables = this.readCmapTable();\n        this.initializeMetrics(nameTable, headTable, horizontalHeadTable, os2Table, postTable, subTables);\n    };\n    TtfReader.prototype.getGlyph = function (charCode) {\n        if (typeof charCode === 'number') {\n            var obj1 = null;\n            if (!this.metrics.isSymbol && this.microsoftGlyphs != null) {\n                if (this.microsoftGlyphs.containsKey(charCode)) {\n                    obj1 = this.microsoftGlyphs.getValue(charCode);\n                }\n            }\n            else if (this.metrics.isSymbol && this.macintoshGlyphs != null) {\n                if (this.macintoshGlyphs.containsKey(charCode)) {\n                    obj1 = this.macintoshGlyphs.getValue(charCode);\n                }\n            }\n            var glyph = (obj1 != null) ? obj1 : this.getDefaultGlyph();\n            return glyph;\n        }\n        else {\n            var obj = null;\n            var code = charCode.charCodeAt(0);\n            if (!this.metrics.isSymbol && this.microsoft !== null) {\n                if (this.microsoft.containsKey(code)) {\n                    obj = this.microsoft.getValue(code);\n                    if (code !== StringTokenizer.whiteSpace.charCodeAt(0)) {\n                        this.isFontPresent = true;\n                    }\n                }\n                else if (code !== StringTokenizer.whiteSpace.charCodeAt(0)) {\n                    this.isFontPresent = false;\n                }\n            }\n            else if (this.metrics.isSymbol && this.macintosh !== null || this.isMacTTF) {\n                // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n                if (this.maxMacIndex !== 0) {\n                    code %= this.maxMacIndex + 1;\n                }\n                else {\n                    code = ((code & 0xff00) === 0xf000 ? code & 0xff : code);\n                }\n                if (this.macintosh.containsKey(code)) {\n                    obj = this.macintosh.getValue(code);\n                    this.isFontPresent = true;\n                }\n            }\n            // Fix for StackOverFlow exception in XPS to PDF converter\n            if (charCode === StringTokenizer.whiteSpace && obj === null) {\n                obj = new TtfGlyphInfo();\n            }\n            var glyph = (obj !== null) ? obj : this.getDefaultGlyph();\n            return glyph;\n        }\n    };\n    /**\n     * Gets hash table with chars indexed by glyph index.\n     */\n    TtfReader.prototype.getGlyphChars = function (chars) {\n        if (chars === null || chars === undefined) {\n            throw new Error('Argument Null Exception : chars');\n        }\n        var dictionary = new Dictionary();\n        var charKeys = chars.keys();\n        for (var i = 0; i < charKeys.length; i++) {\n            var ch = charKeys[i];\n            var glyph = this.getGlyph(ch);\n            if (!glyph.empty) {\n                dictionary.setValue(glyph.index, ch.charCodeAt(0));\n            }\n        }\n        return dictionary;\n    };\n    /**\n     * Gets all glyphs.\n     */\n    TtfReader.prototype.getAllGlyphs = function () {\n        var allGlyphInfo = [];\n        var info = new TtfGlyphInfo();\n        var index = 0;\n        for (var i = 0; i < this.width.length; i++) {\n            var width = this.width[i];\n            info.index = index;\n            info.width = width;\n            allGlyphInfo.push(info);\n            index++;\n        }\n        return allGlyphInfo;\n    };\n    /**\n     * Reads a font's program.\n     * @private\n     */\n    TtfReader.prototype.readFontProgram = function (chars) {\n        var glyphChars = this.getGlyphChars(chars);\n        var locaTable = this.readLocaTable(this.bIsLocaShort);\n        if (glyphChars.size() < chars.size()) {\n            this.missedGlyphs = chars.size() - glyphChars.size();\n        }\n        this.updateGlyphChars(glyphChars, locaTable);\n        /* tslint:disable */\n        var result1 = this.generateGlyphTable(glyphChars, locaTable, null, null);\n        /* tslint:enable */\n        var glyphTableSize = result1.glyphTableSize;\n        var newLocaTable = result1.newLocaTable;\n        var newGlyphTable = result1.newGlyphTable;\n        var result2 = this.updateLocaTable(newLocaTable, this.bIsLocaShort, null);\n        var newLocaSize = result2.newLocaSize;\n        var newLocaUpdated = result2.newLocaUpdated;\n        var fontProgram = this.getFontProgram(newLocaUpdated, newGlyphTable, glyphTableSize, newLocaSize);\n        return fontProgram;\n    };\n    TtfReader.prototype._readCompactFontFormatTable = function () {\n        var tableInfo = this.getTable('CFF ');\n        var length = tableInfo.length;\n        var offset = tableInfo.offset;\n        var cffData = new Array(length);\n        this.setOffset(offset);\n        var result = this.read(cffData, 0, length);\n        return result.buffer;\n    };\n    /**\n     * Reconverts string to be in proper format saved into PDF file.\n     */\n    TtfReader.prototype.convertString = function (text) {\n        if (text === null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        var glyph = '';\n        var i = 0;\n        for (var k = 0; k < text.length; k++) {\n            var ch = text[k];\n            var glyphInfo = this.getGlyph(ch);\n            if (!glyphInfo.empty) {\n                glyph += String.fromCharCode(glyphInfo.index);\n                i++;\n            }\n        }\n        return glyph;\n    };\n    /**\n     * Gets char width.\n     */\n    TtfReader.prototype.getCharWidth = function (code) {\n        var glyphInfo = this.getGlyph(code);\n        glyphInfo = (!glyphInfo.empty) ? glyphInfo : this.getDefaultGlyph();\n        var codeWidth = (!glyphInfo.empty) ? glyphInfo.width : 0;\n        return codeWidth;\n    };\n    TtfReader.prototype.readString = function (length, isUnicode) {\n        if (isUnicode === undefined) {\n            return this.readString(length, false);\n        }\n        else {\n            //let buffer : number[] = this.readBytes(length);\n            var result = '';\n            if (isUnicode) {\n                for (var i = 0; i < length; i++) {\n                    if (i % 2 !== 0) {\n                        result += String.fromCharCode(this.fontData[this.offset]);\n                    }\n                    this.offset += 1;\n                }\n            }\n            else {\n                for (var i = 0; i < length; i++) {\n                    result += String.fromCharCode(this.fontData[this.offset]);\n                    this.offset += 1;\n                }\n            }\n            return result;\n        }\n    };\n    TtfReader.prototype.readFixed = function (offset) {\n        var integer = this.readInt16(offset);\n        var sFraction = this.readInt16(offset + 2);\n        var fraction = sFraction / 16384;\n        return integer + fraction;\n    };\n    TtfReader.prototype.readInt32 = function (offset) {\n        var i1 = this.fontData[offset + 3];\n        var i2 = this.fontData[offset + 2];\n        var i3 = this.fontData[offset + 1];\n        var i4 = this.fontData[offset];\n        this.offset += 4;\n        return i1 + (i2 << 8) + (i3 << 16) + (i4 << 24);\n    };\n    TtfReader.prototype.readUInt32 = function (offset) {\n        var i1 = this.fontData[offset + 3];\n        var i2 = this.fontData[offset + 2];\n        var i3 = this.fontData[offset + 1];\n        var i4 = this.fontData[offset];\n        this.offset += 4;\n        return (i1 | i2 << 8 | i3 << 16 | i4 << 24);\n    };\n    // private readInt16(offset : number) : number {\n    //     let result : number = (this.fontData[offset] << 8) + this.fontData[offset + 1];\n    //     this.offset += 2;\n    //     return result;\n    // }\n    TtfReader.prototype.readInt16 = function (offset) {\n        var result = (this.fontData[offset] << 8) + this.fontData[offset + 1];\n        result = result & (1 << 15) ? result - 0x10000 : result;\n        this.offset += 2;\n        return result;\n    };\n    TtfReader.prototype.readInt64 = function (offset) {\n        var low = this.readInt32(offset + 4);\n        var n = this.readInt32(offset) * 4294967296.0 + low;\n        if (low < 0) {\n            n += 4294967296;\n        }\n        return n;\n    };\n    TtfReader.prototype.readUInt16 = function (offset) {\n        var result = (this.fontData[offset] << 8) | this.fontData[offset + 1];\n        this.offset += 2;\n        return result;\n    };\n    /**\n     * Reads ushort array.\n     */\n    TtfReader.prototype.readUshortArray = function (length) {\n        var buffer = [];\n        for (var i = 0; i < length; i++) {\n            buffer[i] = this.readUInt16(this.offset);\n        }\n        return buffer;\n    };\n    TtfReader.prototype.readBytes = function (length) {\n        var result = [];\n        for (var i = 0; i < length; i++) {\n            result.push(this.fontData[this.offset]);\n            this.offset += 1;\n        }\n        return result;\n    };\n    TtfReader.prototype.readByte = function (offset) {\n        var result = this.fontData[offset];\n        this.offset += 1;\n        return result;\n    };\n    /**\n     * Reads bytes to array in BigEndian order.\n     * @private\n     */\n    TtfReader.prototype.read = function (buffer, index, count) {\n        if (buffer === null) {\n            throw new Error('Argument Null Exception : buffer');\n        }\n        var written = 0;\n        var read = 0;\n        do {\n            for (var i = 0; (i < count - written) && (this.offset + i < this.fontData.length); i++) {\n                buffer[index + i] = this.fontData[this.offset + i];\n            }\n            read = count - written;\n            this.offset += read;\n            written += read;\n        } while (written < count);\n        return { buffer: buffer, written: written };\n    };\n    return TtfReader;\n}());\nexport { TtfReader };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfFont } from './pdf-font';\nimport { PdfSubSuperScript } from './enum';\nimport { PdfArray } from './../../primitives/pdf-array';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar PdfFontMetrics = /** @class */ (function () {\n    function PdfFontMetrics() {\n        /**\n         * `Line gap`.\n         * @private\n         */\n        this.lineGap = 0;\n    }\n    //  Public methods\n    /**\n     * Returns `ascent` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getAscent = function (format) {\n        var returnValue = this.ascent * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `descent` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getDescent = function (format) {\n        var returnValue = this.descent * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `Line gap` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getLineGap = function (format) {\n        var returnValue = this.lineGap * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `height` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getHeight = function (format) {\n        var height;\n        var clearTypeFonts = ['cambria', 'candara', 'constantia', 'corbel', 'cariadings'];\n        var clearTypeFontCollection = [];\n        for (var index = 0; index < clearTypeFonts.length; index++) {\n            var font = clearTypeFonts[index];\n            clearTypeFontCollection.push(font);\n        }\n        if (this.getDescent(format) < 0) {\n            // if ((clearTypeFontCollection.indexOf(this.name.toLowerCase()) !== -1) && !this.isUnicodeFont) {\n            //     height = (this.GetAscent(format) - this.GetDescent(format) - this.GetLineGap(format));\n            // } else {\n            height = (this.getAscent(format) - this.getDescent(format) + this.getLineGap(format));\n            // }\n        }\n        else {\n            height = (this.getAscent(format) + this.getDescent(format) + this.getLineGap(format));\n        }\n        return height;\n    };\n    /**\n     * Calculates `size` of the font depending on the subscript/superscript value.\n     * @private\n     */\n    PdfFontMetrics.prototype.getSize = function (format) {\n        var size = this.size;\n        if (format != null) {\n            switch (format.subSuperScript) {\n                case PdfSubSuperScript.SubScript:\n                    size /= this.subScriptSizeFactor;\n                    break;\n                case PdfSubSuperScript.SuperScript:\n                    size /= this.superscriptSizeFactor;\n                    break;\n            }\n        }\n        return size;\n    };\n    /**\n     * `Clones` the metrics.\n     * @private\n     */\n    PdfFontMetrics.prototype.clone = function () {\n        var metrics = this;\n        metrics.widthTable = WidthTable.clone();\n        return metrics;\n    };\n    Object.defineProperty(PdfFontMetrics.prototype, \"widthTable\", {\n        //  Properies\n        /**\n         * Gets or sets the `width table`.\n         * @private\n         */\n        get: function () {\n            return this.internalWidthTable;\n        },\n        set: function (value) {\n            this.internalWidthTable = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFontMetrics;\n}());\nexport { PdfFontMetrics };\nvar WidthTable = /** @class */ (function () {\n    function WidthTable() {\n    }\n    /**\n     * Static `clones` this instance of the WidthTable class.\n     * @private\n     */\n    WidthTable.clone = function () {\n        return null;\n    };\n    return WidthTable;\n}());\nexport { WidthTable };\nvar StandardWidthTable = /** @class */ (function (_super) {\n    __extends(StandardWidthTable, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `StandardWidthTable` class.\n     * @private\n     */\n    function StandardWidthTable(widths) {\n        var _this = _super.call(this) || this;\n        if (widths == null) {\n            throw new Error('ArgumentNullException:widths');\n        }\n        _this.widths = widths;\n        return _this;\n    }\n    //Properties\n    /**\n     * Gets the `32 bit number` at the specified index.\n     * @private\n     */\n    StandardWidthTable.prototype.items = function (index) {\n        if (index < 0 || index >= this.widths.length) {\n            throw new Error('ArgumentOutOfRangeException:index, The character is not supported by the font.');\n        }\n        var result = this.widths[index];\n        return result;\n    };\n    Object.defineProperty(StandardWidthTable.prototype, \"length\", {\n        /**\n         * Gets the `length` of the internal array.\n         * @private\n         */\n        get: function () {\n            return this.widths.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Overrides\n    /**\n     * `Clones` this instance of the WidthTable class.\n     * @private\n     */\n    StandardWidthTable.prototype.clone = function () {\n        var swt = this;\n        swt.widths = this.widths;\n        return swt;\n    };\n    /**\n     * Converts width table to a `PDF array`.\n     * @private\n     */\n    StandardWidthTable.prototype.toArray = function () {\n        var arr = new PdfArray(this.widths);\n        return arr;\n    };\n    return StandardWidthTable;\n}(WidthTable));\nexport { StandardWidthTable };\n","/**\n * TrueTypeFont.ts class for EJ2-PDF\n */\nimport { ByteArray } from './../../graphics/images/index';\nimport { TtfReader } from './ttf-reader';\nimport { PdfDictionary, SaveDescendantFontEventHandler, SaveFontDictionaryEventHandler } from './../../primitives/pdf-dictionary';\nimport { SaveFontProgramEventHandler, SaveCmapEventHandler } from './../../primitives/pdf-stream';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfString } from './../../primitives/pdf-string';\nimport { PdfReferenceHolder } from './../../primitives/pdf-reference';\nimport { PdfFontMetrics } from './pdf-font-metrics';\nimport { StandardWidthTable } from './pdf-font-metrics';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { Dictionary } from './../../collections/dictionary';\nimport { FontDescriptorFlags } from './enum';\nimport { RectangleF } from './../../drawing/pdf-drawing';\nimport { Operators } from './../../input-output/pdf-operators';\nvar UnicodeTrueTypeFont = /** @class */ (function () {\n    /* tslint:enable */\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfTrueTypeFont` class.\n     * @private\n     */\n    function UnicodeTrueTypeFont(base64String, size) {\n        // Fields\n        this.nameString = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Indicates whether the font program is compressed or not.\n         * @private\n         */\n        this.isCompress = false;\n        /**\n         * Indicates whether the font is embedded or not.\n         */\n        this.isEmbedFont = false;\n        /**\n         * Cmap table's start prefix.\n         */\n        /* tslint:disable */\n        this.cmapPrefix = '/CIDInit /ProcSet findresource begin\\n12 dict begin\\nbegincmap' + Operators.newLine + '/CIDSystemInfo << /Registry (Adobe)/Ordering (UCS)/Supplement 0>> def\\n/CMapName ' + '/Adobe-Identity-UCS def\\n/CMapType 2 def\\n1 begincodespacerange' + Operators.newLine;\n        /* tslint:enable */\n        /**\n         * Cmap table's start suffix.\n         */\n        this.cmapEndCodespaceRange = 'endcodespacerange' + Operators.newLine;\n        /**\n         * Cmap's begin range marker.\n         */\n        this.cmapBeginRange = 'beginbfrange' + Operators.newLine;\n        /**\n         * Cmap's end range marker.\n         */\n        this.cmapEndRange = 'endbfrange' + Operators.newLine;\n        /**\n         * Cmap table's end\n         */\n        /* tslint:disable */\n        this.cmapSuffix = 'endbfrange\\nendcmap\\nCMapName currentdict ' + '/CMap defineresource pop\\nend end' + Operators.newLine;\n        if (base64String === null || base64String === undefined) {\n            throw new Error('ArgumentNullException:base64String');\n        }\n        this.fontSize = size;\n        this.fontString = base64String;\n        this.Initialize();\n    }\n    //Implementation\n    /**\n     * Returns width of the char symbol.\n     */\n    UnicodeTrueTypeFont.prototype.getCharWidth = function (charCode) {\n        var codeWidth = this.ttfReader.getCharWidth(charCode);\n        return codeWidth;\n    };\n    /**\n     * Returns width of the text line.\n     */\n    UnicodeTrueTypeFont.prototype.getLineWidth = function (line) {\n        // if (line == null) {\n        //     throw new Error('ArgumentNullException : line');\n        // }\n        var width = 0;\n        for (var i = 0, len = line.length; i < len; i++) {\n            var ch = line[i];\n            var charWidth = this.getCharWidth(ch);\n            width += charWidth;\n        }\n        return width;\n    };\n    /**\n     * Initializes a new instance of the `PdfTrueTypeFont` class.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.Initialize = function () {\n        var byteArray = new ByteArray(this.fontString.length);\n        byteArray.writeFromBase64String(this.fontString);\n        this.fontData = byteArray.internalBuffer;\n        this.ttfReader = new TtfReader(this.fontData);\n        this.ttfMetrics = this.ttfReader.metrics;\n    };\n    UnicodeTrueTypeFont.prototype.createInternals = function () {\n        this.fontDictionary = new PdfDictionary();\n        this.fontProgram = new PdfStream();\n        this.cmap = new PdfStream();\n        this.descendantFont = new PdfDictionary();\n        this.metrics = new PdfFontMetrics();\n        this.ttfReader.createInternals();\n        this.ttfMetrics = this.ttfReader.metrics;\n        this.initializeMetrics();\n        // Create all the dictionaries of the font.\n        this.subsetName = this.getFontName();\n        this.createDescendantFont();\n        this.createCmap();\n        this.createFontDictionary();\n        this.createFontProgram();\n    };\n    UnicodeTrueTypeFont.prototype.getInternals = function () {\n        return this.fontDictionary;\n    };\n    /**\n     * Initializes metrics.\n     */\n    UnicodeTrueTypeFont.prototype.initializeMetrics = function () {\n        var ttfMetrics = this.ttfReader.metrics;\n        this.metrics.ascent = ttfMetrics.macAscent;\n        this.metrics.descent = ttfMetrics.macDescent;\n        this.metrics.height = ttfMetrics.macAscent - ttfMetrics.macDescent + ttfMetrics.lineGap;\n        this.metrics.name = ttfMetrics.fontFamily;\n        this.metrics.postScriptName = ttfMetrics.postScriptName;\n        this.metrics.size = this.fontSize;\n        this.metrics.widthTable = new StandardWidthTable(ttfMetrics.widthTable);\n        this.metrics.lineGap = ttfMetrics.lineGap;\n        this.metrics.subScriptSizeFactor = ttfMetrics.subScriptSizeFactor;\n        this.metrics.superscriptSizeFactor = ttfMetrics.superscriptSizeFactor;\n        this.metrics.isBold = ttfMetrics.isBold;\n    };\n    /**\n     * Gets random string.\n     */\n    UnicodeTrueTypeFont.prototype.getFontName = function () {\n        var builder = '';\n        var name;\n        // if (this.isEmbed === false) {\n        for (var i = 0; i < 6; i++) {\n            var index = Math.floor(Math.random() * (25 - 0 + 1)) + 0;\n            builder += this.nameString[index];\n        }\n        builder += '+';\n        // }\n        builder += this.ttfReader.metrics.postScriptName;\n        name = builder.toString();\n        // if (name === '') {\n        //     name = this.ttfReader.metrics.fontFamily;\n        // }\n        name = this.formatName(name);\n        return name;\n    };\n    /**\n     * Generates name of the font.\n     */\n    UnicodeTrueTypeFont.prototype.formatName = function (fontName) {\n        // if (fontName === null) {\n        //     throw new Error('ArgumentNullException : fontName');\n        // }\n        // if (fontName === '') {\n        //     throw new Error('ArgumentOutOfRangeException : fontName, Parameter can not be empty');\n        // }\n        var ret = fontName.replace('(', '#28');\n        ret = ret.replace(')', '#29');\n        ret = ret.replace('[', '#5B');\n        ret = ret.replace(']', '#5D');\n        ret = ret.replace('<', '#3C');\n        ret = ret.replace('>', '#3E');\n        ret = ret.replace('{', '#7B');\n        ret = ret.replace('}', '#7D');\n        ret = ret.replace('/', '#2F');\n        ret = ret.replace('%', '#25');\n        return ret.replace(' ', '#20');\n    };\n    /**\n     * Creates descendant font.\n     */\n    UnicodeTrueTypeFont.prototype.createDescendantFont = function () {\n        // Set property used to clone Font every time\n        this.descendantFont.isResource = true;\n        this.descendantFont.descendantFontBeginSave = new SaveDescendantFontEventHandler(this);\n        this.descendantFont.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        if (this.ttfReader && this.ttfReader._isOpenTypeFont) {\n            this.descendantFont.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.cIDFontType0));\n        }\n        else {\n            this.descendantFont.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.cIDFontType2));\n        }\n        this.descendantFont.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.subsetName));\n        this.descendantFont.items.setValue(this.dictionaryProperties.cIDToGIDMap, new PdfName(this.dictionaryProperties.identity));\n        this.descendantFont.items.setValue(this.dictionaryProperties.dw, new PdfNumber(1000));\n        this.fontDescriptor = this.createFontDescriptor();\n        this.descendantFont.items.setValue(this.dictionaryProperties.fontDescriptor, new PdfReferenceHolder(this.fontDescriptor));\n        var systemInfo = this.createSystemInfo();\n        this.descendantFont.items.setValue(this.dictionaryProperties.cIDSystemInfo, systemInfo);\n    };\n    /**\n     * Creates font descriptor.\n     */\n    UnicodeTrueTypeFont.prototype.createFontDescriptor = function () {\n        var descriptor = new PdfDictionary();\n        var metrics = this.ttfReader.metrics;\n        // Set property used to clone Font every time\n        descriptor.isResource = true;\n        descriptor.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.fontDescriptor));\n        descriptor.items.setValue(this.dictionaryProperties.fontName, new PdfName(this.subsetName));\n        descriptor.items.setValue(this.dictionaryProperties.flags, new PdfNumber(this.getDescriptorFlags()));\n        descriptor.items.setValue(this.dictionaryProperties.fontBBox, PdfArray.fromRectangle(this.getBoundBox()));\n        descriptor.items.setValue(this.dictionaryProperties.missingWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.stemV, new PdfNumber(metrics.stemV));\n        descriptor.items.setValue(this.dictionaryProperties.italicAngle, new PdfNumber(metrics.italicAngle));\n        descriptor.items.setValue(this.dictionaryProperties.capHeight, new PdfNumber(metrics.capHeight));\n        descriptor.items.setValue(this.dictionaryProperties.ascent, new PdfNumber(metrics.winAscent));\n        descriptor.items.setValue(this.dictionaryProperties.descent, new PdfNumber(metrics.winDescent));\n        descriptor.items.setValue(this.dictionaryProperties.leading, new PdfNumber(metrics.leading));\n        descriptor.items.setValue(this.dictionaryProperties.avgWidth, new PdfNumber(metrics.widthTable[32]));\n        if (this.ttfReader.metrics.contains) {\n            descriptor.items.setValue(this.dictionaryProperties.fontFile3, new PdfReferenceHolder(this.fontProgram));\n            this.fontProgram.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.cIDFontType0C));\n        }\n        else {\n            descriptor.items.setValue(this.dictionaryProperties.fontFile2, new PdfReferenceHolder(this.fontProgram));\n        }\n        descriptor.items.setValue(this.dictionaryProperties.maxWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.xHeight, new PdfNumber(0));\n        descriptor.items.setValue(this.dictionaryProperties.stemH, new PdfNumber(0));\n        return descriptor;\n    };\n    /**\n     * Generates cmap.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.createCmap = function () {\n        this.cmap.cmapBeginSave = new SaveCmapEventHandler(this);\n    };\n    /**\n     * Generates font dictionary.\n     */\n    UnicodeTrueTypeFont.prototype.createFontDictionary = function () {\n        // Set property used to clone Font every time\n        this.fontDictionary.isResource = true;\n        this.fontDictionary.fontDictionaryBeginSave = new SaveFontDictionaryEventHandler(this);\n        this.fontDictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.subsetName));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.type0));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.encoding, new PdfName(this.dictionaryProperties.identityH));\n        var descFonts = new PdfArray();\n        var reference = new PdfReferenceHolder(this.descendantFont);\n        // Set property used to clone Font every time\n        descFonts.isFont = true;\n        descFonts.add(reference);\n        this.fontDictionary.items.setValue(this.dictionaryProperties.descendantFonts, descFonts);\n    };\n    /**\n     * Creates font program.\n     */\n    UnicodeTrueTypeFont.prototype.createFontProgram = function () {\n        this.fontProgram.fontProgramBeginSave = new SaveFontProgramEventHandler(this);\n    };\n    /**\n     * Creates system info dictionary for CID font.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.createSystemInfo = function () {\n        var systemInfo = new PdfDictionary();\n        systemInfo.items.setValue(this.dictionaryProperties.registry, new PdfString('Adobe'));\n        systemInfo.items.setValue(this.dictionaryProperties.ordering, new PdfString(this.dictionaryProperties.identity));\n        systemInfo.items.setValue(this.dictionaryProperties.supplement, new PdfNumber(0));\n        return systemInfo;\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    UnicodeTrueTypeFont.prototype.descendantFontBeginSave = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var width = this.getDescendantWidth();\n            if (width !== null) {\n                this.descendantFont.items.setValue(this.dictionaryProperties.w, width);\n            }\n        }\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    UnicodeTrueTypeFont.prototype.cmapBeginSave = function () {\n        this.generateCmap();\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    /* tslint:disable */\n    UnicodeTrueTypeFont.prototype.fontDictionaryBeginSave = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0 && !this.fontDictionary.containsKey(this.dictionaryProperties.toUnicode)) {\n            this.fontDictionary.items.setValue(this.dictionaryProperties.toUnicode, new PdfReferenceHolder(this.cmap));\n        }\n    };\n    /* tslint:enable */\n    /**\n     * Runs before font program stream save.\n     */\n    UnicodeTrueTypeFont.prototype.fontProgramBeginSave = function () {\n        this.isCompress = true;\n        this.generateFontProgram();\n    };\n    /**\n     * Gets width description pad array for c i d font.\n     */\n    UnicodeTrueTypeFont.prototype.getDescendantWidth = function () {\n        var array = new PdfArray();\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var glyphInfo = [];\n            // if (!this.isEmbedFont) {\n            var keys = this.usedChars.keys();\n            for (var i = 0; i < keys.length; i++) {\n                var chLen = keys[i];\n                var glyph = this.ttfReader.getGlyph(chLen);\n                if (glyph.empty) {\n                    continue;\n                }\n                glyphInfo.push(glyph);\n            }\n            // } else {\n            //     glyphInfo = this.ttfReader.getAllGlyphs();\n            // }\n            glyphInfo.sort(function (a, b) { return a.index - b.index; });\n            var firstGlyphIndex = 0;\n            var lastGlyphIndex = 0;\n            var firstGlyphIndexWasSet = false;\n            var widthDetails = new PdfArray();\n            // if (!this.isEmbedFont) {\n            for (var i = 0; i < glyphInfo.length; i++) {\n                var glyph = glyphInfo[i];\n                if (!firstGlyphIndexWasSet) {\n                    firstGlyphIndexWasSet = true;\n                    firstGlyphIndex = glyph.index;\n                    lastGlyphIndex = glyph.index - 1;\n                }\n                if ((lastGlyphIndex + 1 !== glyph.index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {\n                    // Add glyph index / width.\n                    array.add(new PdfNumber(firstGlyphIndex));\n                    if (i !== 0) {\n                        array.add(widthDetails);\n                    }\n                    firstGlyphIndex = glyph.index;\n                    widthDetails = new PdfArray();\n                }\n                widthDetails.add(new PdfNumber(glyph.width));\n                if (i + 1 === glyphInfo.length) {\n                    array.add(new PdfNumber(firstGlyphIndex));\n                    array.add(widthDetails);\n                }\n                lastGlyphIndex = glyph.index;\n            }\n            // } else {\n            //     for (let i : number = 0; i < glyphInfo.length; i++) {\n            //         let glyph : TtfGlyphInfo = glyphInfo[i];\n            //         if (!firstGlyphIndexWasSet) {\n            //             firstGlyphIndexWasSet = true;\n            //             lastGlyphIndex = glyph.index - 1;\n            //         }\n            //         firstGlyphIndex = glyph.index;\n            //         if ((lastGlyphIndex + 1 === glyph.index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {\n            //             // Add glyph index / width.\n            //             widthDetails.add(new PdfNumber(glyph.width));\n            //             array.add(new PdfNumber(firstGlyphIndex));\n            //             array.add(widthDetails);\n            //             widthDetails = new PdfArray();\n            //         }\n            //         lastGlyphIndex = glyph.index;\n            //     }\n            // }\n        }\n        return array;\n    };\n    /**\n     * Creates cmap.\n     */\n    UnicodeTrueTypeFont.prototype.generateCmap = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var glyphChars = this.ttfReader.getGlyphChars(this.usedChars);\n            if (glyphChars.size() > 0) {\n                var keys = glyphChars.keys().sort();\n                // add first and last glyph indexes\n                var first = keys[0];\n                var last = keys[keys.length - 1];\n                var middlePart = this.toHexString(first, false) + this.toHexString(last, false) + Operators.newLine;\n                var builder = '';\n                builder += this.cmapPrefix;\n                builder += middlePart;\n                builder += this.cmapEndCodespaceRange;\n                var nextRange = 0;\n                for (var i = 0; i < keys.length; i++) {\n                    if (nextRange === 0) {\n                        if (i !== 0) {\n                            builder += this.cmapEndRange;\n                        }\n                        nextRange = Math.min(100, keys.length - i);\n                        builder += nextRange;\n                        builder += Operators.whiteSpace;\n                        builder += this.cmapBeginRange;\n                    }\n                    nextRange -= 1;\n                    var key = keys[i];\n                    /* tslint:disable */\n                    builder += this.toHexString(key, true) + this.toHexString(key, true) + this.toHexString(glyphChars.getValue(key), true) + '\\n';\n                    /* tslint:enable */\n                }\n                builder += this.cmapSuffix;\n                this.cmap.clearStream();\n                this.cmap.isResource = true;\n                this.cmap.write(builder);\n            }\n        }\n    };\n    /**\n     * Generates font program.\n     */\n    UnicodeTrueTypeFont.prototype.generateFontProgram = function () {\n        this.usedChars = (this.usedChars === null || this.usedChars === undefined) ? new Dictionary() : this.usedChars;\n        this.ttfReader.setOffset(0);\n        if (this.ttfReader.metrics.contains && this.ttfReader._isOpenTypeFont) {\n            var cffData = this.ttfReader._readCompactFontFormatTable();\n            this.fontProgram.clearStream();\n            this.fontProgram.isResource = true;\n            this.fontProgram.writeBytes(cffData);\n        }\n        else {\n            var fontProgram = this.ttfReader.readFontProgram(this.usedChars);\n            this.fontProgram.clearStream();\n            this.fontProgram.isResource = true;\n            this.fontProgram.writeBytes(fontProgram);\n        }\n    };\n    /**\n     * Calculates flags for the font descriptor.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.getDescriptorFlags = function () {\n        var flags = 0;\n        var metrics = this.ttfReader.metrics;\n        if (metrics.isFixedPitch) {\n            flags |= FontDescriptorFlags.FixedPitch;\n        }\n        if (metrics.isSymbol) {\n            flags |= FontDescriptorFlags.Symbolic;\n        }\n        else {\n            flags |= FontDescriptorFlags.Nonsymbolic;\n        }\n        if (metrics.isItalic) {\n            flags |= FontDescriptorFlags.Italic;\n        }\n        if (metrics.isBold) {\n            flags |= FontDescriptorFlags.ForceBold;\n        }\n        return flags;\n    };\n    /**\n     * Calculates BoundBox of the descriptor.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.getBoundBox = function () {\n        var rect = this.ttfReader.metrics.fontBox;\n        var width = Math.abs(rect.right - rect.left);\n        var height = Math.abs(rect.top - rect.bottom);\n        var rectangle = new RectangleF(rect.left, rect.bottom, width, height);\n        return rectangle;\n    };\n    /**\n     * Converts integer of decimal system to hex integer.\n     */\n    UnicodeTrueTypeFont.prototype.toHexString = function (n, isCaseChange) {\n        var s = n.toString(16);\n        if (isCaseChange) {\n            s = s.toUpperCase();\n        }\n        return '<0000'.substring(0, 5 - s.length) + s + '>';\n    };\n    /**\n     * Stores used symbols.\n     */\n    UnicodeTrueTypeFont.prototype.setSymbols = function (text) {\n        if (text === null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        if (this.usedChars === null || this.usedChars === undefined) {\n            this.usedChars = new Dictionary();\n        }\n        for (var i = 0; i < text.length; i++) {\n            var ch = text[i];\n            this.usedChars.setValue(ch, String.fromCharCode(0));\n        }\n        // else {\n        //     if (text === null) {\n        //         throw new Error('Argument Null Exception : glyphs');\n        //     }\n        //     if (this.usedChars === null || this.usedChars === undefined) {\n        //             this.usedChars = new Dictionary<string, string>();\n        //     }\n        //     for (let i : number = 0; i < text.length; i++) {\n        //         let glyphIndex : number = text[i];\n        //         let glyph : TtfGlyphInfo =  this.ttfReader.getGlyph(glyphIndex);\n        //         if (!glyph == null) {\n        //             let c : string = glyph.charCode.toLocaleString();\n        //             this.usedChars.setValue(c, String.fromCharCode(0));\n        //         }\n        //     }\n        // }\n        if (this.isEmbedFont === false) {\n            this.getDescendantWidth();\n        }\n    };\n    return UnicodeTrueTypeFont;\n}());\nexport { UnicodeTrueTypeFont };\n","/**\n * ArabicShapeRenderer.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../../../collections/dictionary';\nvar ArabicShapeRenderer = /** @class */ (function () {\n    //#endregion\n    //#region Constructor\n    function ArabicShapeRenderer() {\n        //#region Constants\n        this.arabicCharTable = [['\\u0621', '\\uFE80'], ['\\u0622', '\\uFE81', '\\uFE82'],\n            ['\\u0623', '\\uFE83', '\\uFE84'],\n            ['\\u0624', '\\uFE85', '\\uFE86'],\n            ['\\u0625', '\\uFE87', '\\uFE88'],\n            ['\\u0626', '\\uFE89', '\\uFE8A', '\\uFE8B', '\\uFE8C'],\n            ['\\u0627', '\\uFE8D', '\\uFE8E'],\n            ['\\u0628', '\\uFE8F', '\\uFE90', '\\uFE91', '\\uFE92'],\n            ['\\u0629', '\\uFE93', '\\uFE94'],\n            ['\\u062A', '\\uFE95', '\\uFE96', '\\uFE97', '\\uFE98'],\n            ['\\u062B', '\\uFE99', '\\uFE9A', '\\uFE9B', '\\uFE9C'],\n            ['\\u062C', '\\uFE9D', '\\uFE9E', '\\uFE9F', '\\uFEA0'],\n            ['\\u062D', '\\uFEA1', '\\uFEA2', '\\uFEA3', '\\uFEA4'],\n            ['\\u062E', '\\uFEA5', '\\uFEA6', '\\uFEA7', '\\uFEA8'],\n            ['\\u062F', '\\uFEA9', '\\uFEAA'],\n            ['\\u0630', '\\uFEAB', '\\uFEAC'],\n            ['\\u0631', '\\uFEAD', '\\uFEAE'],\n            ['\\u0632', '\\uFEAF', '\\uFEB0'],\n            ['\\u0633', '\\uFEB1', '\\uFEB2', '\\uFEB3', '\\uFEB4'],\n            ['\\u0634', '\\uFEB5', '\\uFEB6', '\\uFEB7', '\\uFEB8'],\n            ['\\u0635', '\\uFEB9', '\\uFEBA', '\\uFEBB', '\\uFEBC'],\n            ['\\u0636', '\\uFEBD', '\\uFEBE', '\\uFEBF', '\\uFEC0'],\n            ['\\u0637', '\\uFEC1', '\\uFEC2', '\\uFEC3', '\\uFEC4'],\n            ['\\u0638', '\\uFEC5', '\\uFEC6', '\\uFEC7', '\\uFEC8'],\n            ['\\u0639', '\\uFEC9', '\\uFECA', '\\uFECB', '\\uFECC'],\n            ['\\u063A', '\\uFECD', '\\uFECE', '\\uFECF', '\\uFED0'],\n            ['\\u0640', '\\u0640', '\\u0640', '\\u0640', '\\u0640'],\n            ['\\u0641', '\\uFED1', '\\uFED2', '\\uFED3', '\\uFED4'],\n            ['\\u0642', '\\uFED5', '\\uFED6', '\\uFED7', '\\uFED8'],\n            ['\\u0643', '\\uFED9', '\\uFEDA', '\\uFEDB', '\\uFEDC'],\n            ['\\u0644', '\\uFEDD', '\\uFEDE', '\\uFEDF', '\\uFEE0'],\n            ['\\u0645', '\\uFEE1', '\\uFEE2', '\\uFEE3', '\\uFEE4'],\n            ['\\u0646', '\\uFEE5', '\\uFEE6', '\\uFEE7', '\\uFEE8'],\n            ['\\u0647', '\\uFEE9', '\\uFEEA', '\\uFEEB', '\\uFEEC'],\n            ['\\u0648', '\\uFEED', '\\uFEEE'],\n            ['\\u0649', '\\uFEEF', '\\uFEF0', '\\uFBE8', '\\uFBE9'],\n            ['\\u064A', '\\uFEF1', '\\uFEF2', '\\uFEF3', '\\uFEF4'],\n            ['\\u0671', '\\uFB50', '\\uFB51'],\n            ['\\u0679', '\\uFB66', '\\uFB67', '\\uFB68', '\\uFB69'],\n            ['\\u067A', '\\uFB5E', '\\uFB5F', '\\uFB60', '\\uFB61'],\n            ['\\u067B', '\\uFB52', '\\uFB53', '\\uFB54', '\\uFB55'],\n            ['\\u067E', '\\uFB56', '\\uFB57', '\\uFB58', '\\uFB59'],\n            ['\\u067F', '\\uFB62', '\\uFB63', '\\uFB64', '\\uFB65'],\n            ['\\u0680', '\\uFB5A', '\\uFB5B', '\\uFB5C', '\\uFB5D'],\n            ['\\u0683', '\\uFB76', '\\uFB77', '\\uFB78', '\\uFB79'],\n            ['\\u0684', '\\uFB72', '\\uFB73', '\\uFB74', '\\uFB75'],\n            ['\\u0686', '\\uFB7A', '\\uFB7B', '\\uFB7C', '\\uFB7D'],\n            ['\\u0687', '\\uFB7E', '\\uFB7F', '\\uFB80', '\\uFB81'],\n            ['\\u0688', '\\uFB88', '\\uFB89'],\n            ['\\u068C', '\\uFB84', '\\uFB85'],\n            ['\\u068D', '\\uFB82', '\\uFB83'],\n            ['\\u068E', '\\uFB86', '\\uFB87'],\n            ['\\u0691', '\\uFB8C', '\\uFB8D'],\n            ['\\u0698', '\\uFB8A', '\\uFB8B'],\n            ['\\u06A4', '\\uFB6A', '\\uFB6B', '\\uFB6C', '\\uFB6D'],\n            ['\\u06A6', '\\uFB6E', '\\uFB6F', '\\uFB70', '\\uFB71'],\n            ['\\u06A9', '\\uFB8E', '\\uFB8F', '\\uFB90', '\\uFB91'],\n            ['\\u06AD', '\\uFBD3', '\\uFBD4', '\\uFBD5', '\\uFBD6'],\n            ['\\u06AF', '\\uFB92', '\\uFB93', '\\uFB94', '\\uFB95'],\n            ['\\u06B1', '\\uFB9A', '\\uFB9B', '\\uFB9C', '\\uFB9D'],\n            ['\\u06B3', '\\uFB96', '\\uFB97', '\\uFB98', '\\uFB99'],\n            ['\\u06BA', '\\uFB9E', '\\uFB9F'],\n            ['\\u06BB', '\\uFBA0', '\\uFBA1', '\\uFBA2', '\\uFBA3'],\n            ['\\u06BE', '\\uFBAA', '\\uFBAB', '\\uFBAC', '\\uFBAD'],\n            ['\\u06C0', '\\uFBA4', '\\uFBA5'],\n            ['\\u06C1', '\\uFBA6', '\\uFBA7', '\\uFBA8', '\\uFBA9'],\n            ['\\u06C5', '\\uFBE0', '\\uFBE1'],\n            ['\\u06C6', '\\uFBD9', '\\uFBDA'],\n            ['\\u06C7', '\\uFBD7', '\\uFBD8'],\n            ['\\u06C8', '\\uFBDB', '\\uFBDC'],\n            ['\\u06C9', '\\uFBE2', '\\uFBE3'],\n            ['\\u06CB', '\\uFBDE', '\\uFBDF'],\n            ['\\u06CC', '\\uFBFC', '\\uFBFD', '\\uFBFE', '\\uFBFF'],\n            ['\\u06D0', '\\uFBE4', '\\uFBE5', '\\uFBE6', '\\uFBE7'],\n            ['\\u06D2', '\\uFBAE', '\\uFBAF'],\n            ['\\u06D3', '\\uFBB0', '\\uFBB1']\n        ];\n        this.alef = '\\u0627';\n        this.alefHamza = '\\u0623';\n        this.alefHamzaBelow = '\\u0625';\n        this.alefMadda = '\\u0622';\n        this.lam = '\\u0644';\n        this.hamza = '\\u0621';\n        this.zeroWidthJoiner = '\\u200D';\n        this.hamzaAbove = '\\u0654';\n        this.hamzaBelow = '\\u0655';\n        this.wawHamza = '\\u0624';\n        this.yehHamza = '\\u0626';\n        this.waw = '\\u0648';\n        this.alefMaksura = '\\u0649';\n        this.yeh = '\\u064A';\n        this.farsiYeh = '\\u06CC';\n        this.shadda = '\\u0651';\n        this.madda = '\\u0653';\n        this.lwa = '\\uFEFB';\n        this.lwawh = '\\uFEF7';\n        this.lwawhb = '\\uFEF9';\n        this.lwawm = '\\uFEF5';\n        this.bwhb = '\\u06D3';\n        this.fathatan = '\\u064B';\n        this.superScriptalef = '\\u0670';\n        this.vowel = 0x1;\n        // #endregion\n        //#region Fields\n        this.arabicMapTable = new Dictionary();\n        for (var i = 0; i < this.arabicCharTable.length; i++) {\n            this.arabicMapTable.setValue(this.arabicCharTable[i][0], this.arabicCharTable[i]);\n        }\n    }\n    //#endregion\n    //#region implementation\n    ArabicShapeRenderer.prototype.getCharacterShape = function (input, index) {\n        if ((input >= this.hamza) && (input <= this.bwhb)) {\n            var value = [];\n            if (this.arabicMapTable.getValue(input)) {\n                value = this.arabicMapTable.getValue(input);\n                return value[index + 1];\n            }\n        }\n        else if (input >= this.lwawm && input <= this.lwa) {\n            return (input);\n        }\n        return input;\n    };\n    ArabicShapeRenderer.prototype.shape = function (text, level) {\n        var builder = '';\n        var str2 = '';\n        for (var i = 0; i < text.length; i++) {\n            var c = text[i];\n            if (c >= '؀' && c <= 'ۿ') {\n                //if(c>= 0x0600.toString() && c<= 0x06FF.toString()) {\n                str2 = str2 + c;\n            }\n            else {\n                if (str2.length > 0) {\n                    var st = this.doShape(str2.toString(), 0);\n                    builder = builder + st;\n                    str2 = '';\n                }\n                builder = builder + c;\n            }\n        }\n        if (str2.length > 0) {\n            var st = this.doShape(str2.toString(), 0);\n            builder = builder + st;\n        }\n        return builder.toString();\n    };\n    ArabicShapeRenderer.prototype.doShape = function (input, level) {\n        var str = '';\n        var ligature = 0;\n        var len = 0;\n        var i = 0;\n        var next = '';\n        var previous = new ArabicShape();\n        var present = new ArabicShape();\n        while (i < input.length) {\n            next = input[i++];\n            ligature = this.ligature(next, present);\n            if (ligature === 0) {\n                var shapeCount = this.getShapeCount(next);\n                len = (shapeCount === 1) ? 0 : 2;\n                if (previous.Shapes > 2) {\n                    len += 1;\n                }\n                len = len % (present.Shapes);\n                present.Value = this.getCharacterShape(present.Value, len);\n                str = this.append(str, previous, level);\n                previous = present;\n                present = new ArabicShape();\n                present.Value = next;\n                present.Shapes = shapeCount;\n                present.Ligature++;\n            }\n        }\n        len = (previous.Shapes > 2) ? 1 : 0;\n        len = len % (present.Shapes);\n        present.Value = this.getCharacterShape(present.Value, len);\n        str = this.append(str, previous, level);\n        str = this.append(str, present, level);\n        return str.toString();\n    };\n    ArabicShapeRenderer.prototype.append = function (builder, shape, level) {\n        if (shape.Value !== '') {\n            builder = builder + shape.Value;\n            shape.Ligature -= 1;\n            if (shape.Type !== '') {\n                if ((level & this.vowel) === 0) {\n                    builder = builder + shape.Type;\n                    shape.Ligature -= 1;\n                }\n                else {\n                    shape.Ligature -= 1;\n                }\n            }\n            if (shape.vowel !== '') {\n                if ((level & this.vowel) === 0) {\n                    builder = builder + shape.vowel;\n                    shape.Ligature -= 1;\n                }\n                else {\n                    shape.Ligature -= 1;\n                }\n            }\n        }\n        return builder;\n    };\n    ArabicShapeRenderer.prototype.ligature = function (value, shape) {\n        if (shape.Value !== '') {\n            var result = 0;\n            if ((value >= this.fathatan && value <= this.hamzaBelow) || value === this.superScriptalef) {\n                result = 1;\n                if ((shape.vowel !== '') && (value !== this.shadda)) {\n                    result = 2;\n                }\n                if (value === this.shadda) {\n                    if (shape.Type == null) {\n                        shape.Type = this.shadda;\n                    }\n                    else {\n                        return 0;\n                    }\n                }\n                else if (value === this.hamzaBelow) {\n                    if (shape.Value === this.alef) {\n                        shape.Value = this.alefHamzaBelow;\n                        result = 2;\n                    }\n                    else if (value === this.lwa) {\n                        shape.Value = this.lwawhb;\n                        result = 2;\n                    }\n                    else {\n                        shape.Type = this.hamzaBelow;\n                    }\n                }\n                else if (value === this.hamzaAbove) {\n                    if (shape.Value === this.alef) {\n                        shape.Value = this.alefHamza;\n                        result = 2;\n                    }\n                    else if (shape.Value === this.lwa) {\n                        shape.Value = this.lwawh;\n                        result = 2;\n                    }\n                    else if (shape.Value === this.waw) {\n                        shape.Value = this.wawHamza;\n                        result = 2;\n                    }\n                    else if (shape.Value === this.yeh || shape.Value === this.alefMaksura || shape.Value === this.farsiYeh) {\n                        shape.Value = this.yehHamza;\n                        result = 2;\n                    }\n                    else {\n                        shape.Type = this.hamzaAbove;\n                    }\n                }\n                else if (value === this.madda) {\n                    if (shape.Value === this.alef) {\n                        shape.Value = this.alefMadda;\n                        result = 2;\n                    }\n                }\n                else {\n                    shape.vowel = value;\n                }\n                if (result === 1) {\n                    shape.Ligature++;\n                }\n                return result;\n            }\n            if (shape.vowel !== '') {\n                return 0;\n            }\n            if (shape.Value === this.lam) {\n                if (value === this.alef) {\n                    shape.Value = this.lwa;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n                else if (value === this.alefHamza) {\n                    shape.Value = this.lwawh;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n                else if (value === this.alefHamzaBelow) {\n                    shape.Value = this.lwawhb;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n                else if (value === this.alefMadda) {\n                    shape.Value = this.lwawm;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n            }\n            // else if (shape.Value === '') {\n            //     shape.Value = value;\n            //     shape.Shapes = this.getShapeCount(value);\n            //     result = 1;\n            // }\n            return result;\n        }\n        else {\n            return 0;\n        }\n    };\n    ArabicShapeRenderer.prototype.getShapeCount = function (shape) {\n        if ((shape >= this.hamza) && (shape <= this.bwhb) && !((shape >= this.fathatan && shape <= this.hamzaBelow)\n            || shape === this.superScriptalef)) {\n            var c = [];\n            if (this.arabicMapTable.getValue(shape)) {\n                c = this.arabicMapTable.getValue(shape);\n                return c.length - 1;\n            }\n        }\n        else if (shape === this.zeroWidthJoiner) {\n            return 4;\n        }\n        return 1;\n    };\n    return ArabicShapeRenderer;\n}());\nexport { ArabicShapeRenderer };\n//#endregion\n//#region Internals\nvar ArabicShape = /** @class */ (function () {\n    function ArabicShape() {\n        //#region Fields\n        this.shapeValue = '';\n        this.shapeType = '';\n        this.shapeVowel = '';\n        this.shapeLigature = 0;\n        this.shapeShapes = 1;\n        //#endregion\n    }\n    Object.defineProperty(ArabicShape.prototype, \"Value\", {\n        //#endregion\n        //#region Properties \n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeValue;\n        },\n        set: function (value) {\n            this.shapeValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"Type\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeType;\n        },\n        set: function (value) {\n            this.shapeType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"vowel\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeVowel;\n        },\n        set: function (value) {\n            this.shapeVowel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"Ligature\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeLigature;\n        },\n        set: function (value) {\n            this.shapeLigature = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"Shapes\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeShapes;\n        },\n        set: function (value) {\n            this.shapeShapes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ArabicShape;\n}());\nexport { ArabicShape };\n//#endregion\n","/**\n * Bidi.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../../../collections/dictionary';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar Bidi = /** @class */ (function () {\n    //#endregion\n    //#region Constructor\n    function Bidi() {\n        //#region Fields\n        this.indexes = [];\n        this.indexLevels = [];\n        this.mirroringShapeCharacters = new Dictionary();\n        this.update();\n    }\n    //#endregion\n    //#region implementation\n    Bidi.prototype.doMirrorShaping = function (text) {\n        var result = [];\n        for (var i = 0; i < text.length; i++) {\n            if (((this.indexLevels[i] & 1) === 1) && this.mirroringShapeCharacters.containsKey(text[i].charCodeAt(0))) {\n                result[i] = String.fromCharCode(this.mirroringShapeCharacters.getValue(text[i].charCodeAt(0)));\n            }\n            else {\n                result[i] = text[i].toString();\n            }\n        }\n        var res = '';\n        for (var j = 0; j < result.length; j++) {\n            res = res + result[j];\n        }\n        return res;\n    };\n    Bidi.prototype.getLogicalToVisualString = function (inputText, isRtl) {\n        var rtlCharacters = new RtlCharacters();\n        this.indexLevels = rtlCharacters.getVisualOrder(inputText, isRtl);\n        this.setDefaultIndexLevel();\n        this.doOrder(0, this.indexLevels.length - 1);\n        var text = this.doMirrorShaping(inputText);\n        //let text : string = inputText;\n        var resultBuilder = '';\n        for (var i = 0; i < this.indexes.length; i++) {\n            var index = this.indexes[i];\n            resultBuilder += text[index];\n        }\n        return resultBuilder.toString();\n    };\n    Bidi.prototype.setDefaultIndexLevel = function () {\n        for (var i = 0; i < this.indexLevels.length; i++) {\n            this.indexes[i] = i;\n        }\n    };\n    Bidi.prototype.doOrder = function (sIndex, eIndex) {\n        var max = this.indexLevels[sIndex];\n        var min = max;\n        var odd = max;\n        var even = max;\n        for (var i = sIndex + 1; i <= eIndex; ++i) {\n            var data = this.indexLevels[i];\n            if (data > max) {\n                max = data;\n            }\n            else if (data < min) {\n                min = data;\n            }\n            odd &= data;\n            even |= data;\n        }\n        if ((even & 1) === 0) {\n            return;\n        }\n        if ((odd & 1) === 1) {\n            this.reArrange(sIndex, eIndex + 1);\n            return;\n        }\n        min |= 1;\n        while (max >= min) {\n            var pstart = sIndex;\n            /*tslint:disable:no-constant-condition */\n            while (true) {\n                while (pstart <= eIndex) {\n                    if (this.indexLevels[pstart] >= max) {\n                        break;\n                    }\n                    pstart += 1;\n                }\n                if (pstart > eIndex) {\n                    break;\n                }\n                var pend = pstart + 1;\n                while (pend <= eIndex) {\n                    if (this.indexLevels[pend] < max) {\n                        break;\n                    }\n                    pend += 1;\n                }\n                this.reArrange(pstart, pend);\n                pstart = pend + 1;\n            }\n            max -= 1;\n        }\n    };\n    Bidi.prototype.reArrange = function (i, j) {\n        var length = (i + j) / 2;\n        --j;\n        for (; i < length; ++i, --j) {\n            var temp = this.indexes[i];\n            this.indexes[i] = this.indexes[j];\n            this.indexes[j] = temp;\n        }\n    };\n    Bidi.prototype.update = function () {\n        this.mirroringShapeCharacters.setValue(40, 41);\n        this.mirroringShapeCharacters.setValue(41, 40);\n        this.mirroringShapeCharacters.setValue(60, 62);\n        this.mirroringShapeCharacters.setValue(62, 60);\n        this.mirroringShapeCharacters.setValue(91, 93);\n        this.mirroringShapeCharacters.setValue(93, 91);\n        this.mirroringShapeCharacters.setValue(123, 125);\n        this.mirroringShapeCharacters.setValue(125, 123);\n        this.mirroringShapeCharacters.setValue(171, 187);\n        this.mirroringShapeCharacters.setValue(187, 171);\n        this.mirroringShapeCharacters.setValue(8249, 8250);\n        this.mirroringShapeCharacters.setValue(8250, 8249);\n        this.mirroringShapeCharacters.setValue(8261, 8262);\n        this.mirroringShapeCharacters.setValue(8262, 8261);\n        this.mirroringShapeCharacters.setValue(8317, 8318);\n        this.mirroringShapeCharacters.setValue(8318, 8317);\n        this.mirroringShapeCharacters.setValue(8333, 8334);\n        this.mirroringShapeCharacters.setValue(8334, 8333);\n        this.mirroringShapeCharacters.setValue(8712, 8715);\n        this.mirroringShapeCharacters.setValue(8713, 8716);\n        this.mirroringShapeCharacters.setValue(8714, 8717);\n        this.mirroringShapeCharacters.setValue(8715, 8712);\n        this.mirroringShapeCharacters.setValue(8716, 8713);\n        this.mirroringShapeCharacters.setValue(8717, 8714);\n        this.mirroringShapeCharacters.setValue(8725, 10741);\n        this.mirroringShapeCharacters.setValue(8764, 8765);\n        this.mirroringShapeCharacters.setValue(8765, 8764);\n        this.mirroringShapeCharacters.setValue(8771, 8909);\n        this.mirroringShapeCharacters.setValue(8786, 8787);\n        this.mirroringShapeCharacters.setValue(8787, 8786);\n        this.mirroringShapeCharacters.setValue(8788, 8789);\n        this.mirroringShapeCharacters.setValue(8789, 8788);\n        this.mirroringShapeCharacters.setValue(8804, 8805);\n        this.mirroringShapeCharacters.setValue(8805, 8804);\n        this.mirroringShapeCharacters.setValue(8806, 8807);\n        this.mirroringShapeCharacters.setValue(8807, 8806);\n        this.mirroringShapeCharacters.setValue(8808, 8809);\n        this.mirroringShapeCharacters.setValue(8809, 8808);\n        this.mirroringShapeCharacters.setValue(8810, 8811);\n        this.mirroringShapeCharacters.setValue(8811, 8810);\n        this.mirroringShapeCharacters.setValue(8814, 8815);\n        this.mirroringShapeCharacters.setValue(8815, 8814);\n        this.mirroringShapeCharacters.setValue(8816, 8817);\n        this.mirroringShapeCharacters.setValue(8817, 8816);\n        this.mirroringShapeCharacters.setValue(8818, 8819);\n        this.mirroringShapeCharacters.setValue(8819, 8818);\n        this.mirroringShapeCharacters.setValue(8820, 8821);\n        this.mirroringShapeCharacters.setValue(8821, 8820);\n        this.mirroringShapeCharacters.setValue(8822, 8823);\n        this.mirroringShapeCharacters.setValue(8823, 8822);\n        this.mirroringShapeCharacters.setValue(8824, 8825);\n        this.mirroringShapeCharacters.setValue(8825, 8824);\n        this.mirroringShapeCharacters.setValue(8826, 8827);\n        this.mirroringShapeCharacters.setValue(8827, 8826);\n        this.mirroringShapeCharacters.setValue(8828, 8829);\n        this.mirroringShapeCharacters.setValue(8829, 8828);\n        this.mirroringShapeCharacters.setValue(8830, 8831);\n        this.mirroringShapeCharacters.setValue(8831, 8830);\n        this.mirroringShapeCharacters.setValue(8832, 8833);\n        this.mirroringShapeCharacters.setValue(8833, 8832);\n        this.mirroringShapeCharacters.setValue(8834, 8835);\n        this.mirroringShapeCharacters.setValue(8835, 8834);\n        this.mirroringShapeCharacters.setValue(8836, 8837);\n        this.mirroringShapeCharacters.setValue(8837, 8836);\n        this.mirroringShapeCharacters.setValue(8838, 8839);\n        this.mirroringShapeCharacters.setValue(8839, 8838);\n        this.mirroringShapeCharacters.setValue(8840, 8841);\n        this.mirroringShapeCharacters.setValue(8841, 8840);\n        this.mirroringShapeCharacters.setValue(8842, 8843);\n        this.mirroringShapeCharacters.setValue(8843, 8842);\n        this.mirroringShapeCharacters.setValue(8847, 8848);\n        this.mirroringShapeCharacters.setValue(8848, 8847);\n        this.mirroringShapeCharacters.setValue(8849, 8850);\n        this.mirroringShapeCharacters.setValue(8850, 8849);\n        this.mirroringShapeCharacters.setValue(8856, 10680);\n        this.mirroringShapeCharacters.setValue(8866, 8867);\n        this.mirroringShapeCharacters.setValue(8867, 8866);\n        this.mirroringShapeCharacters.setValue(8870, 10974);\n        this.mirroringShapeCharacters.setValue(8872, 10980);\n        this.mirroringShapeCharacters.setValue(8873, 10979);\n        this.mirroringShapeCharacters.setValue(8875, 10981);\n        this.mirroringShapeCharacters.setValue(8880, 8881);\n        this.mirroringShapeCharacters.setValue(8881, 8880);\n        this.mirroringShapeCharacters.setValue(8882, 8883);\n        this.mirroringShapeCharacters.setValue(8883, 8882);\n        this.mirroringShapeCharacters.setValue(8884, 8885);\n        this.mirroringShapeCharacters.setValue(8885, 8884);\n        /*tslint:disable:max-func-body-length */\n        this.mirroringShapeCharacters.setValue(8886, 8887);\n        this.mirroringShapeCharacters.setValue(8887, 8886);\n        this.mirroringShapeCharacters.setValue(8905, 8906);\n        this.mirroringShapeCharacters.setValue(8906, 8905);\n        this.mirroringShapeCharacters.setValue(8907, 8908);\n        this.mirroringShapeCharacters.setValue(8908, 8907);\n        this.mirroringShapeCharacters.setValue(8909, 8771);\n        this.mirroringShapeCharacters.setValue(8912, 8913);\n        this.mirroringShapeCharacters.setValue(8913, 8912);\n        this.mirroringShapeCharacters.setValue(8918, 8919);\n        this.mirroringShapeCharacters.setValue(8919, 8918);\n        this.mirroringShapeCharacters.setValue(8920, 8921);\n        this.mirroringShapeCharacters.setValue(8921, 8920);\n        this.mirroringShapeCharacters.setValue(8922, 8923);\n        this.mirroringShapeCharacters.setValue(8923, 8922);\n        this.mirroringShapeCharacters.setValue(8924, 8925);\n        this.mirroringShapeCharacters.setValue(8925, 8924);\n        this.mirroringShapeCharacters.setValue(8926, 8927);\n        this.mirroringShapeCharacters.setValue(8927, 8926);\n        this.mirroringShapeCharacters.setValue(8928, 8929);\n        this.mirroringShapeCharacters.setValue(8929, 8928);\n        this.mirroringShapeCharacters.setValue(8930, 8931);\n        this.mirroringShapeCharacters.setValue(8931, 8930);\n        this.mirroringShapeCharacters.setValue(8932, 8933);\n        this.mirroringShapeCharacters.setValue(8933, 8932);\n        this.mirroringShapeCharacters.setValue(8934, 8935);\n        this.mirroringShapeCharacters.setValue(8935, 8934);\n        this.mirroringShapeCharacters.setValue(8936, 8937);\n        this.mirroringShapeCharacters.setValue(8937, 8936);\n        this.mirroringShapeCharacters.setValue(8938, 8939);\n        this.mirroringShapeCharacters.setValue(8939, 8938);\n        this.mirroringShapeCharacters.setValue(8940, 8941);\n        this.mirroringShapeCharacters.setValue(8941, 8940);\n        this.mirroringShapeCharacters.setValue(8944, 8945);\n        this.mirroringShapeCharacters.setValue(8945, 8944);\n        this.mirroringShapeCharacters.setValue(8946, 8954);\n        this.mirroringShapeCharacters.setValue(8947, 8955);\n        this.mirroringShapeCharacters.setValue(8948, 8956);\n        this.mirroringShapeCharacters.setValue(8950, 8957);\n        this.mirroringShapeCharacters.setValue(8951, 8958);\n        this.mirroringShapeCharacters.setValue(8954, 8946);\n        this.mirroringShapeCharacters.setValue(8955, 8947);\n        this.mirroringShapeCharacters.setValue(8956, 8948);\n        this.mirroringShapeCharacters.setValue(8957, 8950);\n        this.mirroringShapeCharacters.setValue(8958, 8951);\n        this.mirroringShapeCharacters.setValue(8968, 8969);\n        this.mirroringShapeCharacters.setValue(8969, 8968);\n        this.mirroringShapeCharacters.setValue(8970, 8971);\n        this.mirroringShapeCharacters.setValue(8971, 8970);\n        this.mirroringShapeCharacters.setValue(9001, 9002);\n        this.mirroringShapeCharacters.setValue(9002, 9001);\n        this.mirroringShapeCharacters.setValue(10088, 10089);\n        this.mirroringShapeCharacters.setValue(10089, 10088);\n        this.mirroringShapeCharacters.setValue(10090, 10091);\n        this.mirroringShapeCharacters.setValue(10091, 10090);\n        this.mirroringShapeCharacters.setValue(10092, 10093);\n        this.mirroringShapeCharacters.setValue(10093, 10092);\n        this.mirroringShapeCharacters.setValue(10094, 10095);\n        this.mirroringShapeCharacters.setValue(10095, 10094);\n        this.mirroringShapeCharacters.setValue(10096, 10097);\n        this.mirroringShapeCharacters.setValue(10097, 10096);\n        this.mirroringShapeCharacters.setValue(10098, 10099);\n        this.mirroringShapeCharacters.setValue(10099, 10098);\n        this.mirroringShapeCharacters.setValue(10100, 10101);\n        this.mirroringShapeCharacters.setValue(10101, 10100);\n        this.mirroringShapeCharacters.setValue(10197, 10198);\n        this.mirroringShapeCharacters.setValue(10198, 10197);\n        this.mirroringShapeCharacters.setValue(10205, 10206);\n        this.mirroringShapeCharacters.setValue(10206, 10205);\n        this.mirroringShapeCharacters.setValue(10210, 10211);\n        this.mirroringShapeCharacters.setValue(10211, 10210);\n        this.mirroringShapeCharacters.setValue(10212, 10213);\n        this.mirroringShapeCharacters.setValue(10213, 10212);\n        this.mirroringShapeCharacters.setValue(10214, 10215);\n        this.mirroringShapeCharacters.setValue(10215, 10214);\n        this.mirroringShapeCharacters.setValue(10216, 10217);\n        this.mirroringShapeCharacters.setValue(10217, 10216);\n        this.mirroringShapeCharacters.setValue(10218, 10219);\n        this.mirroringShapeCharacters.setValue(10219, 10218);\n        this.mirroringShapeCharacters.setValue(10627, 10628);\n        this.mirroringShapeCharacters.setValue(10628, 10627);\n        this.mirroringShapeCharacters.setValue(10629, 10630);\n        this.mirroringShapeCharacters.setValue(10630, 10629);\n        this.mirroringShapeCharacters.setValue(10631, 10632);\n        this.mirroringShapeCharacters.setValue(10632, 10631);\n        this.mirroringShapeCharacters.setValue(10633, 10634);\n        this.mirroringShapeCharacters.setValue(10634, 10633);\n        this.mirroringShapeCharacters.setValue(10635, 10636);\n        this.mirroringShapeCharacters.setValue(10636, 10635);\n        this.mirroringShapeCharacters.setValue(10637, 10640);\n        this.mirroringShapeCharacters.setValue(10638, 10639);\n        this.mirroringShapeCharacters.setValue(10639, 10638);\n        this.mirroringShapeCharacters.setValue(10640, 10637);\n        this.mirroringShapeCharacters.setValue(10641, 10642);\n        this.mirroringShapeCharacters.setValue(10642, 10641);\n        this.mirroringShapeCharacters.setValue(10643, 10644);\n        this.mirroringShapeCharacters.setValue(10644, 10643);\n        this.mirroringShapeCharacters.setValue(10645, 10646);\n        this.mirroringShapeCharacters.setValue(10646, 10645);\n        this.mirroringShapeCharacters.setValue(10647, 10648);\n        this.mirroringShapeCharacters.setValue(10648, 10647);\n        this.mirroringShapeCharacters.setValue(10680, 8856);\n        this.mirroringShapeCharacters.setValue(10688, 10689);\n        this.mirroringShapeCharacters.setValue(10689, 10688);\n        this.mirroringShapeCharacters.setValue(10692, 10693);\n        this.mirroringShapeCharacters.setValue(10693, 10692);\n        this.mirroringShapeCharacters.setValue(10703, 10704);\n        this.mirroringShapeCharacters.setValue(10704, 10703);\n        this.mirroringShapeCharacters.setValue(10705, 10706);\n        this.mirroringShapeCharacters.setValue(10706, 10705);\n        this.mirroringShapeCharacters.setValue(10708, 10709);\n        this.mirroringShapeCharacters.setValue(10709, 10708);\n        this.mirroringShapeCharacters.setValue(10712, 10713);\n        this.mirroringShapeCharacters.setValue(10713, 10712);\n        this.mirroringShapeCharacters.setValue(10714, 10715);\n        this.mirroringShapeCharacters.setValue(10715, 10714);\n        this.mirroringShapeCharacters.setValue(10741, 8725);\n        this.mirroringShapeCharacters.setValue(10744, 10745);\n        this.mirroringShapeCharacters.setValue(10745, 10744);\n        this.mirroringShapeCharacters.setValue(10748, 10749);\n        this.mirroringShapeCharacters.setValue(10749, 10748);\n        this.mirroringShapeCharacters.setValue(10795, 10796);\n        this.mirroringShapeCharacters.setValue(10796, 10795);\n        this.mirroringShapeCharacters.setValue(10797, 10796);\n        this.mirroringShapeCharacters.setValue(10798, 10797);\n        this.mirroringShapeCharacters.setValue(10804, 10805);\n        this.mirroringShapeCharacters.setValue(10805, 10804);\n        this.mirroringShapeCharacters.setValue(10812, 10813);\n        this.mirroringShapeCharacters.setValue(10813, 10812);\n        this.mirroringShapeCharacters.setValue(10852, 10853);\n        this.mirroringShapeCharacters.setValue(10853, 10852);\n        this.mirroringShapeCharacters.setValue(10873, 10874);\n        this.mirroringShapeCharacters.setValue(10874, 10873);\n        this.mirroringShapeCharacters.setValue(10877, 10878);\n        this.mirroringShapeCharacters.setValue(10878, 10877);\n        this.mirroringShapeCharacters.setValue(10879, 10880);\n        this.mirroringShapeCharacters.setValue(10880, 10879);\n        this.mirroringShapeCharacters.setValue(10881, 10882);\n        this.mirroringShapeCharacters.setValue(10882, 10881);\n        this.mirroringShapeCharacters.setValue(10883, 10884);\n        this.mirroringShapeCharacters.setValue(10884, 10883);\n        this.mirroringShapeCharacters.setValue(10891, 10892);\n        this.mirroringShapeCharacters.setValue(10892, 10891);\n        this.mirroringShapeCharacters.setValue(10897, 10898);\n        this.mirroringShapeCharacters.setValue(10898, 10897);\n        this.mirroringShapeCharacters.setValue(10899, 10900);\n        this.mirroringShapeCharacters.setValue(10900, 10899);\n        this.mirroringShapeCharacters.setValue(10901, 10902);\n        this.mirroringShapeCharacters.setValue(10902, 10901);\n        this.mirroringShapeCharacters.setValue(10903, 10904);\n        this.mirroringShapeCharacters.setValue(10904, 10903);\n        this.mirroringShapeCharacters.setValue(10905, 10906);\n        this.mirroringShapeCharacters.setValue(10906, 10905);\n        this.mirroringShapeCharacters.setValue(10907, 10908);\n        this.mirroringShapeCharacters.setValue(10908, 10907);\n        this.mirroringShapeCharacters.setValue(10913, 10914);\n        this.mirroringShapeCharacters.setValue(10914, 10913);\n        this.mirroringShapeCharacters.setValue(10918, 10919);\n        this.mirroringShapeCharacters.setValue(10919, 10918);\n        this.mirroringShapeCharacters.setValue(10920, 10921);\n        this.mirroringShapeCharacters.setValue(10921, 10920);\n        this.mirroringShapeCharacters.setValue(10922, 10923);\n        this.mirroringShapeCharacters.setValue(10923, 10922);\n        this.mirroringShapeCharacters.setValue(10924, 10925);\n        this.mirroringShapeCharacters.setValue(10925, 10924);\n        this.mirroringShapeCharacters.setValue(10927, 10928);\n        this.mirroringShapeCharacters.setValue(10928, 10927);\n        this.mirroringShapeCharacters.setValue(10931, 10932);\n        this.mirroringShapeCharacters.setValue(10932, 10931);\n        this.mirroringShapeCharacters.setValue(10939, 10940);\n        this.mirroringShapeCharacters.setValue(10940, 10939);\n        this.mirroringShapeCharacters.setValue(10941, 10942);\n        this.mirroringShapeCharacters.setValue(10942, 10941);\n        this.mirroringShapeCharacters.setValue(10943, 10944);\n        this.mirroringShapeCharacters.setValue(10944, 10943);\n        this.mirroringShapeCharacters.setValue(10945, 10946);\n        this.mirroringShapeCharacters.setValue(10946, 10945);\n        this.mirroringShapeCharacters.setValue(10947, 10948);\n        this.mirroringShapeCharacters.setValue(10948, 10947);\n        this.mirroringShapeCharacters.setValue(10949, 10950);\n        this.mirroringShapeCharacters.setValue(10950, 10949);\n        this.mirroringShapeCharacters.setValue(10957, 10958);\n        this.mirroringShapeCharacters.setValue(10958, 10957);\n        this.mirroringShapeCharacters.setValue(10959, 10960);\n        this.mirroringShapeCharacters.setValue(10960, 10959);\n        this.mirroringShapeCharacters.setValue(10961, 10962);\n        this.mirroringShapeCharacters.setValue(10962, 10961);\n        this.mirroringShapeCharacters.setValue(10963, 10964);\n        this.mirroringShapeCharacters.setValue(10964, 10963);\n        this.mirroringShapeCharacters.setValue(10965, 10966);\n        this.mirroringShapeCharacters.setValue(10966, 10965);\n        this.mirroringShapeCharacters.setValue(10974, 8870);\n        this.mirroringShapeCharacters.setValue(10979, 8873);\n        this.mirroringShapeCharacters.setValue(10980, 8872);\n        this.mirroringShapeCharacters.setValue(10981, 8875);\n        this.mirroringShapeCharacters.setValue(10988, 10989);\n        this.mirroringShapeCharacters.setValue(10989, 10988);\n        this.mirroringShapeCharacters.setValue(10999, 11000);\n        this.mirroringShapeCharacters.setValue(11000, 10999);\n        this.mirroringShapeCharacters.setValue(11001, 11002);\n        this.mirroringShapeCharacters.setValue(11002, 11001);\n        this.mirroringShapeCharacters.setValue(12296, 12297);\n        this.mirroringShapeCharacters.setValue(12297, 12296);\n        this.mirroringShapeCharacters.setValue(12298, 12299);\n        this.mirroringShapeCharacters.setValue(12299, 12298);\n        this.mirroringShapeCharacters.setValue(12300, 12301);\n        this.mirroringShapeCharacters.setValue(12301, 12300);\n        this.mirroringShapeCharacters.setValue(12302, 12303);\n        this.mirroringShapeCharacters.setValue(12303, 12302);\n        this.mirroringShapeCharacters.setValue(12304, 12305);\n        this.mirroringShapeCharacters.setValue(12305, 12304);\n        this.mirroringShapeCharacters.setValue(12308, 12309);\n        this.mirroringShapeCharacters.setValue(12309, 12308);\n        this.mirroringShapeCharacters.setValue(12310, 12311);\n        this.mirroringShapeCharacters.setValue(12311, 12310);\n        this.mirroringShapeCharacters.setValue(12312, 12313);\n        this.mirroringShapeCharacters.setValue(12313, 12312);\n        this.mirroringShapeCharacters.setValue(12314, 12315);\n        this.mirroringShapeCharacters.setValue(12315, 12314);\n        this.mirroringShapeCharacters.setValue(65288, 65289);\n        this.mirroringShapeCharacters.setValue(65289, 65288);\n        this.mirroringShapeCharacters.setValue(65308, 65310);\n        this.mirroringShapeCharacters.setValue(65310, 65308);\n        this.mirroringShapeCharacters.setValue(65339, 65341);\n        this.mirroringShapeCharacters.setValue(65341, 65339);\n        this.mirroringShapeCharacters.setValue(65371, 65373);\n        this.mirroringShapeCharacters.setValue(65373, 65371);\n        this.mirroringShapeCharacters.setValue(65375, 65376);\n        this.mirroringShapeCharacters.setValue(65376, 65375);\n        this.mirroringShapeCharacters.setValue(65378, 65379);\n        this.mirroringShapeCharacters.setValue(65379, 65378);\n    };\n    return Bidi;\n}());\nexport { Bidi };\nvar RtlCharacters = /** @class */ (function () {\n    //#endregion\n    //#region constructors\n    function RtlCharacters() {\n        //#region fields\n        /// <summary>\n        /// Specifies the character types.\n        /// </summary>\n        this.types = [];\n        /// <summary>\n        /// Specifies the text order (RTL or LTR).\n        /// </summary>\n        this.textOrder = -1;\n        /// <summary>\n        /// Specifies the RTL character types.\n        /// </summary>\n        /* tslint:disable-next-line:prefer-array-literal */\n        this.rtlCharacterTypes = new Array(65536);\n        //#endregion\n        //#region constants\n        /// <summary>\n        /// Left-to-Right (Non-European or non-Arabic digits).\n        /// </summary>\n        this.L = 0;\n        /// <summary>\n        /// Left-to-Right Embedding\n        /// </summary>\n        this.LRE = 1;\n        /// <summary>\n        /// Left-to-Right Override\n        /// </summary>\n        this.LRO = 2;\n        /// <summary>\n        /// Right-to-Left (Hebrew alphabet, and related punctuation).\n        /// </summary>\n        this.R = 3;\n        /// <summary>\n        /// Right-to-Left Arabic \n        /// </summary>\n        this.AL = 4;\n        /// <summary>\n        /// Right-to-Left Embedding.\n        /// </summary>\n        this.RLE = 5;\n        /// <summary>\n        /// Right-to-Left Override\n        /// </summary>\n        this.RLO = 6;\n        /// <summary>\n        /// Pop Directional Format\n        /// </summary>\n        this.PDF = 7;\n        /// <summary>\n        /// European Number (European digits, Eastern Arabic-Indic digits).\n        /// </summary>\n        this.EN = 8;\n        /// <summary>\n        /// European Number Separator (Plus sign, Minus sign).\n        /// </summary>\n        this.ES = 9;\n        /// <summary>\n        /// European Number Terminator (Degree sign, currency symbols).\n        /// </summary>\n        this.ET = 10;\n        /// <summary>\n        /// Arabic Number (Arabic-Indic digits, Arabic decimal and thousands separators).\n        /// </summary>\n        this.AN = 11;\n        /// <summary>\n        /// Common Number Separator (Colon, Comma, Full Stop, No-Break Space.\n        /// </summary>\n        this.CS = 12;\n        /// <summary>\n        /// Nonspacing Mark (Characters with the General_Category values).\n        /// </summary>\n        this.NSM = 13;\n        /// <summary>\n        /// Boundary Neutral (Default ignorables, non-characters, and control characters, other than those explicitly given other types.)\n        /// </summary>\n        this.BN = 14;\n        /// <summary>\n        /// Paragraph Separator (Paragraph separator, appropriate Newline Functions, higher-level protocol paragraph determination).\n        /// </summary>\n        this.B = 15;\n        /// <summary>\n        /// \tSegment Separator (tab).\n        /// </summary>\n        this.S = 16;\n        /// <summary>\n        /// Whitespace (Space, Figure space, Line separator, Form feed, General Punctuation spaces).\n        /// </summary>\n        this.WS = 17;\n        /// <summary>\n        /// Other Neutrals (All other characters, including object replacement character).\n        /// </summary>\n        this.ON = 18;\n        /// <summary>\n        /// RTL character types.\n        /// </summary>\n        this.charTypes = [\n            this.L, this.EN, this.BN, this.ES, this.ES, this.S, this.ET, this.ET, this.B, this.AN, this.AN, this.S, this.CS, this.CS,\n            this.WS, this.NSM, this.NSM, this.B, this.BN, 27, this.BN, 28, 30, this.B, 31, 31, this.S, 32, 32, this.WS, 33, 34,\n            this.ON, 35, 37, this.ET, 38, 42, this.ON, 43, 43, this.ET, 44, 44, this.CS, 45, 45, this.ET, 46, 46, this.CS,\n            47, 47, this.CS, 48, 57, this.EN, 58, 58, this.CS, 59, 64, this.ON, 65, 90, this.L, 91, 96, this.ON, 97, 122, this.L,\n            123, 126, this.ON, 127, 132, this.BN, 133, 133, this.B, 134, 159, this.BN, 160, 160, this.CS,\n            161, 161, this.ON, 162, 165, this.ET, 166, 169, this.ON, 170, 170, this.L, 171, 175, this.ON,\n            176, 177, this.ET, 178, 179, this.EN, 180, 180, this.ON, 181, 181, this.L, 182, 184, this.ON,\n            185, 185, this.EN, 186, 186, this.L, 187, 191, this.ON, 192, 214, this.L, 215, 215, this.ON,\n            216, 246, this.L, 247, 247, this.ON, 248, 696, this.L, 697, 698, this.ON, 699, 705, this.L,\n            706, 719, this.ON, 720, 721, this.L, 722, 735, this.ON, 736, 740, this.L, 741, 749, this.ON,\n            750, 750, this.L, 751, 767, this.ON, 768, 855, this.NSM, 856, 860, this.L, 861, 879, this.NSM,\n            880, 883, this.L, 884, 885, this.ON, 886, 893, this.L, 894, 894, this.ON, 895, 899, this.L,\n            900, 901, this.ON, 902, 902, this.L, 903, 903, this.ON, 904, 1013, this.L, 1014, 1014, this.ON,\n            1015, 1154, this.L, 1155, 1158, this.NSM, 1159, 1159, this.L, 1160, 1161, this.NSM,\n            1162, 1417, this.L, 1418, 1418, this.ON, 1419, 1424, this.L, 1425, 1441, this.NSM,\n            1442, 1442, this.L, 1443, 1465, this.NSM, 1466, 1466, this.L, 1467, 1469, this.NSM,\n            1470, 1470, this.R, 1471, 1471, this.NSM, 1472, 1472, this.R, 1473, 1474, this.NSM,\n            1475, 1475, this.R, 1476, 1476, this.NSM, 1477, 1487, this.L, 1488, 1514, this.R,\n            1515, 1519, this.L, 1520, 1524, this.R, 1525, 1535, this.L, 1536, 1539, this.AL,\n            1540, 1547, this.L, 1548, 1548, this.CS, 1549, 1549, this.AL, 1550, 1551, this.ON,\n            1552, 1557, this.NSM, 1558, 1562, this.L, 1563, 1563, this.AL, 1564, 1566, this.L,\n            1567, 1567, this.AL, 1568, 1568, this.L, 1569, 1594, this.AL, 1595, 1599, this.L,\n            1600, 1610, this.AL, 1611, 1624, this.NSM, 1625, 1631, this.L, 1632, 1641, this.AN,\n            1642, 1642, this.ET, 1643, 1644, this.AN, 1645, 1647, this.AL, 1648, 1648, this.NSM,\n            1649, 1749, this.AL, 1750, 1756, this.NSM, 1757, 1757, this.AL, 1758, 1764, this.NSM,\n            1765, 1766, this.AL, 1767, 1768, this.NSM, 1769, 1769, this.ON, 1770, 1773, this.NSM,\n            1774, 1775, this.AL, 1776, 1785, this.EN, 1786, 1805, this.AL, 1806, 1806, this.L,\n            1807, 1807, this.BN, 1808, 1808, this.AL, 1809, 1809, this.NSM, 1810, 1839, this.AL,\n            1840, 1866, this.NSM, 1867, 1868, this.L, 1869, 1871, this.AL, 1872, 1919, this.L,\n            1920, 1957, this.AL, 1958, 1968, this.NSM, 1969, 1969, this.AL, 1970, 2304, this.L,\n            2305, 2306, this.NSM, 2307, 2363, this.L, 2364, 2364, this.NSM, 2365, 2368, this.L,\n            2369, 2376, this.NSM, 2377, 2380, this.L, 2381, 2381, this.NSM, 2382, 2384, this.L,\n            2385, 2388, this.NSM, 2389, 2401, this.L, 2402, 2403, this.NSM, 2404, 2432, this.L,\n            2433, 2433, this.NSM, 2434, 2491, this.L, 2492, 2492, this.NSM, 2493, 2496, this.L,\n            2497, 2500, this.NSM, 2501, 2508, this.L, 2509, 2509, this.NSM, 2510, 2529, this.L,\n            2530, 2531, this.NSM, 2532, 2545, this.L, 2546, 2547, this.ET, 2548, 2560, this.L,\n            2561, 2562, this.NSM, 2563, 2619, this.L, 2620, 2620, this.NSM, 2621, 2624, this.L,\n            2625, 2626, this.NSM, 2627, 2630, this.L, 2631, 2632, this.NSM, 2633, 2634, this.L,\n            2635, 2637, this.NSM, 2638, 2671, this.L, 2672, 2673, this.NSM, 2674, 2688, this.L,\n            2689, 2690, this.NSM, 2691, 2747, this.L, 2748, 2748, this.NSM, 2749, 2752, this.L,\n            2753, 2757, this.NSM, 2758, 2758, this.L, 2759, 2760, this.NSM, 2761, 2764, this.L,\n            2765, 2765, this.NSM, 2766, 2785, this.L, 2786, 2787, this.NSM, 2788, 2800, this.L,\n            2801, 2801, this.ET, 2802, 2816, this.L, 2817, 2817, this.NSM, 2818, 2875, this.L,\n            2876, 2876, this.NSM, 2877, 2878, this.L, 2879, 2879, this.NSM, 2880, 2880, this.L,\n            2881, 2883, this.NSM, 2884, 2892, this.L, 2893, 2893, this.NSM, 2894, 2901, this.L,\n            2902, 2902, this.NSM, 2903, 2945, this.L, 2946, 2946, this.NSM, 2947, 3007, this.L,\n            3008, 3008, this.NSM, 3009, 3020, this.L, 3021, 3021, this.NSM, 3022, 3058, this.L,\n            3059, 3064, this.ON, 3065, 3065, this.ET, 3066, 3066, this.ON, 3067, 3133, this.L,\n            3134, 3136, this.NSM, 3137, 3141, this.L, 3142, 3144, this.NSM, 3145, 3145, this.L,\n            3146, 3149, this.NSM, 3150, 3156, this.L, 3157, 3158, this.NSM, 3159, 3259, this.L,\n            3260, 3260, this.NSM, 3261, 3275, this.L, 3276, 3277, this.NSM, 3278, 3392, this.L,\n            3393, 3395, this.NSM, 3396, 3404, this.L, 3405, 3405, this.NSM, 3406, 3529, this.L,\n            3530, 3530, this.NSM, 3531, 3537, this.L, 3538, 3540, this.NSM, 3541, 3541, this.L,\n            3542, 3542, this.NSM, 3543, 3632, this.L, 3633, 3633, this.NSM, 3634, 3635, this.L,\n            3636, 3642, this.NSM, 3643, 3646, this.L, 3647, 3647, this.ET, 3648, 3654, this.L,\n            3655, 3662, this.NSM, 3663, 3760, this.L, 3761, 3761, this.NSM, 3762, 3763, this.L,\n            3764, 3769, this.NSM, 3770, 3770, this.L, 3771, 3772, this.NSM, 3773, 3783, this.L,\n            3784, 3789, this.NSM, 3790, 3863, this.L, 3864, 3865, this.NSM, 3866, 3892, this.L,\n            3893, 3893, this.NSM, 3894, 3894, this.L, 3895, 3895, this.NSM, 3896, 3896, this.L,\n            3897, 3897, this.NSM, 3898, 3901, this.ON, 3902, 3952, this.L, 3953, 3966, this.NSM,\n            3967, 3967, this.L, 3968, 3972, this.NSM, 3973, 3973, this.L, 3974, 3975, this.NSM,\n            3976, 3983, this.L, 3984, 3991, this.NSM, 3992, 3992, this.L, 3993, 4028, this.NSM,\n            4029, 4037, this.L, 4038, 4038, this.NSM, 4039, 4140, this.L, 4141, 4144, this.NSM,\n            4145, 4145, this.L, 4146, 4146, this.NSM, 4147, 4149, this.L, 4150, 4151, this.NSM,\n            4152, 4152, this.L, 4153, 4153, this.NSM, 4154, 4183, this.L, 4184, 4185, this.NSM,\n            4186, 5759, this.L, 5760, 5760, this.WS, 5761, 5786, this.L, 5787, 5788, this.ON,\n            5789, 5905, this.L, 5906, 5908, this.NSM, 5909, 5937, this.L, 5938, 5940, this.NSM,\n            5941, 5969, this.L, 5970, 5971, this.NSM, 5972, 6001, this.L, 6002, 6003, this.NSM,\n            6004, 6070, this.L, 6071, 6077, this.NSM, 6078, 6085, this.L, 6086, 6086, this.NSM,\n            6087, 6088, this.L, 6089, 6099, this.NSM, 6100, 6106, this.L, 6107, 6107, this.ET,\n            6108, 6108, this.L, 6109, 6109, this.NSM, 6110, 6127, this.L, 6128, 6137, this.ON,\n            6138, 6143, this.L, 6144, 6154, this.ON, 6155, 6157, this.NSM, 6158, 6158, this.WS,\n            6159, 6312, this.L, 6313, 6313, this.NSM, 6314, 6431, this.L, 6432, 6434, this.NSM,\n            6435, 6438, this.L, 6439, 6443, this.NSM, 6444, 6449, this.L, 6450, 6450, this.NSM,\n            6451, 6456, this.L, 6457, 6459, this.NSM, 6460, 6463, this.L, 6464, 6464, this.ON,\n            6465, 6467, this.L, 6468, 6469, this.ON, 6470, 6623, this.L, 6624, 6655, this.ON,\n            6656, 8124, this.L, 8125, 8125, this.ON, 8126, 8126, this.L, 8127, 8129, this.ON,\n            8130, 8140, this.L, 8141, 8143, this.ON, 8144, 8156, this.L, 8157, 8159, this.ON,\n            8160, 8172, this.L, 8173, 8175, this.ON, 8176, 8188, this.L, 8189, 8190, this.ON,\n            8191, 8191, this.L, 8192, 8202, this.WS, 8203, 8205, this.BN, 8206, 8206, this.L,\n            8207, 8207, this.R, 8208, 8231, this.ON, 8232, 8232, this.WS, 8233, 8233, this.B,\n            8234, 8234, this.LRE, 8235, 8235, this.RLE, 8236, 8236, this.PDF, 8237, 8237, this.LRO,\n            8238, 8238, this.RLO, 8239, 8239, this.WS, 8240, 8244, this.ET, 8245, 8276, this.ON,\n            8277, 8278, this.L, 8279, 8279, this.ON, 8280, 8286, this.L, 8287, 8287, this.WS,\n            8288, 8291, this.BN, 8292, 8297, this.L, 8298, 8303, this.BN, 8304, 8304, this.EN,\n            8305, 8307, this.L, 8308, 8313, this.EN, 8314, 8315, this.ET, 8316, 8318, this.ON,\n            8319, 8319, this.L, 8320, 8329, this.EN, 8330, 8331, this.ET, 8332, 8334, this.ON,\n            8335, 8351, this.L, 8352, 8369, this.ET, 8370, 8399, this.L, 8400, 8426, this.NSM,\n            8427, 8447, this.L, 8448, 8449, this.ON, 8450, 8450, this.L, 8451, 8454, this.ON,\n            8455, 8455, this.L, 8456, 8457, this.ON, 8458, 8467, this.L, 8468, 8468, this.ON,\n            8469, 8469, this.L, 8470, 8472, this.ON, 8473, 8477, this.L, 8478, 8483, this.ON,\n            8484, 8484, this.L, 8485, 8485, this.ON, 8486, 8486, this.L, 8487, 8487, this.ON,\n            8488, 8488, this.L, 8489, 8489, this.ON, 8490, 8493, this.L, 8494, 8494, this.ET,\n            8495, 8497, this.L, 8498, 8498, this.ON, 8499, 8505, this.L, 8506, 8507, this.ON,\n            8508, 8511, this.L, 8512, 8516, this.ON, 8517, 8521, this.L, 8522, 8523, this.ON,\n            8524, 8530, this.L, 8531, 8543, this.ON, 8544, 8591, this.L, 8592, 8721, this.ON,\n            8722, 8723, this.ET, 8724, 9013, this.ON, 9014, 9082, this.L, 9083, 9108, this.ON,\n            9109, 9109, this.L, 9110, 9168, this.ON, 9169, 9215, this.L, 9216, 9254, this.ON,\n            9255, 9279, this.L, 9280, 9290, this.ON, 9291, 9311, this.L, 9312, 9371, this.EN,\n            9372, 9449, this.L, 9450, 9450, this.EN, 9451, 9751, this.ON, 9752, 9752, this.L,\n            9753, 9853, this.ON, 9854, 9855, this.L, 9856, 9873, this.ON, 9874, 9887, this.L,\n            9888, 9889, this.ON, 9890, 9984, this.L, 9985, 9988, this.ON, 9989, 9989, this.L,\n            9990, 9993, this.ON, 9994, 9995, this.L, 9996, 10023, this.ON, 10024, 10024, this.L,\n            10025, 10059, this.ON, 10060, 10060, this.L, 10061, 10061, this.ON, 10062, 10062, this.L,\n            10063, 10066, this.ON, 10067, 10069, this.L, 10070, 10070, this.ON, 10071, 10071, this.L,\n            10072, 10078, this.ON, 10079, 10080, this.L, 10081, 10132, this.ON, 10133, 10135, this.L,\n            10136, 10159, this.ON, 10160, 10160, this.L, 10161, 10174, this.ON, 10175, 10191, this.L,\n            10192, 10219, this.ON, 10220, 10223, this.L, 10224, 11021, this.ON, 11022, 11903, this.L,\n            11904, 11929, this.ON, 11930, 11930, this.L, 11931, 12019, this.ON, 12020, 12031, this.L,\n            12032, 12245, this.ON, 12246, 12271, this.L, 12272, 12283, this.ON, 12284, 12287, this.L,\n            12288, 12288, this.WS, 12289, 12292, this.ON, 12293, 12295, this.L, 12296, 12320, this.ON,\n            12321, 12329, this.L, 12330, 12335, this.NSM, 12336, 12336, this.ON, 12337, 12341, this.L,\n            12342, 12343, this.ON, 12344, 12348, this.L, 12349, 12351, this.ON, 12352, 12440, this.L,\n            12441, 12442, this.NSM, 12443, 12444, this.ON, 12445, 12447, this.L, 12448, 12448, this.ON,\n            12449, 12538, this.L, 12539, 12539, this.ON, 12540, 12828, this.L, 12829, 12830, this.ON,\n            12831, 12879, this.L, 12880, 12895, this.ON, 12896, 12923, this.L, 12924, 12925, this.ON,\n            12926, 12976, this.L, 12977, 12991, this.ON, 12992, 13003, this.L, 13004, 13007, this.ON,\n            13008, 13174, this.L, 13175, 13178, this.ON, 13179, 13277, this.L, 13278, 13279, this.ON,\n            13280, 13310, this.L, 13311, 13311, this.ON, 13312, 19903, this.L, 19904, 19967, this.ON,\n            19968, 42127, this.L, 42128, 42182, this.ON, 42183, 64284, this.L, 64285, 64285, this.R,\n            64286, 64286, this.NSM, 64287, 64296, this.R, 64297, 64297, this.ET, 64298, 64310, this.R,\n            64311, 64311, this.L, 64312, 64316, this.R, 64317, 64317, this.L, 64318, 64318, this.R,\n            64319, 64319, this.L, 64320, 64321, this.R, 64322, 64322, this.L, 64323, 64324, this.R,\n            64325, 64325, this.L, 64326, 64335, this.R, 64336, 64433, this.AL, 64434, 64466, this.L,\n            64467, 64829, this.AL, 64830, 64831, this.ON, 64832, 64847, this.L, 64848, 64911, this.AL,\n            64912, 64913, this.L, 64914, 64967, this.AL, 64968, 65007, this.L, 65008, 65020, this.AL,\n            65021, 65021, this.ON, 65022, 65023, this.L, 65024, 65039, this.NSM, 65040, 65055, this.L,\n            65056, 65059, this.NSM, 65060, 65071, this.L, 65072, 65103, this.ON, 65104, 65104, this.CS,\n            65105, 65105, this.ON, 65106, 65106, this.CS, 65107, 65107, this.L, 65108, 65108, this.ON,\n            65109, 65109, this.CS, 65110, 65118, this.ON, 65119, 65119, this.ET, 65120, 65121, this.ON,\n            65122, 65123, this.ET, 65124, 65126, this.ON, 65127, 65127, this.L, 65128, 65128, this.ON,\n            65129, 65130, this.ET, 65131, 65131, this.ON, 65132, 65135, this.L, 65136, 65140, this.AL,\n            65141, 65141, this.L, 65142, 65276, this.AL, 65277, 65278, this.L, 65279, 65279, this.BN,\n            65280, 65280, this.L, 65281, 65282, this.ON, 65283, 65285, this.ET, 65286, 65290, this.ON,\n            65291, 65291, this.ET, 65292, 65292, this.CS, 65293, 65293, this.ET, 65294, 65294, this.CS,\n            65295, 65295, this.ES, 65296, 65305, this.EN, 65306, 65306, this.CS, 65307, 65312, this.ON,\n            65313, 65338, this.L, 65339, 65344, this.ON, 65345, 65370, this.L, 65371, 65381, this.ON,\n            65382, 65503, this.L, 65504, 65505, this.ET, 65506, 65508, this.ON, 65509, 65510, this.ET,\n            65511, 65511, this.L, 65512, 65518, this.ON, 65519, 65528, this.L, 65529, 65531, this.BN,\n            65532, 65533, this.ON, 65534, 65535, this.L\n        ];\n        for (var i = 0; i < this.charTypes.length; ++i) {\n            var start = this.charTypes[i];\n            var end = this.charTypes[++i];\n            var b = this.charTypes[++i];\n            while (start <= end) {\n                this.rtlCharacterTypes[start++] = b;\n            }\n        }\n    }\n    //#endregion\n    //#region implementation\n    RtlCharacters.prototype.getVisualOrder = function (inputText, isRtl) {\n        this.types = this.getCharacterCode(inputText);\n        this.textOrder = isRtl ? this.LRE : this.L;\n        this.doVisualOrder();\n        var result = [];\n        for (var i = 0; i < this.levels.length; i++) {\n            result[i] = this.levels[i];\n        }\n        return result;\n    };\n    RtlCharacters.prototype.getCharacterCode = function (text) {\n        var characterCodes = [];\n        for (var i = 0; i < text.length; i++) {\n            characterCodes[i] = this.rtlCharacterTypes[text[i].charCodeAt(0)];\n        }\n        return characterCodes;\n    };\n    RtlCharacters.prototype.setDefaultLevels = function () {\n        for (var i = 0; i < this.length; i++) {\n            this.levels[i] = this.textOrder;\n        }\n    };\n    RtlCharacters.prototype.setLevels = function () {\n        this.setDefaultLevels();\n        for (var n = 0; n < this.length; ++n) {\n            var level = this.levels[n];\n            if ((level & 0x80) !== 0) {\n                level &= 0x7f;\n                this.result[n] = ((level & 0x1) === 0) ? this.L : this.R;\n            }\n            this.levels[n] = level;\n        }\n    };\n    RtlCharacters.prototype.updateLevels = function (index, level, length) {\n        if ((level & 1) === 0) {\n            for (var i = index; i < length; ++i) {\n                if (this.result[i] === this.R) {\n                    this.levels[i] += 1;\n                }\n                else if (this.result[i] !== this.L) {\n                    this.levels[i] += 2;\n                }\n            }\n        }\n        else {\n            for (var i = index; i < length; ++i) {\n                if (this.result[i] !== this.R) {\n                    this.levels[i] += 1;\n                }\n            }\n        }\n    };\n    RtlCharacters.prototype.doVisualOrder = function () {\n        this.length = this.types.length;\n        this.result = this.types;\n        this.levels = [];\n        this.setLevels();\n        this.length = this.getEmbeddedCharactersLength();\n        var preview = this.textOrder;\n        var i = 0;\n        while (i < this.length) {\n            var level = this.levels[i];\n            var preType = ((Math.max(preview, level) & 0x1) === 0) ? this.L : this.R;\n            var length_1 = i + 1;\n            while (length_1 < this.length && this.levels[length_1] === level) {\n                ++length_1;\n            }\n            var success = length_1 < this.length ? this.levels[length_1] : this.textOrder;\n            var type = ((Math.max(success, level) & 0x1) === 0) ? this.L : this.R;\n            this.checkNSM(i, length_1, level, preType, type);\n            this.updateLevels(i, level, length_1);\n            preview = level;\n            i = length_1;\n        }\n        this.checkEmbeddedCharacters(this.length);\n    };\n    RtlCharacters.prototype.getEmbeddedCharactersLength = function () {\n        var index = 0;\n        for (var i = 0; i < this.length; ++i) {\n            if (!(this.types[i] === this.LRE || this.types[i] === this.RLE || this.types[i] === this.LRO ||\n                this.types[i] === this.RLO || this.types[i] === this.PDF || this.types[i] === this.BN)) {\n                this.result[index] = this.result[i];\n                this.levels[index] = this.levels[i];\n                index++;\n            }\n        }\n        return index;\n    };\n    RtlCharacters.prototype.checkEmbeddedCharacters = function (length) {\n        for (var i = this.types.length - 1; i >= 0; --i) {\n            if (this.types[i] === this.LRE || this.types[i] === this.RLE || this.types[i] === this.LRO ||\n                this.types[i] === this.RLO || this.types[i] === this.PDF || this.types[i] === this.BN) {\n                this.result[i] = this.types[i];\n                this.levels[i] = -1;\n            }\n            else {\n                length -= 1;\n                this.result[i] = this.result[length];\n                this.levels[i] = this.levels[length];\n            }\n        }\n        for (var i = 0; i < this.types.length; i++) {\n            if (this.levels[i] === -1) {\n                if (i === 0) {\n                    this.levels[i] = this.textOrder;\n                }\n                else {\n                    this.levels[i] = this.levels[i - 1];\n                }\n            }\n        }\n    };\n    RtlCharacters.prototype.checkNSM = function (index, length, level, startType, endType) {\n        var charType = startType;\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.NSM) {\n                this.result[i] = charType;\n            }\n            else {\n                charType = this.result[i];\n            }\n        }\n        this.checkEuropeanDigits(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkEuropeanDigits = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.EN) {\n                for (var j = i - 1; j >= index; --j) {\n                    if (this.result[j] === this.L || this.result[j] === this.R || this.result[j] === this.AL) {\n                        if (this.result[j] === this.AL) {\n                            this.result[i] = this.AN;\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n        this.checkArabicCharacters(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkArabicCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.AL) {\n                this.result[i] = this.R;\n            }\n        }\n        this.checkEuropeanNumberSeparator(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkEuropeanNumberSeparator = function (index, length, level, startType, endType) {\n        for (var i = index + 1; i < length - 1; ++i) {\n            if (this.result[i] === this.ES || this.result[i] === this.CS) {\n                var preview = this.result[i - 1];\n                var success = this.result[i + 1];\n                if (preview === this.EN && success === this.EN) {\n                    this.result[i] = this.EN;\n                }\n                else if (this.result[i] === this.CS && preview === this.AN && success === this.AN) {\n                    this.result[i] = this.AN;\n                }\n            }\n        }\n        this.checkEuropeanNumberTerminator(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkEuropeanNumberTerminator = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.ET) {\n                var s = i;\n                var b = [];\n                b.push(this.ET);\n                var l = this.getLength(s, length, b);\n                var data = s === index ? startType : this.result[s - 1];\n                if (data !== this.EN) {\n                    data = (l === length) ? endType : this.result[l];\n                }\n                if (data === this.EN) {\n                    for (var j = s; j < l; ++j) {\n                        this.result[j] = this.EN;\n                    }\n                }\n                i = l;\n            }\n        }\n        this.checkOtherNeutrals(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkOtherNeutrals = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.ES || this.result[i] === this.ET || this.result[i] === this.CS) {\n                this.result[i] = this.ON;\n            }\n        }\n        this.checkOtherCharacters(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkOtherCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.EN) {\n                var pst = startType;\n                for (var j = i - 1; j >= index; --j) {\n                    if (this.result[j] === this.L || this.result[j] === this.R) {\n                        pst = this.result[j];\n                        break;\n                    }\n                }\n                if (pst === this.L) {\n                    this.result[i] = this.L;\n                }\n            }\n        }\n        this.checkCommanCharacters(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.getLength = function (index, length, validSet) {\n        --index;\n        while (++index < length) {\n            var t = this.result[index];\n            for (var i = 0; i < validSet.length; ++i) {\n                if (t === validSet[i]) {\n                    index = this.getLength(++index, length, validSet);\n                }\n            }\n            return index;\n        }\n        return length;\n    };\n    RtlCharacters.prototype.checkCommanCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.WS || this.result[i] === this.ON || this.result[i] === this.B ||\n                this.result[i] === this.S) {\n                var s = i;\n                var byte = [this.B, this.S, this.WS, this.ON];\n                var l = this.getLength(s, length, byte);\n                var lt = 0;\n                var tt = 0;\n                var rt = 0;\n                if (s === index) {\n                    lt = startType;\n                }\n                else {\n                    lt = this.result[s - 1];\n                    if (lt === this.AN) {\n                        lt = this.R;\n                    }\n                    else if (lt === this.EN) {\n                        lt = this.R;\n                    }\n                }\n                if (l === length) {\n                    tt = endType;\n                }\n                else {\n                    tt = this.result[l];\n                    if (tt === this.AN) {\n                        tt = this.R;\n                    }\n                    else if (tt === this.EN) {\n                        tt = this.R;\n                    }\n                }\n                if (lt === tt) {\n                    rt = lt;\n                }\n                else {\n                    rt = ((level & 0x1) === 0) ? this.L : this.R;\n                }\n                for (var j = s; j < l; ++j) {\n                    this.result[j] = rt;\n                }\n                i = l;\n            }\n        }\n    };\n    return RtlCharacters;\n}());\nexport { RtlCharacters };\n","import { PdfString } from './../../primitives/pdf-string';\nimport { ArabicShapeRenderer } from './rtl/rtl-text-shape';\nimport { PdfTextDirection } from './../enum';\nimport { Bidi } from './rtl/rtl-bidirectional';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar RtlRenderer = /** @class */ (function () {\n    function RtlRenderer() {\n        //region Constants\n        /// Open bracket symbol.\n        /// </summary>\n        this.openBracket = '(';\n        /// <summary>\n        /// Close bracket symbol.\n        /// </summary>\n        this.closeBracket = ')';\n        //#endregion\n    }\n    //#region Constructors\n    /// <summary>\n    /// Initializes a new instance of the <see cref=\"RtlRenderer\"/> class.\n    /// </summary>\n    // public constructor() {\n    // }\n    //#region Public Methods\n    /// <summary>\n    /// Layouts text. Changes blocks position in the RTL text.\n    /// Ligates the text if needed.\n    /// </summary>\n    /// <param name=\"line\">Line of the text.</param>\n    /// <param name=\"font\">Font to be used for string printing.</param>\n    /// <param name=\"rtl\">Font alignment.</param>\n    /// <param name=\"wordSpace\">Indicates whether Word Spacing used or not.</param>\n    /// <returns>Layout string.</returns>\n    RtlRenderer.prototype.layout = function (line, font, rtl, wordSpace, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        var result = [];\n        if (font.Unicode) {\n            result = this.customLayout(line, rtl, format, font, wordSpace);\n        }\n        else {\n            result = [];\n            result[0] = line;\n        }\n        return result;\n    };\n    /// <summary>\n    /// Layouts a string and splits it by the words and using correct lay outing.\n    /// </summary>\n    /// <param name=\"line\">Text line.</param>\n    /// <param name=\"font\">Font object.</param>\n    /// <param name=\"rtl\">Indicates whether RTL should be applied.</param>\n    /// <param name=\"wordSpace\">Indicates whether word spacing is used.</param>\n    /// <returns>Array of words if converted, null otherwise.</returns>\n    RtlRenderer.prototype.splitLayout = function (line, font, rtl, wordSpace, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        var words = [];\n        var system = false;\n        if (!system || words == null) {\n            words = this.customSplitLayout(line, font, rtl, wordSpace, format);\n        }\n        return words;\n    };\n    //#endregion\n    //#region Implementation\n    // private isEnglish( word : string) : boolean\n    // {\n    //     let c : string = (word.length > 0) ? word[0] : '';\n    //     return (c >= '0' && c < 'ÿ');\n    // }\n    // private keepOrder( words : string, startIndex : number, count: number, result : string[], resultIndex : number) : void\n    // {\n    //     for (let i : number = 0, ri = resultIndex - count + 1; i < count; ++i, ++ri) {\n    //         result[ri] = words[i + startIndex];\n    //     }\n    // }\n    /// <summary>\n    /// Uses system API to layout the text.\n    /// </summary>\n    /// <param name=\"line\">Line of the text to be layouted.</param>\n    /// <param name=\"font\">Font which is used for text printing.</param>\n    /// <param name=\"rtl\">Indicates whether we use RTL or RTL lay outing of the text container.</param>\n    /// <returns>Layout string.</returns>\n    /* tslint:disable-next-line:max-line-length */\n    RtlRenderer.prototype.getGlyphIndex = function (line, font, rtl, /*out*/ glyphs, custom) {\n        var success = true;\n        var fail = false;\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        glyphs = null;\n        if (line.length === 0) {\n            return { success: fail, glyphs: glyphs };\n        }\n        var renderer = new ArabicShapeRenderer();\n        var text = renderer.shape(line, 0);\n        var internalFont = font.fontInternal;\n        var ttfReader = internalFont.ttfReader;\n        glyphs = new Uint16Array(text.length);\n        var i = 0;\n        for (var k = 0, len = text.length; k < len; k++) {\n            var ch = text[k];\n            var glyphInfo = ttfReader.getGlyph(ch);\n            if (glyphInfo !== null && typeof glyphInfo !== 'undefined') {\n                glyphs[i++] = (glyphInfo).index;\n            }\n        }\n        return { success: success, glyphs: glyphs };\n    };\n    /* tslint:disable-next-line:max-line-length */\n    RtlRenderer.prototype.customLayout = function (line, rtl, format, font, wordSpace) {\n        if (wordSpace === null || typeof wordSpace === 'undefined') {\n            if (line == null) {\n                throw new Error('ArgumentNullException : line');\n            }\n            var result = null;\n            //bidirectional order.\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                var bidi = new Bidi();\n                result = bidi.getLogicalToVisualString(line, rtl);\n            }\n            return result;\n        }\n        else {\n            if (line == null) {\n                throw new Error('ArgumentNullException : line');\n            }\n            if (font == null) {\n                throw new Error('ArgumentNullException : font');\n            }\n            var layouted = null;\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                var renderer = new ArabicShapeRenderer();\n                var txt = renderer.shape(line, 0);\n                layouted = this.customLayout(txt, rtl, format);\n            }\n            // else {\n            //     layouted = this.customLayout(line, rtl, format);\n            // }\n            // We have unicode font, but from the file.        \n            var result = [];\n            // Split the text by words if word spacing is not default.\n            if (wordSpace) {\n                var words = layouted.split('');\n                var count = words.length;\n                for (var i = 0; i < count; i++) {\n                    words[i] = this.addChars(font, words[i]);\n                }\n                result = words;\n            }\n            else {\n                result = [];\n                result[0] = this.addChars(font, layouted);\n            }\n            return result;\n        }\n    };\n    /// <summary>\n    /// Add information about used glyphs to the font.\n    /// </summary>\n    /// <param name=\"font\">Font used for text rendering.</param>\n    /// <param name=\"glyphs\">Array of used glyphs.</param>\n    /// <returns>String in the form to be written to the file.</returns>\n    RtlRenderer.prototype.addChars = function (font, glyphs) {\n        var line = glyphs;\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        var text = line;\n        var internalFont = font.fontInternal;\n        var ttfReader = internalFont.ttfReader;\n        font.setSymbols(text);\n        // Reconvert string according to unicode standard.\n        text = ttfReader.convertString(text);\n        var bytes = PdfString.toUnicodeArray(text, false);\n        text = PdfString.byteToString(bytes);\n        return text;\n        // else {\n        //     if (font == null) {\n        //         throw new Error('ArgumentNullException : font');\n        //     }\n        //     if (glyphs == null) {\n        //         throw new Error('ArgumentNullException : glyphs');\n        //     }\n        //     // Mark the chars as used.\n        //     let text : string = '';\n        //     font.setSymbols(glyphs);\n        //     // Create string from the glyphs.\n        //     \n        //     let chars : string[] = [];\n        //     for (let i : number = 0; i < glyphs.length; i++) {\n        //         chars[i] = glyphs[i].toString();\n        //     }\n        //     for (let j : number = 0 ; j < chars.length; j++) {\n        //         text = text + chars[j];\n        //     }\n        //     let bytes : number[] = PdfString.toUnicodeArray(text, false);\n        //     text = PdfString.byteToString(bytes);\n        //     return text;\n        // }\n    };\n    /// <summary>\n    /// Layouts a string and splits it by the words by using custom lay outing.\n    /// </summary>\n    /// <param name=\"line\">Text line.</param>\n    /// <param name=\"font\">Font object.</param>\n    /// <param name=\"rtl\">Indicates whether RTL should be applied.</param>\n    /// <param name=\"wordSpace\">Indicates whether word spacing is used.</param>\n    /// <returns>Array of words if converted, null otherwise.</returns>\n    /* tslint:disable-next-line:max-line-length */\n    RtlRenderer.prototype.customSplitLayout = function (line, font, rtl, wordSpace, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        var reversedLine = this.customLayout(line, rtl, format);\n        var words = reversedLine.split('');\n        return words;\n    };\n    return RtlRenderer;\n}());\nexport { RtlRenderer };\n","/**\n * public Enum for `PdfLayoutType`.\n * @private\n */\nexport var PdfLayoutType;\n(function (PdfLayoutType) {\n    /**\n     * Specifies the type of `Paginate`.\n     * @private\n     */\n    PdfLayoutType[PdfLayoutType[\"Paginate\"] = 0] = \"Paginate\";\n    /**\n     * Specifies the type of `OnePage`.\n     * @private\n     */\n    PdfLayoutType[PdfLayoutType[\"OnePage\"] = 1] = \"OnePage\";\n})(PdfLayoutType || (PdfLayoutType = {}));\n/**\n * public Enum for `PdfLayoutBreakType`.\n * @private\n */\nexport var PdfLayoutBreakType;\n(function (PdfLayoutBreakType) {\n    /**\n     * Specifies the type of `FitPage`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitPage\"] = 0] = \"FitPage\";\n    /**\n     * Specifies the type of `FitElement`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitElement\"] = 1] = \"FitElement\";\n    /**\n     * Specifies the type of `FitColumnsToPage`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitColumnsToPage\"] = 2] = \"FitColumnsToPage\";\n})(PdfLayoutBreakType || (PdfLayoutBreakType = {}));\nexport var PathPointType;\n(function (PathPointType) {\n    /**\n     * Specifies the path point type of `Start`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Start\"] = 0] = \"Start\";\n    /**\n     * Specifies the path point type of `Line`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Line\"] = 1] = \"Line\";\n    /**\n     * Specifies the path point type of `Bezier3`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Bezier3\"] = 3] = \"Bezier3\";\n    /**\n     * Specifies the path point type of `Bezier`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Bezier\"] = 3] = \"Bezier\";\n    /**\n     * Specifies the path point type of `PathTypeMask`.\n     * @private\n     */\n    PathPointType[PathPointType[\"PathTypeMask\"] = 7] = \"PathTypeMask\";\n    /**\n     * Specifies the path point type of `DashMode`.\n     * @private\n     */\n    PathPointType[PathPointType[\"DashMode\"] = 16] = \"DashMode\";\n    /**\n     * Specifies the path point type of `PathMarker`.\n     * @private\n     */\n    PathPointType[PathPointType[\"PathMarker\"] = 32] = \"PathMarker\";\n    /**\n     * Specifies the path point type of `CloseSubpath`.\n     * @private\n     */\n    PathPointType[PathPointType[\"CloseSubpath\"] = 128] = \"CloseSubpath\";\n})(PathPointType || (PathPointType = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfColorSpace } from './../enum';\nimport { PdfColor } from './../pdf-color';\nimport { PdfBrush } from './pdf-brush';\nimport { PdfDictionary } from '../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfBoolean } from './../../primitives/pdf-boolean';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfName } from '../../primitives/pdf-name';\nimport { PdfNumber } from '../../primitives/pdf-number';\nimport { PdfReferenceHolder } from '../../primitives/pdf-reference';\n/**\n * `PdfGradientBrush` class provides objects used to fill the interiors of graphical shapes such as rectangles,\n * ellipses, pies, polygons, and paths.\n * @private\n */\nvar PdfGradientBrush = /** @class */ (function (_super) {\n    __extends(PdfGradientBrush, _super);\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGradientBrush` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfGradientBrush(shading) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Local variable to store the background color.\n         * @private\n         */\n        _this.mbackground = new PdfColor(255, 255, 255);\n        /**\n         * Local variable to store the stroking color.\n         * @private\n         */\n        _this.mbStroking = false;\n        /**\n         * Local variable to store the function.\n         * @private\n         */\n        _this.mfunction = null;\n        /**\n         * Local variable to store the DictionaryProperties.\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        _this.mpatternDictionary = new PdfDictionary();\n        _this.mpatternDictionary.items.setValue(_this.dictionaryProperties.type, new PdfName(_this.dictionaryProperties.pattern));\n        _this.mpatternDictionary.items.setValue(_this.dictionaryProperties.patternType, new PdfNumber(2));\n        _this.shading = shading;\n        _this.colorSpace = PdfColorSpace.Rgb;\n        return _this;\n    }\n    Object.defineProperty(PdfGradientBrush.prototype, \"background\", {\n        //Properties\n        /**\n         * Gets or sets the background color of the brush.\n         * @public\n         */\n        get: function () {\n            return this.mbackground;\n        },\n        set: function (value) {\n            this.mbackground = value;\n            var sh = this.shading;\n            if (value.isEmpty) {\n                sh.remove(this.dictionaryProperties.background);\n            }\n            else {\n                sh.items.setValue(this.dictionaryProperties.background, value.toArray(this.colorSpace));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"antiAlias\", {\n        /**\n         * Gets or sets a value indicating whether use anti aliasing algorithm.\n         * @public\n         */\n        get: function () {\n            var sh = this.shading;\n            var aa = (sh.items.getValue(this.dictionaryProperties.antiAlias));\n            return aa.value;\n        },\n        set: function (value) {\n            var sh = this.shading;\n            var aa = (sh.items.getValue(this.dictionaryProperties.antiAlias));\n            if ((aa == null && typeof aa === 'undefined')) {\n                aa = new PdfBoolean(value);\n                sh.items.setValue(this.dictionaryProperties.antiAlias, aa);\n            }\n            else {\n                aa.value = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"function\", {\n        /**\n         * Gets or sets the function of the brush.\n         * @protected\n         */\n        get: function () {\n            return this.mfunction;\n        },\n        set: function (value) {\n            this.mfunction = value;\n            if (value != null && typeof value !== 'undefined') {\n                this.shading.items.setValue(this.dictionaryProperties.function, new PdfReferenceHolder(this.mfunction));\n            }\n            else {\n                this.shading.remove(this.dictionaryProperties.function);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"bBox\", {\n        /**\n         * Gets or sets the boundary box of the brush.\n         * @protected\n         */\n        get: function () {\n            var sh = this.shading;\n            var box = (sh.items.getValue(this.dictionaryProperties.bBox));\n            return box;\n        },\n        set: function (value) {\n            var sh = this.shading;\n            if (value == null && typeof value === 'undefined') {\n                sh.remove(this.dictionaryProperties.bBox);\n            }\n            else {\n                sh.items.setValue(this.dictionaryProperties.bBox, value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the color space of the brush.\n         * @public\n         */\n        get: function () {\n            return this.mcolorSpace;\n        },\n        set: function (value) {\n            var colorSpace = this.shading.items.getValue(this.dictionaryProperties.colorSpace);\n            if ((value !== this.mcolorSpace) || (colorSpace == null)) {\n                this.mcolorSpace = value;\n                var csValue = this.colorSpaceToDeviceName(value);\n                this.shading.items.setValue(this.dictionaryProperties.colorSpace, new PdfName(csValue));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"stroking\", {\n        /**\n         * Gets or sets a value indicating whether this PdfGradientBrush is stroking.\n         * @public\n         */\n        get: function () {\n            return this.mbStroking;\n        },\n        set: function (value) {\n            this.mbStroking = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"patternDictionary\", {\n        /**\n         * Gets the pattern dictionary.\n         * @protected\n         */\n        get: function () {\n            if (this.mpatternDictionary == null) {\n                this.mpatternDictionary = new PdfDictionary();\n            }\n            return this.mpatternDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"shading\", {\n        /**\n         * Gets or sets the shading dictionary.\n         * @protected\n         */\n        get: function () {\n            return this.mshading;\n        },\n        set: function (value) {\n            if (value == null) {\n                throw new Error('ArgumentNullException : Shading');\n            }\n            if (value !== this.mshading) {\n                this.mshading = value;\n                this.patternDictionary.items.setValue(this.dictionaryProperties.shading, new PdfReferenceHolder(this.mshading));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"matrix\", {\n        /**\n         * Gets or sets the transformation matrix.\n         * @public\n         */\n        get: function () {\n            return this.mmatrix;\n        },\n        set: function (value) {\n            if (value == null) {\n                throw new Error('ArgumentNullException : Matrix');\n            }\n            if (value !== this.mmatrix) {\n                this.mmatrix = value.clone();\n                var m = new PdfArray(this.mmatrix.matrix.elements);\n                this.mpatternDictionary.items.setValue(this.dictionaryProperties.matrix, m);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Overrides\n    /**\n     * Monitors the changes of the brush and modify PDF state respectfully.\n     * @param brush The brush.\n     * @param streamWriter The stream writer.\n     * @param getResources The get resources delegate.\n     * @param saveChanges if set to true the changes should be saved anyway.\n     * @param currentColorSpace The current color space.\n     */\n    /* tslint:disable-next-line:max-line-length */\n    PdfGradientBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        var diff = false;\n        if (brush instanceof PdfGradientBrush) {\n            if ((this.colorSpace !== currentColorSpace)) {\n                this.colorSpace = currentColorSpace;\n                this.resetFunction();\n            }\n            //  Set the /Pattern colour space.\n            streamWriter.setColorSpace('Pattern', this.mbStroking);\n            //  Set the pattern for non-stroking operations.\n            var resources = getResources.getResources();\n            var name_1 = resources.getName(this);\n            streamWriter.setColourWithPattern(null, name_1, this.mbStroking);\n            diff = true;\n        }\n        return diff;\n    };\n    /**\n     * Resets the changes, which were made by the brush.\n     * In other words resets the state to the initial one.\n     * @param streamWriter The stream writer.\n     */\n    PdfGradientBrush.prototype.resetChanges = function (streamWriter) {\n        //  Unable reset.\n    };\n    //Implementation\n    /**\n     * Converts colorspace enum to a PDF name.\n     * @param colorSpace The color space enum value.\n     */\n    PdfGradientBrush.prototype.colorSpaceToDeviceName = function (colorSpace) {\n        var result;\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                result = 'DeviceRGB';\n                break;\n        }\n        return result;\n    };\n    /**\n     * Resets the pattern dictionary.\n     * @param dictionary A new pattern dictionary.\n     */\n    PdfGradientBrush.prototype.resetPatternDictionary = function (dictionary) {\n        this.mpatternDictionary = dictionary;\n    };\n    /**\n     * Clones the anti aliasing value.\n     * @param brush The brush.\n     */\n    PdfGradientBrush.prototype.cloneAntiAliasingValue = function (brush) {\n        if ((brush == null)) {\n            throw new Error('ArgumentNullException : brush');\n        }\n        var sh = this.shading;\n        var aa = (sh.items.getValue(this.dictionaryProperties.antiAlias));\n        if ((aa != null)) {\n            brush.shading.items.setValue(this.dictionaryProperties.antiAlias, new PdfBoolean(aa.value));\n        }\n    };\n    /**\n     * Clones the background value.\n     * @param brush The brush.\n     */\n    PdfGradientBrush.prototype.cloneBackgroundValue = function (brush) {\n        var background = this.background;\n        if (!background.isEmpty) {\n            brush.background = background;\n        }\n    };\n    Object.defineProperty(PdfGradientBrush.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.patternDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGradientBrush;\n}(PdfBrush));\nexport { PdfGradientBrush };\n","/**\n * PdfTemplate.ts class for EJ2-PDF\n */\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfGraphics } from './../pdf-graphics';\nimport { PdfResources } from './../pdf-resources';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PointF, SizeF, RectangleF } from './../../drawing/pdf-drawing';\nimport { GetResourceEventHandler } from './../pdf-graphics';\n/**\n * Represents `Pdf Template` object.\n * @private\n */\nvar PdfTemplate = /** @class */ (function () {\n    function PdfTemplate(arg1, arg2) {\n        /**\n         * Initialize an instance for `DictionaryProperties` class.\n         * @private\n         * @hidden\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Checks whether the transformation 'is performed'.\n         * @default true\n         * @private\n         */\n        this.writeTransformation = true;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n            this.content = new PdfStream();\n            var tempSize = new SizeF(arg1.width, arg1.height);\n            this.setSize(tempSize);\n            this.initialize();\n        }\n        else {\n            this.content = new PdfStream();\n            this.setSize(new SizeF(arg1, arg2));\n            this.initialize();\n        }\n    }\n    Object.defineProperty(PdfTemplate.prototype, \"size\", {\n        //Properties\n        /**\n         * Gets the size of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.templateSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"width\", {\n        /**\n         * Gets the width of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.size.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"height\", {\n        /**\n         * Gets the height of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.size.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"graphics\", {\n        /**\n         * Gets the `graphics` of the 'PdfTemplate'.\n         */\n        get: function () {\n            if (this.pdfGraphics == null || typeof this.pdfGraphics === 'undefined') {\n                var gr = new GetResourceEventHandler(this);\n                var g = new PdfGraphics(this.size, gr, this.content);\n                this.pdfGraphics = g;\n                // if(this.writeTransformation) {\n                // Transform co-ordinates to Top/Left.\n                this.pdfGraphics.initializeCoordinates();\n                // }\n            }\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the resources and modifies the template dictionary.\n     * @private\n     */\n    PdfTemplate.prototype.getResources = function () {\n        if (this.resources == null) {\n            this.resources = new PdfResources();\n            this.content.items.setValue(this.dictionaryProperties.resources, this.resources);\n        }\n        return this.resources;\n    };\n    // Public methods\n    /**\n     * `Initialize` the type and subtype of the template.\n     * @private\n     */\n    PdfTemplate.prototype.initialize = function () {\n        this.addType();\n        this.addSubType();\n    };\n    /**\n     * `Adds type key`.\n     * @private\n     */\n    PdfTemplate.prototype.addType = function () {\n        var value = new PdfName(this.dictionaryProperties.xObject);\n        this.content.items.setValue(this.dictionaryProperties.type, value);\n    };\n    /**\n     * `Adds SubType key`.\n     * @private\n     */\n    PdfTemplate.prototype.addSubType = function () {\n        var value = new PdfName(this.dictionaryProperties.form);\n        this.content.items.setValue(this.dictionaryProperties.subtype, value);\n    };\n    PdfTemplate.prototype.reset = function (size) {\n        if (typeof size === 'undefined') {\n            if (this.resources != null) {\n                this.resources = null;\n                this.content.remove(this.dictionaryProperties.resources);\n            }\n            if (this.graphics != null) {\n                this.graphics.reset(this.size);\n            }\n        }\n        else {\n            this.setSize(size);\n            this.reset();\n        }\n    };\n    /**\n     * `Set the size` of the 'PdfTemplate'.\n     * @private\n     */\n    PdfTemplate.prototype.setSize = function (size) {\n        var rect = new RectangleF(new PointF(0, 0), size);\n        var val = PdfArray.fromRectangle(rect);\n        this.content.items.setValue(this.dictionaryProperties.bBox, val);\n        this.templateSize = size;\n    };\n    Object.defineProperty(PdfTemplate.prototype, \"element\", {\n        // /**\n        //  * Returns the value of current graphics.\n        //  * @private\n        //  */\n        // public GetGraphics(g : PdfGraphics) : PdfGraphics {\n        //     if (this.graphics == null || typeof this.graphics === 'undefined') {\n        //         this.graphics = g;\n        //         this.graphics.Size = this.Size;\n        //         this.graphics.StreamWriter = new PdfStreamWriter(this.content)\n        //         this.graphics.Initialize();\n        //         if(this.writeTransformation) {\n        //             this.graphics.InitializeCoordinates();\n        //         }\n        //     }\n        //     return this.graphics;\n        // }\n        // IPdfWrapper Members\n        /**\n         * Gets the `content stream` of 'PdfTemplate' class.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTemplate;\n}());\nexport { PdfTemplate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfResources.ts class for EJ2-PDF\n */\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { TemporaryDictionary } from './../collections/object-object-pair/dictionary';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfCrossTable } from './../input-output/pdf-cross-table';\nimport { PdfFont } from './fonts/pdf-font';\nimport { PdfTemplate } from './figures/pdf-template';\nimport { PdfBrush } from './brushes/pdf-brush';\nimport { PdfTransparency } from './pdf-transparency';\nimport { PdfBitmap } from './../graphics/images/pdf-bitmap';\nimport { PdfImage } from './../graphics/images/pdf-image';\nimport { PdfGradientBrush } from './brushes/pdf-gradient-brush';\nimport { PdfTilingBrush } from './brushes/pdf-tiling-brush';\n/**\n * `PdfResources` class used to set resource contents like font, image.\n * @private\n */\nvar PdfResources = /** @class */ (function (_super) {\n    __extends(PdfResources, _super);\n    function PdfResources(baseDictionary) {\n        var _this = _super.call(this, baseDictionary) || this;\n        /**\n         * Dictionary for the `properties names`.\n         * @private\n         */\n        _this.properties = new PdfDictionary();\n        return _this;\n    }\n    Object.defineProperty(PdfResources.prototype, \"names\", {\n        //Properties\n        /**\n         * Gets the `font names`.\n         * @private\n         */\n        get: function () {\n            return this.getNames();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfResources.prototype, \"document\", {\n        /**\n         * Get or set the `page document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public Methods\n    /**\n     * `Generates name` for the object and adds to the resource if the object is new.\n     * @private\n     */\n    PdfResources.prototype.getName = function (obj) {\n        var primitive = obj.element;\n        var name = null;\n        if (this.names.containsKey(primitive)) {\n            name = this.names.getValue(primitive);\n        }\n        // Object is new.\n        if (name == null) {\n            var sName = this.generateName();\n            name = new PdfName(sName);\n            this.names.setValue(primitive, name);\n            if (obj instanceof PdfFont) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfTemplate) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfGradientBrush || obj instanceof PdfTilingBrush) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfTransparency) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfImage || obj instanceof PdfBitmap) {\n                this.add(obj, name);\n            }\n        }\n        return name;\n    };\n    /**\n     * Gets `resource names` to font dictionaries.\n     * @private\n     */\n    PdfResources.prototype.getNames = function () {\n        if (this.pdfNames == null) {\n            this.pdfNames = new TemporaryDictionary();\n        }\n        var fonts = this.items.getValue(this.dictionaryProperties.font);\n        if (fonts != null) {\n            var reference = fonts;\n            var dictionary = fonts;\n            dictionary = PdfCrossTable.dereference(fonts);\n        }\n        return this.pdfNames;\n    };\n    /**\n     * Add `RequireProcedureSet` into procset array.\n     * @private\n     */\n    PdfResources.prototype.requireProcedureSet = function (procedureSetName) {\n        if (procedureSetName == null) {\n            throw new Error('ArgumentNullException:procedureSetName');\n        }\n        var procSets = this.items.getValue(this.dictionaryProperties.procset);\n        if (procSets == null) {\n            procSets = new PdfArray();\n            this.items.setValue(this.dictionaryProperties.procset, procSets);\n        }\n        var name = new PdfName(procedureSetName);\n        if (!procSets.contains(name)) {\n            procSets.add(name);\n        }\n    };\n    //Helper Methods\n    /**\n     * `Remove font` from array.\n     * @private\n     */\n    PdfResources.prototype.removeFont = function (name) {\n        var key = null;\n        var keys = this.pdfNames.keys();\n        for (var index = 0; index < this.pdfNames.size(); index++) {\n            if (this.pdfNames.getValue(keys[index]) === new PdfName(name)) {\n                key = keys[index];\n                break;\n            }\n        }\n        if (key != null) {\n            this.pdfNames.remove(key);\n        }\n    };\n    /**\n     * Generates `Unique string name`.\n     * @private\n     */\n    PdfResources.prototype.generateName = function () {\n        var name = Guid.getNewGuidString();\n        return name;\n    };\n    PdfResources.prototype.add = function (arg1, arg2) {\n        if (arg1 instanceof PdfFont) {\n            var dictionary = null;\n            var fonts = this.items.getValue(this.dictionaryProperties.font);\n            if (fonts != null) {\n                var reference = fonts;\n                dictionary = fonts;\n                dictionary = fonts;\n            }\n            else {\n                dictionary = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.font, dictionary);\n            }\n            dictionary.items.setValue(arg2.value, new PdfReferenceHolder(arg1.element));\n        }\n        else if (arg1 instanceof PdfTemplate) {\n            var xobjects = void 0;\n            xobjects = this.items.getValue(this.dictionaryProperties.xObject);\n            // Create fonts dictionary.\n            if (xobjects == null) {\n                xobjects = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.xObject, xobjects);\n            }\n            xobjects.items.setValue(arg2.value, new PdfReferenceHolder(arg1.element));\n        }\n        else if (arg1 instanceof PdfBrush) {\n            if (arg1 instanceof PdfGradientBrush || arg1 instanceof PdfTilingBrush) {\n                var savable = arg1.element;\n                if (savable != null) {\n                    var pattern = this.items.getValue(this.dictionaryProperties.pattern);\n                    // Create a new pattern dictionary.\n                    if (pattern == null) {\n                        pattern = new PdfDictionary();\n                        this.items.setValue(this.dictionaryProperties.pattern, pattern);\n                    }\n                    pattern.items.setValue(arg2.value, new PdfReferenceHolder(savable));\n                }\n            }\n        }\n        else if (arg1 instanceof PdfTransparency) {\n            var savable = arg1.element;\n            var transDic = null;\n            transDic = this.items.getValue(this.dictionaryProperties.extGState);\n            // Create a new pattern dictionary.\n            if (transDic == null) {\n                transDic = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.extGState, transDic);\n            }\n            transDic.items.setValue(arg2.value, new PdfReferenceHolder(savable));\n        }\n        else {\n            /* tslint:disable */\n            var xobjects = this.Dictionary.items.getValue(this.dictionaryProperties.xObject);\n            var parentXObjects = void 0;\n            if (typeof this.pdfDocument !== 'undefined') {\n                parentXObjects = this.pdfDocument.sections.element.items.getValue(this.dictionaryProperties.resources).items.getValue(this.dictionaryProperties.xObject);\n            }\n            var values = this.Dictionary.items.values();\n            var hasSameImageStream = false;\n            var oldReference = void 0;\n            if (typeof this.pdfDocument !== 'undefined' && (typeof parentXObjects === undefined || parentXObjects == null)) {\n                parentXObjects = new PdfDictionary();\n                this.pdfDocument.sections.element.items.getValue(this.dictionaryProperties.resources).items.setValue(this.dictionaryProperties.xObject, parentXObjects);\n            }\n            else if (typeof this.pdfDocument !== 'undefined') {\n                var values_1 = parentXObjects.items.values();\n                for (var i = 0; i < values_1.length; i++) {\n                    if (typeof values_1[i] !== 'undefined' && typeof values_1[i].element !== 'undefined') {\n                        if (values_1[i].element.data[0] === arg1.element.data[0]) {\n                            oldReference = values_1[i];\n                            hasSameImageStream = true;\n                        }\n                    }\n                }\n            }\n            if (xobjects == null) {\n                xobjects = new PdfDictionary();\n                this.Dictionary.items.setValue(this.dictionaryProperties.xObject, xobjects);\n            }\n            if (hasSameImageStream && typeof oldReference !== 'undefined') {\n                xobjects.items.setValue(arg2.value, oldReference);\n            }\n            else {\n                var reference = new PdfReferenceHolder(arg1.element);\n                xobjects.items.setValue(arg2.value, reference);\n                if (typeof this.pdfDocument !== 'undefined') {\n                    parentXObjects.items.setValue(arg2.value, reference);\n                }\n            }\n            /* tslint:enable */\n        }\n    };\n    return PdfResources;\n}(PdfDictionary));\nexport { PdfResources };\n/* tslint:disable */\n/**\n * Used to create new guid for resources.\n * @private\n */\nvar Guid = /** @class */ (function () {\n    function Guid() {\n    }\n    /**\n     * Generate `new GUID`.\n     * @private\n     */\n    Guid.getNewGuidString = function () {\n        return 'aaaaaaaa-aaaa-4aaa-baaa-aaaaaaaaaaaa'.replace(/[ab]/g, function (c) {\n            var random = Math.random() * 16 | 0;\n            var result = c === 'a' ? random : (random & 0x3 | 0x8);\n            return result.toString(16);\n        });\n    };\n    return Guid;\n}());\nexport { Guid };\n/* tslint:enable */ \n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { GetResourceEventHandler } from './../pdf-graphics';\nimport { PdfBrush } from './pdf-brush';\nimport { PointF, SizeF, RectangleF, Rectangle } from './../../drawing/pdf-drawing';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfGraphics } from './../pdf-graphics';\nimport { PdfResources } from './../pdf-resources';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfPage } from './../../pages/pdf-page';\n/**\n * `PdfTilingBrush` Implements a colored tiling brush.\n */\nvar PdfTilingBrush = /** @class */ (function (_super) {\n    __extends(PdfTilingBrush, _super);\n    /**\n     * Initializes a new instance of the `PdfTilingBrush` class.\n     * @public\n     */\n    function PdfTilingBrush(arg1, arg2) {\n        var _this = _super.call(this) || this;\n        /**\n         * Local variable to store Stroking.\n         * @private\n         */\n        _this.mStroking = false;\n        /**\n         * Local variable to store the tile start location.\n         * @private\n         */\n        _this.mLocation = new PointF(0, 0);\n        /**\n         * Local variable to store the dictionary properties.\n         * @private\n         */\n        _this.mDictionaryProperties = new DictionaryProperties();\n        var rect = null;\n        if (arg1 instanceof Rectangle) {\n            rect = arg1;\n        }\n        else if (arg1 instanceof SizeF) {\n            rect = new Rectangle(0, 0, arg1.width, arg1.height);\n        }\n        if (arg2 !== null && arg2 instanceof PdfPage) {\n            _this.mPage = arg2;\n        }\n        _this.brushStream = new PdfStream();\n        _this.mResources = new PdfResources();\n        _this.brushStream.items.setValue(_this.mDictionaryProperties.resources, _this.mResources);\n        _this.setBox(rect);\n        _this.setObligatoryFields();\n        if (arg2 !== null && arg2 instanceof PdfPage) {\n            _this.mPage = arg2;\n            _this.graphics.colorSpace = arg2.document.colorSpace;\n        }\n        return _this;\n    }\n    /**\n     * Initializes a new instance of the `PdfTilingBrush` class.\n     * @private\n     * @param rectangle The size of the smallest brush cell.\n     * @param page The Current Page Object.\n     * @param location The Tile start location.\n     * @param matrix The matrix.\n     */\n    PdfTilingBrush.prototype.initialize = function (rectangle, page, location, matrix) {\n        this.mPage = page;\n        this.mLocation = location;\n        this.mTransformationMatrix = matrix;\n        this.tempBrushStream = this.brushStream;\n        this.brushStream = new PdfStream();\n        var tempResource = new PdfResources();\n        this.brushStream.items.setValue(this.mDictionaryProperties.resources, tempResource);\n        this.setBox(rectangle);\n        this.setObligatoryFields();\n        return this;\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"location\", {\n        //Properties\n        /**\n         * Location representing the start position of the tiles.\n         * @public\n         */\n        get: function () {\n            return this.mLocation;\n        },\n        set: function (value) {\n            this.mLocation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the obligatory fields.\n     * @private\n     */\n    PdfTilingBrush.prototype.setObligatoryFields = function () {\n        this.brushStream.items.setValue(this.mDictionaryProperties.patternType, new PdfNumber(1));\n        //  Tiling brush.\n        this.brushStream.items.setValue(this.mDictionaryProperties.paintType, new PdfNumber(1));\n        //  Coloured.\n        this.brushStream.items.setValue(this.mDictionaryProperties.tilingType, new PdfNumber(1));\n        //  Constant spacing.\n        this.brushStream.items.setValue(this.mDictionaryProperties.xStep, new PdfNumber((this.mBox.right - this.mBox.left)));\n        this.brushStream.items.setValue(this.mDictionaryProperties.yStep, new PdfNumber((this.mBox.bottom - this.mBox.top)));\n        if ((this.mPage != null) && (this.mLocation != null)) {\n            if ((this.mTransformationMatrix == null && typeof this.mTransformationMatrix === 'undefined')) {\n                // Transform the tile origin to fit the location\n                var tileTransform = (this.mPage.size.height % this.rectangle.size.height) - (this.mLocation.y);\n                /* tslint:disable-next-line:max-line-length */\n                this.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray([1, 0, 0, 1, this.mLocation.x, tileTransform]));\n            }\n            else {\n                var tileTransform = 0;\n                // Transform the tile origin to fit the location\n                var elements = this.mTransformationMatrix.matrix.elements;\n                if ((this.mPage.size.height > this.rectangle.size.height)) {\n                    tileTransform = (this.mTransformationMatrix.matrix.offsetY\n                        - (this.mPage.size.height % this.rectangle.size.height));\n                }\n                else {\n                    tileTransform = ((this.mPage.size.height % this.rectangle.size.height) + this.mTransformationMatrix.matrix.offsetY);\n                }\n                this.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray([\n                    elements[0], elements[1], elements[2], elements[3], elements[4], tileTransform\n                ]));\n            }\n        }\n    };\n    /**\n     * Sets the BBox coordinates.\n     * @private\n     */\n    PdfTilingBrush.prototype.setBox = function (box) {\n        this.mBox = box;\n        var rect = new RectangleF(this.mBox.left, this.mBox.top, this.mBox.right, this.mBox.bottom);\n        this.brushStream.items.setValue(this.mDictionaryProperties.bBox, PdfArray.fromRectangle(rect));\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"rectangle\", {\n        //Properties\n        /**\n         * Gets the boundary box of the smallest brush cell.\n         * @public\n         */\n        get: function () {\n            return this.mBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTilingBrush.prototype, \"size\", {\n        /**\n         * Gets the size of the smallest brush cell.\n         * @public\n         */\n        get: function () {\n            return this.mBox.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTilingBrush.prototype, \"graphics\", {\n        /**\n         * Gets Graphics context of the brush.\n         */\n        get: function () {\n            if ((this.mGraphics == null && typeof this.mGraphics === 'undefined')) {\n                var gr = new GetResourceEventHandler(this);\n                var g = new PdfGraphics(this.size, gr, this.brushStream);\n                this.mGraphics = g;\n                this.mResources = this.getResources();\n                this.mGraphics.initializeCoordinates();\n            }\n            return this.mGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the resources and modifies the template dictionary.\n     * @public\n     */\n    PdfTilingBrush.prototype.getResources = function () {\n        return this.mResources;\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"stroking\", {\n        /**\n         * Gets or sets a value indicating whether this PdfTilingBrush\n         * is used for stroking operations.\n         */\n        get: function () {\n            return this.mStroking;\n        },\n        set: function (value) {\n            this.mStroking = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //PdfBrush methods\n    /**\n     * Creates a new copy of a brush.\n     * @public\n     */\n    PdfTilingBrush.prototype.clone = function () {\n        var brush = this.initialize(this.rectangle, this.mPage, this.location, this.mTransformationMatrix);\n        if ((this.mTransformationMatrix != null) && (this.mTransformationMatrix.matrix != null)) {\n            /* tslint:disable-next-line:max-line-length */\n            brush.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray(this.mTransformationMatrix.matrix.elements));\n        }\n        brush.brushStream.data = this.tempBrushStream.data;\n        brush.mResources = new PdfResources(this.mResources);\n        brush.brushStream.items.setValue(this.mDictionaryProperties.resources, brush.mResources);\n        return brush;\n    };\n    /**\n     * Monitors the changes of the brush and modify PDF state respectfully.\n     * @param brush The brush\n     * @param streamWriter The stream writer\n     * @param getResources The get resources delegate.\n     * @param saveChanges if set to true the changes should be saved anyway.\n     * @param currentColorSpace The current color space.\n     */\n    /* tslint:disable-next-line:max-line-length */\n    PdfTilingBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        var diff = false;\n        if (brush !== this) {\n            //  Set the Pattern colour space.\n            streamWriter.setColorSpace('Pattern', this.mStroking);\n            //  Set the pattern for non-stroking operations.\n            var resources1 = getResources.getResources();\n            var name1 = resources1.getName(this);\n            streamWriter.setColourWithPattern(null, name1, this.mStroking);\n            diff = true;\n        }\n        else if (brush instanceof PdfTilingBrush) {\n            //  Set the /Pattern colour space.\n            streamWriter.setColorSpace('Pattern', this.mStroking);\n            //  Set the pattern for non-stroking operations.\n            var resources = getResources.getResources();\n            var name_1 = resources.getName(this);\n            streamWriter.setColourWithPattern(null, name_1, this.mStroking);\n            diff = true;\n        }\n        return diff;\n    };\n    /**\n     * Resets the changes, which were made by the brush.\n     * In other words resets the state to the initial one.\n     * @param streamWriter The stream writer.\n     */\n    PdfTilingBrush.prototype.resetChanges = function (streamWriter) {\n        //  We shouldn't do anything to reset changes.\n        //  All changes will be reset automatically by setting a new colour space.\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @public\n         */\n        get: function () {\n            return this.brushStream;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTilingBrush;\n}(PdfBrush));\nexport { PdfTilingBrush };\n","/**\n * PdfGraphics.ts class for EJ2-PDF\n */\nimport { PdfColorSpace, TextRenderingMode, PdfFillMode, PdfTextAlignment } from './enum';\nimport { PdfVerticalAlignment, PdfBlendMode } from './enum';\nimport { PdfSubSuperScript, PdfWordWrapType } from './fonts/enum';\nimport { PdfStreamWriter } from './../input-output/pdf-stream-writer';\nimport { PdfPen } from './pdf-pen';\nimport { PdfBrush } from './brushes/pdf-brush';\nimport { PdfSolidBrush } from './brushes/pdf-solid-brush';\nimport { PdfFont } from './fonts/pdf-font';\nimport { PdfTransformationMatrix, Matrix } from './pdf-transformation-matrix';\nimport { PointF, SizeF, RectangleF } from './../drawing/pdf-drawing';\nimport { ProcedureSets } from './constants';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfStringFormat } from './fonts/pdf-string-format';\nimport { TemporaryDictionary } from './../collections/object-object-pair/dictionary';\nimport { PdfTransparency } from './pdf-transparency';\nimport { PdfStringLayouter, LineType } from './fonts/string-layouter';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { StringTokenizer } from './fonts/string-tokenizer';\nimport { PdfAutomaticFieldInfoCollection } from './../document/automatic-fields/automatic-field-info-collection';\nimport { PdfAutomaticFieldInfo } from './../document/automatic-fields/automatic-field-info';\nimport { Operators } from './../input-output/pdf-operators';\nimport { UnicodeTrueTypeFont } from './fonts/unicode-true-type-font';\nimport { InternalEnum } from './../primitives/pdf-string';\nimport { RtlRenderer } from './fonts/rtl-renderer';\nimport { PdfTextDirection } from './enum';\nimport { PathPointType } from './figures/enum';\nimport { PdfGradientBrush } from './../../implementation/graphics/brushes/pdf-gradient-brush';\nimport { PdfTilingBrush } from './brushes/pdf-tiling-brush';\n/**\n * `PdfGraphics` class represents a graphics context of the objects.\n * It's used for performing all the graphics operations.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * //\n * //graphics of the page\n * let page1Graphics : PdfGraphics = page1.graphics;\n * // draw the text on the page1 graphics\n * page1Graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * //\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfGraphics = /** @class */ (function () {\n    function PdfGraphics(arg1, arg2, arg3) {\n        /**\n         * Represents the `Current color space`.\n         * @private\n         */\n        this.currentColorSpace = PdfColorSpace.Rgb;\n        /**\n         * Stores `previous rendering mode`.\n         * @private\n         */\n        this.previousTextRenderingMode = TextRenderingMode.Fill;\n        /**\n         * Previous `character spacing` value or 0.\n         * @private\n         */\n        this.previousCharacterSpacing = 0.0;\n        /**\n         * Previous `word spacing` value or 0.\n         * @private\n         */\n        this.previousWordSpacing = 0.0;\n        /**\n         * The `previously used text scaling` value.\n         * @private\n         */\n        this.previousTextScaling = 100.0;\n        /**\n         * Instance of `ProcedureSets` class.\n         * @private\n         */\n        this.procedureSets = new ProcedureSets();\n        /**\n         * To check wihether it is a `direct text rendering`.\n         * @default true\n         * @private\n         */\n        this.isNormalRender = true;\n        /**\n         * check whether to `use font size` to calculate the shift.\n         * @default false\n         * @private\n         */\n        this.isUseFontSize = false;\n        /**\n         * check whether the font is in `italic type`.\n         * @default false\n         * @private\n         */\n        this.isItalic = false;\n        /**\n         * Check whether it is an `emf Text Matrix`.\n         * @default false\n         * @private\n         */\n        this.isEmfTextScaled = false;\n        /**\n         * Check whether it is an `emf` call.\n         * @default false\n         * @private\n         */\n        this.isEmf = false;\n        /**\n         * Check whether it is an `emf plus` call.\n         * @default false\n         * @private\n         */\n        this.isEmfPlus = false;\n        /**\n         * Check whether it is in `base line format`.\n         * @default true\n         * @private\n         */\n        this.isBaselineFormat = true;\n        /**\n         * Emf Text `Scaling Factor`.\n         * @private\n         */\n        this.emfScalingFactor = new SizeF(0, 0);\n        /**\n         * To check whether the `last color space` of document and garphics is saved.\n         * @private\n         */\n        this.colorSpaceChanged = false;\n        /**\n         * Stores an instance of `DictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isOverloadWithPosition = false;\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isPointOverload = false;\n        /**\n         * Current colorspaces.\n         * @hidden\n         * @private\n         */\n        this.currentColorSpaces = ['RGB', 'CMYK', 'GrayScale', 'Indexed'];\n        /**\n         * Checks the current image `is optimized` or not.\n         * @default false.\n         * @private\n         */\n        this.isImageOptimized = false;\n        /**\n         * Stores the `graphics states`.\n         * @private\n         */\n        this.graphicsState = [];\n        /**\n         * Indicates whether the object `had trasparency`.\n         * @default false\n         * @private\n         */\n        this.istransparencySet = false;\n        /**\n         * Stores the instance of `PdfAutomaticFieldInfoCollection` class .\n         * @default null\n         * @private\n         */\n        this.internalAutomaticFields = null;\n        /**\n         * Stores the index of the start line that should draw with in the next page.\n         * @private\n         */\n        this.startCutIndex = -1;\n        this.getResources = arg2;\n        this.canvasSize = arg1;\n        if (arg3 instanceof PdfStreamWriter) {\n            this.pdfStreamWriter = arg3;\n        }\n        else {\n            this.pdfStreamWriter = new PdfStreamWriter(arg3);\n        }\n        this.initialize();\n    }\n    Object.defineProperty(PdfGraphics.prototype, \"stringLayoutResult\", {\n        //  Properties\n        /**\n         * Returns the `result` after drawing string.\n         * @private\n         */\n        get: function () {\n            return this.pdfStringLayoutResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"size\", {\n        /**\n         * Gets the `size` of the canvas.\n         * @private\n         */\n        get: function () {\n            return this.canvasSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"mediaBoxUpperRightBound\", {\n        /**\n         * Gets and Sets the value of `MediaBox upper right bound`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.internalMediaBoxUpperRightBound === 'undefined') {\n                this.internalMediaBoxUpperRightBound = 0;\n            }\n            return this.internalMediaBoxUpperRightBound;\n        },\n        set: function (value) {\n            this.internalMediaBoxUpperRightBound = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"clientSize\", {\n        /**\n         * Gets the `size` of the canvas reduced by margins and page templates.\n         * @private\n         */\n        get: function () {\n            return new SizeF(this.clipBounds.width, this.clipBounds.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the current `color space` of the document\n         * @private\n         */\n        get: function () {\n            return this.currentColorSpace;\n        },\n        set: function (value) {\n            this.currentColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"streamWriter\", {\n        /**\n         * Gets the `stream writer`.\n         * @private\n         */\n        get: function () {\n            return this.pdfStreamWriter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"matrix\", {\n        /**\n         * Gets the `transformation matrix` reflecting current transformation.\n         * @private\n         */\n        get: function () {\n            if (this.transformationMatrix == null) {\n                this.transformationMatrix = new PdfTransformationMatrix();\n            }\n            return this.transformationMatrix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"layer\", {\n        /**\n         * Gets the `layer` for the graphics, if exists.\n         * @private\n         */\n        get: function () {\n            return this.pageLayer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"page\", {\n        /**\n         * Gets the `page` for this graphics, if exists.\n         * @private\n         */\n        get: function () {\n            return this.pageLayer.page;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"automaticFields\", {\n        get: function () {\n            if (this.internalAutomaticFields == null || typeof this.internalAutomaticFields === 'undefined') {\n                this.internalAutomaticFields = new PdfAutomaticFieldInfoCollection();\n            }\n            return this.internalAutomaticFields;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Initializes` this instance.\n     * @private\n     */\n    PdfGraphics.prototype.initialize = function () {\n        this.bStateSaved = false;\n        this.currentPen = null;\n        this.currentBrush = null;\n        this.currentFont = null;\n        this.currentColorSpace = PdfColorSpace.Rgb;\n        this.bCSInitialized = false;\n        this.transformationMatrix = null;\n        this.previousTextRenderingMode = (-1); //.Fill;\n        this.previousCharacterSpacing = -1.0;\n        this.previousWordSpacing = -1.0;\n        this.previousTextScaling = -100.0;\n        // this.m_trasparencies = null;\n        this.currentStringFormat = null;\n        this.clipBounds = new RectangleF(new PointF(0, 0), this.size);\n        this.getResources.getResources().requireProcedureSet(this.procedureSets.pdf);\n    };\n    PdfGraphics.prototype.drawPdfTemplate = function (template, location, size) {\n        if (typeof size === 'undefined') {\n            if (template == null) {\n                throw Error('ArgumentNullException-template');\n            }\n            this.drawPdfTemplate(template, location, template.size);\n        }\n        else {\n            // let crossTable : PdfCrossTable = null;\n            // if (this.pageLayer != null) {\n            //     crossTable = (this.page as PdfPage).section.parentDocument.crossTable;\n            // }\n            if (template == null) {\n                throw Error('ArgumentNullException-template');\n            }\n            var scaleX = (template.width > 0) ? size.width / template.width : 1;\n            var scaleY = (template.height > 0) ? size.height / template.height : 1;\n            var bNeedScale = !(scaleX === 1 && scaleY === 1);\n            // Save state.\n            var state = this.save();\n            // Take into consideration that rect location is bottom/left.\n            var matrix = new PdfTransformationMatrix();\n            if (this.pageLayer != null) {\n                this.getTranslateTransform(location.x, location.y + size.height, matrix);\n            }\n            if (bNeedScale) {\n                this.getScaleTransform(scaleX, scaleY, matrix);\n            }\n            this.pdfStreamWriter.modifyCtm(matrix);\n            // Output template.\n            var resources = this.getResources.getResources();\n            var name_1 = resources.getName(template);\n            this.pdfStreamWriter.executeObject(name_1);\n            // Restore state.\n            this.restore(state);\n            //Transfer automatic fields from template.\n            var g = template.graphics;\n            if (g != null) {\n                for (var index = 0; index < g.automaticFields.automaticFields.length; index++) {\n                    var fieldInfo = g.automaticFields.automaticFields[index];\n                    var newLocation = new PointF(fieldInfo.location.x + location.x, fieldInfo.location.y + location.y);\n                    var scalingX = template.size.width == 0 ? 0 : size.width / template.size.width;\n                    var scalingY = template.size.height == 0 ? 0 : size.height / template.size.height;\n                    this.automaticFields.add(new PdfAutomaticFieldInfo(fieldInfo.field, newLocation, scalingX, scalingY));\n                    this.page.dictionary.modify();\n                }\n            }\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageB);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageC);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageI);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n        }\n    };\n    /**\n     * @public\n     */\n    PdfGraphics.prototype.drawString = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9) {\n        if (typeof arg1 === 'string' && arg2 instanceof PdfFont && (arg3 instanceof PdfPen || arg3 === null) && (arg4 instanceof PdfBrush || arg4 === null) && typeof arg5 === 'number' && typeof arg6 === 'number' && (arg7 instanceof PdfStringFormat || arg7 === null) && typeof arg8 === 'undefined') {\n            this.isOverloadWithPosition = true;\n            this.drawString(arg1, arg2, arg3, arg4, arg5, arg6, (this.clientSize.width - arg5), 0, arg7);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            var temparg6 = arg6;\n            var temparg7 = arg7;\n            var temparg8 = arg8;\n            var temparg9 = arg9;\n            var layouter = new PdfStringLayouter();\n            var result = layouter.layout(arg1, arg2, temparg9, new SizeF(temparg7, temparg8), this.isOverloadWithPosition, this.clientSize);\n            if (!result.empty) {\n                var rect = this.checkCorrectLayoutRectangle(result.actualSize, temparg5, temparg6, temparg9);\n                if (temparg7 <= 0) {\n                    temparg5 = rect.x;\n                    temparg7 = rect.width;\n                }\n                if (temparg8 <= 0) {\n                    temparg6 = rect.y;\n                    temparg8 = rect.height;\n                }\n                this.drawStringLayoutResult(result, arg2, temparg3, temparg4, new RectangleF(temparg5, temparg6, temparg7, temparg8), temparg9);\n                this.isEmfTextScaled = false;\n                this.emfScalingFactor = new SizeF(0, 0);\n            }\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n            this.isNormalRender = true;\n            this.pdfStringLayoutResult = result;\n            this.isUseFontSize = false;\n        }\n    };\n    PdfGraphics.prototype.drawLine = function (arg1, arg2, arg3, arg4, arg5) {\n        if (arg2 instanceof PointF) {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            this.drawLine(arg1, temparg2.x, temparg2.y, temparg3.x, temparg3.y);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            this.stateControl(arg1, null, null);\n            var sw = this.streamWriter;\n            sw.beginPath(temparg2, temparg3);\n            sw.appendLineSegment(temparg4, temparg5);\n            sw.strokePath();\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.pdf);\n        }\n    };\n    PdfGraphics.prototype.drawRectangle = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof PdfPen && typeof arg2 === 'number') {\n            var temparg3 = arg3;\n            this.drawRectangle(arg1, null, arg2, temparg3, arg4, arg5);\n        }\n        else if (arg1 instanceof PdfBrush && typeof arg2 === 'number') {\n            var temparg3 = arg3;\n            this.drawRectangle(null, arg1, arg2, temparg3, arg4, arg5);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            var temparg6 = arg6;\n            if ((arg2 instanceof PdfTilingBrush)) {\n                this.bCSInitialized = false;\n                var xOffset = (this.matrix.matrix.offsetX + temparg3);\n                var yOffset = void 0;\n                if (((this.layer != null) && (this.layer.page != null))) {\n                    yOffset = ((this.layer.page.size.height - this.matrix.matrix.offsetY) + temparg4);\n                }\n                else {\n                    yOffset = ((this.clientSize.height - this.matrix.matrix.offsetY) + temparg4);\n                }\n                (arg2).location = new PointF(xOffset, yOffset);\n                (arg2).graphics.colorSpace = this.colorSpace;\n            }\n            else if ((arg2 instanceof PdfGradientBrush)) {\n                arg2.colorSpace = this.colorSpace;\n            }\n            if (arg2 instanceof PdfSolidBrush && arg2.color.isEmpty) {\n                arg2 = null;\n            }\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            this.stateControl(temparg1, temparg2, null);\n            this.streamWriter.appendRectangle(temparg3, temparg4, temparg5, temparg6);\n            this.drawPathHelper(temparg1, temparg2, false);\n        }\n    };\n    /**\n     * Draw rounded rectangle specified by a brush, pen, coordinate pair, a width, a height and a radius.\n     * ```typescript\n     * // Create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // Create a new page\n     * let page : PdfPage = document.pages.add();\n     * // Create brush for draw rectangle\n     * let brush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(238, 130, 238));\n     * // Create a new PDF pen\n     * let pen: PdfPen = new PdfPen(new PdfColor(255, 0, 0), 1);\n     * // Draw rounded rectangle\n     * page.graphics.drawRoundedRectangle(pen, brush, 20, 20, 100, 50, 5);\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param pen Stoke color of the rectangle.\n     * @param brush Fill color of the rectangle.\n     * @param x The x-coordinate of the upper-left corner of the rectangle to draw.\n     * @param y The y-coordinate of the upper-left corner of the rectangle to draw.\n     * @param width Width of the rectangle to draw.\n     * @param height Height of the rectangle to draw.\n     * @param radius Radius of the arcs to draw.\n     */\n    PdfGraphics.prototype.drawRoundedRectangle = function (pen, brush, x, y, width, height, radius) {\n        if (pen === null) {\n            throw new Error('pen');\n        }\n        if (brush === null) {\n            throw new Error('brush');\n        }\n        if (radius === 0) {\n            this.drawRectangle(pen, brush, x, y, width, height);\n        }\n        else {\n            var bounds = [x, y, width, height];\n            var diameter = radius * 2;\n            var size = [diameter, diameter];\n            var arc = [bounds[0], bounds[1], size[0], size[1]];\n            this._pathPoints = [];\n            this._pathTypes = [];\n            var startFigure = true;\n            startFigure = this._addArc(arc[0], arc[1], arc[2], arc[3], 180, 90, startFigure);\n            arc[0] = (bounds[0] + bounds[2]) - diameter;\n            startFigure = this._addArc(arc[0], arc[1], arc[2], arc[3], 270, 90, startFigure);\n            arc[1] = (bounds[1] + bounds[3]) - diameter;\n            startFigure = this._addArc(arc[0], arc[1], arc[2], arc[3], 0, 90, startFigure);\n            arc[0] = bounds[0];\n            startFigure = this._addArc(arc[0], arc[1], arc[2], arc[3], 90, 90, startFigure);\n            var index = this._pathPoints.length - 1;\n            var type = ((this._pathTypes[index]));\n            type = (type | PathPointType.CloseSubpath);\n            this._pathTypes[index] = (type);\n            this._drawPath(pen, brush, this._pathPoints, this._pathTypes, PdfFillMode.Alternate);\n            this._pathPoints = [];\n            this._pathTypes = [];\n        }\n    };\n    PdfGraphics.prototype._addArc = function (x, y, width, height, startAngle, sweepAngle, startFigure) {\n        var points = this._getBezierArcPoints(x, y, (x + width), (y + height), startAngle, sweepAngle);\n        for (var i = 0; i < points.length; i = i + 8) {\n            var point = [points[i], points[i + 1], points[i + 2], points[i + 3], points[i + 4], points[i + 5], points[i + 6], points[i + 7]];\n            startFigure = this._addArcPoints(point, PathPointType.Bezier3, startFigure);\n        }\n        return startFigure;\n    };\n    PdfGraphics.prototype._addArcPoints = function (points, pointType, startFigure) {\n        for (var i = 0; i < points.length; i++) {\n            var point = new PointF(points[i], points[(i + 1)]);\n            if (i === 0) {\n                if (this._pathPoints.length === 0 || startFigure) {\n                    this._addPoint(point, PathPointType.Start);\n                    startFigure = false;\n                }\n                else if (point.x !== this._getLastPoint().x || point.y !== this._getLastPoint().y) {\n                    this._addPoint(point, PathPointType.Line);\n                }\n            }\n            else {\n                this._addPoint(point, pointType);\n            }\n            i++;\n        }\n        return startFigure;\n    };\n    PdfGraphics.prototype._getLastPoint = function () {\n        var lastPoint = new PointF(0, 0);\n        var count = this._pathPoints.length;\n        if (count > 0) {\n            lastPoint.x = this._pathPoints[(count - 1)].x;\n            lastPoint.y = this._pathPoints[(count - 1)].y;\n        }\n        return lastPoint;\n    };\n    PdfGraphics.prototype._addPoint = function (point, type) {\n        this._pathPoints.push(point);\n        this._pathTypes.push(type);\n    };\n    PdfGraphics.prototype._getBezierArcPoints = function (x1, y1, x2, y2, s1, e1) {\n        if ((x1 > x2)) {\n            var tmp = void 0;\n            tmp = x1;\n            x1 = x2;\n            x2 = tmp;\n        }\n        if ((y2 > y1)) {\n            var tmp = void 0;\n            tmp = y1;\n            y1 = y2;\n            y2 = tmp;\n        }\n        var fragAngle;\n        var numFragments;\n        if ((Math.abs(e1) <= 90)) {\n            fragAngle = e1;\n            numFragments = 1;\n        }\n        else {\n            numFragments = (Math.ceil((Math.abs(e1) / 90)));\n            fragAngle = (e1 / numFragments);\n        }\n        var xcen = ((x1 + x2) / 2);\n        var ycen = ((y1 + y2) / 2);\n        var rx = ((x2 - x1) / 2);\n        var ry = ((y2 - y1) / 2);\n        var halfAng = ((fragAngle * (Math.PI / 360)));\n        var kappa = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(halfAng)) / Math.sin(halfAng)));\n        var pointList = [];\n        for (var i = 0; (i < numFragments); i++) {\n            var theta0 = (((s1 + (i * fragAngle)) * (Math.PI / 180)));\n            var theta1 = (((s1 + ((i + 1) * fragAngle)) * (Math.PI / 180)));\n            var cos0 = (Math.cos(theta0));\n            var cos1 = (Math.cos(theta1));\n            var sin0 = (Math.sin(theta0));\n            var sin1 = (Math.sin(theta1));\n            if ((fragAngle > 0)) {\n                pointList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 - (kappa * sin0)))), (ycen - (ry * (sin0 + (kappa * cos0)))), (xcen + (rx * (cos1 + (kappa * sin1)))), (ycen - (ry * (sin1 - (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n            else {\n                pointList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 + (kappa * sin0)))), (ycen - (ry * (sin0 - (kappa * cos0)))), (xcen + (rx * (cos1 - (kappa * sin1)))), (ycen - (ry * (sin1 + (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n        }\n        return pointList;\n    };\n    PdfGraphics.prototype.drawPathHelper = function (arg1, arg2, arg3, arg4) {\n        if (typeof arg3 === 'boolean') {\n            var temparg3 = arg3;\n            this.drawPathHelper(arg1, arg2, PdfFillMode.Winding, temparg3);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var isPen = arg1 != null;\n            var isBrush = arg2 != null;\n            var isEvenOdd = (temparg3 === PdfFillMode.Alternate);\n            if (isPen && isBrush) {\n                this.streamWriter.fillStrokePath(isEvenOdd);\n            }\n            else if (!isPen && !isBrush) {\n                this.streamWriter.endPath();\n            }\n            else if (isPen) {\n                this.streamWriter.strokePath();\n            }\n            else {\n                this.streamWriter.fillPath(isEvenOdd);\n            }\n        }\n    };\n    PdfGraphics.prototype.drawImage = function (arg1, arg2, arg3, arg4, arg5) {\n        if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            var size = arg1.physicalDimension;\n            this.drawImage(arg1, arg2, arg3, size.width, size.height);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            arg1.save();\n            var matrix = new PdfTransformationMatrix();\n            this.getTranslateTransform(temparg2, (temparg3 + temparg5), matrix);\n            this.getScaleTransform(arg4, arg5, matrix);\n            this.pdfStreamWriter.write('q');\n            this.pdfStreamWriter.modifyCtm(matrix);\n            // Output template.\n            var resources = this.getResources.getResources();\n            if (typeof this.pageLayer !== 'undefined' && this.page != null) {\n                resources.document = this.page.document;\n            }\n            var name_2 = resources.getName(arg1);\n            if (typeof this.pageLayer !== 'undefined') {\n                this.page.setResources(resources);\n            }\n            this.pdfStreamWriter.executeObject(name_2);\n            this.pdfStreamWriter.write(Operators.restoreState);\n            this.pdfStreamWriter.write(Operators.newLine);\n            var resource = this.getResources.getResources();\n            resource.requireProcedureSet(this.procedureSets.imageB);\n            resource.requireProcedureSet(this.procedureSets.imageC);\n            resource.requireProcedureSet(this.procedureSets.imageI);\n            resource.requireProcedureSet(this.procedureSets.text);\n        }\n    };\n    //Implementation\n    /**\n     * Returns `bounds` of the line info.\n     * @private\n     */\n    PdfGraphics.prototype.getLineBounds = function (lineIndex, result, font, layoutRectangle, format) {\n        var bounds;\n        if (!result.empty && lineIndex < result.lineCount && lineIndex >= 0) {\n            var line = result.lines[lineIndex];\n            var vShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n            var y = vShift + layoutRectangle.y + (result.lineHeight * lineIndex);\n            var lineWidth = line.width;\n            var hShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n            var lineIndent = this.getLineIndent(line, format, layoutRectangle, (lineIndex === 0));\n            hShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n            var x = layoutRectangle.x + hShift;\n            var width = (!this.shouldJustify(line, layoutRectangle.width, format)) ? lineWidth - lineIndent : layoutRectangle.width - lineIndent;\n            var height = result.lineHeight;\n            bounds = new RectangleF(x, y, width, height);\n        }\n        else {\n            bounds = new RectangleF(0, 0, 0, 0);\n        }\n        return bounds;\n    };\n    /**\n     * Creates `lay outed rectangle` depending on the text settings.\n     * @private\n     */\n    PdfGraphics.prototype.checkCorrectLayoutRectangle = function (textSize, x, y, format) {\n        var layoutedRectangle = new RectangleF(x, y, textSize.width, textSize.width);\n        if (format != null) {\n            switch (format.alignment) {\n                case PdfTextAlignment.Center:\n                    layoutedRectangle.x -= layoutedRectangle.width / 2;\n                    break;\n                case PdfTextAlignment.Right:\n                    layoutedRectangle.x -= layoutedRectangle.width;\n                    break;\n            }\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.Middle:\n                    layoutedRectangle.y -= layoutedRectangle.height / 2;\n                    break;\n                case PdfVerticalAlignment.Bottom:\n                    layoutedRectangle.y -= layoutedRectangle.height;\n                    break;\n            }\n        }\n        return layoutedRectangle;\n    };\n    /**\n     * Sets the `layer` for the graphics.\n     * @private\n     */\n    PdfGraphics.prototype.setLayer = function (layer) {\n        this.pageLayer = layer;\n        var page = layer.page;\n        if (page != null && typeof page !== 'undefined') {\n            page.beginSave = this.pageSave;\n        }\n    };\n    /**\n     * Adding page number field before page saving.\n     * @private\n     */\n    PdfGraphics.prototype.pageSave = function (page) {\n        if (page.graphics.automaticFields != null) {\n            for (var i = 0; i < page.graphics.automaticFields.automaticFields.length; i++) {\n                var fieldInfo = page.graphics.automaticFields.automaticFields[i];\n                fieldInfo.field.performDraw(page.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);\n            }\n        }\n    };\n    /**\n     * `Draws a layout result`.\n     * @private\n     */\n    PdfGraphics.prototype.drawStringLayoutResult = function (result, font, pen, brush, layoutRectangle, format) {\n        if (!result.empty) {\n            this.applyStringSettings(font, pen, brush, format, layoutRectangle);\n            // Set text scaling\n            var textScaling = (format != null) ? format.horizontalScalingFactor : 100.0;\n            if (textScaling !== this.previousTextScaling && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.setTextScaling(textScaling);\n                this.previousTextScaling = textScaling;\n            }\n            var height = (format == null || format.lineSpacing === 0) ? font.height : format.lineSpacing + font.height;\n            var subScript = (format != null && format.subSuperScript === PdfSubSuperScript.SubScript);\n            var shift = 0;\n            shift = (subScript) ? height - (font.height + font.metrics.getDescent(format)) : (height - font.metrics.getAscent(format));\n            this.shift = shift;\n            this.pdfStreamWriter.startNextLine(layoutRectangle.x, layoutRectangle.y - shift);\n            this.pdfStreamWriter.setLeading(+height);\n            var resultHeight = 0;\n            var remainingString = '';\n            for (var i = 0; i < result.lines.length; i++) {\n                resultHeight += result.lineHeight;\n                if ((layoutRectangle.y + resultHeight) > this.clientSize.height) {\n                    this.startCutIndex = i;\n                    break;\n                }\n            }\n            for (var j = this.startCutIndex; (j < result.lines.length && j >= 0); j++) {\n                remainingString += result.lines[j].text;\n            }\n            var bounds = new RectangleF(layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height);\n            this.drawLayoutResult(result, font, format, layoutRectangle);\n            this.underlineStrikeoutText(pen, brush, result, font, bounds, format);\n            this.isEmfPlus = false;\n            this.isUseFontSize = false;\n            if (this.startCutIndex !== -1) {\n                var page = this.getNextPage();\n                page.graphics.drawString(remainingString, font, pen, brush, layoutRectangle.x, 0, layoutRectangle.width, 0, format);\n            }\n        }\n        else {\n            throw new Error('ArgumentNullException:result');\n        }\n    };\n    /**\n     * Gets the `next page`.\n     * @private\n     */\n    PdfGraphics.prototype.getNextPage = function () {\n        var section = this.currentPage.section;\n        var nextPage = null;\n        var index = section.indexOf(this.currentPage);\n        if (index === section.count - 1) {\n            nextPage = section.add();\n        }\n        else {\n            nextPage = section.getPages()[index + 1];\n        }\n        return nextPage;\n    };\n    PdfGraphics.prototype.setClip = function (rectangle, mode) {\n        if (typeof mode === 'undefined') {\n            this.setClip(rectangle, PdfFillMode.Winding);\n        }\n        else {\n            this.pdfStreamWriter.appendRectangle(rectangle);\n            this.pdfStreamWriter.clipPath((mode === PdfFillMode.Alternate));\n        }\n    };\n    /**\n     * Applies all the `text settings`.\n     * @private\n     */\n    PdfGraphics.prototype.applyStringSettings = function (font, pen, brush, format, bounds) {\n        if (brush instanceof PdfTilingBrush) {\n            this.bCSInitialized = false;\n            brush.graphics.colorSpace = this.colorSpace;\n        }\n        else if ((brush instanceof PdfGradientBrush)) {\n            this.bCSInitialized = false;\n            brush.colorSpace = this.colorSpace;\n        }\n        var setLineWidth = false;\n        var tm = this.getTextRenderingMode(pen, brush, format);\n        this.stateControl(pen, brush, font, format);\n        this.pdfStreamWriter.beginText();\n        if ((tm) !== this.previousTextRenderingMode) {\n            this.pdfStreamWriter.setTextRenderingMode(tm);\n            this.previousTextRenderingMode = tm;\n        }\n        // Set character spacing.\n        var cs = (format != null) ? format.characterSpacing : 0;\n        if (cs !== this.previousCharacterSpacing && !this.isEmfTextScaled) {\n            this.pdfStreamWriter.setCharacterSpacing(cs);\n            this.previousCharacterSpacing = cs;\n        }\n        // Set word spacing.\n        // NOTE: it works only if the space code is equal to 32 (0x20).\n        var ws = (format != null) ? format.wordSpacing : 0;\n        if (ws !== this.previousWordSpacing) {\n            this.pdfStreamWriter.setWordSpacing(ws);\n            this.previousWordSpacing = ws;\n        }\n    };\n    /**\n     * Calculates `shift value` if the text is vertically aligned.\n     * @private\n     */\n    PdfGraphics.prototype.getTextVerticalAlignShift = function (textHeight, boundsHeight, format) {\n        var shift = 0;\n        if (boundsHeight >= 0 && format != null && format.lineAlignment !== PdfVerticalAlignment.Top) {\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.Middle:\n                    shift = (boundsHeight - textHeight) / 2;\n                    break;\n                case PdfVerticalAlignment.Bottom:\n                    shift = boundsHeight - textHeight;\n                    break;\n            }\n        }\n        return shift;\n    };\n    /**\n     * `Draws layout result`.\n     * @private\n     */\n    PdfGraphics.prototype.drawLayoutResult = function (result, font, format, layoutRectangle) {\n        var vAlignShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n        if (vAlignShift !== 0) {\n            this.pdfStreamWriter.startNextLine(0, vAlignShift);\n        }\n        var ttfFont = font;\n        var unicode = (ttfFont != null && ttfFont.isUnicode);\n        var embed = (ttfFont != null && ttfFont.isEmbedFont);\n        var lines = result.lines;\n        for (var i = 0, len = lines.length; (i < len && i !== this.startCutIndex); i++) {\n            var lineInfo = lines[i];\n            var line = lineInfo.text;\n            var lineWidth = lineInfo.width;\n            var hAlignShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n            var lineIndent = this.getLineIndent(lineInfo, format, layoutRectangle, (i === 0));\n            hAlignShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n            if (hAlignShift !== 0 && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.startNextLine(hAlignShift, 0);\n            }\n            if (unicode) {\n                this.drawUnicodeLine(lineInfo, layoutRectangle, font, format);\n            }\n            else {\n                this.drawAsciiLine(lineInfo, layoutRectangle, font, format);\n            }\n            if (hAlignShift !== 0 && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.startNextLine(-hAlignShift, 0);\n            }\n            if (this.isOverloadWithPosition && lines.length > 1) {\n                this.pdfStreamWriter.startNextLine(-(layoutRectangle.x), 0);\n                layoutRectangle.x = 0;\n                layoutRectangle.width = this.clientSize.width;\n                this.isOverloadWithPosition = false;\n                this.isPointOverload = true;\n            }\n            else if (this.isOverloadWithPosition) {\n                this.isOverloadWithPosition = false;\n            }\n        }\n        this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n        if (vAlignShift !== 0) {\n            this.pdfStreamWriter.startNextLine(0, -(vAlignShift - result.lineHeight));\n        }\n        this.pdfStreamWriter.endText();\n    };\n    /**\n     * `Draws Ascii line`.\n     * @private\n     */\n    PdfGraphics.prototype.drawAsciiLine = function (lineInfo, layoutRectangle, font, format) {\n        this.justifyLine(lineInfo, layoutRectangle.width, format);\n        var value = '';\n        if (lineInfo.text.indexOf('(') !== -1 || lineInfo.text.indexOf(')') !== -1) {\n            for (var i = 0; i < lineInfo.text.length; i++) {\n                if (lineInfo.text[i] === '(') {\n                    value += '\\\\\\(';\n                }\n                else if (lineInfo.text[i] === ')') {\n                    value += '\\\\\\)';\n                }\n                else {\n                    value += lineInfo.text[i];\n                }\n            }\n        }\n        if (value === '') {\n            value = lineInfo.text;\n        }\n        var line = '(' + value + ')';\n        this.pdfStreamWriter.showNextLineText(new PdfString(line));\n    };\n    /**\n     * Draws unicode line.\n     * @private\n     */\n    PdfGraphics.prototype.drawUnicodeLine = function (lineInfo, layoutRectangle, font, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var rtl = (format !== null && typeof format !== 'undefined' && format.rightToLeft);\n        var useWordSpace = (format !== null && typeof format !== 'undefined' && (format.wordSpacing !== 0 || format.alignment === PdfTextAlignment.Justify));\n        var ttfFont = font;\n        var wordSpacing = this.justifyLine(lineInfo, layoutRectangle.width, format);\n        var rtlRender = new RtlRenderer();\n        if (rtl || (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None)) {\n            var blocks = null;\n            var rightAlign = (format !== null && typeof format !== 'undefined' && format.alignment === PdfTextAlignment.Right);\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                /* tslint:disable-next-line:max-line-length */\n                blocks = rtlRender.layout(line, ttfFont, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, useWordSpace, format);\n            }\n            else {\n                blocks = rtlRender.layout(line, ttfFont, rightAlign, useWordSpace, format);\n            }\n            var words = null;\n            if (blocks.length > 1) {\n                if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                    /* tslint:disable-next-line:max-line-length */\n                    words = rtlRender.splitLayout(line, ttfFont, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, useWordSpace, format);\n                }\n                else {\n                    words = rtlRender.splitLayout(line, ttfFont, rightAlign, useWordSpace, format);\n                }\n            }\n            else {\n                words = [line];\n            }\n            this.drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n        }\n        else {\n            if (useWordSpace) {\n                var result = this.breakUnicodeLine(line, ttfFont, null);\n                var blocks = result.tokens;\n                var words = result.words;\n                this.drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n            }\n            else {\n                var token = this.convertToUnicode(line, ttfFont);\n                var value = this.getUnicodeString(token);\n                this.streamWriter.showNextLineText(value);\n            }\n        }\n    };\n    /**\n     * Draws array of unicode tokens.\n     */\n    PdfGraphics.prototype.drawUnicodeBlocks = function (blocks, words, font, format, wordSpacing) {\n        if (blocks == null) {\n            throw new Error('Argument Null Exception : blocks');\n        }\n        if (words == null) {\n            throw new Error('Argument Null Exception : words');\n        }\n        if (font == null) {\n            throw new Error('Argument Null Exception : font');\n        }\n        this.streamWriter.startNextLine();\n        var x = 0;\n        var xShift = 0;\n        var firstLineIndent = 0;\n        var paragraphIndent = 0;\n        try {\n            if (format !== null && typeof format !== 'undefined') {\n                firstLineIndent = format.firstLineIndent;\n                paragraphIndent = format.paragraphIndent;\n                format.firstLineIndent = 0;\n                format.paragraphIndent = 0;\n            }\n            var spaceWidth = font.getCharWidth(StringTokenizer.whiteSpace, format) + wordSpacing;\n            var characterSpacing = (format != null) ? format.characterSpacing : 0;\n            var wordSpace = (format !== null && typeof format !== 'undefined' && wordSpacing === 0) ? format.wordSpacing : 0;\n            spaceWidth += characterSpacing + wordSpace;\n            for (var i = 0; i < blocks.length; i++) {\n                var token = blocks[i];\n                var word = words[i];\n                var tokenWidth = 0;\n                if (x !== 0) {\n                    this.streamWriter.startNextLine(x, 0);\n                }\n                if (word.length > 0) {\n                    tokenWidth += /*Utils.Round(*/ font.measureString(word, format).width /*)*/;\n                    tokenWidth += characterSpacing;\n                    var val = this.getUnicodeString(token);\n                    this.streamWriter.showText(val);\n                }\n                if (i !== blocks.length - 1) {\n                    x = tokenWidth + spaceWidth;\n                    xShift += x;\n                }\n            }\n            // Rolback current line position.\n            if (xShift > 0) {\n                this.streamWriter.startNextLine(-xShift, 0);\n            }\n        }\n        finally {\n            if (format !== null && typeof format !== 'undefined') {\n                format.firstLineIndent = firstLineIndent;\n                format.paragraphIndent = paragraphIndent;\n            }\n        }\n    };\n    /**\n     * Breakes the unicode line to the words and converts symbols to glyphs.\n     */\n    PdfGraphics.prototype.breakUnicodeLine = function (line, ttfFont, words) {\n        if (line === null) {\n            throw new Error('Argument Null Exception : line');\n        }\n        words = line.split(null);\n        var tokens = [];\n        for (var i = 0; i < words.length; i++) {\n            // Reconvert string according to unicode standard.\n            var word = words[i];\n            var token = this.convertToUnicode(word, ttfFont);\n            tokens[i] = token;\n        }\n        return { tokens: tokens, words: words };\n    };\n    /**\n     * Creates PdfString from the unicode text.\n     */\n    PdfGraphics.prototype.getUnicodeString = function (token) {\n        if (token === null) {\n            throw new Error('Argument Null Exception : token');\n        }\n        var val = new PdfString(token);\n        val.converted = true;\n        val.encode = InternalEnum.ForceEncoding.Ascii;\n        return val;\n    };\n    /**\n     * Converts to unicode format.\n     */\n    PdfGraphics.prototype.convertToUnicode = function (text, ttfFont) {\n        var token = null;\n        if (text == null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        if (ttfFont == null) {\n            throw new Error('Argument Null Exception : ttfFont');\n        }\n        if (ttfFont.fontInternal instanceof UnicodeTrueTypeFont) {\n            var ttfReader = ttfFont.fontInternal.ttfReader;\n            ttfFont.setSymbols(text);\n            token = ttfReader.convertString(text);\n            var bytes = PdfString.toUnicodeArray(token, false);\n            token = PdfString.byteToString(bytes);\n        }\n        return token;\n    };\n    /**\n     * `Justifies` the line if needed.\n     * @private\n     */\n    PdfGraphics.prototype.justifyLine = function (lineInfo, boundsWidth, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var shouldJustify = this.shouldJustify(lineInfo, boundsWidth, format);\n        var hasWordSpacing = (format != null && format.wordSpacing !== 0);\n        var symbols = StringTokenizer.spaces;\n        var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n        var wordSpace = 0;\n        if (shouldJustify) {\n            // Correct line width.\n            if (hasWordSpacing) {\n                lineWidth -= (whitespacesCount * format.wordSpacing);\n            }\n            var difference = boundsWidth - lineWidth;\n            wordSpace = difference / whitespacesCount;\n            this.pdfStreamWriter.setWordSpacing(wordSpace);\n        }\n        else {\n            // If there is justifying, but the line shouldn't be justified, restore default word spacing.\n            if (hasWordSpacing) {\n                this.pdfStreamWriter.setWordSpacing(format.wordSpacing);\n            }\n            else {\n                this.pdfStreamWriter.setWordSpacing(0);\n            }\n        }\n        return wordSpace;\n    };\n    /**\n     * `Reset` or reinitialize the current graphic value.\n     * @private\n     */\n    PdfGraphics.prototype.reset = function (size) {\n        this.canvasSize = size;\n        this.streamWriter.clear();\n        this.initialize();\n        this.initializeCoordinates();\n    };\n    /**\n     * Checks whether the line should be `justified`.\n     * @private\n     */\n    PdfGraphics.prototype.shouldJustify = function (lineInfo, boundsWidth, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var justifyStyle = (format != null && format.alignment === PdfTextAlignment.Justify);\n        var goodWidth = (boundsWidth >= 0 && lineWidth < boundsWidth);\n        var symbols = StringTokenizer.spaces;\n        var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n        var hasSpaces = (whitespacesCount > 0 && line[0] !== StringTokenizer.whiteSpace);\n        var goodLineBreakStyle = ((lineInfo.lineType & LineType.LayoutBreak) > 0) || (format && format.wordWrap === PdfWordWrapType.None);\n        var shouldJustify = (justifyStyle && goodWidth && hasSpaces && goodLineBreakStyle);\n        return shouldJustify;\n    };\n    /**\n     * Emulates `Underline, Strikeout` of the text if needed.\n     * @private\n     */\n    PdfGraphics.prototype.underlineStrikeoutText = function (pen, brush, result, font, layoutRectangle, format) {\n        if (font.underline || font.strikeout) {\n            // Calculate line width.\n            var linePen = this.createUnderlineStikeoutPen(pen, brush, font, format);\n            if (linePen != null) {\n                // Approximate line positions.\n                var vShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n                var underlineYOffset = 0;\n                underlineYOffset = layoutRectangle.y + vShift + font.metrics.getAscent(format) + 1.5 * linePen.width;\n                var strikeoutYOffset = layoutRectangle.y + vShift + font.metrics.getHeight(format) / 2 + 1.5 * linePen.width;\n                var lines = result.lines;\n                // Run through the text and draw lines.\n                for (var i = 0, len = result.lineCount; i < len; i++) {\n                    var lineInfo = lines[i];\n                    var line = lineInfo.text;\n                    var lineWidth = lineInfo.width;\n                    var hShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n                    var lineIndent = this.getLineIndent(lineInfo, format, layoutRectangle, (i === 0));\n                    hShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n                    var x1 = layoutRectangle.x + hShift;\n                    var x2 = (!this.shouldJustify(lineInfo, layoutRectangle.width, format)) ? x1 + lineWidth - lineIndent : x1 + layoutRectangle.width - lineIndent;\n                    if (font.underline) {\n                        var y = underlineYOffset;\n                        this.drawLine(linePen, x1, y, x2, y);\n                        underlineYOffset += result.lineHeight;\n                    }\n                    if (font.strikeout) {\n                        var y = strikeoutYOffset;\n                        this.drawLine(linePen, x1, y, x2, y);\n                        strikeoutYOffset += result.lineHeight;\n                    }\n                    if (this.isPointOverload && lines.length > 1) {\n                        layoutRectangle.x = 0;\n                        layoutRectangle.width = this.clientSize.width;\n                    }\n                }\n                this.isPointOverload = false;\n            }\n        }\n    };\n    /**\n     * `Creates a pen` for drawing lines in the text.\n     * @private\n     */\n    PdfGraphics.prototype.createUnderlineStikeoutPen = function (pen, brush, font, format) {\n        // Calculate line width.\n        var lineWidth = font.metrics.getSize(format) / 20;\n        var linePen = null;\n        // Create a pen fo the lines.\n        if (pen != null) {\n            linePen = new PdfPen(pen.color, lineWidth);\n        }\n        else if (brush != null) {\n            linePen = new PdfPen(brush, lineWidth);\n        }\n        return linePen;\n    };\n    /**\n     * Return `text rendering mode`.\n     * @private\n     */\n    PdfGraphics.prototype.getTextRenderingMode = function (pen, brush, format) {\n        var tm = TextRenderingMode.None;\n        if (pen != null && brush != null) {\n            tm = TextRenderingMode.FillStroke;\n        }\n        else if (pen != null) {\n            tm = TextRenderingMode.Stroke;\n        }\n        else {\n            tm = TextRenderingMode.Fill;\n        }\n        if (format != null && format.clipPath) {\n            tm |= TextRenderingMode.ClipFlag;\n        }\n        return tm;\n    };\n    /**\n     * Returns `line indent` for the line.\n     * @private\n     */\n    PdfGraphics.prototype.getLineIndent = function (lineInfo, format, layoutBounds, firstLine) {\n        var lineIndent = 0;\n        var firstParagraphLine = ((lineInfo.lineType & LineType.FirstParagraphLine) > 0);\n        if (format != null && firstParagraphLine) {\n            lineIndent = (firstLine) ? format.firstLineIndent : format.paragraphIndent;\n            lineIndent = (layoutBounds.width > 0) ? Math.min(layoutBounds.width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    /**\n     * Calculates shift value if the line is `horizontaly aligned`.\n     * @private\n     */\n    PdfGraphics.prototype.getHorizontalAlignShift = function (lineWidth, boundsWidth, format) {\n        var shift = 0;\n        if (boundsWidth >= 0 && format != null && format.alignment !== PdfTextAlignment.Left) {\n            switch (format.alignment) {\n                case PdfTextAlignment.Center:\n                    shift = (boundsWidth - lineWidth) / 2;\n                    break;\n                case PdfTextAlignment.Right:\n                    shift = boundsWidth - lineWidth;\n                    break;\n            }\n        }\n        return shift;\n    };\n    /**\n     * Gets or sets the value that indicates `text direction` mode.\n     * @private\n     */\n    PdfGraphics.prototype.rightToLeft = function (format) {\n        var rtl = (format !== null && typeof format !== 'undefined' && format.rightToLeft);\n        if (format !== null && typeof format !== 'undefined') {\n            if (format.textDirection !== PdfTextDirection.None && typeof format.textDirection !== 'undefined') {\n                rtl = true;\n            }\n        }\n        return rtl;\n    };\n    PdfGraphics.prototype.stateControl = function (pen, brush, font, format) {\n        if (typeof format === 'undefined') {\n            this.stateControl(pen, brush, font, null);\n        }\n        else {\n            if (brush instanceof PdfGradientBrush) {\n                this.bCSInitialized = false;\n                brush.colorSpace = this.colorSpace;\n            }\n            if (brush instanceof PdfTilingBrush) {\n                this.bCSInitialized = false;\n                brush.graphics.colorSpace = this.colorSpace;\n            }\n            var saveState = false;\n            if (brush !== null) {\n                var solidBrush = brush;\n                if (typeof this.pageLayer !== 'undefined' && this.pageLayer != null) {\n                    if (this.colorSpaceChanged === false) {\n                        this.lastDocumentCS = this.pageLayer.page.document.colorSpace;\n                        this.lastGraphicsCS = this.pageLayer.page.graphics.colorSpace;\n                        this.colorSpace = this.pageLayer.page.document.colorSpace;\n                        this.currentColorSpace = this.pageLayer.page.document.colorSpace;\n                        this.colorSpaceChanged = true;\n                    }\n                }\n                this.initCurrentColorSpace(this.currentColorSpace);\n            }\n            else if (pen != null) {\n                var pdfPen = pen;\n                if (typeof this.pageLayer !== 'undefined' && this.pageLayer != null) {\n                    this.colorSpace = this.pageLayer.page.document.colorSpace;\n                    this.currentColorSpace = this.pageLayer.page.document.colorSpace;\n                }\n                this.initCurrentColorSpace(this.currentColorSpace);\n            }\n            this.penControl(pen, saveState);\n            this.brushControl(brush, saveState);\n            this.fontControl(font, format, saveState);\n        }\n    };\n    /**\n     * Initializes the `current color space`.\n     * @private\n     */\n    PdfGraphics.prototype.initCurrentColorSpace = function (colorspace) {\n        var re = this.getResources.getResources();\n        if (!this.bCSInitialized) {\n            if (this.currentColorSpace != PdfColorSpace.GrayScale) {\n                this.pdfStreamWriter.setColorSpace('Device' + this.currentColorSpaces[this.currentColorSpace], true);\n                this.pdfStreamWriter.setColorSpace('Device' + this.currentColorSpaces[this.currentColorSpace], false);\n                this.bCSInitialized = true;\n            }\n            else {\n                this.pdfStreamWriter.setColorSpace('DeviceGray', true);\n                this.pdfStreamWriter.setColorSpace('DeviceGray', false);\n                this.bCSInitialized = true;\n            }\n        }\n    };\n    /**\n     * Controls the `pen state`.\n     * @private\n     */\n    PdfGraphics.prototype.penControl = function (pen, saveState) {\n        if (pen != null) {\n            this.currentPen = pen;\n            pen.monitorChanges(this.currentPen, this.pdfStreamWriter, this.getResources, saveState, this.colorSpace, this.matrix.clone());\n            this.currentPen = pen.clone();\n        }\n    };\n    /**\n     * Controls the `brush state`.\n     * @private\n     */\n    PdfGraphics.prototype.brushControl = function (brush, saveState) {\n        if (brush != null && typeof brush !== 'undefined') {\n            var b = brush.clone();\n            var lgb = b;\n            if (lgb !== null && typeof lgb !== 'undefined' && !(brush instanceof PdfSolidBrush) && !(brush instanceof PdfTilingBrush)) {\n                var m = lgb.matrix;\n                var matrix = this.matrix.clone();\n                if ((m != null)) {\n                    m.multiply(matrix);\n                    matrix = m;\n                }\n                lgb.matrix = matrix;\n            }\n            this.currentBrush = lgb;\n            var br = (brush);\n            b.monitorChanges(this.currentBrush, this.pdfStreamWriter, this.getResources, saveState, this.colorSpace);\n            this.currentBrush = brush;\n            brush = null;\n        }\n    };\n    /**\n     * Saves the font and other `font settings`.\n     * @private\n     */\n    PdfGraphics.prototype.fontControl = function (font, format, saveState) {\n        if (font != null) {\n            var curSubSuper = (format != null) ? format.subSuperScript : PdfSubSuperScript.None;\n            var prevSubSuper = (this.currentStringFormat != null) ? this.currentStringFormat.subSuperScript : PdfSubSuperScript.None;\n            if (saveState || font !== this.currentFont || curSubSuper !== prevSubSuper) {\n                var resources = this.getResources.getResources();\n                this.currentFont = font;\n                this.currentStringFormat = format;\n                var size = font.metrics.getSize(format);\n                this.isEmfTextScaled = false;\n                var fontName = resources.getName(font);\n                this.pdfStreamWriter.setFont(font, fontName, size);\n            }\n        }\n    };\n    PdfGraphics.prototype.setTransparency = function (arg1, arg2, arg3) {\n        if (typeof arg2 === 'undefined') {\n            this.istransparencySet = true;\n            this.setTransparency(arg1, arg1, PdfBlendMode.Normal);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            this.setTransparency(arg1, arg2, PdfBlendMode.Normal);\n        }\n        else {\n            if (this.trasparencies == null) {\n                this.trasparencies = new TemporaryDictionary();\n            }\n            var transp = null;\n            var td = new TransparencyData(arg1, arg2, arg3);\n            if (this.trasparencies.containsKey(td)) {\n                transp = this.trasparencies.getValue(td);\n            }\n            if (transp == null) {\n                transp = new PdfTransparency(arg1, arg2, arg3);\n                this.trasparencies.setValue(td, transp);\n            }\n            var resources = this.getResources.getResources();\n            var name_3 = resources.getName(transp);\n            var sw = this.streamWriter;\n            sw.setGraphicsState(name_3);\n        }\n    };\n    PdfGraphics.prototype.clipTranslateMargins = function (x, y, left, top, right, bottom) {\n        if (x instanceof RectangleF && typeof y === 'undefined') {\n            this.clipBounds = x;\n            this.pdfStreamWriter.writeComment('Clip margins.');\n            this.pdfStreamWriter.appendRectangle(x);\n            this.pdfStreamWriter.closePath();\n            this.pdfStreamWriter.clipPath(false);\n            this.pdfStreamWriter.writeComment('Translate co-ordinate system.');\n            this.translateTransform(x.x, x.y);\n        }\n        else if (typeof x === 'number') {\n            var clipArea = new RectangleF(left, top, this.size.width - left - right, this.size.height - top - bottom);\n            this.clipBounds = clipArea;\n            this.pdfStreamWriter.writeComment(\"Clip margins.\");\n            this.pdfStreamWriter.appendRectangle(clipArea);\n            this.pdfStreamWriter.closePath();\n            this.pdfStreamWriter.clipPath(false);\n            this.pdfStreamWriter.writeComment(\"Translate co-ordinate system.\");\n            this.translateTransform(x, y);\n        }\n    };\n    /**\n     * `Updates y` co-ordinate.\n     * @private\n     */\n    PdfGraphics.prototype.updateY = function (y) {\n        return -y;\n    };\n    /**\n     * Used to `translate the transformation`.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // set pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // set translate transform\n     * page1.graphics.translateTransform(100, 100);\n     * //\n     * // draw the rectangle after applying translate transform\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param offsetX The x-coordinate of the translation.\n     * @param offsetY The y-coordinate of the translation.\n     */\n    PdfGraphics.prototype.translateTransform = function (offsetX, offsetY) {\n        var matrix = new PdfTransformationMatrix();\n        this.getTranslateTransform(offsetX, offsetY, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Translates` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getTranslateTransform = function (x, y, input) {\n        input.translate(x, this.updateY(y));\n        return input;\n    };\n    /**\n     * Applies the specified `scaling operation` to the transformation matrix of this Graphics by prepending it to the object's transformation matrix.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // apply scaling trasformation\n     * page1.graphics.scaleTransform(1.5, 2);\n     * //\n     * // draw the rectangle after applying scaling transform\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param scaleX Scale factor in the x direction.\n     * @param scaleY Scale factor in the y direction.\n     */\n    PdfGraphics.prototype.scaleTransform = function (scaleX, scaleY) {\n        var matrix = new PdfTransformationMatrix();\n        this.getScaleTransform(scaleX, scaleY, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Scales` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getScaleTransform = function (x, y, input) {\n        if (input == null) {\n            input = new PdfTransformationMatrix();\n        }\n        input.scale(x, y);\n        return input;\n    };\n    /**\n     * Applies the specified `rotation` to the transformation matrix of this Graphics.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // set RotateTransform with 25 degree of angle\n     * page1.graphics.rotateTransform(25);\n     * //\n     * // draw the rectangle after RotateTransformation\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param angle Angle of rotation in degrees.\n     */\n    PdfGraphics.prototype.rotateTransform = function (angle) {\n        var matrix = new PdfTransformationMatrix();\n        this.getRotateTransform(angle, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Initializes coordinate system`.\n     * @private\n     */\n    PdfGraphics.prototype.initializeCoordinates = function () {\n        // Matrix equation: TM(T-1)=M', where T=[1 0 0 -1 0 h]\n        this.pdfStreamWriter.writeComment('Change co-ordinate system to left/top.');\n        // Translate co-ordinates only, don't flip.\n        if (this.mediaBoxUpperRightBound !== -(this.size.height)) {\n            if (this.cropBox == null) {\n                if (this.mediaBoxUpperRightBound === this.size.height || this.mediaBoxUpperRightBound === 0) {\n                    this.translateTransform(0, this.updateY(this.size.height));\n                }\n                else {\n                    this.translateTransform(0, this.updateY(this.mediaBoxUpperRightBound));\n                }\n            }\n        }\n    };\n    /**\n     * `Rotates` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getRotateTransform = function (angle, input) {\n        if (input == null || typeof input === 'undefined') {\n            input = new PdfTransformationMatrix();\n        }\n        input.rotate(this.updateY(angle));\n        return input;\n    };\n    /**\n     * `Saves` the current state of this Graphics and identifies the saved state with a GraphicsState.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // save the graphics state\n     * let state1 : PdfGraphicsState = page1.graphics.save();\n     * //\n     * page1.graphics.scaleTransform(1.5, 2);\n     * // draw the rectangle\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // restore the graphics state\n     * page1.graphics.restore(state1);\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.save = function () {\n        var state = new PdfGraphicsState(this, this.matrix.clone());\n        state.brush = this.currentBrush;\n        state.pen = this.currentPen;\n        state.font = this.currentFont;\n        state.colorSpace = this.currentColorSpace;\n        state.characterSpacing = this.previousCharacterSpacing;\n        state.wordSpacing = this.previousWordSpacing;\n        state.textScaling = this.previousTextScaling;\n        state.textRenderingMode = this.previousTextRenderingMode;\n        this.graphicsState.push(state);\n        this.pdfStreamWriter.saveGraphicsState();\n        return state;\n    };\n    PdfGraphics.prototype.restore = function (state) {\n        if (typeof state === 'undefined') {\n            if (this.graphicsState.length > 0) {\n                this.doRestoreState();\n            }\n        }\n        else {\n            if (this.graphicsState.indexOf(state) !== -1) {\n                for (;;) {\n                    if (this.graphicsState.length === 0) {\n                        break;\n                    }\n                    var popState = this.doRestoreState();\n                    if (popState === state) {\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * `Restores graphics state`.\n     * @private\n     */\n    PdfGraphics.prototype.doRestoreState = function () {\n        var state = this.graphicsState.pop();\n        this.transformationMatrix = state.matrix;\n        this.currentBrush = state.brush;\n        this.currentPen = state.pen;\n        this.currentFont = state.font;\n        this.currentColorSpace = state.colorSpace;\n        this.previousCharacterSpacing = state.characterSpacing;\n        this.previousWordSpacing = state.wordSpacing;\n        this.previousTextScaling = state.textScaling;\n        this.previousTextRenderingMode = state.textRenderingMode;\n        this.pdfStreamWriter.restoreGraphicsState();\n        return state;\n    };\n    /**\n     * `Draws the specified path`, using its original physical size, at the location specified by a coordinate pair.\n     * ```typescript\n     * // create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // add a page to the document.\n     * let page1 : PdfPage = document.pages.add();\n     * //Create new PDF path.\n     * let path : PdfPath = new PdfPath();\n     * //Add line path points.\n     * path.addLine(new PointF(10, 100), new PointF(10, 200));\n     * path.addLine(new PointF(100, 100), new PointF(100, 200));\n     * path.addLine(new PointF(100, 200), new PointF(55, 150));\n     * // set pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(255, 0, 0));\n     * // set brush\n     * let brush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the path\n     * page1.graphics.drawPath(pen, brush, path);\n     * //\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param pen Color of the text.\n     * @param brush Color of the text.\n     * @param path Draw path.\n     */\n    PdfGraphics.prototype.drawPath = function (pen, brush, path) {\n        this._drawPath(pen, brush, path.pathPoints, path.pathTypes, path.fillMode);\n    };\n    PdfGraphics.prototype._drawPath = function (pen, brush, pathPoints, pathTypes, fillMode) {\n        if (brush instanceof PdfTilingBrush) {\n            this.bCSInitialized = false;\n            brush.graphics.colorSpace = this.colorSpace;\n        }\n        else if (brush instanceof PdfGradientBrush) {\n            this.bCSInitialized = false;\n            brush.colorSpace = this.colorSpace;\n        }\n        this.stateControl(pen, brush, null);\n        this.buildUpPath(pathPoints, pathTypes);\n        this.drawPathHelper(pen, brush, fillMode, false);\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PdfGraphics.prototype.drawArc = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        if (arg2 instanceof RectangleF) {\n            this.drawArc(arg1, arg2.x, arg2.y, arg2.width, arg2.height, arg3, arg4);\n        }\n        else {\n            if ((arg7 !== 0)) {\n                this.stateControl(arg1, null, null);\n                this.constructArcPath(arg2, arg3, (arg2 + arg4), (arg3 + arg5), arg6, arg7);\n                this.drawPathHelper(arg1, null, false);\n            }\n        }\n    };\n    /**\n     * Builds up the path.\n     * @private\n     */\n    PdfGraphics.prototype.buildUpPath = function (arg1, arg2) {\n        var cnt = arg1.length;\n        for (var i = 0; i < cnt; ++i) {\n            var typeValue = 0;\n            var point = arg1[i];\n            switch (((arg2[i] & (PdfGraphics.pathTypesValuesMask)))) {\n                case PathPointType.Start:\n                    this.pdfStreamWriter.beginPath(point.x, point.y);\n                    break;\n                case PathPointType.Bezier3:\n                    var p2 = new PointF(0, 0);\n                    var p3 = new PointF(0, 0);\n                    var result1 = this.getBezierPoints(arg1, arg2, i, p2, p3);\n                    this.pdfStreamWriter.appendBezierSegment(point, result1.p2, result1.p3);\n                    i = result1.i;\n                    break;\n                case PathPointType.Line:\n                    this.pdfStreamWriter.appendLineSegment(point);\n                    break;\n                default:\n                    throw new Error('ArithmeticException - Incorrect path formation.');\n            }\n            typeValue = arg2[i];\n            this.checkFlags(typeValue);\n        }\n    };\n    /**\n     * Gets the bezier points from respective arrays.\n     * @private\n     */\n    /* tslint:disable-next-line:max-line-length */\n    PdfGraphics.prototype.getBezierPoints = function (points, types, i, p2, p3) {\n        var errorMsg = 'Malforming path.';\n        ++i;\n        if ((((types[i] & PdfGraphics.pathTypesValuesMask)) === PathPointType.Bezier3)) {\n            p2 = points[i];\n            ++i;\n            if ((((types[i] & PdfGraphics.pathTypesValuesMask)) === PathPointType.Bezier3)) {\n                p3 = points[i];\n            }\n            else {\n                throw new Error('ArgumentException : errorMsg');\n            }\n        }\n        else {\n            throw new Error('ArgumentException : errorMsg');\n        }\n        return { i: i, p2: p2, p3: p3 };\n    };\n    /**\n     * Checks path point type flags.\n     * @private\n     */\n    PdfGraphics.prototype.checkFlags = function (type) {\n        if ((((type & (PathPointType.CloseSubpath))) === PathPointType.CloseSubpath)) {\n            this.pdfStreamWriter.closePath();\n        }\n    };\n    /**\n     * Constructs the arc path using Bezier curves.\n     * @private\n     */\n    PdfGraphics.prototype.constructArcPath = function (x1, y1, x2, y2, startAng, sweepAngle) {\n        var points = this.getBezierArc(x1, y1, x2, y2, startAng, sweepAngle);\n        if ((points.length === 0)) {\n            return;\n        }\n        var pt = [points[0], points[1], points[2], points[3], points[4], points[5], points[6], points[7]];\n        this.pdfStreamWriter.beginPath(pt[0], pt[1]);\n        var i = 0;\n        for (i = 0; i < points.length; i = i + 8) {\n            pt = [points[i], points[i + 1], points[i + 2], points[i + 3], points[i + 4], points[i + 5], points[i + 6], points[i + 7]];\n            this.pdfStreamWriter.appendBezierSegment(pt[2], pt[3], pt[4], pt[5], pt[6], pt[7]);\n        }\n    };\n    /**\n     * Gets the bezier points for arc constructing.\n     * @private\n     */\n    PdfGraphics.prototype.getBezierArc = function (numX1, numY1, numX2, numY2, s1, e1) {\n        if ((numX1 > numX2)) {\n            var tmp = void 0;\n            tmp = numX1;\n            numX1 = numX2;\n            numX2 = tmp;\n        }\n        if ((numY2 > numY1)) {\n            var tmp = void 0;\n            tmp = numY1;\n            numY1 = numY2;\n            numY2 = tmp;\n        }\n        var fragAngle1;\n        var numFragments;\n        if ((Math.abs(e1) <= 90)) {\n            fragAngle1 = e1;\n            numFragments = 1;\n        }\n        else {\n            numFragments = (Math.ceil((Math.abs(e1) / 90)));\n            fragAngle1 = (e1 / numFragments);\n        }\n        var xcen = ((numX1 + numX2) / 2);\n        var ycen = ((numY1 + numY2) / 2);\n        var rx = ((numX2 - numX1) / 2);\n        var ry = ((numY2 - numY1) / 2);\n        var halfAng = ((fragAngle1 * (Math.PI / 360)));\n        var kappa = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(halfAng)) / Math.sin(halfAng)));\n        var pointsList = [];\n        for (var i = 0; (i < numFragments); i++) {\n            var thetaValue0 = (((s1 + (i * fragAngle1)) * (Math.PI / 180)));\n            var thetaValue1 = (((s1 + ((i + 1) * fragAngle1)) * (Math.PI / 180)));\n            var cos0 = (Math.cos(thetaValue0));\n            var cos1 = (Math.cos(thetaValue1));\n            var sin0 = (Math.sin(thetaValue0));\n            var sin1 = (Math.sin(thetaValue1));\n            if ((fragAngle1 > 0)) {\n                /* tslint:disable-next-line:max-line-length */\n                pointsList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 - (kappa * sin0)))), (ycen - (ry * (sin0 + (kappa * cos0)))), (xcen + (rx * (cos1 + (kappa * sin1)))), (ycen - (ry * (sin1 - (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n            else {\n                /* tslint:disable-next-line:max-line-length */\n                pointsList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 + (kappa * sin0)))), (ycen - (ry * (sin0 - (kappa * cos0)))), (xcen + (rx * (cos1 - (kappa * sin1)))), (ycen - (ry * (sin1 + (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n        }\n        return pointsList;\n    };\n    /* tslint:disable */\n    // Constants\n    /**\n     * Specifies the mask of `path type values`.\n     * @private\n     */\n    PdfGraphics.pathTypesValuesMask = 0xf;\n    /**\n     * Checks whether the object is `transparencyObject`.\n     * @hidden\n     * @private\n     */\n    PdfGraphics.transparencyObject = false;\n    return PdfGraphics;\n}());\nexport { PdfGraphics };\n/**\n * `GetResourceEventHandler` class is alternate for event handlers and delegates.\n * @private\n * @hidden\n */\nvar GetResourceEventHandler = /** @class */ (function () {\n    /**\n     * Initialize instance of `GetResourceEventHandler` class.\n     * Alternate for event handlers and delegates.\n     * @private\n     */\n    function GetResourceEventHandler(sender) {\n        this.sender = sender;\n    }\n    /**\n     * Return the instance of `PdfResources` class.\n     * @private\n     */\n    GetResourceEventHandler.prototype.getResources = function () {\n        return this.sender.getResources();\n    };\n    return GetResourceEventHandler;\n}());\nexport { GetResourceEventHandler };\nvar PdfGraphicsState = /** @class */ (function () {\n    function PdfGraphicsState(graphics, matrix) {\n        /**\n         * Stores `previous rendering mode`.\n         * @default TextRenderingMode.Fill\n         * @private\n         */\n        this.internalTextRenderingMode = TextRenderingMode.Fill;\n        /**\n         * `Previous character spacing` value or 0.\n         * @default 0.0\n         * @private\n         */\n        this.internalCharacterSpacing = 0.0;\n        /**\n         * `Previous word spacing` value or 0.\n         * @default 0.0\n         * @private\n         */\n        this.internalWordSpacing = 0.0;\n        /**\n         * The previously used `text scaling value`.\n         * @default 100.0\n         * @private\n         */\n        this.internalTextScaling = 100.0;\n        /**\n         * `Current color space`.\n         * @default PdfColorSpace.Rgb\n         * @private\n         */\n        this.pdfColorSpace = PdfColorSpace.Rgb;\n        if (typeof graphics !== 'undefined') {\n            this.pdfGraphics = graphics;\n            var elements_1 = [];\n            graphics.matrix.matrix.elements.forEach(function (element) {\n                elements_1.push(element);\n            });\n            this.transformationMatrix = new PdfTransformationMatrix();\n            this.transformationMatrix.matrix = new Matrix(elements_1);\n        }\n    }\n    Object.defineProperty(PdfGraphicsState.prototype, \"graphics\", {\n        // Properties\n        /**\n         * Gets the parent `graphics object`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"matrix\", {\n        /**\n         * Gets the `current matrix`.\n         * @private\n         */\n        get: function () {\n            return this.transformationMatrix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"characterSpacing\", {\n        /**\n         * Gets or sets the `current character spacing`.\n         * @private\n         */\n        get: function () {\n            return this.internalCharacterSpacing;\n        },\n        set: function (value) {\n            this.internalCharacterSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"wordSpacing\", {\n        /**\n         * Gets or sets the `word spacing` value.\n         * @private\n         */\n        get: function () {\n            return this.internalWordSpacing;\n        },\n        set: function (value) {\n            this.internalWordSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"textScaling\", {\n        /**\n         * Gets or sets the `text scaling` value.\n         * @private\n         */\n        get: function () {\n            return this.internalTextScaling;\n        },\n        set: function (value) {\n            this.internalTextScaling = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"pen\", {\n        /**\n         * Gets or sets the `current pen` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfPen;\n        },\n        set: function (value) {\n            this.pdfPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"brush\", {\n        /**\n         * Gets or sets the `brush`.\n         * @private\n         */\n        get: function () {\n            return this.pdfBrush;\n        },\n        set: function (value) {\n            this.pdfBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"font\", {\n        /**\n         * Gets or sets the `current font` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfFont;\n        },\n        set: function (value) {\n            this.pdfFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the `current color space` value.\n         * @private\n         */\n        get: function () {\n            return this.pdfColorSpace;\n        },\n        set: function (value) {\n            this.pdfColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"textRenderingMode\", {\n        /**\n         * Gets or sets the `text rendering mode`.\n         * @private\n         */\n        get: function () {\n            return this.internalTextRenderingMode;\n        },\n        set: function (value) {\n            this.internalTextRenderingMode = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGraphicsState;\n}());\nexport { PdfGraphicsState };\nvar TransparencyData = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `TransparencyData` class.\n     * @private\n     */\n    function TransparencyData(alphaPen, alphaBrush, blendMode) {\n        this.alphaPen = alphaPen;\n        this.alphaBrush = alphaBrush;\n        this.blendMode = blendMode;\n    }\n    return TransparencyData;\n}());\n/* tslint:enable */\n","import { PdfStream } from './../primitives/pdf-stream';\nimport { PdfGraphics, GetResourceEventHandler } from './../graphics/pdf-graphics';\nimport { PdfPageLayerCollection } from './pdf-page-layer-collection';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\n * The `PdfPageLayer` used to create layers in PDF document.\n * @private\n */\nvar PdfPageLayer = /** @class */ (function () {\n    function PdfPageLayer(page, streamClipPageTemplates) {\n        // private bSaved : boolean;\n        /**\n         * Local Variable to store the `color space` of the document.\n         * @private\n         */\n        this.pdfColorSpace = PdfColorSpace.Rgb;\n        /**\n         * Local Variable to set `visibility`.\n         * @default true\n         * @private\n         */\n        this.isVisible = true;\n        /**\n         * Indicates if `Sublayer` is present.\n         * @default false\n         * @private\n         */\n        this.sublayer = false;\n        /**\n         * Local variable to store `length` of the graphics.\n         * @default 0\n         * @private\n         */\n        this.contentLength = 0;\n        /**\n         * Instance for `PdfDictionaryProperties` Class.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        if (page === null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        this.pdfPage = page;\n        this.clipPageTemplates = true;\n        if (typeof streamClipPageTemplates === 'undefined') {\n            this.content = new PdfStream();\n        }\n        else if (streamClipPageTemplates instanceof PdfStream || streamClipPageTemplates === null) {\n            if (streamClipPageTemplates === null) {\n                throw new Error('ArgumentNullException:stream');\n            }\n            this.content = streamClipPageTemplates;\n        }\n        else {\n            this.content = new PdfStream();\n            this.clipPageTemplates = streamClipPageTemplates;\n        }\n    }\n    Object.defineProperty(PdfPageLayer.prototype, \"colorSpace\", {\n        // Properties\n        /**\n         * Get or set the `color space`.\n         * @private\n         */\n        get: function () {\n            return this.pdfColorSpace;\n        },\n        set: function (value) {\n            this.pdfColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"page\", {\n        /**\n         * Gets parent `page` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"layerId\", {\n        /**\n         * Gets and Sets the `id of the layer`.\n         * @private\n         */\n        get: function () {\n            return this.layerid;\n        },\n        set: function (value) {\n            this.layerid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"name\", {\n        /**\n         * Gets or sets the `name` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.layerName;\n        },\n        set: function (value) {\n            this.layerName = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"visible\", {\n        /**\n         * Gets or sets the `visibility` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.isVisible;\n        },\n        set: function (value) {\n            this.isVisible = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"graphics\", {\n        /**\n         * Gets `Graphics` context of the layer, used to draw various graphical content on layer.\n         * @private\n         */\n        get: function () {\n            if ((this.pdfGraphics == null)) {\n                this.initializeGraphics(this.page);\n            }\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"layers\", {\n        /**\n         * Gets the collection of `PdfPageLayer`, this collection handle by the class 'PdfPageLayerCollection'.\n         * @private\n         */\n        get: function () {\n            if (this.layer == null) {\n                this.layer = new PdfPageLayerCollection(this.page);\n                this.layer.sublayer = true;\n                return this.layer;\n            }\n            else {\n                return this.layer;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Adds` a new PDF Page layer.\n     * @private\n     */\n    PdfPageLayer.prototype.add = function () {\n        var layer = new PdfPageLayer(this.pdfPage);\n        layer.name = '';\n        return layer;\n    };\n    /**\n     * Returns a value indicating the `sign` of a single-precision floating-point number.\n     * @private\n     */\n    PdfPageLayer.prototype.sign = function (number) {\n        if (number === 0) {\n            return 0;\n        }\n        else if (number > 0) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    };\n    /**\n     * `Initializes Graphics context` of the layer.\n     * @private\n     */\n    PdfPageLayer.prototype.initializeGraphics = function (page) {\n        var oPage = page;\n        var gr = new GetResourceEventHandler(this.page);\n        var cropBox = null;\n        this.pdfGraphics = new PdfGraphics(page.size, gr, this.content);\n        this.pdfGraphics.mediaBoxUpperRightBound = 0;\n        if (oPage != null) {\n            var sc = oPage.section.parent;\n            if (sc != null) {\n                this.pdfGraphics.colorSpace = sc.document.colorSpace;\n                this.colorSpace = sc.document.colorSpace;\n            }\n        }\n        // Transform coordinates to the left/top and activate margins.\n        var isSame = (this.sign(page.origin.y) === this.sign(page.origin.x));\n        // if (page != null) {\n        if (page.origin.x >= 0 && page.origin.y >= 0 || !(isSame)) {\n            this.pdfGraphics.initializeCoordinates();\n        }\n        else {\n            // this.m_graphics.InitializeCoordinates(page);\n        }\n        var clipRect = oPage.section.getActualBounds(oPage, true);\n        var margins = oPage.section.pageSettings.margins;\n        if (this.clipPageTemplates) {\n            if (page.origin.x >= 0 && page.origin.y >= 0) {\n                this.pdfGraphics.clipTranslateMargins(clipRect);\n            }\n        }\n        else {\n            this.graphics.clipTranslateMargins(clipRect.x, clipRect.y, margins.left, margins.top, margins.right, margins.bottom);\n        }\n        this.pdfGraphics.setLayer(this);\n        // this.bSaved = false;\n    };\n    Object.defineProperty(PdfPageLayer.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPageLayer;\n}());\nexport { PdfPageLayer };\n","/**\n * PdfCollection.ts class for EJ2-PDF\n * The class used to handle the collection of PdF objects.\n */\nvar PdfCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `Collection` class.\n     * @private\n     */\n    function PdfCollection() {\n        //\n    }\n    Object.defineProperty(PdfCollection.prototype, \"count\", {\n        // Properties\n        /**\n         * Gets the `Count` of stored objects.\n         * @private\n         */\n        get: function () {\n            if (typeof this.collection === 'undefined') {\n                this.collection = [];\n            }\n            return this.collection.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCollection.prototype, \"list\", {\n        /**\n         * Gets the `list` of stored objects.\n         * @private\n         */\n        get: function () {\n            if (typeof this.collection === 'undefined') {\n                this.collection = [];\n            }\n            return this.collection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCollection;\n}());\nexport { PdfCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfPageLayerCollection.ts class for EJ2-PDF\n */\nimport { PdfPageBase } from './pdf-page-base';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfPageLayer } from './pdf-page-layer';\nimport { PdfCollection } from './../general/pdf-collection';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfStream } from './../primitives/pdf-stream';\n/**\n * The class provides methods and properties to handle the collections of `PdfPageLayer`.\n */\nvar PdfPageLayerCollection = /** @class */ (function (_super) {\n    __extends(PdfPageLayerCollection, _super);\n    function PdfPageLayerCollection(page) {\n        var _this = _super.call(this) || this;\n        /**\n         * Stores the `number of first level layers` in the document.\n         * @default 0\n         * @private\n         */\n        _this.parentLayerCount = 0;\n        /**\n         * Indicates if `Sublayer` is present.\n         * @default false\n         * @private\n         */\n        _this.sublayer = false;\n        /**\n         * Stores the `optional content dictionary`.\n         * @private\n         */\n        _this.optionalContent = new PdfDictionary();\n        if (page instanceof PdfPageBase) {\n            // if (page == null) {\n            //     throw new Error('ArgumentNullException:page');\n            // }\n            _this.page = page;\n            var lPage = page;\n            // if (lPage != null) {\n            _this.parseLayers(lPage);\n            // }\n        }\n        return _this;\n    }\n    PdfPageLayerCollection.prototype.items = function (index, value) {\n        if (typeof index === 'number' && typeof value === 'undefined') {\n            var obj = this.list[index];\n            return obj;\n        }\n        else {\n            if (value == null) {\n                throw new Error('ArgumentNullException: layer');\n            }\n            if (value.page !== this.page) {\n                throw new Error('ArgumentException: The layer belongs to another page');\n            }\n            // // Add/remove the layer.\n            // let layer : PdfPageLayer = this.items(index);\n            // if (layer != null) {\n            //     this.RemoveLayer(layer);\n            // }\n            // this.List[index] = value;\n            // this.InsertLayer(index, value);\n        }\n    };\n    PdfPageLayerCollection.prototype.add = function (firstArgument, secondArgument) {\n        if (typeof firstArgument === 'undefined') {\n            var layer = new PdfPageLayer(this.page);\n            layer.name = '';\n            this.add(layer);\n            return layer;\n        }\n        else if (firstArgument instanceof PdfPageLayer) {\n            // if (layer == null)\n            //     throw new ArgumentNullException(\"layer\");\n            // if (layer.Page != m_page)\n            //     throw new ArgumentException(\"The layer belongs to another page\");\n            var index = this.list.push(firstArgument);\n            // Register layer.\n            this.addLayer(index, firstArgument);\n            return index;\n        }\n        else {\n            return 0;\n        }\n    };\n    /**\n     * Registers `layer` at the page.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.addLayer = function (index, layer) {\n        var reference = new PdfReferenceHolder(layer);\n        this.page.contents.add(reference);\n    };\n    // private RemoveLayer(layer : PdfPageLayer) : void {\n    //     if (layer == null) {\n    //         throw new Error('ArgumentNullException:layer');\n    //     }\n    //     let reference : PdfReferenceHolder = new PdfReferenceHolder(layer);\n    //     if (this.page != null) {\n    //         this.page.Contents.Remove(reference);\n    //     }\n    // }\n    /**\n     * Inserts `PdfPageLayer` into the collection at specified index.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.insert = function (index, layer) {\n        // if (index < 0)\n        //     throw new ArgumentOutOfRangeException(\"index\", \"Value can not be less 0\");\n        // if (layer == null)\n        //     throw new ArgumentNullException(\"layer\");\n        // if (layer.Page != m_page)\n        //     throw new ArgumentException(\"The layer belongs to another page\");\n        var list = [];\n        var length = this.list.length;\n        for (var i = index; i < length; i++) {\n            list.push(this.list.pop());\n        }\n        this.list.push(layer);\n        for (var i = 0; i < list.length; i++) {\n            this.list.push(list[i]);\n        }\n        // Register layer.\n        this.insertLayer(index, layer);\n    };\n    /**\n     * Registers layer at the page.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.insertLayer = function (index, layer) {\n        if (layer == null) {\n            throw new Error('ArgumentNullException:layer');\n        }\n        var reference = new PdfReferenceHolder(layer);\n        this.page.contents.insert(index, reference);\n    };\n    // tslint:disable\n    /**\n     * `Parses the layers`.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.parseLayers = function (loadedPage) {\n        // if (loadedPage == null) {\n        //     throw new Error('ArgumentNullException:loadedPage');\n        // }\n        var contents = this.page.contents;\n        var resource = this.page.getResources();\n        var crossTable = null;\n        var ocproperties = null;\n        var propertie = null;\n        var isLayerAdded = false;\n        // if (loadedPage instanceof PdfPage) {\n        crossTable = loadedPage.crossTable;\n        // } else {\n        //     crossTable = (loadedPage as PdfLoadedPage).CrossTable;\n        //     Propertie = PdfCrossTable.Dereference(Resource[DictionaryProperties.Properties]) as PdfDictionary;\n        //     ocproperties = PdfCrossTable.Dereference((loadedPage as PdfLoadedPage).\n        //     Document.Catalog[DictionaryProperties.OCProperties]) as PdfDictionary;\n        // }\n        var saveStream = new PdfStream();\n        var restoreStream = new PdfStream();\n        var saveState = 'q';\n        var newLine = '\\n';\n        var restoreState = 'Q';\n        // for (let index : number = 0; index < contents.Items.length; index++) {\n        //     let obj : IPdfPrimitive = contents[index];\n        //     let stream : PdfStream = crossTable.GetObject(obj) as PdfStream;\n        //     if (stream == null)\n        //         throw new PdfDocumentException(\"Invalid contents array.\");\n        //     // if (stream.Compress)\n        //     {\n        //         if (!loadedPage.Imported)\n        //             stream.Decompress();\n        //     }\n        //     byte[] contentId = stream.Data;\n        //     string str = PdfString.ByteToString(contentId);\n        //     if (!loadedPage.Imported && (contents.Count == 1) && ((stream.Data[stream.Data.Length - 2] ==\n        //     RestoreState) || (stream.Data[stream.Data.Length - 1] == RestoreState)))\n        //     {\n        //         byte[] content = stream.Data;\n        //         byte[] data = new byte[content.Length + 4];\n        //         data[0] = SaveState;\n        //         data[1] = NewLine;\n        //         content.CopyTo(data, 2);\n        //         data[data.Length - 2] = NewLine;\n        //         data[data.Length - 1] = RestoreState;\n        //         stream.Data = data;\n        //     }\n        //     if (ocproperties != null)\n        //     {\n        //         if (Propertie != null)\n        //         {\n        //             foreach (KeyValuePair<PdfName, IPdfPrimitive> prop in Propertie.Items)\n        //             {\n        //                 String Key = prop.Key.ToString();\n        //                 PdfReferenceHolder refh = prop.Value as PdfReferenceHolder;\n        //                 PdfDictionary Dict = null;\n        //                 if (refh != null)\n        //                 {\n        //                     Dict = refh.Object as PdfDictionary;\n        //                 }\n        //                 else\n        //                 {\n        //                     Dict = prop.Value as PdfDictionary;\n        //                 }\n        //                 PdfDictionary m_usage = PdfCrossTable.Dereference(Dict[DictionaryProperties.Usage]) as PdfDictionary;\n        //                 if (m_usage != null)\n        //                 {\n        //                     if (str.Contains(Key))\n        //                     {\n        //                         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //                         PdfDictionary printoption = PdfCrossTable.Dereference(m_usage[DictionaryProperties.Print])\n        //                         as PdfDictionary;\n        //                         if (printoption != null)\n        //                         {\n        //                             layer.m_printOption = printoption;\n        //                             foreach (KeyValuePair<PdfName, IPdfPrimitive> value in printoption.Items)\n        //                             {\n        //                                 if (value.Key.Value.Equals(DictionaryProperties.PrintState))\n        //                                 {\n        //                                     string printState = (value.Value as PdfName).Value;\n        //                                     if (printState.Equals(DictionaryProperties.OCGON))\n        //                                     {\n        //                                         layer.PrintState = PdfPrintState.AlwaysPrint;\n        //                                         break;\n        //                                     }\n        //                                     else\n        //                                     {\n        //                                         layer.PrintState = PdfPrintState.NeverPrint;\n        //                                         break;\n        //                                     }\n        //                                 }\n        //                             }\n        //                         }\n        //                         PdfString layerName = PdfCrossTable.Dereference(Dict[DictionaryProperties.Name]) as PdfString;\n        //                         layer.Name = layerName.Value;\n        //                         List.add(layer);\n        //                         isLayerAdded = true;\n        //                         if(!str.Contains(\"EMC\"))\n        //                         break;\n        //                     }\n        //                 }\n        //                 else\n        //                 {\n        //                     if (str.Contains(Key))\n        //                     {\n        //                         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //                         List.add(layer);\n        //                         if(Dict.ContainsKey(DictionaryProperties.Name))\n        //                         {\n        //                         PdfString layerName = PdfCrossTable.Dereference(Dict[DictionaryProperties.Name]) as PdfString;\n        //                         layer.Name = layerName.Value;\n        //                         }\n        //                         isLayerAdded = true;\n        //                         break;\n        //                     }\n        //                 }\n        //             }\n        //         }\n        //     }\n        //     if (!isLayerAdded)\n        //     {\n        //         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //         List.add(layer);\n        //     }\n        //     else\n        //         isLayerAdded = false;\n        // }\n        var saveData = [];\n        saveData.push(saveState);\n        saveStream.data = saveData;\n        contents.insert(0, new PdfReferenceHolder(saveStream));\n        saveData = [];\n        saveData.push(restoreState);\n        restoreStream.data = saveData;\n        contents.insert(contents.count, new PdfReferenceHolder(restoreStream));\n    };\n    /**\n     * Returns `index of` the `PdfPageLayer` in the collection if exists, -1 otherwise.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.indexOf = function (layer) {\n        if (layer == null) {\n            throw new Error('ArgumentNullException: layer');\n        }\n        var index = this.list.indexOf(layer);\n        return index;\n    };\n    return PdfPageLayerCollection;\n}(PdfCollection));\nexport { PdfPageLayerCollection };\n","import { PdfArray } from './../primitives/pdf-array';\nimport { PdfPageLayerCollection } from './pdf-page-layer-collection';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfResources } from './../graphics/pdf-resources';\n/**\n * The abstract base class for all pages,\n * `PdfPageBase` class provides methods and properties to create PDF pages and its elements.\n * @private\n */\nvar PdfPageBase = /** @class */ (function () {\n    //constructors\n    /**\n     * Initializes a new instance of the `PdfPageBase` class.\n     * @private\n     */\n    function PdfPageBase(dictionary) {\n        /**\n         * `Index` of the default layer.\n         * @default -1.\n         * @private\n         */\n        this.defLayerIndex = -1;\n        /**\n         * Local variable to store if page `updated`.\n         * @default false.\n         * @private\n         */\n        this.modified = false;\n        /**\n         * Instance of `DictionaryProperties` class.\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.pageDictionary = dictionary;\n    }\n    Object.defineProperty(PdfPageBase.prototype, \"section\", {\n        //Properties\n        /**\n         * Gets the `section` of a page.\n         * @private\n         */\n        get: function () {\n            // if (this.pdfSection === null) {\n            //     throw new Error('PdfException : Page must be added to some section before using.');\n            // }\n            return this.pdfSection;\n        },\n        set: function (value) {\n            this.pdfSection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"dictionary\", {\n        /**\n         * Gets the page `dictionary`.\n         * @private\n         */\n        get: function () {\n            return this.pageDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.pageDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"defaultLayer\", {\n        /**\n         * Gets the `default layer` of the page (Read only).\n         * @private\n         */\n        get: function () {\n            var layer = this.layers;\n            var index = this.defaultLayerIndex;\n            var returnlayer = layer.items(index);\n            return returnlayer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"defaultLayerIndex\", {\n        /**\n         * Gets or sets `index of the default layer`.\n         * @private\n         */\n        get: function () {\n            if (this.layerCollection.count === 0 || this.defLayerIndex === -1) {\n                var layer = this.layerCollection.add();\n                this.defLayerIndex = this.layerCollection.indexOf(layer);\n            }\n            return this.defLayerIndex;\n        },\n        /**\n         * Gets or sets` index of the default layer`.\n         * @private\n         */\n        set: function (value) {\n            if (value < 0 || value > this.layers.count - 1) {\n                throw new Error('ArgumentOutOfRangeException : value, Index can not be less 0 and greater Layers.Count - 1');\n            }\n            else {\n                this.defLayerIndex = value;\n                this.modified = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"layers\", {\n        /**\n         * Gets the collection of the page's `layers` (Read only).\n         * @private\n         */\n        get: function () {\n            if (this.layerCollection == null || typeof this.layerCollection === 'undefined') {\n                this.layerCollection = new PdfPageLayerCollection(this);\n            }\n            return this.layerCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return an instance of `PdfResources` class.\n     * @private\n     */\n    PdfPageBase.prototype.getResources = function () {\n        if (this.resources == null) {\n            this.resources = new PdfResources();\n            this.dictionary.items.setValue(this.dictionaryProperties.resources, this.resources);\n        }\n        return this.resources;\n    };\n    Object.defineProperty(PdfPageBase.prototype, \"contents\", {\n        /**\n         * Gets `array of page's content`.\n         * @private\n         */\n        get: function () {\n            var obj = this.pageDictionary.items.getValue(this.dictionaryProperties.contents);\n            var contents = obj;\n            var rh = obj;\n            if (contents == null) {\n                contents = new PdfArray();\n                this.pageDictionary.items.setValue(this.dictionaryProperties.contents, contents);\n            }\n            return contents;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the `resources`.\n     * @private\n     */\n    PdfPageBase.prototype.setResources = function (res) {\n        this.resources = res;\n        this.dictionary.items.setValue(this.dictionaryProperties.resources, this.resources);\n        this.modified = true;\n    };\n    return PdfPageBase;\n}());\nexport { PdfPageBase };\n","import { PdfArray } from './../primitives/pdf-array';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { SizeF, RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\n * `PdfAnnotationCollection` class represents the collection of 'PdfAnnotation' objects.\n * @private\n */\nvar PdfAnnotationCollection = /** @class */ (function () {\n    function PdfAnnotationCollection(page) {\n        // Constants\n        /**\n         * `Error` constant message.\n         * @private\n         */\n        this.alreadyExistsAnnotationError = 'This annotatation had been already added to page';\n        /**\n         * `Error` constant message.\n         * @private\n         */\n        this.missingAnnotationException = 'Annotation is not contained in collection.';\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Array of the `annotations`.\n         * @private\n         */\n        this.internalAnnotations = new PdfArray();\n        /**\n         * privte `list` for the annotations.\n         * @private\n         */\n        this.lists = [];\n        if (typeof page !== 'undefined') {\n            this.page = page;\n        }\n    }\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"annotations\", {\n        /**\n         * Gets the `PdfAnnotation` object at the specified index. Read-Only.\n         * @private\n         */\n        get: function () {\n            return this.internalAnnotations;\n        },\n        set: function (value) {\n            this.internalAnnotations = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /**\n     * `Adds` a new annotation to the collection.\n     * @private\n     */\n    PdfAnnotationCollection.prototype.add = function (annotation) {\n        // this.SetPrint(annotation);\n        this.doAdd(annotation);\n    };\n    /**\n     * `Adds` a Annotation to collection.\n     * @private\n     */\n    /* tslint:disable */\n    PdfAnnotationCollection.prototype.doAdd = function (annotation) {\n        if (typeof annotation.destination !== 'undefined') {\n            var layout = new PdfStringLayouter();\n            var layoutResult = layout.layout(annotation.text, annotation.font, annotation.stringFormat, new SizeF((annotation.bounds.width), 0), false, new SizeF(0, 0));\n            var lastPosition = annotation.bounds.y;\n            if (layoutResult.lines.length === 1) {\n                var size = annotation.font.measureString(layoutResult.lines[0].text);\n                annotation.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n                annotation.text = layoutResult.lines[0].text;\n                //Draw Annotation Text.\n                this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, annotation.bounds.y, annotation.bounds.width, annotation.bounds.height, null);\n                //Add annotation to dictionary.\n                annotation.setPage(this.page);\n                this.setColor(annotation);\n                this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n                this.lists.push(annotation);\n            }\n            else {\n                for (var i = 0; i < layoutResult.lines.length; i++) {\n                    var size = annotation.font.measureString(layoutResult.lines[i].text);\n                    if (i === 0) {\n                        annotation.bounds = new RectangleF(annotation.bounds.x, lastPosition, size.width, size.height);\n                        annotation.text = layoutResult.lines[i].text;\n                        //Draw Annotation Text.\n                        this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, lastPosition, size.width, size.height, null);\n                        //Add annotation to dictionary.\n                        annotation.setPage(this.page);\n                        this.setColor(annotation);\n                        this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n                        this.lists.push(annotation);\n                        //Update y for drawing next line of the text.\n                        lastPosition += annotation.bounds.height;\n                    }\n                    else {\n                        var annot = annotation.clone();\n                        annot.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n                        annot.text = layoutResult.lines[i].text;\n                        //Draw Annotation Text.\n                        this.page.graphics.drawString(annot.text, annot.font, null, annot.brush, annot.bounds.x, annot.bounds.y, annot.bounds.width, annot.bounds.height, null);\n                        //Add annotation to dictionary.\n                        annot.setPage(this.page);\n                        this.setColor(annot);\n                        this.internalAnnotations.add(new PdfReferenceHolder(annot));\n                        this.lists.push(annot);\n                        //Update y for drawing next line of the text.\n                        lastPosition += annot.bounds.height;\n                    }\n                }\n            }\n        }\n        else {\n            annotation.setPage(this.page);\n            this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n            return this.lists.push(annotation);\n        }\n    };\n    /* tslint:enable */\n    /**\n     * `Set a color of an annotation`.\n     * @private\n     */\n    PdfAnnotationCollection.prototype.setColor = function (annotation) {\n        var cs = PdfColorSpace.Rgb;\n        var colours = annotation.color.toArray(cs);\n        annotation.dictionary.items.setValue(this.dictionaryProperties.c, colours);\n    };\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the `Element` representing this object.\n         * @private\n         */\n        get: function () {\n            return this.internalAnnotations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationCollection;\n}());\nexport { PdfAnnotationCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPageBase } from './pdf-page-base';\nimport { PdfDictionary, SaveTemplateEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { SizeF } from './../drawing/pdf-drawing';\nimport { PdfAnnotationCollection } from './../annotations/annotation-collection';\nimport { PdfPageLayer } from './pdf-page-layer';\n/**\n * Provides methods and properties to create pages and its elements.\n * `PdfPage` class inherited from the `PdfPageBase` class.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * //\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * //\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPage = /** @class */ (function (_super) {\n    __extends(PdfPage, _super);\n    //constructors\n    /**\n     * Initialize the new instance for `PdfPage` class.\n     * @private\n     */\n    function PdfPage() {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Stores the instance of `PdfAnnotationCollection` class.\n         * @hidden\n         * @default null\n         * @private\n         */\n        _this.annotationCollection = null;\n        /**\n         * Stores the instance of `PageBeginSave` event for Page Number Field.\n         * @default null\n         * @private\n         */\n        _this.beginSave = null;\n        _this.initialize();\n        return _this;\n    }\n    Object.defineProperty(PdfPage.prototype, \"document\", {\n        //Properties\n        /**\n         * Gets current `document`.\n         * @private\n         */\n        get: function () {\n            if (this.section !== null && this.section.parent !== null) {\n                return this.section.parent.document;\n            }\n            else {\n                return null;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"graphics\", {\n        /**\n         * Get the current `graphics`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a new page to the document\n         * let page1 : PdfPage = document.pages.add();\n         * //\n         * // get graphics\n         * let graphics : PdfGraphics = page1.graphics;\n         * //\n         * // set the font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // create black brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // draw the text\n         * graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var result = this.defaultLayer.graphics;\n            result.currentPage = this;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"crossTable\", {\n        /**\n         * Gets the `cross table`.\n         * @private\n         */\n        get: function () {\n            if (this.section === null) {\n                throw new Error('PdfDocumentException : Page is not created');\n            }\n            return this.section.parent === null ? this.section.parentDocument.crossTable : this.section.parent.document.crossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"size\", {\n        /**\n         * Gets the size of the PDF page- Read only.\n         * @public\n         */\n        get: function () {\n            return this.section.pageSettings.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"origin\", {\n        /**\n         * Gets the `origin` of the page.\n         * @private\n         */\n        get: function () {\n            return this.section.pageSettings.origin;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"annotations\", {\n        /**\n         * Gets a collection of the `annotations` of the page- Read only.\n         * @private\n         */\n        get: function () {\n            if (this.annotationCollection == null) {\n                this.annotationCollection = new PdfAnnotationCollection(this);\n                // if (!this.Dictionary.ContainsKey(this.dictionaryProperties.annots)) {\n                this.dictionary.items.setValue(this.dictionaryProperties.annots, this.annotationCollection.element);\n                // }\n                this.annotationCollection.annotations = this.dictionary.items.getValue(this.dictionaryProperties.annots);\n            }\n            return this.annotationCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Initializes` a page.\n     * @private\n     */\n    PdfPage.prototype.initialize = function () {\n        this.dictionary.items.setValue(this.dictionaryProperties.type, new PdfName('Page'));\n        this.dictionary.pageBeginDrawTemplate = new SaveTemplateEventHandler(this);\n    };\n    /**\n     * Sets parent `section` to the page.\n     * @private\n     */\n    PdfPage.prototype.setSection = function (section) {\n        this.section = section;\n        this.dictionary.items.setValue(this.dictionaryProperties.parent, new PdfReferenceHolder(section));\n    };\n    /**\n     * `Resets the progress`.\n     * @private\n     */\n    PdfPage.prototype.resetProgress = function () {\n        this.isProgressOn = false;\n    };\n    /**\n     * Get the page size reduced by page margins and page template dimensions.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a pages to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // create new standard font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // set brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * //\n     * // set the specified point using `getClientSize` method\n     * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, point);\n     * //\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPage.prototype.getClientSize = function () {\n        var returnValue = this.section.getActualBounds(this, true);\n        return new SizeF(returnValue.width, returnValue.height);\n    };\n    /**\n     * Helper method to retrive the instance of `PageBeginSave` event for header and footer elements.\n     * @private\n     */\n    PdfPage.prototype.pageBeginSave = function () {\n        var doc = this.document;\n        if (typeof doc !== undefined && doc != null) {\n            this.drawPageTemplates(doc);\n        }\n        if (this.beginSave != null && typeof this.beginSave !== 'undefined') {\n            this.beginSave(this);\n        }\n    };\n    /**\n     * Helper method to draw template elements.\n     * @private\n     */\n    PdfPage.prototype.drawPageTemplates = function (document) {\n        // Draw Background templates.\n        var hasBackTemplates = this.section.containsTemplates(document, this, false);\n        if (hasBackTemplates) {\n            var backLayer = new PdfPageLayer(this, false);\n            this.layers.insert(0, backLayer);\n            this.section.drawTemplates(this, backLayer, document, false);\n            if (backLayer.graphics !== null && typeof backLayer.graphics !== 'undefined') {\n                for (var i = 0; i < backLayer.graphics.automaticFields.automaticFields.length; i++) {\n                    var fieldInfo = backLayer.graphics.automaticFields.automaticFields[i];\n                    fieldInfo.field.performDraw(backLayer.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);\n                }\n            }\n        }\n        // Draw Foreground templates.\n        var hasFrontTemplates = this.section.containsTemplates(document, this, true);\n        if (hasFrontTemplates) {\n            var frontLayer = new PdfPageLayer(this, false);\n            this.layers.add(frontLayer);\n            this.section.drawTemplates(this, frontLayer, document, true);\n        }\n    };\n    return PdfPage;\n}(PdfPageBase));\nexport { PdfPage };\n","/**\n * Provides data for `PageAddedEventHandler` event.\n * This event raises when adding the new PDF page to the PDF document.\n */\nvar PageAddedEventArgs = /** @class */ (function () {\n    function PageAddedEventArgs(page) {\n        if (typeof page !== 'undefined') {\n            this.pdfPage = page;\n        }\n        else {\n            this.pdfPage = null;\n        }\n    }\n    Object.defineProperty(PageAddedEventArgs.prototype, \"page\", {\n        /**\n         * Gets the `newly added page`.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PageAddedEventArgs;\n}());\nexport { PageAddedEventArgs };\n","/**\n * Represents the `collection of pages in a section`.\n * @private\n */\nvar PdfSectionPageCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfSectionPageCollection` class.\n     * @private\n     */\n    function PdfSectionPageCollection(section) {\n        //  Fields\n        /**\n         * @hidden\n         * @private\n         */\n        this.pdfSection = null;\n        if (section == null) {\n            throw Error('ArgumentNullException(\"section\")');\n        }\n        this.section = section;\n    }\n    Object.defineProperty(PdfSectionPageCollection.prototype, \"section\", {\n        // Properties\n        /**\n         * Gets the `PdfPage` at the specified index.\n         * @private\n         */\n        get: function () {\n            return this.pdfSection;\n        },\n        set: function (value) {\n            this.pdfSection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public Methods\n    /**\n     * `Determines` whether the specified page is within the collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.contains = function (page) {\n        return this.section.contains(page);\n    };\n    /**\n     * `Removes` the specified page from collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.remove = function (page) {\n        this.section.remove(page);\n    };\n    /**\n     * `Adds` a new page from collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.add = function () {\n        return this.section.add();\n    };\n    return PdfSectionPageCollection;\n}());\nexport { PdfSectionPageCollection };\n","import { TemplateType } from './../pages/enum';\n// import { PdfStampCollection } from `./../Pages/PdfStampCollection`;\n/**\n * `PdfDocumentTemplate` class encapsulates a page template for all the pages in the document.\n * @private\n */\nvar PdfDocumentTemplate = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfDocumentTemplate` class.\n     * @public\n     */\n    function PdfDocumentTemplate() {\n        //\n    }\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"left\", {\n        // private m_stamps : PdfStampCollection;\n        // Properties\n        /**\n         * `Left` page template object.\n         * @public\n         */\n        get: function () {\n            return this.leftTemplate;\n        },\n        set: function (value) {\n            this.leftTemplate = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"top\", {\n        /**\n         * `Top` page template object.\n         * @public\n         */\n        get: function () {\n            return this.topTemplate;\n        },\n        set: function (value) {\n            this.topTemplate = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"right\", {\n        /**\n         * `Right` page template object.\n         * @public\n         */\n        get: function () {\n            return this.rightTemplate;\n        },\n        set: function (value) {\n            this.rightTemplate = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"bottom\", {\n        /**\n         * `Bottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.bottomTemplate;\n        },\n        set: function (value) {\n            this.bottomTemplate = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenLeft\", {\n        /**\n         * `EvenLeft` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenLeft;\n        },\n        set: function (value) {\n            this.evenLeft = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenTop\", {\n        /**\n         * `EvenTop` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenTop;\n        },\n        set: function (value) {\n            this.evenTop = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenRight\", {\n        /**\n         * `EvenRight` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenRight;\n        },\n        set: function (value) {\n            this.evenRight = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenBottom\", {\n        /**\n         * `EvenBottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenBottom;\n        },\n        set: function (value) {\n            this.evenBottom = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddLeft\", {\n        /**\n         * `OddLeft` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddLeft;\n        },\n        set: function (value) {\n            this.oddLeft = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddTop\", {\n        /**\n         * `OddTop` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddTop;\n        },\n        set: function (value) {\n            this.oddTop = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddRight\", {\n        /**\n         * `OddRight` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddRight;\n        },\n        set: function (value) {\n            this.oddRight = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddBottom\", {\n        /**\n         * `OddBottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddBottom;\n        },\n        set: function (value) {\n            this.oddBottom = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Returns `left` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getLeft = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenLeft != null) ? this.EvenLeft : this.left;\n        }\n        else {\n            template = (this.OddLeft != null) ? this.OddLeft : this.left;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `top` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getTop = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenTop != null) ? this.EvenTop : this.top;\n        }\n        else {\n            template = (this.OddTop != null) ? this.OddTop : this.top;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `right` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getRight = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenRight != null) ? this.EvenRight : this.right;\n        }\n        else {\n            template = (this.OddRight != null) ? this.OddRight : this.right;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `bottom` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getBottom = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenBottom != null) ? this.EvenBottom : this.bottom;\n        }\n        else {\n            template = (this.OddBottom != null) ? this.OddBottom : this.bottom;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Checks whether the page `is even`.\n     * @private\n     */\n    PdfDocumentTemplate.prototype.isEven = function (page) {\n        var pages = page.section.document.pages;\n        var index = 0;\n        if (pages.pageCollectionIndex.containsKey(page)) {\n            index = pages.pageCollectionIndex.getValue(page) + 1;\n        }\n        else {\n            index = pages.indexOf(page) + 1;\n        }\n        var even = ((index % 2) === 0);\n        return even;\n    };\n    /**\n     * Checks a `template element`.\n     * @private\n     */\n    PdfDocumentTemplate.prototype.checkElement = function (templateElement, type) {\n        if (templateElement != null) {\n            if ((typeof templateElement.type !== 'undefined') && (templateElement.type !== TemplateType.None)) {\n                throw new Error('NotSupportedException:Can not reassign the template element. Please, create new one.');\n            }\n            templateElement.type = type;\n        }\n        return templateElement;\n    };\n    return PdfDocumentTemplate;\n}());\nexport { PdfDocumentTemplate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSectionTemplate.ts class for EJ2-PDF\n */\nimport { PdfDocumentTemplate } from './../document/pdf-document-template';\n/**\n * Represents a `page template` for all the pages in the section.\n */\nvar PdfSectionTemplate = /** @class */ (function (_super) {\n    __extends(PdfSectionTemplate, _super);\n    // Constructors\n    /**\n     * `Creates a new object`.\n     * @private\n     */\n    function PdfSectionTemplate() {\n        var _this = _super.call(this) || this;\n        _this.leftValue = _this.topValue = _this.rightValue = _this.bottomValue = _this.stampValue = true;\n        return _this;\n    }\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentLeftTemplate\", {\n        // Properties\n        /**\n         * Gets or sets value indicating whether parent `Left page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.leftValue;\n        },\n        set: function (value) {\n            this.leftValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentTopTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Top page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.topValue;\n        },\n        set: function (value) {\n            this.topValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentRightTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Right page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.rightValue;\n        },\n        set: function (value) {\n            this.rightValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentBottomTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Bottom page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.bottomValue;\n        },\n        set: function (value) {\n            this.bottomValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentStamps\", {\n        /**\n         * Gets or sets value indicating whether the `stamp value` is true or not.\n         * @private\n         */\n        get: function () {\n            return this.stampValue;\n        },\n        set: function (value) {\n            this.stampValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfSectionTemplate;\n}(PdfDocumentTemplate));\nexport { PdfSectionTemplate };\n","import { PdfPage } from './pdf-page';\nimport { PageAddedEventArgs } from './page-added-event-arguments';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { SaveSectionEventHandler } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfSectionCollection } from './pdf-section-collection';\nimport { PdfSectionPageCollection } from './pdf-section-page-collection';\nimport { RectangleF } from './../drawing/pdf-drawing';\nimport { PdfSectionTemplate } from './pdf-section-templates';\n/**\n * Represents a `section` entity. A section it's a set of the pages with similar page settings.\n */\nvar PdfSection = /** @class */ (function () {\n    function PdfSection(document, pageSettings) {\n        //Fields\n        //public PageAdded() : PageAddedEventArgs.PageAddedEventHandler = new PageAddedEventArgs.PageAddedEventHandler(Object,args)\n        /**\n         * @hidden\n         * @private\n         */\n        this.pageAdded = new PageAddedEventArgs();\n        /**\n         * @hidden\n         * @private\n         */\n        this.pdfPages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.pdfDocument = document;\n        if (typeof pageSettings === 'undefined') {\n            this.settings = document.pageSettings.clone();\n            this.initialSettings = this.settings.clone();\n        }\n        else {\n            this.settings = pageSettings.clone();\n            this.initialSettings = this.settings.clone();\n        }\n        this.initialize();\n    }\n    Object.defineProperty(PdfSection.prototype, \"parent\", {\n        //Property\n        /**\n         * Gets or sets the `parent`.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection;\n        },\n        set: function (value) {\n            this.sectionCollection = value;\n            this.section.items.setValue(this.dictionaryProperties.parent, new PdfReferenceHolder(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"parentDocument\", {\n        /**\n         * Gets the `parent document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"pageSettings\", {\n        /**\n         * Gets or sets the `page settings` of the section.\n         * @private\n         */\n        get: function () {\n            return this.settings;\n        },\n        set: function (value) {\n            if (value != null) {\n                this.settings = value;\n            }\n            else {\n                throw Error('Value can not be null.');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.section;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"count\", {\n        /**\n         * Gets the `count` of the pages in the section.\n         * @private\n         */\n        get: function () {\n            return this.pagesReferences.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"template\", {\n        /**\n         * Gets or sets a `template` for the pages in the section.\n         * @private\n         */\n        get: function () {\n            if (this.pageTemplate == null) {\n                this.pageTemplate = new PdfSectionTemplate();\n            }\n            return this.pageTemplate;\n        },\n        set: function (value) {\n            this.pageTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"document\", {\n        /**\n         * Gets the `document`.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection.document;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"pages\", {\n        /**\n         * Gets the collection of `pages` in a section (Read only)\n         * @private\n         */\n        get: function () {\n            if (this.pagesCollection == null || typeof this.pagesCollection === 'undefined') {\n                this.pagesCollection = new PdfSectionPageCollection(this);\n            }\n            return this.pagesCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //methods\n    /**\n     * `Return the page collection` of current section.\n     * @private\n     */\n    PdfSection.prototype.getPages = function () {\n        return this.pdfPages;\n    };\n    /**\n     * `Translates` point into native coordinates of the page.\n     * @private\n     */\n    PdfSection.prototype.pointToNativePdf = function (page, point) {\n        var bounds = this.getActualBounds(page, true);\n        point.x += bounds.x;\n        point.y = this.pageSettings.height - (point.y);\n        return point;\n    };\n    /**\n     * Sets the page setting of the current section.\n     * @public\n     * @param settings Instance of `PdfPageSettings`\n     */\n    PdfSection.prototype.setPageSettings = function (settings) {\n        this.settings = settings;\n        this.state.orientation = settings.orientation;\n        this.state.rotate = settings.rotate;\n        this.state.size = settings.size;\n        this.state.origin = settings.origin;\n    };\n    /**\n     * `Initializes` the object.\n     * @private\n     */\n    PdfSection.prototype.initialize = function () {\n        this.pagesReferences = new PdfArray();\n        this.section = new PdfDictionary();\n        this.state = new PageSettingsState(this.pdfDocument);\n        this.section.sectionBeginSave = new SaveSectionEventHandler(this, this.state);\n        this.pageCount = new PdfNumber(0);\n        this.section.items.setValue(this.dictionaryProperties.count, this.pageCount);\n        this.section.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.pages));\n        this.section.items.setValue(this.dictionaryProperties.kids, this.pagesReferences);\n    };\n    /**\n     * Checks whether any template should be printed on this layer.\n     * @private\n     * @param document The parent document.\n     * @param page The parent page.\n     * @param foreground Layer z-order.\n     * @returns True - if some content should be printed on the layer, False otherwise.\n     */\n    PdfSection.prototype.containsTemplates = function (document, page, foreground) {\n        var documentHeaders = this.getDocumentTemplates(document, page, foreground);\n        var sectionTemplates = this.getSectionTemplates(page, foreground);\n        return (documentHeaders.length > 0 || sectionTemplates.length > 0);\n    };\n    /**\n     * Returns array of the document templates.\n     * @private\n     * @param document The parent document.\n     * @param page The parent page.\n     * @param headers If true - return headers/footers, if false - return simple templates.\n     * @param foreground If true - return foreground templates, if false - return background templates.\n     * @returns Returns array of the document templates.\n     */\n    /* tslint:disable */\n    PdfSection.prototype.getDocumentTemplates = function (document, page, foreground) {\n        var templates = [];\n        if (this.template.applyDocumentTopTemplate && document.template.getTop(page) != null) {\n            if ((!(document.template.getTop(page).foreground || foreground)) || (document.template.getTop(page).foreground && foreground)) {\n                templates.push(document.template.getTop(page));\n            }\n        }\n        if (this.template.applyDocumentBottomTemplate && document.template.getBottom(page) != null) {\n            if ((!(document.template.getBottom(page).foreground || foreground)) || (document.template.getBottom(page).foreground && foreground)) {\n                templates.push(document.template.getBottom(page));\n            }\n        }\n        if (this.template.applyDocumentLeftTemplate && document.template.getLeft(page) != null) {\n            if ((!(document.template.getLeft(page).foreground || foreground)) || (document.template.getLeft(page).foreground && foreground)) {\n                templates.push(document.template.getLeft(page));\n            }\n        }\n        if (this.template.applyDocumentRightTemplate && document.template.getRight(page) != null) {\n            if ((!(document.template.getRight(page).foreground || foreground)) || (document.template.getRight(page).foreground && foreground)) {\n                templates.push(document.template.getRight(page));\n            }\n        }\n        return templates;\n    };\n    /**\n     * Returns array of the section templates.\n     * @private\n     * @param page The parent page.\n     * @param foreground If true - return foreground templates, if false - return background templates.\n     * @returns Returns array of the section templates.\n     */\n    /* tslint:disable */\n    PdfSection.prototype.getSectionTemplates = function (page, foreground) {\n        var templates = [];\n        if (this.template.getTop(page) != null) {\n            var pageTemplate = this.template.getTop(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        if (this.template.getBottom(page) != null) {\n            var pageTemplate = this.template.getBottom(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        if (this.template.getLeft(page) != null) {\n            var pageTemplate = this.template.getLeft(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        if (this.template.getRight(page) != null) {\n            var pageTemplate = this.template.getRight(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        return templates;\n    };\n    /* tslint:enable */\n    /**\n     * `Adds` the specified page.\n     * @private\n     */\n    PdfSection.prototype.add = function (page) {\n        if (typeof page === 'undefined') {\n            var page_1 = new PdfPage();\n            this.add(page_1);\n            return page_1;\n        }\n        else {\n            var r = this.checkPresence(page);\n            this.pdfPages.push(page);\n            this.pagesReferences.add(r);\n            page.setSection(this);\n            page.resetProgress();\n            this.pageAddedMethod(page);\n        }\n    };\n    /**\n     * `Checks the presence`.\n     * @private\n     */\n    PdfSection.prototype.checkPresence = function (page) {\n        var rh = new PdfReferenceHolder(page);\n        var contains = false;\n        var sc = this.parent;\n        for (var index = 0; index < sc.section.length; index++) {\n            var section = sc.section[index];\n            contains = contains || section.contains(page);\n        }\n        return rh;\n    };\n    /**\n     * `Determines` whether the page in within the section.\n     * @private\n     */\n    PdfSection.prototype.contains = function (page) {\n        var index = this.indexOf(page);\n        return (0 <= index);\n    };\n    /**\n     * Get the `index of` the page.\n     * @private\n     */\n    PdfSection.prototype.indexOf = function (page) {\n        for (var index = 0; index < this.pdfPages.length; index++) {\n            if (this.pdfPages[index] === page) {\n                return this.pdfPages.indexOf(page);\n            }\n        }\n        var r = new PdfReferenceHolder(page);\n        return this.pagesReferences.indexOf(r);\n    };\n    /**\n     * Call two event's methods.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.pageAddedMethod = function (page) {\n        //Create event's arguments\n        var args = new PageAddedEventArgs(page);\n        this.onPageAdded(args);\n        var parent = this.parent;\n        parent.document.pages.onPageAdded(args);\n        this.pageCount.intValue = this.count;\n    };\n    /**\n     * Called when the page has been added.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.onPageAdded = function (args) {\n        //\n    };\n    PdfSection.prototype.getActualBounds = function (arg1, arg2, arg3) {\n        if (arg1 instanceof PdfPage && typeof arg2 === 'boolean') {\n            var result = void 0;\n            var document_1 = this.parent.document;\n            result = this.getActualBounds(document_1, arg1, arg2);\n            return result;\n        }\n        else {\n            arg1 = arg1;\n            arg2 = arg2;\n            arg3 = arg3;\n            var bounds = new RectangleF(0, 0, 0, 0);\n            bounds.height = (arg3) ? this.pageSettings.size.height : this.pageSettings.getActualSize().height;\n            bounds.width = (arg3) ? this.pageSettings.size.width : this.pageSettings.getActualSize().width;\n            var left = this.getLeftIndentWidth(arg1, arg2, arg3);\n            var top_1 = this.getTopIndentHeight(arg1, arg2, arg3);\n            var right = this.getRightIndentWidth(arg1, arg2, arg3);\n            var bottom = this.getBottomIndentHeight(arg1, arg2, arg3);\n            bounds.x += left;\n            bounds.y += top_1;\n            bounds.width -= (left + right);\n            bounds.height -= (top_1 + bottom);\n            return bounds;\n        }\n    };\n    /**\n     * Calculates width of the `left indent`.\n     * @private\n     */\n    PdfSection.prototype.getLeftIndentWidth = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.left : 0;\n        var templateWidth = (this.template.getLeft(page) != null) ? this.template.getLeft(page).width : 0;\n        var docTemplateWidth = (document.template.getLeft(page) != null) ? document.template.getLeft(page).width : 0;\n        value += (this.template.applyDocumentLeftTemplate) ? Math.max(templateWidth, docTemplateWidth) : templateWidth;\n        return value;\n    };\n    /**\n     * Calculates `Height` of the top indent.\n     * @private\n     */\n    PdfSection.prototype.getTopIndentHeight = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.top : 0;\n        var templateHeight = (this.template.getTop(page) != null) ? this.template.getTop(page).height : 0;\n        var docTemplateHeight = (document.template.getTop(page) != null) ? document.template.getTop(page).height : 0;\n        value += (this.template.applyDocumentTopTemplate) ? Math.max(templateHeight, docTemplateHeight) : templateHeight;\n        return value;\n    };\n    /**\n     * Calculates `width` of the right indent.\n     * @private\n     */\n    PdfSection.prototype.getRightIndentWidth = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.right : 0;\n        var templateWidth = (this.template.getRight(page) != null) ? this.template.getRight(page).width : 0;\n        var docTemplateWidth = (document.template.getRight(page) != null) ? document.template.getRight(page).width : 0;\n        value += (this.template.applyDocumentRightTemplate) ? Math.max(templateWidth, docTemplateWidth) : templateWidth;\n        return value;\n    };\n    /**\n     * Calculates `Height` of the bottom indent.\n     * @private\n     */\n    PdfSection.prototype.getBottomIndentHeight = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.bottom : 0;\n        var templateHeight = (this.template.getBottom(page) != null) ? this.template.getBottom(page).height : 0;\n        var docTemplateHeight = (document.template.getBottom(page) != null) ? document.template.getBottom(page).height : 0;\n        value += (this.template.applyDocumentBottomTemplate) ? Math.max(templateHeight, docTemplateHeight) : templateHeight;\n        return value;\n    };\n    /**\n     * `Removes` the page from the section.\n     * @private\n     */\n    PdfSection.prototype.remove = function (page) {\n        if (page == null) {\n            throw Error('ArgumentNullException(\"page\")');\n        }\n        var index = this.pdfPages.indexOf(page);\n        this.pagesReferences.removeAt(index);\n        var temproaryPages = [];\n        for (var j = 0; j < index; j++) {\n            temproaryPages.push(this.pdfPages[j]);\n        }\n        for (var j = index + 1; j < this.pdfPages.length; j++) {\n            temproaryPages.push(this.pdfPages[j]);\n        }\n        this.pdfPages = temproaryPages;\n    };\n    /**\n     * In fills dictionary by the data from `Page settings`.\n     * @private\n     */\n    PdfSection.prototype.applyPageSettings = function (container, parentSettings, state) {\n        var bounds = new RectangleF(state.origin, state.size);\n        container.items.setValue(this.dictionaryProperties.mediaBox, PdfArray.fromRectangle(bounds));\n        var rotate = 0;\n        rotate = PdfSectionCollection.rotateFactor * state.rotate;\n        var angle = new PdfNumber(rotate);\n        container.items.setValue(this.dictionaryProperties.rotate, angle);\n    };\n    /**\n     * Catches the Save event of the dictionary.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.beginSave = function (state, writer) {\n        var doc = writer.document;\n        this.applyPageSettings(this.section, doc.pageSettings, state);\n    };\n    /**\n     * Draws page templates on the page.\n     * @private\n     */\n    PdfSection.prototype.drawTemplates = function (page, layer, document, foreground) {\n        var documentHeaders = this.getDocumentTemplates(document, page, foreground);\n        var sectionHeaders = this.getSectionTemplates(page, foreground);\n        this.drawTemplatesHelper(layer, document, documentHeaders);\n        this.drawTemplatesHelper(layer, document, sectionHeaders);\n    };\n    /**\n     * Draws page templates on the page.\n     * @private\n     */\n    PdfSection.prototype.drawTemplatesHelper = function (layer, document, templates) {\n        if (templates != null && templates.length > 0) {\n            var len = templates.length;\n            for (var i = 0; i < len; i++) {\n                var template = templates[i];\n                template.draw(layer, document);\n            }\n        }\n    };\n    return PdfSection;\n}());\nexport { PdfSection };\nvar PageSettingsState = /** @class */ (function () {\n    //Public Constructor\n    /**\n     * New instance to store the `PageSettings`.\n     * @private\n     */\n    function PageSettingsState(document) {\n        this.pageOrientation = document.pageSettings.orientation;\n        this.pageRotate = document.pageSettings.rotate;\n        this.pageSize = document.pageSettings.size;\n        this.pageOrigin = document.pageSettings.origin;\n    }\n    Object.defineProperty(PageSettingsState.prototype, \"orientation\", {\n        //public Properties\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageOrientation;\n        },\n        set: function (value) {\n            this.pageOrientation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"rotate\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageRotate;\n        },\n        set: function (value) {\n            this.pageRotate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"size\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageSize;\n        },\n        set: function (value) {\n            this.pageSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"origin\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageOrigin;\n        },\n        set: function (value) {\n            this.pageOrigin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PageSettingsState;\n}());\nexport { PageSettingsState };\n","import { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfDictionary, SaveSectionCollectionEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfSection } from './pdf-section';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * Represents the `collection of the sections`.\n * @private\n */\nvar PdfSectionCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfSectionCollection` class.\n     * @private\n     */\n    function PdfSectionCollection(document) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.sections = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // if (document === null) {\n        //     throw new Error('ArgumentNullException : document');\n        // }\n        this.pdfDocument = document.clone();\n        this.initialize();\n    }\n    Object.defineProperty(PdfSectionCollection.prototype, \"section\", {\n        //Properties\n        /**\n         * Gets the `Section` collection.\n         */\n        get: function () {\n            return this.sections;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"document\", {\n        /**\n         * Gets a parent `document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of sections` in a document.\n         * @private\n         */\n        get: function () {\n            return this.sections.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.pages;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * `Initializes the object`.\n     * @private\n     */\n    PdfSectionCollection.prototype.initialize = function () {\n        this.sectionCount = new PdfNumber(0);\n        this.sectionCollection = new PdfArray();\n        this.pages = new PdfDictionary();\n        this.pages.beginSave = new SaveSectionCollectionEventHandler(this);\n        this.pages.items.setValue(this.dictionaryProperties.type, new PdfName('Pages'));\n        this.pages.items.setValue(this.dictionaryProperties.kids, this.sectionCollection);\n        this.pages.items.setValue(this.dictionaryProperties.count, this.sectionCount);\n        this.pages.items.setValue(this.dictionaryProperties.resources, new PdfDictionary());\n        this.setPageSettings(this.pages, this.pdfDocument.pageSettings);\n    };\n    /**\n     * Initializes a new instance of the `PdfSectionCollection` class.\n     * @private\n     */\n    PdfSectionCollection.prototype.pdfSectionCollection = function (index) {\n        if (index < 0 || index >= this.count) {\n            throw new Error('IndexOutOfRangeException()');\n        }\n        return this.sections[index];\n    };\n    /**\n     * In fills dictionary by the data from `Page settings`.\n     * @private\n     */\n    PdfSectionCollection.prototype.setPageSettings = function (container, pageSettings) {\n        // if (container === null) {\n        //     throw new Error('ArgumentNullException : container');\n        // }\n        // if (pageSettings === null) {\n        //     throw new Error('ArgumentNullException : pageSettings');\n        // }\n        var bounds = new RectangleF(new PointF(), pageSettings.size);\n        container.items.setValue(this.dictionaryProperties.mediaBox, PdfArray.fromRectangle(bounds));\n    };\n    /**\n     * `Adds` the specified section.\n     * @private\n     */\n    PdfSectionCollection.prototype.add = function (section) {\n        if (typeof section === 'undefined') {\n            var section_1 = new PdfSection(this.pdfDocument);\n            this.add(section_1);\n            return section_1;\n        }\n        else {\n            // if (section === null) {\n            //     throw new Error('ArgumentNullException : section');\n            // }\n            var r = this.checkSection(section);\n            this.sections.push(section);\n            section.parent = this;\n            this.sectionCollection.add(r);\n            return this.sections.indexOf(section);\n        }\n    };\n    /**\n     * `Checks` if the section is within the collection.\n     * @private\n     */\n    PdfSectionCollection.prototype.checkSection = function (section) {\n        var r = new PdfReferenceHolder(section);\n        var contains = this.sectionCollection.contains(r);\n        // if (contains) {\n        //     throw new Error('ArgumentException : The object can not be added twice to the collection,section');\n        // }\n        return r;\n    };\n    /**\n     * Catches the Save event of the dictionary to `count the pages`.\n     * @private\n     */\n    PdfSectionCollection.prototype.countPages = function () {\n        var count = 0;\n        this.sections.forEach(function (n) { return (count += n.count); });\n        return count;\n    };\n    /**\n     * Catches the Save event of the dictionary to `count the pages`.\n     * @hidden\n     * @private\n     */\n    PdfSectionCollection.prototype.beginSave = function () {\n        this.sectionCount.intValue = this.countPages();\n    };\n    //Fields\n    /**\n     * Rotate factor for page `rotation`.\n     * @default 90\n     * @private\n     */\n    PdfSectionCollection.rotateFactor = 90;\n    return PdfSectionCollection;\n}());\nexport { PdfSectionCollection };\n","import { PdfPage } from './pdf-page';\nimport { Dictionary } from './../collections/dictionary';\n/**\n * Represents a virtual collection of all the pages in the document.\n * @private\n */\nvar PdfDocumentPageCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfPageCollection` class.\n     * @private\n     */\n    function PdfDocumentPageCollection(document) {\n        /**\n         * It holds the page collection with the `index`.\n         * @private\n         */\n        this.pdfPageCollectionIndex = new Dictionary();\n        this.document = document;\n    }\n    Object.defineProperty(PdfDocumentPageCollection.prototype, \"count\", {\n        //Property\n        /**\n         * Gets the total `number of the pages`.\n         * @private\n         */\n        get: function () {\n            return this.countPages();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentPageCollection.prototype, \"pageCollectionIndex\", {\n        /**\n         * Gets a `page index` from the document.\n         * @private\n         */\n        get: function () {\n            return this.pdfPageCollectionIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocumentPageCollection.prototype.add = function (page) {\n        if (typeof page === 'undefined') {\n            var page_1 = new PdfPage();\n            this.add(page_1);\n            return page_1;\n        }\n        else {\n            var section = this.getLastSection();\n            section.add(page);\n        }\n    };\n    /**\n     * Returns `last section` in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getLastSection = function () {\n        var sc = this.document.sections;\n        if (sc.section.length === 0) {\n            sc.add();\n        }\n        var section = sc.section[sc.section.length - 1];\n        return section;\n    };\n    /**\n     * Called when `new page has been added`.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.onPageAdded = function (args) {\n        // if (PageAdded !== null)\n        // {\n        //     PageAdded(this, args);\n        // }\n    };\n    /**\n     * Gets the `total number of pages`.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.countPages = function () {\n        var sc = this.document.sections;\n        var count = 0;\n        for (var index = 0; index < sc.section.length; index++) {\n            count += sc.section[index].count;\n        }\n        return count;\n    };\n    /**\n     * Gets the `page object` from page index.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getPageByIndex = function (index) {\n        return this.getPage(index);\n    };\n    /**\n     * Gets a page by its `index` in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getPage = function (index) {\n        if ((index < 0) || (index >= this.count)) {\n            throw Error('ArgumentOutOfRangeException(\"index\", \"Value can not be less 0\")');\n        }\n        var page = null;\n        var sectionStartIndex = 0;\n        var sectionCount = 0;\n        var pageIndex = 0;\n        var length = this.document.sections.count;\n        for (var i = 0; i < length; i++) {\n            var section = this.document.sections.section[i];\n            sectionCount = section.count;\n            pageIndex = index - sectionStartIndex;\n            // We found a section containing the page.\n            if ((index >= sectionStartIndex && pageIndex < sectionCount)) {\n                page = section.getPages()[pageIndex];\n                break;\n            }\n            sectionStartIndex += sectionCount;\n        }\n        return page;\n    };\n    /**\n     * Gets the `index of` the page in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.indexOf = function (page) {\n        var index = -1;\n        if (page == null) {\n            throw new Error('ArgumentNullException: page');\n        }\n        else {\n            var numPages = 0;\n            for (var i = 0, len = this.document.sections.count; i < len; i++) {\n                var section = this.document.sections.pdfSectionCollection(i);\n                index = section.indexOf(page);\n                if (index >= 0) {\n                    index += numPages;\n                    break;\n                }\n                else {\n                    index = -1;\n                }\n                numPages += section.count;\n            }\n        }\n        return index;\n    };\n    /**\n     * `Removes` the specified page.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.remove = function (page) {\n        if (page == null) {\n            throw Error('ArgumentNullException(\"page\")');\n        }\n        var section = null;\n        var len;\n        for (var i = 0, len_1 = this.document.sections.count; i < len_1; i++) {\n            section = this.document.sections.pdfSectionCollection(i);\n            if (section.pages.contains(page)) {\n                section.pages.remove(page);\n                break;\n            }\n        }\n        return section;\n    };\n    return PdfDocumentPageCollection;\n}());\nexport { PdfDocumentPageCollection };\n","/**\n * PdfCacheCollection.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../collections/dictionary';\n/**\n * `Collection of the cached objects`.\n * @private\n */\nvar PdfCacheCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfCacheCollection` class.\n     * @private\n     */\n    function PdfCacheCollection() {\n        this.referenceObjects = [];\n        this.pdfFontCollection = new Dictionary();\n    }\n    // Public methods\n    /**\n     * `Searches` for the similar cached object. If is not found - adds the object to the cache.\n     * @private\n     */\n    PdfCacheCollection.prototype.search = function (obj) {\n        var result = null;\n        var group = this.getGroup(obj);\n        if (group == null) {\n            group = this.createNewGroup();\n        }\n        else if (group.length > 0) {\n            result = group[0];\n        }\n        group.push(obj);\n        return result;\n    };\n    // Implementation\n    /**\n     * `Creates` a new group.\n     * @private\n     */\n    PdfCacheCollection.prototype.createNewGroup = function () {\n        var group = [];\n        this.referenceObjects.push(group);\n        return group;\n    };\n    /**\n     * `Find and Return` a group.\n     * @private\n     */\n    PdfCacheCollection.prototype.getGroup = function (result) {\n        var group = null;\n        if (result !== null) {\n            var len = this.referenceObjects.length;\n            for (var i = 0; i < len; i++) {\n                if (this.referenceObjects.length > 0) {\n                    var tGroup = this.referenceObjects[i];\n                    if (tGroup.length > 0) {\n                        var representative = tGroup[0];\n                        if (result.equalsTo(representative)) {\n                            group = tGroup;\n                            break;\n                        }\n                    }\n                    else {\n                        this.removeGroup(tGroup);\n                    }\n                }\n                len = this.referenceObjects.length;\n            }\n        }\n        return group;\n    };\n    /**\n     * Remove a group from the storage.\n     */\n    PdfCacheCollection.prototype.removeGroup = function (group) {\n        if (group !== null) {\n            var index = this.referenceObjects.indexOf(group);\n            this.referenceObjects.slice(index, index + 1);\n        }\n    };\n    PdfCacheCollection.prototype.destroy = function () {\n        this.pdfFontCollection = undefined;\n        this.referenceObjects = undefined;\n    };\n    return PdfCacheCollection;\n}());\nexport { PdfCacheCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfWriter, PdfWriterHelper } from './../input-output/pdf-writer';\nimport { PdfMainObjectCollection } from './../input-output/pdf-main-object-collection';\nimport { PdfDocumentBase } from './pdf-document-base';\nimport { PdfCrossTable } from './../input-output/pdf-cross-table';\nimport { PdfCatalog } from './pdf-catalog';\nimport { PdfPageSettings } from './../pages/pdf-page-settings';\nimport { PdfSectionCollection } from './../pages/pdf-section-collection';\nimport { PdfDocumentPageCollection } from './../pages/pdf-document-page-collection';\nimport { PdfCacheCollection } from './../general/pdf-cache-collection';\nimport { PdfColorSpace } from './../graphics/enum';\nimport { PdfDocumentTemplate } from './pdf-document-template';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\n/**\n * Represents a PDF document and can be used to create a new PDF document from the scratch.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocument = /** @class */ (function (_super) {\n    __extends(PdfDocument, _super);\n    function PdfDocument(isMerging) {\n        var _this = _super.call(this) || this;\n        /**\n         * Default `margin` value.\n         * @default 40.0\n         * @private\n         */\n        _this.defaultMargin = 40.0;\n        /**\n         * Internal variable to store instance of `StreamWriter` classes..\n         * @default null\n         * @private\n         */\n        _this.streamWriter = null;\n        _this.document = _this;\n        var isMerge = false;\n        if (typeof isMerging === 'undefined') {\n            PdfDocument.cacheCollection = new PdfCacheCollection();\n            isMerge = false;\n        }\n        else {\n            isMerge = isMerging;\n        }\n        var objects = new PdfMainObjectCollection();\n        _this.setMainObjectCollection(objects);\n        var crossTable = new PdfCrossTable();\n        crossTable.isMerging = isMerge;\n        crossTable.document = _this;\n        _this.setCrossTable(crossTable);\n        var catalog = new PdfCatalog();\n        _this.setCatalog(catalog);\n        objects.add(catalog);\n        catalog.position = -1;\n        _this.sectionCollection = new PdfSectionCollection(_this);\n        _this.documentPageCollection = new PdfDocumentPageCollection(_this);\n        catalog.pages = _this.sectionCollection;\n        return _this;\n    }\n    Object.defineProperty(PdfDocument, \"defaultFont\", {\n        //Properties\n        /**\n         * Gets the `default font`. It is used for complex objects when font is not explicitly defined.\n         * @private\n         */\n        get: function () {\n            if (this.defaultStandardFont == null) {\n                this.defaultStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 8);\n            }\n            return this.defaultStandardFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"sections\", {\n        /**\n         * Gets the collection of the `sections` in the document.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pageSettings\", {\n        /**\n         * Gets the document's page setting.\n         * @public\n         */\n        get: function () {\n            if (this.settings == null) {\n                this.settings = new PdfPageSettings(this.defaultMargin);\n            }\n            return this.settings;\n        },\n        /**\n         * Sets the document's page setting.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         *\n         * // sets the right margin of the page\n         * document.pageSettings.margins.right = 0;\n         * // set the page size.\n         * document.pageSettings.size = new SizeF(500, 500);\n         * // change the page orientation to landscape\n         * document.pageSettings.orientation = PdfPageOrientation.Landscape;\n         * // apply 90 degree rotation on the page\n         * document.pageSettings.rotate = PdfPageRotateAngle.RotateAngle90;\n         *\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // set the specified Point\n         * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, point);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this.settings = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pages\", {\n        /**\n         * Represents the collection of pages in the PDF document.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * //\n         * // get the collection of pages in the document\n         * let pageCollection : PdfDocumentPageCollection  = document.pages;\n         * //\n         * // add pages\n         * let page1 : PdfPage = pageCollection.add();\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.documentPageCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument, \"cache\", {\n        /**\n         * Gets collection of the `cached objects`.\n         * @private\n         */\n        get: function () {\n            if (typeof PdfDocument.cacheCollection === 'undefined' || PdfDocument.cacheCollection == null) {\n                return new PdfCacheCollection();\n            }\n            return PdfDocument.cacheCollection;\n        },\n        /**\n         * Sets collection of the `cached objects`.\n         * @private\n         */\n        set: function (value) {\n            this.cacheCollection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument, \"enableCache\", {\n        /**\n         * Gets the value of enable cache.\n         * @private\n         */\n        get: function () {\n            return this.isCacheEnabled;\n        },\n        /**\n         * Sets thie value of enable cache.\n         * @private\n         */\n        set: function (value) {\n            this.isCacheEnabled = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"colorSpace\", {\n        /* tslint:disable */\n        /**\n         * Gets or sets the `color space` of the document. This property can be used to create PDF document in RGB, Gray scale or CMYK color spaces.\n         * @private\n         */\n        get: function () {\n            if ((this.pdfColorSpace === PdfColorSpace.Rgb) || ((this.pdfColorSpace === PdfColorSpace.Cmyk)\n                || (this.pdfColorSpace === PdfColorSpace.GrayScale))) {\n                return this.pdfColorSpace;\n            }\n            else {\n                return PdfColorSpace.Rgb;\n            }\n        },\n        set: function (value) {\n            if ((value === PdfColorSpace.Rgb) || ((value === PdfColorSpace.Cmyk) ||\n                (value === PdfColorSpace.GrayScale))) {\n                this.pdfColorSpace = value;\n            }\n            else {\n                this.pdfColorSpace = PdfColorSpace.Rgb;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"template\", {\n        /* tslint:enable */\n        /**\n         * Gets or sets a `template` to all pages in the document.\n         * @private\n         */\n        get: function () {\n            if (this.pageTemplate == null) {\n                this.pageTemplate = new PdfDocumentTemplate();\n            }\n            return this.pageTemplate;\n        },\n        set: function (value) {\n            this.pageTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocument.prototype.docSave = function (stream, arg2, arg3) {\n        this.checkPagesPresence();\n        if (stream === null) {\n            throw new Error('ArgumentNullException : stream');\n        }\n        this.streamWriter = stream;\n        var writer = new PdfWriter(stream);\n        writer.document = this;\n        if (typeof arg2 === 'boolean' && typeof arg3 === 'undefined') {\n            return this.crossTable.save(writer);\n        }\n        else {\n            this.crossTable.save(writer, arg2);\n        }\n    };\n    /**\n     * Saves the document to the specified output stream and return the stream as byte array.\n     * @private\n     */\n    PdfDocument.prototype._docSave = function () {\n        var stream = new PdfWriterHelper();\n        this.checkPagesPresence();\n        if (stream === null) {\n            throw new Error('ArgumentNullException : stream');\n        }\n        this.streamWriter = stream;\n        var writer = new PdfWriter(stream);\n        writer.document = this;\n        return this.crossTable._save(writer);\n    };\n    /**\n     * Checks the pages `presence`.\n     * @private\n     */\n    PdfDocument.prototype.checkPagesPresence = function () {\n        if (this.pages.count === 0) {\n            this.pages.add();\n        }\n    };\n    /**\n     * disposes the current instance of `PdfDocument` class.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a new page to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // set the font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // create black brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.destroy = function () {\n        this.catalog = undefined;\n        this.colorSpace = undefined;\n        this.currentSavingObj = undefined;\n        this.documentPageCollection = undefined;\n        this.isStreamCopied = undefined;\n        this.pageSettings = undefined;\n        this.pageTemplate = undefined;\n        this.pdfColorSpace = undefined;\n        this.sectionCollection = undefined;\n        PdfDocument.cache.destroy();\n        this.crossTable.pdfObjects.destroy();\n        PdfDocument.cache = undefined;\n        if (this.streamWriter) {\n            this.streamWriter.destroy();\n        }\n    };\n    /**\n     * `Font` used in complex objects to draw strings and text when it is not defined explicitly.\n     * @default null\n     * @private\n     */\n    PdfDocument.defaultStandardFont = null;\n    /**\n     * Indicates whether enable cache or not\n     * @default true\n     * @private\n     */\n    PdfDocument.isCacheEnabled = true;\n    return PdfDocument;\n}(PdfDocumentBase));\nexport { PdfDocument };\n","/**\n * PdfStandardFontMetricsFactory.ts class for EJ2-PDF\n */\nimport { PdfFontStyle, PdfFontFamily } from './enum';\nimport { PdfFontMetrics, StandardWidthTable } from './pdf-font-metrics';\n/**\n * @private\n * `Factory of the standard fonts metrics`.\n */\nvar PdfStandardFontMetricsFactory = /** @class */ (function () {\n    function PdfStandardFontMetricsFactory() {\n    }\n    /**\n     * Returns `metrics` of the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = null;\n        switch (fontFamily) {\n            case PdfFontFamily.Helvetica:\n                metrics = this.getHelveticaMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.Courier:\n                metrics = this.getCourierMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.TimesRoman:\n                metrics = this.getTimesMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.Symbol:\n                metrics = this.getSymbolMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.ZapfDingbats:\n                metrics = this.getZapfDingbatsMetrics(fontFamily, fontStyle, size);\n                break;\n            default:\n                metrics = this.getHelveticaMetrics(PdfFontFamily.Helvetica, fontStyle, size);\n                break;\n        }\n        metrics.name = fontFamily.toString();\n        metrics.subScriptSizeFactor = this.subSuperScriptFactor;\n        metrics.superscriptSizeFactor = this.subSuperScriptFactor;\n        return metrics;\n    };\n    // Implementation\n    /**\n     * Creates `Helvetica font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getHelveticaMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.helveticaBoldItalicAscent;\n            metrics.descent = this.helveticaBoldItalicDescent;\n            metrics.postScriptName = this.helveticaBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.helveticaBoldAscent;\n            metrics.descent = this.helveticaBoldDescent;\n            metrics.postScriptName = this.helveticaBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.helveticaItalicAscent;\n            metrics.descent = this.helveticaItalicDescent;\n            metrics.postScriptName = this.helveticaItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.helveticaAscent;\n            metrics.descent = this.helveticaDescent;\n            metrics.postScriptName = this.helveticaName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Courier font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getCourierMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.courierBoldItalicAscent;\n            metrics.descent = this.courierBoldItalicDescent;\n            metrics.postScriptName = this.courierBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.courierBoldAscent;\n            metrics.descent = this.courierBoldDescent;\n            metrics.postScriptName = this.courierBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.courierItalicAscent;\n            metrics.descent = this.courierItalicDescent;\n            metrics.postScriptName = this.courierItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.courierAscent;\n            metrics.descent = this.courierDescent;\n            metrics.postScriptName = this.courierName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Times font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getTimesMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.timesBoldItalicAscent;\n            metrics.descent = this.timesBoldItalicDescent;\n            metrics.postScriptName = this.timesBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanBoldItalicWidths);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.timesBoldAscent;\n            metrics.descent = this.timesBoldDescent;\n            metrics.postScriptName = this.timesBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.timesItalicAscent;\n            metrics.descent = this.timesItalicDescent;\n            metrics.postScriptName = this.timesItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanItalicWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.timesAscent;\n            metrics.descent = this.timesDescent;\n            metrics.postScriptName = this.timesName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Symbol font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getSymbolMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        metrics.ascent = this.symbolAscent;\n        metrics.descent = this.symbolDescent;\n        metrics.postScriptName = this.symbolName;\n        metrics.size = size;\n        metrics.widthTable = new StandardWidthTable(this.symbolWidth);\n        metrics.height = metrics.ascent - metrics.descent;\n        return metrics;\n    };\n    /**\n     * Creates `ZapfDingbats font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getZapfDingbatsMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        metrics.ascent = this.zapfDingbatsAscent;\n        metrics.descent = this.zapfDingbatsDescent;\n        metrics.postScriptName = this.zapfDingbatsName;\n        metrics.size = size;\n        metrics.widthTable = new StandardWidthTable(this.zapfDingbatsWidth);\n        metrics.height = metrics.ascent - metrics.descent;\n        return metrics;\n    };\n    /**\n     * `Multiplier` os subscript superscript.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.subSuperScriptFactor = 1.52;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaAscent = 931;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaDescent = -225;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaName = 'Helvetica';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldAscent = 962;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldDescent = -228;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldName = 'Helvetica-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicAscent = 931;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicDescent = -225;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicName = 'Helvetica-Oblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicAscent = 962;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicDescent = -228;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicName = 'Helvetica-BoldOblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierAscent = 805;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierName = 'Courier';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldAscent = 801;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldName = 'Courier-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicAscent = 805;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicName = 'Courier-Oblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicAscent = 801;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicName = 'Courier-BoldOblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesAscent = 898;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesName = 'Times-Roman';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldAscent = 935;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldName = 'Times-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicAscent = 883;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicDescent = -217;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicName = 'Times-Italic';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicAscent = 921;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicName = 'Times-BoldItalic';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolAscent = 1010;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolDescent = -293;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolName = 'Symbol';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsAscent = 820;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsDescent = -143;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsName = 'ZapfDingbats';\n    /**\n     * `Arial` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.arialWidth = [\n        278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584,\n        584, 556, 1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278,\n        469, 556, 333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833,\n        556, 556, 556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334,\n        584, 0, 556, 0, 222, 556, 333, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 222, 222, 333, 333, 350, 556, 1000, 333, 1000, 500, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 556, 537, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 667, 667, 667, 667, 667, 667, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 584, 611, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    /**\n     * `Arial bold` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.arialBoldWidth = [\n        278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584,\n        584, 611, 975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333,\n        584, 556, 333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889,\n        611, 611, 611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389,\n        584, 0, 556, 0, 278, 556, 500, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 278, 278, 500, 500, 350, 556, 1000, 333, 1000, 556, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 611, 556, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278,\n        278, 278, 611, 611, 611, 611, 611, 611, 611, 584, 611, 611, 611, 611, 611, 556,\n        611, 556\n    ];\n    /**\n     * `Fixed` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.fixedWidth = [\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600\n    ];\n    /**\n     * `Times` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanWidth = [\n        250, 333, 408, 500, 500, 833, 778, 180, 333, 333, 500, 564, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278, 564, 564,\n        564, 444, 921, 722, 667, 667, 722, 611, 556, 722, 722, 333, 389, 722, 611, 889,\n        722, 722, 556, 722, 667, 556, 611, 722, 722, 944, 722, 722, 611, 333, 278, 333,\n        469, 500, 333, 444, 500, 444, 500, 444, 333, 500, 500, 278, 278, 500, 278, 778,\n        500, 500, 500, 500, 333, 389, 278, 500, 500, 722, 500, 500, 444, 480, 200, 480,\n        541, 0, 500, 0, 333, 500, 444, 1000, 500, 500, 333, 1000, 556, 333, 889, 0,\n        611, 0, 0, 333, 333, 444, 444, 350, 500, 1000, 333, 980, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 200, 500, 333, 760, 276, 500, 564, 0,\n        760, 333, 400, 564, 300, 300, 333, 500, 453, 250, 333, 300, 310, 500, 750, 750,\n        750, 444, 722, 722, 722, 722, 722, 722, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 722, 722, 722, 722, 722, 722, 564, 722, 722, 722, 722, 722, 722,\n        556, 500, 444, 444, 444, 444, 444, 444, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 564, 500, 500, 500, 500, 500, 500,\n        500, 500\n    ];\n    /**\n     * `Times bold` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanBoldWidth = [\n        250, 333, 555, 500, 500, 1000, 833, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 930, 722, 667, 722, 722, 667, 611, 778, 778, 389, 500, 778, 667, 944,\n        722, 778, 611, 778, 722, 556, 667, 722, 722, 1000, 722, 722, 667, 333, 278, 333,\n        581, 500, 333, 500, 556, 444, 556, 444, 333, 500, 556, 278, 333, 556, 278, 833,\n        556, 500, 556, 556, 444, 389, 333, 556, 500, 722, 500, 500, 444, 394, 220, 394,\n        520, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 1000, 0,\n        667, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 220, 500, 333, 747, 300, 500, 570, 0,\n        747, 333, 400, 570, 300, 300, 333, 556, 540, 250, 333, 300, 330, 500, 750, 750,\n        750, 500, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 778, 778, 778, 778, 778, 570, 778, 722, 722, 722, 722, 722,\n        611, 556, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    /**\n     * `Times italic` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanItalicWidth = [\n        250, 333, 420, 500, 500, 833, 778, 214, 333, 333, 500, 675, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 675, 675,\n        675, 500, 920, 611, 611, 667, 722, 611, 611, 722, 722, 333, 444, 667, 556, 833,\n        667, 722, 611, 722, 611, 500, 556, 722, 611, 833, 611, 556, 556, 389, 278, 389,\n        422, 500, 333, 500, 500, 444, 500, 444, 278, 500, 500, 278, 278, 444, 278, 722,\n        500, 500, 500, 500, 389, 389, 278, 500, 444, 667, 444, 444, 389, 400, 275, 400,\n        541, 0, 500, 0, 333, 500, 556, 889, 500, 500, 333, 1000, 500, 333, 944, 0,\n        556, 0, 0, 333, 333, 556, 556, 350, 500, 889, 333, 980, 389, 333, 667, 0,\n        389, 556, 0, 389, 500, 500, 500, 500, 275, 500, 333, 760, 276, 500, 675, 0,\n        760, 333, 400, 675, 300, 300, 333, 500, 523, 250, 333, 300, 310, 500, 750, 750,\n        750, 500, 611, 611, 611, 611, 611, 611, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 667, 722, 722, 722, 722, 722, 675, 722, 722, 722, 722, 722, 556,\n        611, 500, 500, 500, 500, 500, 500, 500, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 675, 500, 500, 500, 500, 500, 444,\n        500, 444\n    ];\n    /**\n     * `Times bold italic` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanBoldItalicWidths = [\n        250, 389, 555, 500, 500, 833, 778, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 832, 667, 667, 667, 722, 667, 667, 722, 778, 389, 500, 667, 611, 889,\n        722, 722, 611, 722, 667, 556, 611, 722, 667, 889, 667, 611, 611, 333, 278, 333,\n        570, 500, 333, 500, 500, 444, 500, 444, 333, 500, 556, 278, 278, 500, 278, 778,\n        556, 500, 500, 500, 389, 389, 278, 556, 444, 667, 500, 444, 389, 348, 220, 348,\n        570, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 944, 0,\n        611, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        389, 611, 0, 389, 500, 500, 500, 500, 220, 500, 333, 747, 266, 500, 606, 0,\n        747, 333, 400, 570, 300, 300, 333, 576, 500, 250, 333, 300, 300, 500, 750, 750,\n        750, 500, 667, 667, 667, 667, 667, 667, 944, 667, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 722, 722, 722, 722, 722, 570, 722, 722, 722, 722, 722, 611,\n        611, 500, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 444,\n        500, 444\n    ];\n    /**\n     * `Symbol` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolWidth = [\n        250, 333, 713, 500, 549, 833, 778, 439, 333, 333, 500, 549, 250, 549,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278,\n        549, 549, 549, 444, 549, 722, 667, 722, 612, 611, 763, 603, 722, 333,\n        631, 722, 686, 889, 722, 722, 768, 741, 556, 592, 611, 690, 439, 768,\n        645, 795, 611, 333, 863, 333, 658, 500, 500, 631, 549, 549, 494, 439,\n        521, 411, 603, 329, 603, 549, 549, 576, 521, 549, 549, 521, 549, 603,\n        439, 576, 713, 686, 493, 686, 494, 480, 200, 480, 549, 750, 620, 247,\n        549, 167, 713, 500, 753, 753, 753, 753, 1042, 987, 603, 987, 603, 400,\n        549, 411, 549, 549, 713, 494, 460, 549, 549, 549, 549, 1000, 603, 1000,\n        658, 823, 686, 795, 987, 768, 768, 823, 768, 768, 713, 713, 713, 713,\n        713, 713, 713, 768, 713, 790, 790, 890, 823, 549, 250, 713, 603, 603,\n        1042, 987, 603, 987, 603, 494, 329, 790, 790, 786, 713, 384, 384, 384,\n        384, 384, 384, 494, 494, 494, 494, 329, 274, 686, 686, 686, 384, 384,\n        384, 384, 384, 384, 494, 494, 494, -1\n    ];\n    /**\n     * `Zip dingbats` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsWidth = [\n        278, 974, 961, 974, 980, 719, 789, 790, 791, 690, 960, 939, 549, 855,\n        911, 933, 911, 945, 974, 755, 846, 762, 761, 571, 677, 763, 760, 759,\n        754, 494, 552, 537, 577, 692, 786, 788, 788, 790, 793, 794, 816, 823,\n        789, 841, 823, 833, 816, 831, 923, 744, 723, 749, 790, 792, 695, 776,\n        768, 792, 759, 707, 708, 682, 701, 826, 815, 789, 789, 707, 687, 696,\n        689, 786, 787, 713, 791, 785, 791, 873, 761, 762, 762, 759, 759, 892,\n        892, 788, 784, 438, 138, 277, 415, 392, 392, 668, 668, 390, 390, 317,\n        317, 276, 276, 509, 509, 410, 410, 234, 234, 334, 334, 732, 544, 544,\n        910, 667, 760, 760, 776, 595, 694, 626, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 894, 838, 1016, 458, 748, 924, 748, 918,\n        927, 928, 928, 834, 873, 828, 924, 924, 917, 930, 931, 463, 883, 836,\n        836, 867, 867, 696, 696, 874, 874, 760, 946, 771, 865, 771, 888, 967,\n        888, 831, 873, 927, 970, 918\n    ];\n    return PdfStandardFontMetricsFactory;\n}());\nexport { PdfStandardFontMetricsFactory };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfFontFamily, PdfFontStyle, FontEncoding } from './enum';\nimport { PdfFont } from './pdf-font';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfStandardFontMetricsFactory } from './pdf-standard-font-metrics-factory';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\n/**\n * Represents one of the 14 standard fonts.\n * It's used to create a standard PDF font to draw the text in to the PDF.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * //\n * // create new standard font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * //\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStandardFont = /** @class */ (function (_super) {\n    __extends(PdfStandardFont, _super);\n    function PdfStandardFont(fontFamilyPrototype, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? ((fontFamilyPrototype instanceof PdfStandardFont) ? fontFamilyPrototype.style : PdfFontStyle.Regular) : style) || this;\n        /**\n         * Gets `ascent` of the font.\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Gets `encodings` for internal class use.\n         * @hidden\n         * @private\n         */\n        _this.encodings = ['Unknown', 'StandardEncoding', 'MacRomanEncoding', 'MacExpertEncoding',\n            'WinAnsiEncoding', 'PDFDocEncoding', 'IdentityH'];\n        if (typeof fontFamilyPrototype === 'undefined') {\n            _this.pdfFontFamily = PdfFontFamily.Helvetica;\n        }\n        else if ((fontFamilyPrototype instanceof PdfStandardFont)) {\n            _this.pdfFontFamily = fontFamilyPrototype.fontFamily;\n        }\n        else {\n            _this.pdfFontFamily = fontFamilyPrototype;\n        }\n        _this.checkStyle();\n        _this.initializeInternals();\n        return _this;\n    }\n    Object.defineProperty(PdfStandardFont.prototype, \"fontFamily\", {\n        /* tslint:enable */\n        //Properties\n        /**\n         * Gets the `FontFamily`.\n         * @private\n         */\n        get: function () {\n            return this.pdfFontFamily;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //methods\n    /**\n     * Checks font `style` of the font.\n     * @private\n     */\n    PdfStandardFont.prototype.checkStyle = function () {\n        if (this.fontFamily === PdfFontFamily.Symbol || this.fontFamily === PdfFontFamily.ZapfDingbats) {\n            var style = this.style;\n            style &= ~(PdfFontStyle.Bold | PdfFontStyle.Italic);\n            this.setStyle(style);\n        }\n    };\n    /**\n     * Returns `width` of the line.\n     * @public\n     */\n    PdfStandardFont.prototype.getLineWidth = function (line, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException:line');\n        }\n        var width = 0;\n        var name = this.name;\n        line = PdfStandardFont.convert(line);\n        for (var i = 0, len = line.length; i < len; i++) {\n            var ch = line[i];\n            var charWidth = this.getCharWidthInternal(ch, format);\n            width += charWidth;\n        }\n        var size = this.metrics.getSize(format);\n        width *= (PdfFont.charSizeMultiplier * size);\n        width = this.applyFormatSettings(line, format, width);\n        return width;\n    };\n    /**\n     * Checks whether fonts are `equals`.\n     * @private\n     */\n    PdfStandardFont.prototype.equalsToFont = function (font) {\n        var equal = false;\n        var stFont = font;\n        if (stFont != null) {\n            var fontFamilyEqual = (this.fontFamily === stFont.fontFamily);\n            var lineReducer = (~(PdfFontStyle.Underline | PdfFontStyle.Strikeout));\n            var styleEqual = (this.style & lineReducer) === (stFont.style & lineReducer);\n            equal = (fontFamilyEqual && styleEqual);\n        }\n        return equal;\n    };\n    /**\n     * `Initializes` font internals..\n     * @private\n     */\n    PdfStandardFont.prototype.initializeInternals = function () {\n        var equalFont = null;\n        // if (PdfDocument.EnableCache) {\n        equalFont = PdfDocument.cache.search(this);\n        // }\n        var internals = null;\n        // if (equalFont == null) {\n        // Create font metrics.\n        var metrics = PdfStandardFontMetricsFactory.getMetrics(this.pdfFontFamily, this.style, this.size);\n        this.metrics = metrics;\n        internals = this.createInternals();\n        this.setInternals(internals);\n    };\n    /**\n     * `Creates` font`s dictionary.\n     * @private\n     */\n    PdfStandardFont.prototype.createInternals = function () {\n        var dictionary = new PdfDictionary();\n        dictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.type1));\n        dictionary.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.metrics.postScriptName));\n        if (this.fontFamily !== PdfFontFamily.Symbol && this.fontFamily !== PdfFontFamily.ZapfDingbats) {\n            var encoding = this.encodings[FontEncoding.WinAnsiEncoding];\n            dictionary.items.setValue(this.dictionaryProperties.encoding, new PdfName(encoding));\n        }\n        return dictionary;\n    };\n    /**\n     * Returns `width` of the char. This methods doesn`t takes into consideration font`s size.\n     * @private\n     */\n    PdfStandardFont.prototype.getCharWidthInternal = function (charCode, format) {\n        var width = 0;\n        var code = 0;\n        code = charCode.charCodeAt(0);\n        if (this.name === '0' || this.name === '1' || this.name === '2' ||\n            this.name === '3' || this.name === '4') {\n            code = code - PdfStandardFont.charOffset;\n        }\n        code = (code >= 0 && code !== 128) ? code : 0;\n        var metrics = this.metrics;\n        var widthTable = metrics.widthTable;\n        width = widthTable.items(code);\n        return width;\n    };\n    /**\n     * `Converts` the specified text.\n     * @private\n     */\n    PdfStandardFont.convert = function (text) {\n        return text;\n    };\n    //Constants\n    /**\n     * First character `position`.\n     * @private\n     */\n    PdfStandardFont.charOffset = 32;\n    return PdfStandardFont;\n}(PdfFont));\nexport { PdfStandardFont };\n","import { PdfColor } from './../graphics/pdf-color';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfDictionary, SaveAnnotationEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfString } from './../primitives/pdf-string';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfSolidBrush } from './../graphics/brushes/pdf-solid-brush';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStringFormat } from './../graphics/fonts/pdf-string-format';\nimport { PdfTextAlignment } from './../graphics/enum';\n/**\n * `PdfAnnotation` class represents the base class for annotation objects.\n * @private\n */\nvar PdfAnnotation = /** @class */ (function () {\n    function PdfAnnotation(arg1) {\n        // Fields\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * `Color` of the annotation\n         * @private\n         */\n        this.pdfColor = new PdfColor(255, 255, 255);\n        /**\n         * `Bounds` of the annotation.\n         * @private\n         */\n        this.rectangle = new RectangleF(0, 0, 0, 0);\n        /**\n         * Parent `page` of the annotation.\n         * @private\n         */\n        this.pdfPage = null;\n        /**\n         * `Brush of the text` of the annotation.\n         * @default new PdfSolidBrush(new PdfColor(0, 0, 0))\n         * @private\n         */\n        this.textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        /**\n         * `Font of the text` of the annotation.\n         * @default new PdfStandardFont(PdfFontFamily.TimesRoman, 10)\n         * @private\n         */\n        this.textFont = new PdfStandardFont(PdfFontFamily.TimesRoman, 10);\n        /**\n         * `StringFormat of the text` of the annotation.\n         * @default new PdfStringFormat(PdfTextAlignment.Left)\n         * @private\n         */\n        this.format = new PdfStringFormat(PdfTextAlignment.Left);\n        /**\n         * `Text` of the annotation.\n         * @private\n         */\n        this.content = '';\n        /**\n         * Internal variable to store `dictionary`.\n         * @private\n         */\n        this.pdfDictionary = new PdfDictionary();\n        /**\n         * To specifying the `Inner color` with which to fill the annotation\n         * @private\n         */\n        this.internalColor = new PdfColor();\n        /**\n         * `opacity or darkness` of the annotation.\n         * @private\n         * @default 1.0\n         */\n        this.darkness = 1.0;\n        if (typeof arg1 === 'undefined') {\n            this.initialize();\n        }\n        else {\n            this.initialize();\n            this.bounds = arg1;\n        }\n    }\n    Object.defineProperty(PdfAnnotation.prototype, \"color\", {\n        // Properties\n        /**\n         * `Color` of the annotation\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"innerColor\", {\n        /**\n         * To specifying the `Inner color` with which to fill the annotation\n         * @private\n         */\n        get: function () {\n            return this.internalColor;\n        },\n        set: function (value) {\n            this.internalColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"bounds\", {\n        /**\n         * `bounds` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.rectangle;\n        },\n        set: function (value) {\n            this.rectangle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"page\", {\n        /**\n         * Parent `page` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"font\", {\n        /**\n         * To specifying the `Font of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.textFont;\n        },\n        set: function (value) {\n            this.textFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"stringFormat\", {\n        /**\n         * To specifying the `StringFormat of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"brush\", {\n        /**\n         * To specifying the `Brush of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.textBrush;\n        },\n        set: function (value) {\n            this.textBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"text\", {\n        /**\n         * `Text` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.contents, new PdfString(this.content));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"dictionary\", {\n        /**\n         * Internal variable to store `dictionary`.\n         * @hidden\n         */\n        get: function () {\n            return this.pdfDictionary;\n        },\n        set: function (value) {\n            this.pdfDictionary = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the annotation event handler and specifies the type of the annotation.\n     * @private\n     */\n    PdfAnnotation.prototype.initialize = function () {\n        this.pdfDictionary.annotationBeginSave = new SaveAnnotationEventHandler(this);\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.annot));\n    };\n    /**\n     * Sets related `page` of the annotation.\n     * @private\n     */\n    PdfAnnotation.prototype.setPage = function (page) {\n        this.pdfPage = page;\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.p, new PdfReferenceHolder(this.pdfPage));\n    };\n    /**\n     * Handles the `BeginSave` event of the Dictionary.\n     * @private\n     */\n    PdfAnnotation.prototype.beginSave = function () {\n        this.save();\n    };\n    /**\n     * `Saves` an annotation.\n     * @private\n     */\n    /* tslint:disable */\n    PdfAnnotation.prototype.save = function () {\n        var nativeRectangle = new RectangleF(this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height);\n        var section = this.pdfPage.section;\n        var initialHeight = nativeRectangle.height;\n        var tempLoacation = section.pointToNativePdf(this.page, new PointF(nativeRectangle.x, nativeRectangle.y));\n        nativeRectangle.x = tempLoacation.x;\n        nativeRectangle.width = tempLoacation.x + nativeRectangle.width;\n        nativeRectangle.y = (tempLoacation.y - this.page.document.pageSettings.margins.top);\n        nativeRectangle.height = nativeRectangle.y - initialHeight;\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.rect, PdfArray.fromRectangle(nativeRectangle));\n        this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(this.darkness));\n    };\n    Object.defineProperty(PdfAnnotation.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotation;\n}());\nexport { PdfAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfAnnotation } from './annotation';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * `PdfLinkAnnotation` class represents the ink annotation class.\n * @private\n */\nvar PdfLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfLinkAnnotation, _super);\n    function PdfLinkAnnotation(rectangle) {\n        return _super.call(this, rectangle) || this;\n    }\n    // Implementation\n    /**\n     * `Initializes` annotation object.\n     * @private\n     */\n    PdfLinkAnnotation.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.link));\n    };\n    return PdfLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfLinkAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLinkAnnotation } from './link-annotation';\n/**\n * Represents base class for `link annotations` with associated action.\n * @private\n */\nvar PdfActionLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfActionLinkAnnotation, _super);\n    // Constructors\n    /**\n     * Specifies the constructor for `ActionLinkAnnotation`.\n     * @private\n     */\n    function PdfActionLinkAnnotation(rectangle) {\n        var _this = _super.call(this, rectangle) || this;\n        // Fields\n        /**\n         * Internal variable to store annotation's `action`.\n         * @default null\n         * @private\n         */\n        _this.pdfAction = null;\n        return _this;\n    }\n    //Public method\n    /**\n     * get and set the `action`.\n     * @hidden\n     */\n    PdfActionLinkAnnotation.prototype.getSetAction = function (value) {\n        if (typeof value === 'undefined') {\n            return this.pdfAction;\n        }\n        else {\n            this.pdfAction = value;\n        }\n    };\n    return PdfActionLinkAnnotation;\n}(PdfLinkAnnotation));\nexport { PdfActionLinkAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLinkAnnotation } from './link-annotation';\n/**\n * `PdfDocumentLinkAnnotation` class represents an annotation object with holds link on another location within a document.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // create new pages\n * let page1 : PdfPage = document.pages.add();\n * let page2 : PdfPage = document.pages.add();\n * // create a new rectangle\n * let bounds : RectangleF = new RectangleF({x : 10, y : 200}, {width : 300, height : 25});\n * //\n * // create a new document link annotation\n * let documentLinkAnnotation : PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(bounds);\n * // set the annotation text\n * documentLinkAnnotation.text = 'Document link annotation';\n * // set the destination\n * documentLinkAnnotation.destination = new PdfDestination(page2);\n * // set the documentlink annotation location\n * documentLinkAnnotation.destination.location = new PointF(10, 0);\n * // add this annotation to a new page\n * page1.annotations.add(documentLinkAnnotation);\n * //\n * // save the document to disk\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocumentLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfDocumentLinkAnnotation, _super);\n    function PdfDocumentLinkAnnotation(rectangle, destination) {\n        var _this = _super.call(this, rectangle) || this;\n        // Fields\n        /**\n         * `Destination` of the annotation.\n         * @default null\n         * @private\n         */\n        _this.pdfDestination = null;\n        if (typeof destination !== 'undefined') {\n            _this.destination = destination;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfDocumentLinkAnnotation.prototype, \"destination\", {\n        // Properties\n        /**\n         * Gets or sets the `destination` of the annotation.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create new pages\n         * let page1 : PdfPage = document.pages.add();\n         * let page2 : PdfPage = document.pages.add();\n         * // create a new rectangle\n         * let bounds : RectangleF = new RectangleF({x : 10, y : 200}, {width : 300, height : 25});\n         * //\n         * // create a new document link annotation\n         * let documentLinkAnnotation : PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(bounds);\n         * // set the annotation text\n         * documentLinkAnnotation.text = 'Document link annotation';\n         * // set the destination\n         * documentLinkAnnotation.destination = new PdfDestination(page2);\n         * // set the documentlink annotation location\n         * documentLinkAnnotation.destination.location = new PointF(10, 0);\n         * // add this annotation to a new page\n         * page1.annotations.add(documentLinkAnnotation);\n         * //\n         * // save the document to disk\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         * @default null\n         */\n        get: function () {\n            return this.pdfDestination;\n        },\n        set: function (value) {\n            // if (this.pdfDestination !== value) {\n            this.pdfDestination = value;\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Saves` annotation object.\n     * @private\n     */\n    PdfDocumentLinkAnnotation.prototype.save = function () {\n        _super.prototype.save.call(this);\n        if (this.pdfDestination != null) {\n            this.dictionary.items.setValue(this.dictionaryProperties.dest, this.pdfDestination.element);\n        }\n    };\n    /**\n     * `Clone` the document link annotation.\n     * @private\n     */\n    PdfDocumentLinkAnnotation.prototype.clone = function () {\n        var annot = new PdfDocumentLinkAnnotation(this.bounds, this.destination);\n        annot.color = this.color;\n        annot.brush = this.brush;\n        annot.destination = this.destination;\n        annot.font = this.font;\n        return annot;\n    };\n    return PdfDocumentLinkAnnotation;\n}(PdfLinkAnnotation));\nexport { PdfDocumentLinkAnnotation };\n","/**\n * ElementLayouter.ts class for EJ2-PDF\n */\nimport { RectangleF } from './../../../drawing/pdf-drawing';\n/**\n * Base class for `elements lay outing`.\n * @private\n */\nvar ElementLayouter = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `ElementLayouter` class.\n     * @private\n     */\n    function ElementLayouter(element) {\n        this.layoutElement = element;\n    }\n    Object.defineProperty(ElementLayouter.prototype, \"elements\", {\n        // Properties\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.layoutElement;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `element`.\n     * @private\n     */\n    ElementLayouter.prototype.getElement = function () {\n        return this.layoutElement;\n    };\n    // Implementation\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    ElementLayouter.prototype.layout = function (param) {\n        return this.layoutInternal(param);\n    };\n    ElementLayouter.prototype.Layouter = function (param) {\n        return this.layoutInternal(param);\n    };\n    /**\n     * Returns the `next page`.\n     * @private\n     */\n    ElementLayouter.prototype.getNextPage = function (currentPage) {\n        var section = currentPage.section;\n        var nextPage = section.add();\n        return nextPage;\n    };\n    ElementLayouter.prototype.getPaginateBounds = function (param) {\n        if ((param == null)) {\n            throw new Error('ArgumentNullException : param');\n        }\n        var result = param.format.usePaginateBounds ? param.format.paginateBounds\n            : new RectangleF(param.bounds.x, 0, param.bounds.width, param.bounds.height);\n        return result;\n    };\n    return ElementLayouter;\n}());\nexport { ElementLayouter };\nvar PdfLayoutFormat = /** @class */ (function () {\n    function PdfLayoutFormat(baseFormat) {\n        if (typeof baseFormat === 'undefined') {\n            //\n        }\n        else {\n            this.break = baseFormat.break;\n            this.layout = baseFormat.layout;\n            this.paginateBounds = baseFormat.paginateBounds;\n            this.boundsSet = baseFormat.usePaginateBounds;\n        }\n    }\n    Object.defineProperty(PdfLayoutFormat.prototype, \"layout\", {\n        // Properties\n        /**\n         * Gets or sets `layout` type of the element.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.layoutType === 'undefined' || this.layoutType == null) {\n            //      this.layoutType = PdfLayoutType.Paginate;\n            // }\n            return this.layoutType;\n        },\n        set: function (value) {\n            this.layoutType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"break\", {\n        /**\n         * Gets or sets `break` type of the element.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.breakType === 'undefined' || this.boundsSet == null) {\n            //      this.breakType = PdfLayoutBreakType.FitPage;\n            // }\n            return this.breakType;\n        },\n        set: function (value) {\n            this.breakType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"paginateBounds\", {\n        /**\n         * Gets or sets the `bounds` on the next page.\n         * @private\n         */\n        get: function () {\n            if (typeof this.layoutPaginateBounds === 'undefined' && this.layoutPaginateBounds == null) {\n                this.layoutPaginateBounds = new RectangleF(0, 0, 0, 0);\n            }\n            return this.layoutPaginateBounds;\n        },\n        set: function (value) {\n            this.layoutPaginateBounds = value;\n            this.boundsSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"usePaginateBounds\", {\n        /**\n         * Gets a value indicating whether [`use paginate bounds`].\n         * @private\n         */\n        get: function () {\n            // if (typeof this.boundsSet === 'undefined' || this.boundsSet == null) {\n            //      this.boundsSet = false;\n            // }\n            return this.boundsSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutFormat;\n}());\nexport { PdfLayoutFormat };\nvar PdfLayoutParams = /** @class */ (function () {\n    function PdfLayoutParams() {\n    }\n    Object.defineProperty(PdfLayoutParams.prototype, \"page\", {\n        // Properties\n        /**\n         * Gets or sets the layout `page` for the element.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        set: function (value) {\n            this.pdfPage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutParams.prototype, \"bounds\", {\n        /**\n         * Gets or sets layout `bounds` for the element.\n         * @private\n         */\n        get: function () {\n            return new RectangleF(this.layoutBounds.x, this.layoutBounds.y, this.layoutBounds.width, this.layoutBounds.height);\n        },\n        set: function (value) {\n            this.layoutBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutParams.prototype, \"format\", {\n        /**\n         * Gets or sets `layout settings` for the element.\n         * @private\n         */\n        get: function () {\n            return this.layoutFormat;\n        },\n        set: function (value) {\n            this.layoutFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutParams;\n}());\nexport { PdfLayoutParams };\nvar PdfLayoutResult = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes the new instance of `PdfLayoutResult` class.\n     * @private\n     */\n    function PdfLayoutResult(page, bounds) {\n        this.pdfPage = page;\n        this.layoutBounds = bounds;\n    }\n    Object.defineProperty(PdfLayoutResult.prototype, \"page\", {\n        // Properties\n        /**\n         * Gets the last `page` where the element was drawn.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutResult.prototype, \"bounds\", {\n        /**\n         * Gets the `bounds` of the element on the last page where it was drawn.\n         * @private\n         */\n        get: function () {\n            return this.layoutBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutResult;\n}());\nexport { PdfLayoutResult };\n","/**\n * PdfBorders.ts class for EJ2-PDF\n */\nimport { PdfPen } from './../../../graphics/pdf-pen';\nimport { PdfDashStyle } from './../../../graphics/enum';\nimport { PdfColor } from './../../../graphics/pdf-color';\n/**\n * `PdfBorders` class used represents the cell border of the PDF grid.\n */\nvar PdfBorders = /** @class */ (function () {\n    // Constructor\n    /**\n     * Create a new instance for `PdfBorders` class.\n     * @private\n     */\n    function PdfBorders() {\n        var defaultBorderPenLeft = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenLeft.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenRight = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenRight.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenTop = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenTop.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenBottom = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenBottom.dashStyle = PdfDashStyle.Solid;\n        this.leftPen = defaultBorderPenLeft;\n        this.rightPen = defaultBorderPenRight;\n        this.topPen = defaultBorderPenTop;\n        this.bottomPen = defaultBorderPenBottom;\n    }\n    Object.defineProperty(PdfBorders.prototype, \"left\", {\n        // Properties\n        /**\n         * Gets or sets the `Left`.\n         * @private\n         */\n        get: function () {\n            return this.leftPen;\n        },\n        set: function (value) {\n            this.leftPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"right\", {\n        /**\n         * Gets or sets the `Right`.\n         * @private\n         */\n        get: function () {\n            return this.rightPen;\n        },\n        set: function (value) {\n            this.rightPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"top\", {\n        /**\n         * Gets or sets the `Top`.\n         * @private\n         */\n        get: function () {\n            return this.topPen;\n        },\n        set: function (value) {\n            this.topPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `Bottom`.\n         * @private\n         */\n        get: function () {\n            return this.bottomPen;\n        },\n        set: function (value) {\n            this.bottomPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"all\", {\n        /**\n         * sets the `All`.\n         * @private\n         */\n        set: function (value) {\n            this.leftPen = this.rightPen = this.topPen = this.bottomPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"isAll\", {\n        /**\n         * Gets a value indicating whether this instance `is all`.\n         * @private\n         */\n        get: function () {\n            return ((this.leftPen === this.rightPen) && (this.leftPen === this.topPen) && (this.leftPen === this.bottomPen));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders, \"default\", {\n        /**\n         * Gets the `default`.\n         * @private\n         */\n        get: function () {\n            return new PdfBorders();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfBorders;\n}());\nexport { PdfBorders };\nvar PdfPaddings = /** @class */ (function () {\n    function PdfPaddings(left, right, top, bottom) {\n        /**\n         * The 'left' border padding set.\n         * @private\n         */\n        this.hasLeftPad = false;\n        /**\n         * The 'right' border padding set.\n         * @private\n         */\n        this.hasRightPad = false;\n        /**\n         * The 'top' border padding set.\n         * @private\n         */\n        this.hasTopPad = false;\n        /**\n         * The 'bottom' border padding set.\n         * @private\n         */\n        this.hasBottomPad = false;\n        if (typeof left === 'undefined') {\n            //0.5 is set for top and bottom by default.\n            this.bottomPad = this.topPad = this.leftPad = this.rightPad = 0.5;\n        }\n        else {\n            this.leftPad = left;\n            this.rightPad = right;\n            this.topPad = top;\n            this.bottomPad = bottom;\n            this.hasLeftPad = true;\n            this.hasRightPad = true;\n            this.hasTopPad = true;\n            this.hasBottomPad = true;\n        }\n    }\n    Object.defineProperty(PdfPaddings.prototype, \"left\", {\n        // Properties\n        /**\n         * Gets or sets the `left` value of the edge\n         * @private\n         */\n        get: function () {\n            return this.leftPad;\n        },\n        set: function (value) {\n            this.leftPad = value;\n            this.hasLeftPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"right\", {\n        /**\n         * Gets or sets the `right` value of the edge.\n         * @private\n         */\n        get: function () {\n            return this.rightPad;\n        },\n        set: function (value) {\n            this.rightPad = value;\n            this.hasRightPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"top\", {\n        /**\n         * Gets or sets the `top` value of the edge\n         * @private\n         */\n        get: function () {\n            return this.topPad;\n        },\n        set: function (value) {\n            this.topPad = value;\n            this.hasTopPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `bottom` value of the edge.\n         * @private\n         */\n        get: function () {\n            return this.bottomPad;\n        },\n        set: function (value) {\n            this.bottomPad = value;\n            this.hasBottomPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"all\", {\n        /**\n         * Sets value to all sides `left,right,top and bottom`.s\n         * @private\n         */\n        set: function (value) {\n            this.leftPad = this.rightPad = this.topPad = this.bottomPad = value;\n            this.hasLeftPad = true;\n            this.hasRightPad = true;\n            this.hasTopPad = true;\n            this.hasBottomPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPaddings;\n}());\nexport { PdfPaddings };\n","import { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutParams, PdfLayoutFormat } from './base/element-layouter';\nimport { PdfBorders } from './../../structured-elements/grid/styles/pdf-borders';\n/**\n * `PdfLayoutElement` class represents the base class for all elements that can be layout on the pages.\n * @private\n */\nvar PdfLayoutElement = /** @class */ (function () {\n    function PdfLayoutElement() {\n    }\n    Object.defineProperty(PdfLayoutElement.prototype, \"raiseBeginPageLayout\", {\n        // Property\n        /**\n         * Gets a value indicating whether the `start page layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.beginPageLayout !== 'undefined');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutElement.prototype, \"raiseEndPageLayout\", {\n        /**\n         * Gets a value indicating whether the `ending page layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.endPageLayout !== 'undefined');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Event Handlers\n    PdfLayoutElement.prototype.onBeginPageLayout = function (args) {\n        if (this.beginPageLayout) {\n            this.beginPageLayout(this, args);\n        }\n    };\n    PdfLayoutElement.prototype.onEndPageLayout = function (args) {\n        if (this.endPageLayout) {\n            this.endPageLayout(this, args);\n        }\n    };\n    PdfLayoutElement.prototype.drawHelper = function (arg2, arg3, arg4, arg5) {\n        if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg2, arg3.x, arg3.y);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            return this.drawHelper(arg2, arg3, arg4, null);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg2, arg3, null);\n        }\n        else if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && arg4 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg2, arg3.x, arg3.y, arg4);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof PdfLayoutFormat || arg5 == null)) {\n            var width = (arg2.graphics.clientSize.width - arg3);\n            var layoutRectangle = new RectangleF(arg3, arg4, width, 0);\n            return this.drawHelper(arg2, layoutRectangle, arg5);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {\n            this.bEmbedFonts = arg4;\n            return this.drawHelper(arg2, arg3, null);\n        }\n        else {\n            var param = new PdfLayoutParams();\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            param.page = arg2;\n            param.bounds = temparg3;\n            if (param != null) {\n                var x = param.bounds.x;\n                var y = param.bounds.y;\n                if (param.bounds.x === 0) {\n                    x = PdfBorders.default.right.width / 2;\n                }\n                if (param.bounds.y === 0) {\n                    y = PdfBorders.default.top.width / 2;\n                }\n                var newBound = new RectangleF(x, y, param.bounds.width, param.bounds.height);\n                param.bounds = newBound;\n            }\n            param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n            var result = this.layout(param);\n            return result;\n        }\n    };\n    return PdfLayoutElement;\n}());\nexport { PdfLayoutElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * TextLayouter.ts class for EJ2-PDF\n */\nimport { ElementLayouter, PdfLayoutResult } from './element-layouter';\nimport { PdfTextElement } from './../text-element';\nimport { RectangleF, SizeF } from './../../../drawing/pdf-drawing';\nimport { LineType, PdfStringLayouter } from './../../fonts/string-layouter';\nimport { PdfLayoutBreakType } from './../../figures/enum';\nimport { PdfColor } from './../../pdf-color';\nimport { PdfTextWebLink } from './../../../annotations/pdf-text-web-link';\nimport { PdfTextAlignment } from '../../enum';\n/**\n * Class that `layouts the text`.\n * @private\n */\nvar TextLayouter = /** @class */ (function (_super) {\n    __extends(TextLayouter, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `TextLayouter` class.\n     * @private\n     */\n    function TextLayouter(element) {\n        return _super.call(this, element) || this;\n    }\n    Object.defineProperty(TextLayouter.prototype, \"element\", {\n        /**\n         * Gets the layout `element`.\n         * @private\n         */\n        get: function () {\n            return _super.prototype.getElement.call(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    TextLayouter.prototype.layoutInternal = function (param) {\n        /* tslint:disable */\n        this.format = (this.element.stringFormat !== null && typeof this.element.stringFormat !== 'undefined') ? this.element.stringFormat : null;\n        var currentPage = param.page;\n        var currentBounds = param.bounds;\n        var text = this.element.value;\n        var result = null;\n        var pageResult = new TextPageLayoutResult();\n        pageResult.page = currentPage;\n        pageResult.remainder = text;\n        for (;;) {\n            pageResult = this.layoutOnPage(text, currentPage, currentBounds, param);\n            result = this.getLayoutResult(pageResult);\n            break;\n        }\n        /* tslint:enable */\n        return result;\n    };\n    /**\n     * Raises `PageLayout` event if needed.\n     * @private\n     */\n    TextLayouter.prototype.getLayoutResult = function (pageResult) {\n        var result = new PdfTextLayoutResult(pageResult.page, pageResult.bounds, pageResult.remainder, pageResult.lastLineBounds);\n        return result;\n    };\n    /* tslint:disable */\n    /**\n     * `Layouts` the text on the page.\n     * @private\n     */\n    TextLayouter.prototype.layoutOnPage = function (text, currentPage, currentBounds, param) {\n        var result = new TextPageLayoutResult();\n        result.remainder = text;\n        result.page = currentPage;\n        currentBounds = this.checkCorrectBounds(currentPage, currentBounds);\n        var layouter = new PdfStringLayouter();\n        var stringResult = layouter.layout(text, this.element.font, this.format, currentBounds, currentPage.getClientSize().height, false, new SizeF(0, 0));\n        var textFinished = (stringResult.remainder == null);\n        var doesntFit = (param.format.break === PdfLayoutBreakType.FitElement);\n        var canDraw = !(doesntFit || stringResult.empty);\n        // Draw the text.\n        var graphics = currentPage.graphics;\n        var brush = this.element.getBrush();\n        if (this.element instanceof PdfTextWebLink) {\n            brush.color = new PdfColor(0, 0, 255);\n            if (!this.element._isLastElement && this.element.stringFormat && this.element.stringFormat.alignment === PdfTextAlignment.Justify) {\n                stringResult.layoutLines[0].type = LineType.LayoutBreak | LineType.FirstParagraphLine;\n            }\n        }\n        if (this.element && this.element instanceof PdfTextElement && !this.element._isLastElement && this.element.stringFormat && this.element.stringFormat.alignment === PdfTextAlignment.Justify) {\n            stringResult.layoutLines[0].type = LineType.LayoutBreak | LineType.FirstParagraphLine;\n        }\n        graphics.drawStringLayoutResult(stringResult, this.element.font, this.element.pen, brush, currentBounds, this.format);\n        var lineInfo = stringResult.lines[stringResult.lineCount - 1];\n        result.lastLineBounds = graphics.getLineBounds(stringResult.lineCount - 1, stringResult, this.element.font, currentBounds, this.format);\n        result.bounds = this.getTextPageBounds(currentPage, currentBounds, stringResult);\n        result.remainder = stringResult.remainder;\n        result.end = (textFinished);\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * `Corrects current bounds` on the page.\n     * @private\n     */\n    TextLayouter.prototype.checkCorrectBounds = function (currentPage, currentBounds) {\n        var pageSize = currentPage.graphics.clientSize;\n        currentBounds.height = (currentBounds.height > 0) ? currentBounds.height : pageSize.height - currentBounds.y;\n        return currentBounds;\n    };\n    /**\n     * Returns a `rectangle` where the text was printed on the page.\n     * @private\n     */\n    /* tslint:disable */\n    TextLayouter.prototype.getTextPageBounds = function (currentPage, currentBounds, stringResult) {\n        var textSize = stringResult.actualSize;\n        var x = currentBounds.x;\n        var y = currentBounds.y;\n        var width = (currentBounds.width > 0) ? currentBounds.width : textSize.width;\n        var height = textSize.height;\n        var shiftedRect = currentPage.graphics.checkCorrectLayoutRectangle(textSize, currentBounds.x, currentBounds.y, this.format);\n        // if (currentBounds.width <= 0) {\n        x = shiftedRect.x;\n        // }\n        var verticalShift = currentPage.graphics.getTextVerticalAlignShift(textSize.height, currentBounds.height, this.format);\n        y += verticalShift;\n        var bounds = new RectangleF(x, y, width, height);\n        return bounds;\n    };\n    return TextLayouter;\n}(ElementLayouter));\nexport { TextLayouter };\nvar TextPageLayoutResult = /** @class */ (function () {\n    function TextPageLayoutResult() {\n    }\n    return TextPageLayoutResult;\n}());\nexport { TextPageLayoutResult };\nvar PdfTextLayoutResult = /** @class */ (function (_super) {\n    __extends(PdfTextLayoutResult, _super);\n    // Constructors\n    /**\n     * Initializes the new instance of `PdfTextLayoutResult` class.\n     * @private\n     */\n    function PdfTextLayoutResult(page, bounds, remainder, lastLineBounds) {\n        var _this = _super.call(this, page, bounds) || this;\n        _this.remainderText = remainder;\n        _this.lastLineTextBounds = lastLineBounds;\n        return _this;\n    }\n    Object.defineProperty(PdfTextLayoutResult.prototype, \"remainder\", {\n        // Properties\n        /**\n         * Gets a value that contains the `text` that was not printed.\n         * @private\n         */\n        get: function () {\n            return this.remainderText;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextLayoutResult.prototype, \"lastLineBounds\", {\n        /**\n         * Gets a value that indicates the `bounds` of the last line that was printed on the page.\n         * @private\n         */\n        get: function () {\n            return this.lastLineTextBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTextLayoutResult;\n}(PdfLayoutResult));\nexport { PdfTextLayoutResult };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfTextElement.ts class for EJ2-PDF\n */\nimport { PdfLayoutElement } from './../figures/layout-element';\nimport { PdfBrush } from './../brushes/pdf-brush';\nimport { PdfFont } from './../fonts/pdf-font';\nimport { PdfStandardFont } from './../fonts/pdf-standard-font';\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutParams } from './../figures/base/element-layouter';\nimport { TextLayouter } from './base/text-layouter';\nimport { PdfSolidBrush } from './../brushes/pdf-solid-brush';\nimport { PdfColor } from './../pdf-color';\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutFormat } from './base/element-layouter';\nimport { PdfStringLayouter } from './../fonts/string-layouter';\nimport { PdfTextAlignment } from './../enum';\n/**\n * `PdfTextElement` class represents the text area with the ability to span several pages\n * and inherited from the 'PdfLayoutElement' class.\n * @private\n */\nvar PdfTextElement = /** @class */ (function (_super) {\n    __extends(PdfTextElement, _super);\n    function PdfTextElement(arg1, arg2, arg3, arg4, arg5) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * `Text` data.\n         * @private\n         */\n        _this.content = '';\n        /**\n         * `Value` of text data.\n         * @private\n         */\n        _this.elementValue = '';\n        /**\n         * indicate whether the drawText with PointF overload is called or not.\n         * @default false\n         * @private\n         */\n        _this.hasPointOverload = false;\n        _this._isLastElement = false;\n        /**\n         * indicate whether the PdfGridCell value is `PdfTextElement`\n         * @default false\n         * @private\n         */\n        _this.isPdfTextElement = false;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (typeof arg1 === 'string' && typeof arg2 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && typeof arg3 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfPen && typeof arg4 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfPen = arg3;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfBrush && typeof arg4 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfBrush = arg3;\n        }\n        else {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfPen = arg3;\n            _this.pdfBrush = arg4;\n            _this.format = arg5;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTextElement.prototype, \"text\", {\n        // Properties\n        /**\n         * Gets or sets a value indicating the `text` that should be printed.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * //\n         * // set the link text\n         * textLink.text = 'Google';\n         * //\n         * // set the font\n         * textLink.font = font;\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.elementValue = value;\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"value\", {\n        //get value\n        /**\n         * Gets or sets a `value` indicating the text that should be printed.\n         * @private\n         */\n        get: function () {\n            return this.elementValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"pen\", {\n        //get pen\n        /**\n         * Gets or sets a `PdfPen` that determines the color, width, and style of the text\n         * @private\n         */\n        get: function () {\n            return this.pdfPen;\n        },\n        //Set pen value\n        set: function (value) {\n            this.pdfPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"brush\", {\n        //get brush\n        /**\n         * Gets or sets the `PdfBrush` that will be used to draw the text with color and texture.\n         * @private\n         */\n        get: function () {\n            return this.pdfBrush;\n        },\n        //Set brush value\n        set: function (value) {\n            this.pdfBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"font\", {\n        //get font\n        /**\n         * Gets or sets a `PdfFont` that defines the text format.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * // set the link text\n         * textLink.text = 'Google';\n         * //\n         * // set the font\n         * textLink.font = font;\n         * //\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfFont;\n        },\n        set: function (value) {\n            this.pdfFont = value;\n            if (this.pdfFont instanceof PdfStandardFont && this.content != null) {\n                this.elementValue = PdfStandardFont.convert(this.content);\n            }\n            else {\n                this.elementValue = this.content;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"stringFormat\", {\n        /**\n         * Gets or sets the `PdfStringFormat` that will be used to set the string format\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Gets a `brush` for drawing.\n     * @private\n     */\n    PdfTextElement.prototype.getBrush = function () {\n        return (this.pdfBrush == null || typeof this.pdfBrush === 'undefined') ? new PdfSolidBrush(new PdfColor(0, 0, 0)) : this.pdfBrush;\n    };\n    // /**\n    //  * `Draws` an element on the Graphics.\n    //  * @private\n    //  */\n    // public drawInternal(graphics : PdfGraphics) : void {\n    //     graphics.drawString(this.elementValue, this.pdfFont, this.pdfPen, this.getBrush(), 0, 0, this.stringFormat);\n    // }\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    PdfTextElement.prototype.layout = function (param) {\n        var layouter = new TextLayouter(this);\n        var result = layouter.layout(param);\n        return result;\n    };\n    PdfTextElement.prototype.drawText = function (arg2, arg3, arg4, arg5) {\n        if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && typeof arg4 === 'undefined') {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3.x, arg3.y);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3, arg4, null);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawText(arg2, arg3, null);\n        }\n        else if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && arg4 instanceof PdfLayoutFormat) {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3.x, arg3.y, arg4);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof PdfLayoutFormat || arg5 == null)) {\n            this.hasPointOverload = true;\n            var width = (arg2.graphics.clientSize.width - arg3);\n            var layoutRectangle = new RectangleF(arg3, arg4, width, 0);\n            return this.drawText(arg2, layoutRectangle, arg5);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {\n            return this.drawText(arg2, arg3, null);\n        }\n        else {\n            var layout = new PdfStringLayouter();\n            if (this.hasPointOverload) {\n                var stringLayoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF((arg2.graphics.clientSize.width - arg3.x), 0), true, arg2.graphics.clientSize);\n                var layoutResult = void 0;\n                var param = new PdfLayoutParams();\n                var temparg3 = arg3;\n                var temparg4 = arg4;\n                param.page = arg2;\n                var previousPage = arg2;\n                param.bounds = temparg3;\n                param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n                if (stringLayoutResult.lines.length > 1) {\n                    this.text = stringLayoutResult.layoutLines[0].text;\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n                        layoutResult = this.layout(param);\n                        var bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, arg2.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                        var isPaginate = false;\n                        for (var i = 1; i < stringLayoutResult.lines.length; i++) {\n                            param.page = layoutResult.page;\n                            param.bounds = new RectangleF(new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n                            this.text = stringLayoutResult.layoutLines[i].text;\n                            if (bounds.y + stringLayoutResult.lineHeight > layoutResult.page.graphics.clientSize.height) {\n                                isPaginate = true;\n                                param.page = param.page.graphics.getNextPage();\n                                if (previousPosition.y > (layoutResult.page.graphics.clientSize.height - layoutResult.bounds.height)) {\n                                    bounds = new RectangleF(0, layoutResult.bounds.height, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                                }\n                                else {\n                                    bounds = new RectangleF(0, 0, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                                }\n                                param.bounds = bounds;\n                            }\n                            if (i === stringLayoutResult.lines.length - 1) {\n                                this._isLastElement = true;\n                            }\n                            layoutResult = this.layout(param);\n                            if (i !== (stringLayoutResult.lines.length - 1)) {\n                                bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                            }\n                            else {\n                                var lineWidth = this.font.measureString(this.text, this.format).width;\n                                layoutResult = this.calculateResultBounds(layoutResult, lineWidth, layoutResult.page.graphics.clientSize.width, 0);\n                            }\n                        }\n                    }\n                    return layoutResult;\n                }\n                else {\n                    var lineSize = this.font.measureString(this.text, this.format);\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        layoutResult = this.layout(param);\n                        layoutResult = this.calculateResultBounds(layoutResult, lineSize.width, layoutResult.page.graphics.clientSize.width, 0);\n                    }\n                    return layoutResult;\n                }\n            }\n            else {\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg3.width, 0), false, arg2.graphics.clientSize);\n                var result = void 0;\n                var param = new PdfLayoutParams();\n                var temparg3 = arg3;\n                var temparg4 = arg4;\n                param.page = arg2;\n                param.bounds = temparg3;\n                param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n                if (layoutResult.lines.length > 1) {\n                    this.text = layoutResult.layoutLines[0].text;\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n                        result = this.layout(param);\n                        var bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                        var isPaginate = false;\n                        for (var i = 1; i < layoutResult.lines.length; i++) {\n                            param.page = result.page;\n                            param.bounds = new RectangleF(bounds.x, bounds.y, bounds.width, bounds.height);\n                            this.text = layoutResult.layoutLines[i].text;\n                            if (bounds.y + layoutResult.lineHeight > result.page.graphics.clientSize.height) {\n                                isPaginate = true;\n                                param.page = param.page.graphics.getNextPage();\n                                if (previousPosition.y > (result.page.graphics.clientSize.height - result.bounds.height)) {\n                                    bounds = new RectangleF(temparg3.x, layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                                }\n                                else {\n                                    bounds = new RectangleF(temparg3.x, 0, temparg3.width, layoutResult.lineHeight);\n                                }\n                                param.bounds = bounds;\n                            }\n                            result = this.layout(param);\n                            if (i !== (layoutResult.lines.length - 1)) {\n                                bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                            }\n                            else {\n                                var lineWidth = this.font.measureString(this.text, this.format).width;\n                                result = this.calculateResultBounds(result, lineWidth, temparg3.width, temparg3.x);\n                            }\n                        }\n                    }\n                    return result;\n                }\n                else {\n                    var lineSize = this.font.measureString(this.text, this.format);\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        result = this.layout(param);\n                        result = this.calculateResultBounds(result, lineSize.width, temparg3.width, temparg3.x);\n                    }\n                    return result;\n                }\n            }\n        }\n    };\n    PdfTextElement.prototype.calculateResultBounds = function (result, lineWidth, maximumWidth, startPosition) {\n        var shift = 0;\n        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n            result.bounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n            result.bounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n            result.bounds.x = startPosition + (maximumWidth - lineWidth);\n            result.bounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n            result.bounds.x = startPosition;\n            result.bounds.width = maximumWidth;\n        }\n        else {\n            result.bounds.width = startPosition;\n            result.bounds.width = lineWidth;\n        }\n        return result;\n    };\n    return PdfTextElement;\n}(PdfLayoutElement));\nexport { PdfTextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfActionLinkAnnotation } from './action-link-annotation';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfUriAction } from './../actions/uri-action';\n/**\n * `PdfUriAnnotation` class represents the Uri annotation.\n * @private\n */\nvar PdfUriAnnotation = /** @class */ (function (_super) {\n    __extends(PdfUriAnnotation, _super);\n    function PdfUriAnnotation(rectangle, uri) {\n        var _this = _super.call(this, rectangle) || this;\n        if (typeof uri !== 'undefined') {\n            _this.uri = uri;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uriAction\", {\n        /**\n         * Get `action` of the annotation.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfUriAction === 'undefined') {\n                this.pdfUriAction = new PdfUriAction();\n            }\n            return this.pdfUriAction;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uri\", {\n        // Properties\n        /**\n         * Gets or sets the `Uri` address.\n         * @private\n         */\n        get: function () {\n            return this.uriAction.uri;\n        },\n        set: function (value) {\n            if (this.uriAction.uri !== value) {\n                this.uriAction.uri = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfUriAnnotation.prototype, \"action\", {\n        /**\n         * Gets or sets the `action`.\n         * @private\n         */\n        get: function () {\n            return this.getSetAction();\n        },\n        set: function (value) {\n            this.getSetAction(value);\n            this.uriAction.next = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initializes` annotation object.\n     * @private\n     */\n    PdfUriAnnotation.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.link));\n        var tempPrimitive = this.uriAction.element;\n        this.dictionary.items.setValue(this.dictionaryProperties.a, this.uriAction.element);\n    };\n    return PdfUriAnnotation;\n}(PdfActionLinkAnnotation));\nexport { PdfUriAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPage } from './../pages/pdf-page';\nimport { PointF, RectangleF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTextElement } from './../graphics/figures/text-element';\nimport { PdfUriAnnotation } from './uri-annotation';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfFontStyle } from './../graphics/fonts/enum';\nimport { PdfTextAlignment } from './../graphics/enum';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\n * `PdfTextWebLink` class represents the class for text web link annotation.\n * ```typescript\n * // create a new PDF document.\n * let document : PdfDocument = new PdfDocument();\n * // add a page to the document.\n * let page1 : PdfPage = document.pages.add();\n * // create the font\n * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n * //\n * // create the Text Web Link\n * let textLink : PdfTextWebLink = new PdfTextWebLink();\n * // set the hyperlink\n * textLink.url = 'http://www.google.com';\n * // set the link text\n * textLink.text = 'Google';\n * // set the font\n * textLink.font = font;\n * // draw the hyperlink in PDF page\n * textLink.draw(page1, new PointF(10, 40));\n * //\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextWebLink = /** @class */ (function (_super) {\n    __extends(PdfTextWebLink, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfTextWebLink` class.\n     * @private\n     */\n    function PdfTextWebLink() {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Internal variable to store `Url`.\n         * @default ''\n         * @private\n         */\n        _this.uniformResourceLocator = '';\n        /**\n         * Internal variable to store `Uri Annotation` object.\n         * @default null\n         * @private\n         */\n        _this.uriAnnotation = null;\n        /**\n         * Checks whether the drawTextWebLink method with `PointF` overload is called or not.\n         * If it set as true, then the start position of each lines excluding firest line is changed as (0, Y).\n         * @private\n         * @hidden\n         */\n        _this.recalculateBounds = false;\n        _this.defaultBorder = new PdfArray();\n        for (var i = 0; i < 3; i++) {\n            _this.defaultBorder.add(new PdfNumber(0));\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTextWebLink.prototype, \"url\", {\n        // Properties\n        /**\n         * Gets or sets the `Uri address`.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * //\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * //\n         * // set the link text\n         * textLink.text = 'Google';\n         * // set the font\n         * textLink.font = font;\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.uniformResourceLocator;\n        },\n        set: function (value) {\n            if (value.length === 0) {\n                throw new Error('ArgumentException : Url - string can not be empty');\n            }\n            this.uniformResourceLocator = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextWebLink.prototype.draw = function (arg1, arg2) {\n        if (arg1 instanceof PdfPage) {\n            var layout = new PdfStringLayouter();\n            var previousFontStyle = this.font.style;\n            if (arg2 instanceof PointF) {\n                this.recalculateBounds = true;\n                this.font.style = PdfFontStyle.Underline;\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF((arg1.graphics.clientSize.width - arg2.x), 0), true, arg1.graphics.clientSize);\n                if (layoutResult.lines.length === 1) {\n                    var textSize = this.font.measureString(this.value);\n                    var rect = new RectangleF(arg2, textSize);\n                    rect = this.calculateBounds(rect, textSize.width, arg1.graphics.clientSize.width, arg2.x);\n                    this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n                    arg1.annotations.add(this.uriAnnotation);\n                    var result = this.drawText(arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return result;\n                }\n                else {\n                    var result = this.drawMultipleLineWithPoint(layoutResult, arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return result;\n                }\n            }\n            else {\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg2.width, 0), false, new SizeF(0, 0));\n                this.font.style = PdfFontStyle.Underline;\n                if (layoutResult.lines.length === 1) {\n                    var textSize = this.font.measureString(this.value);\n                    var rect = new RectangleF(new PointF(arg2.x, arg2.y), textSize);\n                    rect = this.calculateBounds(rect, textSize.width, arg2.width, arg2.x);\n                    this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n                    arg1.annotations.add(this.uriAnnotation);\n                    var returnValue = this.drawText(arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return returnValue;\n                }\n                else {\n                    var returnValue = this.drawMultipleLineWithBounds(layoutResult, arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return returnValue;\n                }\n            }\n        }\n        else {\n            var page = new PdfPage();\n            page = arg1.page;\n            return this.draw(page, arg2);\n        }\n    };\n    /* tslint:enable */\n    //Private methods\n    /**\n     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified location.\n     * @private\n     */\n    PdfTextWebLink.prototype.drawMultipleLineWithPoint = function (result, page, location) {\n        var layoutResult;\n        for (var i = 0; i < result.layoutLines.length; i++) {\n            var size = this.font.measureString(result.lines[i].text);\n            if (i === result.layoutLines.length - 1 && this.stringFormat && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n                this._isLastElement = true;\n            }\n            var bounds = new RectangleF(location, size);\n            if (i !== 0) {\n                bounds.x = 0;\n            }\n            this.text = result.lines[i].text;\n            if (bounds.y + size.height > page.graphics.clientSize.height) {\n                if (i !== 0) {\n                    page = page.graphics.getNextPage();\n                    bounds = new RectangleF(0, 0, page.graphics.clientSize.width, size.height);\n                    location.y = 0;\n                }\n                else {\n                    break;\n                }\n            }\n            bounds = this.calculateBounds(bounds, size.width, page.graphics.clientSize.width, bounds.x);\n            this.uriAnnotation = new PdfUriAnnotation(bounds, this.url);\n            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n            page.annotations.add(this.uriAnnotation);\n            if (i !== 0) {\n                layoutResult = this.drawText(page, new PointF(0, bounds.y));\n            }\n            else {\n                layoutResult = this.drawText(page, bounds.x, bounds.y);\n            }\n            location.y += size.height;\n        }\n        return layoutResult;\n    };\n    /**\n     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified bounds.\n     * @private\n     */\n    PdfTextWebLink.prototype.drawMultipleLineWithBounds = function (result, page, bounds) {\n        var layoutResult;\n        for (var i = 0; i < result.layoutLines.length; i++) {\n            var size = this.font.measureString(result.lines[i].text);\n            var internalBounds = new RectangleF(new PointF(bounds.x, bounds.y), size);\n            internalBounds = this.calculateBounds(internalBounds, size.width, bounds.width, bounds.x);\n            this.text = result.lines[i].text;\n            if (bounds.y + size.height > page.graphics.clientSize.height) {\n                if (i !== 0) {\n                    page = page.graphics.getNextPage();\n                    bounds = new RectangleF(bounds.x, 0, bounds.width, size.height);\n                    internalBounds.y = 0;\n                }\n                else {\n                    break;\n                }\n            }\n            this.uriAnnotation = new PdfUriAnnotation(internalBounds, this.url);\n            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n            page.annotations.add(this.uriAnnotation);\n            layoutResult = this.drawText(page, bounds);\n            bounds.y += size.height;\n        }\n        return layoutResult;\n    };\n    /* tslint:disable */\n    PdfTextWebLink.prototype.calculateBounds = function (currentBounds, lineWidth, maximumWidth, startPosition) {\n        var shift = 0;\n        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n            currentBounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n            currentBounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n            currentBounds.x = startPosition + (maximumWidth - lineWidth);\n            currentBounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n            currentBounds.x = startPosition;\n            currentBounds.width = maximumWidth;\n        }\n        else {\n            currentBounds.width = startPosition;\n            currentBounds.width = lineWidth;\n        }\n        return currentBounds;\n    };\n    return PdfTextWebLink;\n}(PdfTextElement));\nexport { PdfTextWebLink };\n","/**\n * PdfNumbersConvertor.ts class for EJ2-PDF\n * @private\n */\nimport { PdfNumberStyle } from './../../pages/enum';\n/**\n * `PdfNumbersConvertor` for convert page number into numbers, roman letters, etc.,\n * @private\n */\nvar PdfNumbersConvertor = /** @class */ (function () {\n    function PdfNumbersConvertor() {\n    }\n    // Static methods\n    /**\n     * Convert string value from page number with correct format.\n     * @private\n     */\n    PdfNumbersConvertor.convert = function (intArabic, numberStyle) {\n        var result = '';\n        switch (numberStyle) {\n            case PdfNumberStyle.None:\n                result = '';\n                break;\n            case PdfNumberStyle.Numeric:\n                result = intArabic.toString();\n                break;\n            case PdfNumberStyle.LowerLatin:\n                result = this.arabicToLetter(intArabic).toLowerCase();\n                break;\n            case PdfNumberStyle.LowerRoman:\n                result = this.arabicToRoman(intArabic).toLowerCase();\n                break;\n            case PdfNumberStyle.UpperLatin:\n                result = this.arabicToLetter(intArabic);\n                break;\n            case PdfNumberStyle.UpperRoman:\n                result = this.arabicToRoman(intArabic);\n                break;\n        }\n        return result;\n    };\n    /**\n     * Converts `arabic to roman` letters.\n     * @private\n     */\n    PdfNumbersConvertor.arabicToRoman = function (intArabic) {\n        var retval = '';\n        var retvalM = this.generateNumber(intArabic, 1000, 'M');\n        retval += retvalM.returnValue;\n        intArabic = retvalM.intArabic;\n        var retvalCM = this.generateNumber(intArabic, 900, 'CM');\n        retval += retvalCM.returnValue;\n        intArabic = retvalCM.intArabic;\n        var retvalD = this.generateNumber(intArabic, 500, 'D');\n        retval += retvalD.returnValue;\n        intArabic = retvalD.intArabic;\n        var retvalCD = this.generateNumber(intArabic, 400, 'CD');\n        retval += retvalCD.returnValue;\n        intArabic = retvalCD.intArabic;\n        var retvalC = this.generateNumber(intArabic, 100, 'C');\n        retval += retvalC.returnValue;\n        intArabic = retvalC.intArabic;\n        var retvalXC = this.generateNumber(intArabic, 90, 'XC');\n        retval += retvalXC.returnValue;\n        intArabic = retvalXC.intArabic;\n        var retvalL = this.generateNumber(intArabic, 50, 'L');\n        retval += retvalL.returnValue;\n        intArabic = retvalL.intArabic;\n        var retvalXL = this.generateNumber(intArabic, 40, 'XL');\n        retval += retvalXL.returnValue;\n        intArabic = retvalXL.intArabic;\n        var retvalX = this.generateNumber(intArabic, 10, 'X');\n        retval += retvalX.returnValue;\n        intArabic = retvalX.intArabic;\n        var retvalIX = this.generateNumber(intArabic, 9, 'IX');\n        retval += retvalIX.returnValue;\n        intArabic = retvalIX.intArabic;\n        var retvalV = this.generateNumber(intArabic, 5, 'V');\n        retval += retvalV.returnValue;\n        intArabic = retvalV.intArabic;\n        var retvalIV = this.generateNumber(intArabic, 4, 'IV');\n        retval += retvalIV.returnValue;\n        intArabic = retvalIV.intArabic;\n        var retvalI = this.generateNumber(intArabic, 1, 'I');\n        retval += retvalI.returnValue;\n        intArabic = retvalI.intArabic;\n        return retval.toString();\n    };\n    /**\n     * Converts `arabic to normal letters`.\n     * @private\n     */\n    PdfNumbersConvertor.arabicToLetter = function (arabic) {\n        var stack = this.convertToLetter(arabic);\n        var result = '';\n        while (stack.length > 0) {\n            var num = stack.pop();\n            result = this.appendChar(result, num);\n        }\n        return result.toString();\n    };\n    /**\n     * Generate a string value of an input number.\n     * @private\n     */\n    PdfNumbersConvertor.generateNumber = function (value, magnitude, letter) {\n        var numberstring = '';\n        while (value >= magnitude) {\n            value -= magnitude;\n            numberstring += letter;\n        }\n        return { returnValue: numberstring.toString(), intArabic: value };\n    };\n    /**\n     * Convert a input number into letters.\n     * @private\n     */\n    PdfNumbersConvertor.convertToLetter = function (arabic) {\n        if (arabic <= 0) {\n            throw Error('ArgumentOutOfRangeException-arabic, Value can not be less 0');\n        }\n        var stack = [];\n        while (arabic > this.letterLimit) {\n            var remainder = arabic % this.letterLimit;\n            if (remainder === 0.0) {\n                arabic = arabic / this.letterLimit - 1;\n                remainder = this.letterLimit;\n            }\n            else {\n                arabic /= this.letterLimit;\n            }\n            stack.push(remainder);\n        }\n        stack.push(arabic);\n        return stack;\n    };\n    /**\n     * Convert number to actual string value.\n     * @private\n     */\n    PdfNumbersConvertor.appendChar = function (builder, value) {\n        var letter = String.fromCharCode(PdfNumbersConvertor.acsiiStartIndex + value);\n        builder += letter;\n        return builder;\n    };\n    // Fields\n    /**\n     * numbers of letters in english [readonly].\n     * @default = 26.0\n     * @private\n     */\n    PdfNumbersConvertor.letterLimit = 26.0;\n    /**\n     * Resturns `acsii start index` value.\n     * @default 64\n     * @private\n     */\n    PdfNumbersConvertor.acsiiStartIndex = (65 - 1);\n    return PdfNumbersConvertor;\n}());\nexport { PdfNumbersConvertor };\n","/**\n * Represent class to store information about `template and value pairs`.\n * @private\n */\nvar PdfTemplateValuePair = /** @class */ (function () {\n    function PdfTemplateValuePair(template, value) {\n        // Fields\n        /**\n         * Internal variable to store template.\n         * @default null\n         * @private\n         */\n        this.pdfTemplate = null;\n        /**\n         * Intenal variable to store value.\n         * @private\n         */\n        this.content = '';\n        if (typeof template === 'undefined') {\n            //\n        }\n        else {\n            this.template = template;\n            this.value = value;\n        }\n    }\n    Object.defineProperty(PdfTemplateValuePair.prototype, \"template\", {\n        // Properties\n        /**\n         * Gets or sets the template.\n         * @private\n         */\n        get: function () {\n            return this.pdfTemplate;\n        },\n        set: function (value) {\n            this.pdfTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplateValuePair.prototype, \"value\", {\n        /**\n         * Gets or sets the value.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTemplateValuePair;\n}());\nexport { PdfTemplateValuePair };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfAutomaticField.ts class for EJ2-PDF\n */\nimport { PdfAutomaticField } from './automatic-field';\nimport { TemporaryDictionary } from './../../collections/object-object-pair/dictionary';\nimport { PdfTemplateValuePair } from './pdf-template-value-pair';\nimport { SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfTemplate } from './../../graphics/figures/pdf-template';\n/**\n * Represents automatic field which has the same value within the `PdfGraphics`.\n */\nvar PdfMultipleValueField = /** @class */ (function (_super) {\n    __extends(PdfMultipleValueField, _super);\n    function PdfMultipleValueField() {\n        var _this = _super.call(this) || this;\n        //  Fields\n        /**\n         * Stores the instance of dictionary values of `graphics and template value pair`.\n         * @private\n         */\n        _this.list = new TemporaryDictionary();\n        return _this;\n    }\n    // Implementation\n    /* tslint:disable */\n    PdfMultipleValueField.prototype.performDraw = function (graphics, location, scalingX, scalingY) {\n        _super.prototype.performDrawHelper.call(this, graphics, location, scalingX, scalingY);\n        var value = this.getValue(graphics);\n        var template = new PdfTemplate(this.getSize());\n        this.list.setValue(graphics, new PdfTemplateValuePair(template, value));\n        var g = template.graphics;\n        var size = this.getSize();\n        template.graphics.drawString(value, this.getFont(), this.pen, this.getBrush(), 0, 0, size.width, size.height, this.stringFormat);\n        var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n        graphics.drawPdfTemplate(template, drawLocation, new SizeF(template.width * scalingX, template.height * scalingY));\n    };\n    return PdfMultipleValueField;\n}(PdfAutomaticField));\nexport { PdfMultipleValueField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfBrush } from './../../graphics/brushes/pdf-brush';\nimport { PdfNumberStyle } from './../../pages/enum';\nimport { PdfNumbersConvertor } from './pdf-numbers-convertor';\nimport { PdfMultipleValueField } from './multiple-value-field';\n/**\n * Represents PDF document `page number field`.\n * @public\n */\nvar PdfPageNumberField = /** @class */ (function (_super) {\n    __extends(PdfPageNumberField, _super);\n    function PdfPageNumberField(font, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the number style of the page number field.\n         * @private\n         */\n        _this.internalNumberStyle = PdfNumberStyle.Numeric;\n        if (typeof arg2 === 'undefined') {\n            _this.font = font;\n        }\n        else if (arg2 instanceof PdfBrush) {\n            _this.font = font;\n            _this.brush = arg2;\n        }\n        else {\n            _this.font = font;\n            _this.bounds = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPageNumberField.prototype, \"numberStyle\", {\n        // Properties\n        /**\n         * Gets and sets the number style of the page number field.\n         * @private\n         */\n        get: function () {\n            return this.internalNumberStyle;\n        },\n        set: function (value) {\n            this.internalNumberStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return the `string` value of page number field.\n     * @public\n     */\n    PdfPageNumberField.prototype.getValue = function (graphics) {\n        var result = null;\n        var page = this.getPageFromGraphics(graphics);\n        result = this.internalGetValue(page);\n        return result;\n    };\n    /**\n     * Internal method to `get actual value of page number`.\n     * @private\n     */\n    PdfPageNumberField.prototype.internalGetValue = function (page) {\n        var document = page.document;\n        var pageIndex = document.pages.indexOf(page) + 1;\n        return PdfNumbersConvertor.convert(pageIndex, this.numberStyle);\n    };\n    return PdfPageNumberField;\n}(PdfMultipleValueField));\nexport { PdfPageNumberField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfCompositeField.ts class for EJ2-PDF\n */\nimport { PdfMultipleValueField } from './multiple-value-field';\n/**\n * Represents class which can concatenate multiple automatic fields into single string.\n */\nvar PdfCompositeField = /** @class */ (function (_super) {\n    __extends(PdfCompositeField, _super);\n    // Constructor\n    /**\n     * Initialize a new instance of `PdfCompositeField` class.\n     * @param font Font of the field.\n     * @param brush Color of the field.\n     * @param text Content of the field.\n     * @param list List of the automatic fields in specific order based on the text content.\n     */\n    function PdfCompositeField(font, brush, text) {\n        var list = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            list[_i - 3] = arguments[_i];\n        }\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the array of automatic fields.\n         * @private\n         */\n        _this.internalAutomaticFields = null;\n        /**\n         * Stores the text value of the field.\n         * @private\n         */\n        _this.internalText = '';\n        _this.font = font;\n        _this.brush = brush;\n        _this.text = text;\n        _this.automaticFields = list;\n        return _this;\n    }\n    Object.defineProperty(PdfCompositeField.prototype, \"text\", {\n        // Properties\n        /**\n         * Gets and sets the content of the field.\n         * @public\n         */\n        get: function () {\n            return this.internalText;\n        },\n        set: function (value) {\n            this.internalText = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCompositeField.prototype, \"automaticFields\", {\n        /**\n         * Gets and sets the list of the field to drawn.\n         * @public\n         */\n        get: function () {\n            return this.internalAutomaticFields;\n        },\n        set: function (value) {\n            this.internalAutomaticFields = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Return the actual value generated from the list of automatic fields.\n     * @public\n     */\n    PdfCompositeField.prototype.getValue = function (graphics) {\n        var values = [];\n        var text = this.text.toString();\n        if (typeof this.automaticFields !== 'undefined' && this.automaticFields != null && this.automaticFields.length > 0) {\n            for (var i = 0; i < this.automaticFields.length; i++) {\n                var automaticField = this.automaticFields[i];\n                text = text.replace('{' + i + '}', automaticField.getValue(graphics));\n            }\n        }\n        return text;\n    };\n    return PdfCompositeField;\n}(PdfMultipleValueField));\nexport { PdfCompositeField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSingleValueField.ts class for EJ2-PDF\n */\nimport { PdfAutomaticField } from './automatic-field';\nimport { TemporaryDictionary } from './../../collections/object-object-pair/dictionary';\nimport { PdfTemplateValuePair } from './pdf-template-value-pair';\nimport { PointF, SizeF } from './../../drawing/pdf-drawing';\nimport { PdfTemplate } from './../../graphics/figures/pdf-template';\n/**\n * Represents automatic field which has the same value in the whole document.\n */\nvar PdfSingleValueField = /** @class */ (function (_super) {\n    __extends(PdfSingleValueField, _super);\n    // Constructors\n    function PdfSingleValueField() {\n        var _this = _super.call(this) || this;\n        // Fields\n        /* tslint:disable */\n        _this.list = new TemporaryDictionary();\n        /* tslint:enable */\n        _this.painterGraphics = [];\n        return _this;\n    }\n    PdfSingleValueField.prototype.performDraw = function (graphics, location, scalingX, scalingY) {\n        _super.prototype.performDrawHelper.call(this, graphics, location, scalingX, scalingY);\n        var page = this.getPageFromGraphics(graphics);\n        var document = page.document;\n        var textValue = this.getValue(graphics);\n        /* tslint:disable */\n        if (this.list.containsKey(document)) {\n            var pair = this.list.getValue(document);\n            var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n            graphics.drawPdfTemplate(pair.template, drawLocation, new SizeF(pair.template.width * scalingX, pair.template.height * scalingY));\n            this.painterGraphics.push(graphics);\n        }\n        else {\n            var size = this.getSize();\n            var template = new PdfTemplate(size);\n            this.list.setValue(document, new PdfTemplateValuePair(template, textValue));\n            template.graphics.drawString(textValue, this.getFont(), this.pen, this.getBrush(), 0, 0, size.width, size.height, this.stringFormat);\n            var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n            graphics.drawPdfTemplate(template, drawLocation, new SizeF(template.width * scalingX, template.height * scalingY));\n            this.painterGraphics.push(graphics);\n        }\n        /* tslint:enable */\n    };\n    return PdfSingleValueField;\n}(PdfAutomaticField));\nexport { PdfSingleValueField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfPageCountField.ts class for EJ2-PDF\n */\nimport { PdfSingleValueField } from './single-value-field';\nimport { PdfNumberStyle } from './../../pages/enum';\nimport { PdfBrush } from './../../graphics/brushes/pdf-brush';\nimport { PdfNumbersConvertor } from './pdf-numbers-convertor';\n/**\n * Represents total PDF document page count automatic field.\n */\nvar PdfPageCountField = /** @class */ (function (_super) {\n    __extends(PdfPageCountField, _super);\n    function PdfPageCountField(font, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the number style of the field.\n         * @private\n         */\n        _this.internalNumberStyle = PdfNumberStyle.Numeric;\n        if (typeof arg2 === 'undefined') {\n            _this.font = font;\n        }\n        else if (arg2 instanceof PdfBrush) {\n            _this.font = font;\n            _this.brush = arg2;\n        }\n        else {\n            _this.font = font;\n            _this.bounds = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPageCountField.prototype, \"numberStyle\", {\n        // Properties\n        /**\n         * Gets and sets the number style of the field.\n         * @public\n         */\n        get: function () {\n            return this.internalNumberStyle;\n        },\n        set: function (value) {\n            this.internalNumberStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Return the actual value of the content to drawn.\n     * @public\n     */\n    PdfPageCountField.prototype.getValue = function (graphics) {\n        var result = null;\n        var page = this.getPageFromGraphics(graphics);\n        var document = page.section.parent.document;\n        var count = document.pages.count;\n        result = PdfNumbersConvertor.convert(count, this.numberStyle);\n        return result;\n    };\n    return PdfPageCountField;\n}(PdfSingleValueField));\nexport { PdfPageCountField };\n","/**\n * public Enum for `PdfDestinationMode`.\n * @private\n */\nexport var PdfDestinationMode;\n(function (PdfDestinationMode) {\n    /**\n     * Specifies the type of `Location`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"Location\"] = 0] = \"Location\";\n    /**\n     * Specifies the type of `FitToPage`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"FitToPage\"] = 1] = \"FitToPage\";\n    /**\n     * Specifies the type of `FitR`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"FitR\"] = 2] = \"FitR\";\n})(PdfDestinationMode || (PdfDestinationMode = {}));\n","import { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfPageRotateAngle } from './../pages/enum';\nimport { PdfDestinationMode } from './../general/enum';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfDestination` class represents an anchor in the document\n * where bookmarks or annotations can direct when clicked.\n */\nvar PdfDestination = /** @class */ (function () {\n    function PdfDestination(arg1, arg2) {\n        // Fields\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Type of the `destination`.\n         * @private\n         */\n        this.destinationMode = PdfDestinationMode.Location;\n        /**\n         * `Zoom` factor.\n         * @private\n         * @default 0\n         */\n        this.zoomFactor = 0;\n        /**\n         * `Location` of the destination.\n         * @default new PointF() with 0 ,0 as co-ordinates\n         * @private\n         */\n        this.destinationLocation = new PointF(0, 0);\n        /**\n         * `Bounds` of the destination as RectangleF.\n         * @default RectangleF.Empty\n         * @private\n         */\n        this.bounds = new RectangleF();\n        /**\n         * Pdf primitive representing `this` object.\n         * @private\n         */\n        this.array = new PdfArray();\n        var angle = PdfPageRotateAngle.RotateAngle0;\n        this.destinationLocation = new PointF(0, this.destinationLocation.y);\n        this.pdfPage = arg1;\n        if (arg2 instanceof PointF) {\n            this.destinationLocation = arg2;\n        }\n        else {\n            this.bounds = arg2;\n        }\n    }\n    Object.defineProperty(PdfDestination.prototype, \"zoom\", {\n        // Properties\n        /**\n         * Gets and Sets the `zoom` factor.\n         * @private\n         */\n        get: function () {\n            return this.zoomFactor;\n        },\n        set: function (value) {\n            this.zoomFactor = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"page\", {\n        /**\n         * Gets and Sets the `page` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        set: function (value) {\n            this.pdfPage = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"mode\", {\n        /**\n         * Gets and Sets the destination `mode`.\n         * @private\n         */\n        get: function () {\n            return this.destinationMode;\n        },\n        set: function (value) {\n            this.destinationMode = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"location\", {\n        /**\n         * Gets and Sets the `location`.\n         * @private\n         */\n        get: function () {\n            return this.destinationLocation;\n        },\n        set: function (value) {\n            this.destinationLocation = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Translates` co-ordinates to PDF co-ordinate system (lower/left).\n     * @private\n     */\n    PdfDestination.prototype.pointToNativePdf = function (page, point) {\n        var section = page.section;\n        return section.pointToNativePdf(page, point);\n    };\n    /**\n     * `In fills` array by correct values.\n     * @private\n     */\n    PdfDestination.prototype.initializePrimitive = function () {\n        this.array.clear();\n        this.array.add(new PdfReferenceHolder(this.pdfPage));\n        switch (this.destinationMode) {\n            case PdfDestinationMode.Location:\n                var simplePage = this.pdfPage;\n                var point = new PointF();\n                point = this.pointToNativePdf(simplePage, this.destinationLocation);\n                this.array.add(new PdfName(this.dictionaryProperties.xyz));\n                this.array.add(new PdfNumber(point.x));\n                this.array.add(new PdfNumber(point.y));\n                this.array.add(new PdfNumber(this.zoomFactor));\n                break;\n            case PdfDestinationMode.FitToPage:\n                this.array.add(new PdfName(this.dictionaryProperties.fit));\n                break;\n        }\n    };\n    Object.defineProperty(PdfDestination.prototype, \"element\", {\n        /**\n         * Gets the `element` representing this object.\n         * @private\n         */\n        get: function () {\n            this.initializePrimitive();\n            return this.array;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfDestination;\n}());\nexport { PdfDestination };\n","import { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nvar PdfFunction = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfFunction` class.\n     * @public\n     */\n    function PdfFunction(dictionary) {\n        //Field\n        /**\n         * Internal variable to store dictionary.\n         * @private\n         */\n        this.mDictionary = null;\n        /**\n         * Local variable to store the dictionary properties.\n         * @private\n         */\n        this.mDictionaryProperties = new DictionaryProperties();\n        this.mDictionary = dictionary;\n    }\n    Object.defineProperty(PdfFunction.prototype, \"domain\", {\n        //Properties\n        /**\n         * Gets or sets the domain of the function.\n         * @public\n         */\n        get: function () {\n            var domain = this.mDictionary.items.getValue(this.mDictionaryProperties.domain);\n            return domain;\n        },\n        set: function (value) {\n            this.mDictionary.items.setValue(this.mDictionaryProperties.domain, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFunction.prototype, \"range\", {\n        /**\n         * Gets or sets the range.\n         * @public\n         */\n        get: function () {\n            var range = (this.mDictionary.items.getValue(this.mDictionaryProperties.range));\n            return range;\n        },\n        set: function (value) {\n            this.mDictionary.items.setValue(this.mDictionaryProperties.range, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFunction.prototype, \"dictionary\", {\n        /**\n         * Gets the dictionary.\n         */\n        get: function () {\n            return this.mDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFunction.prototype, \"element\", {\n        //IPdfWrapper Members\n        /**\n         * Gets the element.\n         */\n        get: function () {\n            return this.mDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFunction;\n}());\nexport { PdfFunction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSampledFunction.ts class for EJ2-PDF\n * Implements PDF Sampled Function.\n */\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfFunction } from './pdf-function';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfNumber } from './../../primitives/pdf-number';\nvar PdfSampledFunction = /** @class */ (function (_super) {\n    __extends(PdfSampledFunction, _super);\n    /**\n     * Initializes a new instance of the `PdfSampledFunction` class.\n     * @public\n     */\n    function PdfSampledFunction(domain, range, sizes, samples) {\n        var _this = _super.call(this, new PdfStream()) || this;\n        if (typeof domain === 'undefined') {\n            _this.dictionary.items.setValue(_this.mDictionaryProperties.functionType, new PdfNumber(0));\n        }\n        else {\n            _this.dictionary.items.setValue(_this.mDictionaryProperties.functionType, new PdfNumber(0));\n            _this.checkParams(domain, range, sizes, samples);\n            _this.setDomainAndRange(domain, range);\n            _this.setSizeAndValues(sizes, samples);\n        }\n        return _this;\n    }\n    // Helper methods\n    /**\n     * Checks the input parameters.\n     */\n    PdfSampledFunction.prototype.checkParams = function (domain, range, sizes, samples) {\n        var rLength = range.length;\n        var dLength = domain.length;\n        var sLength = samples.length;\n        var frameLength = (rLength * (dLength / 4));\n    };\n    /**\n     * Sets the domain and range.\n     */\n    PdfSampledFunction.prototype.setDomainAndRange = function (domain, range) {\n        this.domain = new PdfArray(domain);\n        this.range = new PdfArray(range);\n    };\n    /**\n     * Sets the size and values.\n     */\n    PdfSampledFunction.prototype.setSizeAndValues = function (sizes, samples) {\n        var s = (this.dictionary);\n        s.isResource = true;\n        this.dictionary.items.setValue(this.mDictionaryProperties.size, new PdfArray(sizes));\n        this.dictionary.items.setValue(this.mDictionaryProperties.bitsPerSample, new PdfNumber(8));\n        s.writeBytes(samples);\n    };\n    return PdfSampledFunction;\n}(PdfFunction));\nexport { PdfSampledFunction };\n","/**\n * Specifies the constant values specifying whether to extend the shading\n * beyond the starting and ending points of the axis.\n */\nexport var PdfExtend;\n(function (PdfExtend) {\n    /**\n     * Do not extend any point.\n     */\n    PdfExtend[PdfExtend[\"None\"] = 0] = \"None\";\n    /**\n     * Extend start point.\n     */\n    PdfExtend[PdfExtend[\"Start\"] = 1] = \"Start\";\n    /**\n     * Extend end point.\n     */\n    PdfExtend[PdfExtend[\"End\"] = 2] = \"End\";\n    /**\n     * Extend both start and end points.\n     */\n    PdfExtend[PdfExtend[\"Both\"] = 3] = \"Both\";\n})(PdfExtend || (PdfExtend = {}));\n/**\n * Specifies the gradient direction of the linear gradient brush.\n */\nexport var PdfLinearGradientMode;\n(function (PdfLinearGradientMode) {\n    /**\n     * Specifies a gradient from upper right to lower left.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"BackwardDiagonal\"] = 0] = \"BackwardDiagonal\";\n    /**\n     * Specifies a gradient from upper left to lower right.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"ForwardDiagonal\"] = 1] = \"ForwardDiagonal\";\n    /**\n     * Specifies a gradient from left to right.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"Horizontal\"] = 2] = \"Horizontal\";\n    /**\n     * Specifies a gradient from top to bottom.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"Vertical\"] = 3] = \"Vertical\";\n})(PdfLinearGradientMode || (PdfLinearGradientMode = {}));\n/**\n * Shading type constants.\n */\nexport var ShadingType;\n(function (ShadingType) {\n    /**\n     * Function-based shading.\n     */\n    ShadingType[ShadingType[\"Function\"] = 1] = \"Function\";\n    /**\n     * Axial shading.\n     */\n    ShadingType[ShadingType[\"Axial\"] = 2] = \"Axial\";\n    /**\n     * Radial shading.\n     */\n    ShadingType[ShadingType[\"Radial\"] = 3] = \"Radial\";\n})(ShadingType || (ShadingType = {}));\nexport var KnownColor;\n(function (KnownColor) {\n    KnownColor[KnownColor[\"ActiveBorder\"] = 1] = \"ActiveBorder\";\n    KnownColor[KnownColor[\"ActiveCaption\"] = 2] = \"ActiveCaption\";\n    KnownColor[KnownColor[\"ActiveCaptionText\"] = 3] = \"ActiveCaptionText\";\n    KnownColor[KnownColor[\"AppWorkspace\"] = 4] = \"AppWorkspace\";\n    KnownColor[KnownColor[\"Control\"] = 5] = \"Control\";\n    KnownColor[KnownColor[\"ControlDark\"] = 6] = \"ControlDark\";\n    KnownColor[KnownColor[\"ControlDarkDark\"] = 7] = \"ControlDarkDark\";\n    KnownColor[KnownColor[\"ControlLight\"] = 8] = \"ControlLight\";\n    KnownColor[KnownColor[\"ControlLightLight\"] = 9] = \"ControlLightLight\";\n    KnownColor[KnownColor[\"ControlText\"] = 10] = \"ControlText\";\n    KnownColor[KnownColor[\"Desktop\"] = 11] = \"Desktop\";\n    KnownColor[KnownColor[\"GrayText\"] = 12] = \"GrayText\";\n    KnownColor[KnownColor[\"Highlight\"] = 13] = \"Highlight\";\n    KnownColor[KnownColor[\"HighlightText\"] = 14] = \"HighlightText\";\n    KnownColor[KnownColor[\"HotTrack\"] = 15] = \"HotTrack\";\n    KnownColor[KnownColor[\"InactiveBorder\"] = 16] = \"InactiveBorder\";\n    KnownColor[KnownColor[\"InactiveCaption\"] = 17] = \"InactiveCaption\";\n    KnownColor[KnownColor[\"InactiveCaptionText\"] = 18] = \"InactiveCaptionText\";\n    KnownColor[KnownColor[\"Info\"] = 19] = \"Info\";\n    KnownColor[KnownColor[\"InfoText\"] = 20] = \"InfoText\";\n    KnownColor[KnownColor[\"Menu\"] = 21] = \"Menu\";\n    KnownColor[KnownColor[\"MenuText\"] = 22] = \"MenuText\";\n    KnownColor[KnownColor[\"ScrollBar\"] = 23] = \"ScrollBar\";\n    KnownColor[KnownColor[\"Window\"] = 24] = \"Window\";\n    KnownColor[KnownColor[\"WindowFrame\"] = 25] = \"WindowFrame\";\n    KnownColor[KnownColor[\"WindowText\"] = 26] = \"WindowText\";\n    KnownColor[KnownColor[\"Transparent\"] = 27] = \"Transparent\";\n    KnownColor[KnownColor[\"AliceBlue\"] = 28] = \"AliceBlue\";\n    KnownColor[KnownColor[\"AntiqueWhite\"] = 29] = \"AntiqueWhite\";\n    KnownColor[KnownColor[\"Aqua\"] = 30] = \"Aqua\";\n    KnownColor[KnownColor[\"Aquamarine\"] = 31] = \"Aquamarine\";\n    KnownColor[KnownColor[\"Azure\"] = 32] = \"Azure\";\n    KnownColor[KnownColor[\"Beige\"] = 33] = \"Beige\";\n    KnownColor[KnownColor[\"Bisque\"] = 34] = \"Bisque\";\n    KnownColor[KnownColor[\"Black\"] = 35] = \"Black\";\n    KnownColor[KnownColor[\"BlanchedAlmond\"] = 36] = \"BlanchedAlmond\";\n    KnownColor[KnownColor[\"Blue\"] = 37] = \"Blue\";\n    KnownColor[KnownColor[\"BlueViolet\"] = 38] = \"BlueViolet\";\n    KnownColor[KnownColor[\"Brown\"] = 39] = \"Brown\";\n    KnownColor[KnownColor[\"BurlyWood\"] = 40] = \"BurlyWood\";\n    KnownColor[KnownColor[\"CadetBlue\"] = 41] = \"CadetBlue\";\n    KnownColor[KnownColor[\"Chartreuse\"] = 42] = \"Chartreuse\";\n    KnownColor[KnownColor[\"Chocolate\"] = 43] = \"Chocolate\";\n    KnownColor[KnownColor[\"Coral\"] = 44] = \"Coral\";\n    KnownColor[KnownColor[\"CornflowerBlue\"] = 45] = \"CornflowerBlue\";\n    KnownColor[KnownColor[\"Cornsilk\"] = 46] = \"Cornsilk\";\n    KnownColor[KnownColor[\"Crimson\"] = 47] = \"Crimson\";\n    KnownColor[KnownColor[\"Cyan\"] = 48] = \"Cyan\";\n    KnownColor[KnownColor[\"DarkBlue\"] = 49] = \"DarkBlue\";\n    KnownColor[KnownColor[\"DarkCyan\"] = 50] = \"DarkCyan\";\n    KnownColor[KnownColor[\"DarkGoldenrod\"] = 51] = \"DarkGoldenrod\";\n    KnownColor[KnownColor[\"DarkGray\"] = 52] = \"DarkGray\";\n    KnownColor[KnownColor[\"DarkGreen\"] = 53] = \"DarkGreen\";\n    KnownColor[KnownColor[\"DarkKhaki\"] = 54] = \"DarkKhaki\";\n    KnownColor[KnownColor[\"DarkMagenta\"] = 55] = \"DarkMagenta\";\n    KnownColor[KnownColor[\"DarkOliveGreen\"] = 56] = \"DarkOliveGreen\";\n    KnownColor[KnownColor[\"DarkOrange\"] = 57] = \"DarkOrange\";\n    KnownColor[KnownColor[\"DarkOrchid\"] = 58] = \"DarkOrchid\";\n    KnownColor[KnownColor[\"DarkRed\"] = 59] = \"DarkRed\";\n    KnownColor[KnownColor[\"DarkSalmon\"] = 60] = \"DarkSalmon\";\n    KnownColor[KnownColor[\"DarkSeaGreen\"] = 61] = \"DarkSeaGreen\";\n    KnownColor[KnownColor[\"DarkSlateBlue\"] = 62] = \"DarkSlateBlue\";\n    KnownColor[KnownColor[\"DarkSlateGray\"] = 63] = \"DarkSlateGray\";\n    KnownColor[KnownColor[\"DarkTurquoise\"] = 64] = \"DarkTurquoise\";\n    KnownColor[KnownColor[\"DarkViolet\"] = 65] = \"DarkViolet\";\n    KnownColor[KnownColor[\"DeepPink\"] = 66] = \"DeepPink\";\n    KnownColor[KnownColor[\"DeepSkyBlue\"] = 67] = \"DeepSkyBlue\";\n    KnownColor[KnownColor[\"DimGray\"] = 68] = \"DimGray\";\n    KnownColor[KnownColor[\"DodgerBlue\"] = 69] = \"DodgerBlue\";\n    KnownColor[KnownColor[\"Firebrick\"] = 70] = \"Firebrick\";\n    KnownColor[KnownColor[\"FloralWhite\"] = 71] = \"FloralWhite\";\n    KnownColor[KnownColor[\"ForestGreen\"] = 72] = \"ForestGreen\";\n    KnownColor[KnownColor[\"Fuchsia\"] = 73] = \"Fuchsia\";\n    KnownColor[KnownColor[\"Gainsboro\"] = 74] = \"Gainsboro\";\n    KnownColor[KnownColor[\"GhostWhite\"] = 75] = \"GhostWhite\";\n    KnownColor[KnownColor[\"Gold\"] = 76] = \"Gold\";\n    KnownColor[KnownColor[\"Goldenrod\"] = 77] = \"Goldenrod\";\n    KnownColor[KnownColor[\"Gray\"] = 78] = \"Gray\";\n    KnownColor[KnownColor[\"Green\"] = 79] = \"Green\";\n    KnownColor[KnownColor[\"GreenYellow\"] = 80] = \"GreenYellow\";\n    KnownColor[KnownColor[\"Honeydew\"] = 81] = \"Honeydew\";\n    KnownColor[KnownColor[\"HotPink\"] = 82] = \"HotPink\";\n    KnownColor[KnownColor[\"IndianRed\"] = 83] = \"IndianRed\";\n    KnownColor[KnownColor[\"Indigo\"] = 84] = \"Indigo\";\n    KnownColor[KnownColor[\"Ivory\"] = 85] = \"Ivory\";\n    KnownColor[KnownColor[\"Khaki\"] = 86] = \"Khaki\";\n    KnownColor[KnownColor[\"Lavender\"] = 87] = \"Lavender\";\n    KnownColor[KnownColor[\"LavenderBlush\"] = 88] = \"LavenderBlush\";\n    KnownColor[KnownColor[\"LawnGreen\"] = 89] = \"LawnGreen\";\n    KnownColor[KnownColor[\"LemonChiffon\"] = 90] = \"LemonChiffon\";\n    KnownColor[KnownColor[\"LightBlue\"] = 91] = \"LightBlue\";\n    KnownColor[KnownColor[\"LightCoral\"] = 92] = \"LightCoral\";\n    KnownColor[KnownColor[\"LightCyan\"] = 93] = \"LightCyan\";\n    KnownColor[KnownColor[\"LightGoldenrodYellow\"] = 94] = \"LightGoldenrodYellow\";\n    KnownColor[KnownColor[\"LightGray\"] = 95] = \"LightGray\";\n    KnownColor[KnownColor[\"LightGreen\"] = 96] = \"LightGreen\";\n    KnownColor[KnownColor[\"LightPink\"] = 97] = \"LightPink\";\n    KnownColor[KnownColor[\"LightSalmon\"] = 98] = \"LightSalmon\";\n    KnownColor[KnownColor[\"LightSeaGreen\"] = 99] = \"LightSeaGreen\";\n    KnownColor[KnownColor[\"LightSkyBlue\"] = 100] = \"LightSkyBlue\";\n    KnownColor[KnownColor[\"LightSlateGray\"] = 101] = \"LightSlateGray\";\n    KnownColor[KnownColor[\"LightSteelBlue\"] = 102] = \"LightSteelBlue\";\n    KnownColor[KnownColor[\"LightYellow\"] = 103] = \"LightYellow\";\n    KnownColor[KnownColor[\"Lime\"] = 104] = \"Lime\";\n    KnownColor[KnownColor[\"LimeGreen\"] = 105] = \"LimeGreen\";\n    KnownColor[KnownColor[\"Linen\"] = 106] = \"Linen\";\n    KnownColor[KnownColor[\"Magenta\"] = 107] = \"Magenta\";\n    KnownColor[KnownColor[\"Maroon\"] = 108] = \"Maroon\";\n    KnownColor[KnownColor[\"MediumAquamarine\"] = 109] = \"MediumAquamarine\";\n    KnownColor[KnownColor[\"MediumBlue\"] = 110] = \"MediumBlue\";\n    KnownColor[KnownColor[\"MediumOrchid\"] = 111] = \"MediumOrchid\";\n    KnownColor[KnownColor[\"MediumPurple\"] = 112] = \"MediumPurple\";\n    KnownColor[KnownColor[\"MediumSeaGreen\"] = 113] = \"MediumSeaGreen\";\n    KnownColor[KnownColor[\"MediumSlateBlue\"] = 114] = \"MediumSlateBlue\";\n    KnownColor[KnownColor[\"MediumSpringGreen\"] = 115] = \"MediumSpringGreen\";\n    KnownColor[KnownColor[\"MediumTurquoise\"] = 116] = \"MediumTurquoise\";\n    KnownColor[KnownColor[\"MediumVioletRed\"] = 117] = \"MediumVioletRed\";\n    KnownColor[KnownColor[\"MidnightBlue\"] = 118] = \"MidnightBlue\";\n    KnownColor[KnownColor[\"MintCream\"] = 119] = \"MintCream\";\n    KnownColor[KnownColor[\"MistyRose\"] = 120] = \"MistyRose\";\n    KnownColor[KnownColor[\"Moccasin\"] = 121] = \"Moccasin\";\n    KnownColor[KnownColor[\"NavajoWhite\"] = 122] = \"NavajoWhite\";\n    KnownColor[KnownColor[\"Navy\"] = 123] = \"Navy\";\n    KnownColor[KnownColor[\"OldLace\"] = 124] = \"OldLace\";\n    KnownColor[KnownColor[\"Olive\"] = 125] = \"Olive\";\n    KnownColor[KnownColor[\"OliveDrab\"] = 126] = \"OliveDrab\";\n    KnownColor[KnownColor[\"Orange\"] = 127] = \"Orange\";\n    KnownColor[KnownColor[\"OrangeRed\"] = 128] = \"OrangeRed\";\n    KnownColor[KnownColor[\"Orchid\"] = 129] = \"Orchid\";\n    KnownColor[KnownColor[\"PaleGoldenrod\"] = 130] = \"PaleGoldenrod\";\n    KnownColor[KnownColor[\"PaleGreen\"] = 131] = \"PaleGreen\";\n    KnownColor[KnownColor[\"PaleTurquoise\"] = 132] = \"PaleTurquoise\";\n    KnownColor[KnownColor[\"PaleVioletRed\"] = 133] = \"PaleVioletRed\";\n    KnownColor[KnownColor[\"PapayaWhip\"] = 134] = \"PapayaWhip\";\n    KnownColor[KnownColor[\"PeachPuff\"] = 135] = \"PeachPuff\";\n    KnownColor[KnownColor[\"Peru\"] = 136] = \"Peru\";\n    KnownColor[KnownColor[\"Pink\"] = 137] = \"Pink\";\n    KnownColor[KnownColor[\"Plum\"] = 138] = \"Plum\";\n    KnownColor[KnownColor[\"PowderBlue\"] = 139] = \"PowderBlue\";\n    KnownColor[KnownColor[\"Purple\"] = 140] = \"Purple\";\n    KnownColor[KnownColor[\"Red\"] = 141] = \"Red\";\n    KnownColor[KnownColor[\"RosyBrown\"] = 142] = \"RosyBrown\";\n    KnownColor[KnownColor[\"RoyalBlue\"] = 143] = \"RoyalBlue\";\n    KnownColor[KnownColor[\"SaddleBrown\"] = 144] = \"SaddleBrown\";\n    KnownColor[KnownColor[\"Salmon\"] = 145] = \"Salmon\";\n    KnownColor[KnownColor[\"SandyBrown\"] = 146] = \"SandyBrown\";\n    KnownColor[KnownColor[\"SeaGreen\"] = 147] = \"SeaGreen\";\n    KnownColor[KnownColor[\"SeaShell\"] = 148] = \"SeaShell\";\n    KnownColor[KnownColor[\"Sienna\"] = 149] = \"Sienna\";\n    KnownColor[KnownColor[\"Silver\"] = 150] = \"Silver\";\n    KnownColor[KnownColor[\"SkyBlue\"] = 151] = \"SkyBlue\";\n    KnownColor[KnownColor[\"SlateBlue\"] = 152] = \"SlateBlue\";\n    KnownColor[KnownColor[\"SlateGray\"] = 153] = \"SlateGray\";\n    KnownColor[KnownColor[\"Snow\"] = 154] = \"Snow\";\n    KnownColor[KnownColor[\"SpringGreen\"] = 155] = \"SpringGreen\";\n    KnownColor[KnownColor[\"SteelBlue\"] = 156] = \"SteelBlue\";\n    KnownColor[KnownColor[\"Tan\"] = 157] = \"Tan\";\n    KnownColor[KnownColor[\"Teal\"] = 158] = \"Teal\";\n    KnownColor[KnownColor[\"Thistle\"] = 159] = \"Thistle\";\n    KnownColor[KnownColor[\"Tomato\"] = 160] = \"Tomato\";\n    KnownColor[KnownColor[\"Turquoise\"] = 161] = \"Turquoise\";\n    KnownColor[KnownColor[\"Violet\"] = 162] = \"Violet\";\n    KnownColor[KnownColor[\"Wheat\"] = 163] = \"Wheat\";\n    KnownColor[KnownColor[\"White\"] = 164] = \"White\";\n    KnownColor[KnownColor[\"WhiteSmoke\"] = 165] = \"WhiteSmoke\";\n    KnownColor[KnownColor[\"Yellow\"] = 166] = \"Yellow\";\n    KnownColor[KnownColor[\"YellowGreen\"] = 167] = \"YellowGreen\";\n    KnownColor[KnownColor[\"ButtonFace\"] = 168] = \"ButtonFace\";\n    KnownColor[KnownColor[\"ButtonHighlight\"] = 169] = \"ButtonHighlight\";\n    KnownColor[KnownColor[\"ButtonShadow\"] = 170] = \"ButtonShadow\";\n    KnownColor[KnownColor[\"GradientActiveCaption\"] = 171] = \"GradientActiveCaption\";\n    KnownColor[KnownColor[\"GradientInactiveCaption\"] = 172] = \"GradientInactiveCaption\";\n    KnownColor[KnownColor[\"MenuBar\"] = 173] = \"MenuBar\";\n    KnownColor[KnownColor[\"MenuHighlight\"] = 174] = \"MenuHighlight\";\n})(KnownColor || (KnownColor = {}));\n","/**\n * PdfBrushes.ts class for EJ2-PDF\n */\nimport { PdfColor } from './../pdf-color';\nimport { Dictionary } from './../../collections/dictionary';\nimport { KnownColor } from './enum';\nimport { PdfSolidBrush } from './pdf-solid-brush';\n/**\n * `PdfBrushes` class provides objects used to fill the interiors of graphical shapes such as rectangles,\n * ellipses, pies, polygons, and paths.\n * @private\n */\nvar PdfBrushes = /** @class */ (function () {\n    function PdfBrushes() {\n    }\n    Object.defineProperty(PdfBrushes, \"AliceBlue\", {\n        //Static Properties\n        /**\n         * Gets the AliceBlue brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.AliceBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.AliceBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.AliceBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"AntiqueWhite\", {\n        /**\n         * Gets the antique white brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.AntiqueWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.AntiqueWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.AntiqueWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Aqua\", {\n        /**\n         * Gets the Aqua default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Aqua)) {\n                brush = (this.sBrushes.getValue(KnownColor.Aqua));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Aqua);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Aquamarine\", {\n        /**\n         * Gets the Aquamarine default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Aquamarine)) {\n                brush = (this.sBrushes.getValue(KnownColor.Aquamarine));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Aquamarine);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Azure\", {\n        /**\n         * Gets the Azure default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Azure)) {\n                brush = (this.sBrushes.getValue(KnownColor.Azure));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Azure);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Beige\", {\n        /**\n         * Gets the Beige default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Beige)) {\n                brush = (this.sBrushes.getValue(KnownColor.Beige));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Beige);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Bisque\", {\n        /**\n         * Gets the Bisque default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Bisque)) {\n                brush = (this.sBrushes.getValue(KnownColor.Bisque));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Bisque);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Black\", {\n        /**\n         * Gets the Black default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Black)) {\n                brush = (this.sBrushes.getValue(KnownColor.Black));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Black);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"BlanchedAlmond\", {\n        /**\n         * Gets the BlanchedAlmond default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.BlanchedAlmond)) {\n                brush = (this.sBrushes.getValue(KnownColor.BlanchedAlmond));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.BlanchedAlmond);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Blue\", {\n        /**\n         * Gets the Blue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Blue)) {\n                brush = (this.sBrushes.getValue(KnownColor.Blue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Blue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"BlueViolet\", {\n        /**\n         * Gets the BlueViolet default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.BlueViolet)) {\n                brush = (this.sBrushes.getValue(KnownColor.BlueViolet));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.BlueViolet);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Brown\", {\n        /**\n         * Gets the Brown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Brown)) {\n                brush = (this.sBrushes.getValue(KnownColor.Brown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Brown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"BurlyWood\", {\n        /**\n         * Gets the BurlyWood default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.BurlyWood)) {\n                brush = (this.sBrushes.getValue(KnownColor.BurlyWood));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.BurlyWood);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"CadetBlue\", {\n        /**\n         * Gets the CadetBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.CadetBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.CadetBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.CadetBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Chartreuse\", {\n        /**\n         * Gets the Chartreuse default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Chartreuse)) {\n                brush = (this.sBrushes.getValue(KnownColor.Chartreuse));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Chartreuse);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Chocolate\", {\n        /**\n         * Gets the Chocolate default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Chocolate)) {\n                brush = (this.sBrushes.getValue(KnownColor.Chocolate));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Chocolate);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Coral\", {\n        /**\n         * Gets the Coral default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Coral)) {\n                brush = (this.sBrushes.getValue(KnownColor.Coral));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Coral);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"CornflowerBlue\", {\n        /**\n         * Gets the CornflowerBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.CornflowerBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.CornflowerBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.CornflowerBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Cornsilk\", {\n        /**\n         * Gets the Corn silk default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Cornsilk)) {\n                brush = (this.sBrushes.getValue(KnownColor.Cornsilk));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Cornsilk);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Crimson\", {\n        /**\n         *  Gets the Crimson default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Crimson)) {\n                brush = (this.sBrushes.getValue(KnownColor.Crimson));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Crimson);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Cyan\", {\n        /**\n         * Gets the Cyan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Cyan)) {\n                brush = (this.sBrushes.getValue(KnownColor.Cyan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Cyan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkBlue\", {\n        /**\n         * Gets the DarkBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkCyan\", {\n        /**\n         * Gets the DarkCyan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkCyan)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkCyan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkCyan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkGoldenrod\", {\n        /**\n         * Gets the DarkGoldenrod default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkGoldenrod)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkGoldenrod));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkGoldenrod);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkGray\", {\n        /**\n         * Gets the DarkGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkGreen\", {\n        /**\n         * Gets the DarkGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkKhaki\", {\n        /**\n         * Gets the DarkKhaki default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkKhaki)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkKhaki));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkKhaki);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkMagenta\", {\n        /**\n         * Gets the DarkMagenta default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkMagenta)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkMagenta));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkMagenta);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkOliveGreen\", {\n        /**\n         * Gets the DarkOliveGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkOliveGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkOliveGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkOliveGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkOrange\", {\n        /**\n         * Gets the DarkOrange default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkOrange)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkOrange));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkOrange);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkOrchid\", {\n        /**\n         * Gets the DarkOrchid default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkOrchid)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkOrchid));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkOrchid);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkRed\", {\n        /**\n         * Gets the DarkRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSalmon\", {\n        /**\n         * Gets the DarkSalmon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSalmon)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSalmon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSalmon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSeaGreen\", {\n        /**\n         * Gets the DarkSeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSlateBlue\", {\n        /**\n         * Gets the DarkSlateBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSlateBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSlateBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSlateBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSlateGray\", {\n        /**\n         * Gets the DarkSlateGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSlateGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSlateGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSlateGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkTurquoise\", {\n        /**\n         * Gets the DarkTurquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkTurquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkTurquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkTurquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkViolet\", {\n        /**\n         * Gets the DarkViolet default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkViolet)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkViolet));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkViolet);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DeepPink\", {\n        /**\n         * Gets the DeepPink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DeepPink)) {\n                brush = (this.sBrushes.getValue(KnownColor.DeepPink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DeepPink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DeepSkyBlue\", {\n        /**\n         * Gets the DeepSkyBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DeepSkyBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DeepSkyBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DeepSkyBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DimGray\", {\n        /**\n         * Gets the DimGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DimGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.DimGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DimGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DodgerBlue\", {\n        /**\n         * Gets the DodgerBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DodgerBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DodgerBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DodgerBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Firebrick\", {\n        /**\n         * Gets the Firebrick default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Firebrick)) {\n                brush = (this.sBrushes.getValue(KnownColor.Firebrick));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Firebrick);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"FloralWhite\", {\n        /**\n         * Gets the FloralWhite default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.FloralWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.FloralWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.FloralWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"ForestGreen\", {\n        /**\n         * Gets the ForestGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.ForestGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.ForestGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.ForestGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Fuchsia\", {\n        /**\n         * Gets the Fuchsia default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Fuchsia)) {\n                brush = (this.sBrushes.getValue(KnownColor.Fuchsia));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Fuchsia);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Gainsboro\", {\n        /**\n         * Gets the Gainsborough default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Gainsboro)) {\n                brush = (this.sBrushes.getValue(KnownColor.Gainsboro));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Gainsboro);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"GhostWhite\", {\n        /**\n         * Gets the GhostWhite default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.GhostWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.GhostWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.GhostWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Gold\", {\n        /**\n         * Gets the Gold default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Gold)) {\n                brush = (this.sBrushes.getValue(KnownColor.Gold));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Gold);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Goldenrod\", {\n        /**\n         * Gets the Goldenrod default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Goldenrod)) {\n                brush = (this.sBrushes.getValue(KnownColor.Goldenrod));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Goldenrod);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Gray\", {\n        /**\n         * Gets the Gray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Gray)) {\n                brush = (this.sBrushes.getValue(KnownColor.Gray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Gray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Green\", {\n        /**\n         * Gets the Green default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Green)) {\n                brush = (this.sBrushes.getValue(KnownColor.Green));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Green);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"GreenYellow\", {\n        /**\n         * Gets the GreenYellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.GreenYellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.GreenYellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.GreenYellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Honeydew\", {\n        /**\n         * Gets the Honeydew default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Honeydew)) {\n                brush = (this.sBrushes.getValue(KnownColor.Honeydew));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Honeydew);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"HotPink\", {\n        /**\n         * Gets the HotPink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.HotPink)) {\n                brush = (this.sBrushes.getValue(KnownColor.HotPink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.HotPink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"IndianRed\", {\n        /**\n         * Gets the IndianRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.IndianRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.IndianRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.IndianRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Indigo\", {\n        /**\n         * Gets the Indigo default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Indigo)) {\n                brush = (this.sBrushes.getValue(KnownColor.Indigo));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Indigo);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Ivory\", {\n        /**\n         * Gets the Ivory default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Ivory)) {\n                brush = (this.sBrushes.getValue(KnownColor.Ivory));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Ivory);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Khaki\", {\n        /**\n         * Gets the Khaki default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Khaki)) {\n                brush = (this.sBrushes.getValue(KnownColor.Khaki));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Khaki);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Lavender\", {\n        /**\n         * Gets the Lavender default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Lavender)) {\n                brush = (this.sBrushes.getValue(KnownColor.Lavender));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Lavender);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LavenderBlush\", {\n        /**\n         * Gets the LavenderBlush default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LavenderBlush)) {\n                brush = (this.sBrushes.getValue(KnownColor.LavenderBlush));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LavenderBlush);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LawnGreen\", {\n        /**\n         * Gets the LawnGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LawnGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LawnGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LawnGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LemonChiffon\", {\n        /**\n         * Gets the LemonChiffon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LemonChiffon)) {\n                brush = (this.sBrushes.getValue(KnownColor.LemonChiffon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LemonChiffon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightBlue\", {\n        /**\n         * Gets the LightBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightCoral\", {\n        /**\n         * Gets the LightCoral default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightCoral)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightCoral));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightCoral);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightCyan\", {\n        /**\n         * Gets the LightCyan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightCyan)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightCyan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightCyan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightGoldenrodYellow\", {\n        /**\n         * Gets the LightGoldenrodYellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightGoldenrodYellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightGoldenrodYellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightGoldenrodYellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightGray\", {\n        /**\n         * Gets the LightGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightGreen\", {\n        /**\n         * Gets the LightGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightPink\", {\n        /**\n         * Gets the LightPink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightPink)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightPink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightPink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSalmon\", {\n        /**\n         * Gets the LightSalmon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSalmon)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSalmon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSalmon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSeaGreen\", {\n        /**\n         * Gets the LightSeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSkyBlue\", {\n        /**\n         * Gets the LightSkyBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSkyBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSkyBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSkyBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSlateGray\", {\n        /**\n         * Gets the LightSlateGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSlateGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSlateGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSlateGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSteelBlue\", {\n        /**\n         * Gets the LightSteelBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSteelBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSteelBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSteelBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightYellow\", {\n        /**\n         * Gets the LightYellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightYellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightYellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightYellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Lime\", {\n        /**\n         * Gets the Lime default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Lime)) {\n                brush = (this.sBrushes.getValue(KnownColor.Lime));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Lime);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LimeGreen\", {\n        /**\n         * Gets the LimeGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LimeGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LimeGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LimeGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Linen\", {\n        /**\n         * Gets the Linen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Linen)) {\n                brush = (this.sBrushes.getValue(KnownColor.Linen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Linen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Magenta\", {\n        /**\n         * Gets the Magenta default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Magenta)) {\n                brush = (this.sBrushes.getValue(KnownColor.Magenta));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Magenta);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Maroon\", {\n        /**\n         * Gets the Maroon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Maroon)) {\n                brush = (this.sBrushes.getValue(KnownColor.Maroon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Maroon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumAquamarine\", {\n        /**\n         * Gets the MediumAquamarine default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumAquamarine)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumAquamarine));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumAquamarine);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumBlue\", {\n        /**\n         * Gets the MediumBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumOrchid\", {\n        /**\n         * Gets the MediumOrchid default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumOrchid)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumOrchid));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumOrchid);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumPurple\", {\n        /**\n         * Gets the MediumPurple default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumPurple)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumPurple));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumPurple);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumSeaGreen\", {\n        /**\n         * Gets the MediumSeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumSeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumSeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumSeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumSlateBlue\", {\n        /**\n         * Gets the MediumSlateBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumSlateBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumSlateBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumSlateBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumSpringGreen\", {\n        /**\n         * Gets the MediumSpringGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumSpringGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumSpringGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumSpringGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumTurquoise\", {\n        /**\n         * Gets the MediumTurquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumTurquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumTurquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumTurquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumVioletRed\", {\n        /**\n         * Gets the MediumVioletRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumVioletRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumVioletRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumVioletRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MidnightBlue\", {\n        /**\n         * Gets the MidnightBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MidnightBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.MidnightBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MidnightBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MintCream\", {\n        /**\n         * Gets the MintCream default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MintCream)) {\n                brush = (this.sBrushes.getValue(KnownColor.MintCream));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MintCream);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MistyRose\", {\n        /**\n         * Gets the MistyRose default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MistyRose)) {\n                brush = (this.sBrushes.getValue(KnownColor.MistyRose));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MistyRose);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Moccasin\", {\n        /**\n         * Gets the Moccasin default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Moccasin)) {\n                brush = (this.sBrushes.getValue(KnownColor.Moccasin));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Moccasin);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"NavajoWhite\", {\n        /**\n         * Gets the NavajoWhite default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.NavajoWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.NavajoWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.NavajoWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Navy\", {\n        /**\n         * Gets the Navy default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Navy)) {\n                brush = (this.sBrushes.getValue(KnownColor.Navy));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Navy);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"OldLace\", {\n        /**\n         * Gets the OldLace default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.OldLace)) {\n                brush = (this.sBrushes.getValue(KnownColor.OldLace));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.OldLace);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Olive\", {\n        /**\n         * Gets the Olive default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Olive)) {\n                brush = (this.sBrushes.getValue(KnownColor.Olive));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Olive);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"OliveDrab\", {\n        /**\n         * Gets the OliveDrab default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.OliveDrab)) {\n                brush = (this.sBrushes.getValue(KnownColor.OliveDrab));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.OliveDrab);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Orange\", {\n        /**\n         * Gets the Orange default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Orange)) {\n                brush = (this.sBrushes.getValue(KnownColor.Orange));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Orange);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"OrangeRed\", {\n        /**\n         * Gets the OrangeRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.OrangeRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.OrangeRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.OrangeRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Orchid\", {\n        /**\n         * Gets the Orchid default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Orchid)) {\n                brush = (this.sBrushes.getValue(KnownColor.Orchid));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Orchid);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleGoldenrod\", {\n        /**\n         * Gets the PaleGoldenrod default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleGoldenrod)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleGoldenrod));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleGoldenrod);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleGreen\", {\n        /**\n         * Gets the PaleGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleTurquoise\", {\n        /**\n         * Gets the PaleTurquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleTurquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleTurquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleTurquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleVioletRed\", {\n        /**\n         * Gets the PaleVioletRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleVioletRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleVioletRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleVioletRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PapayaWhip\", {\n        /**\n         * Gets the PapayaWhip default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PapayaWhip)) {\n                brush = (this.sBrushes.getValue(KnownColor.PapayaWhip));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PapayaWhip);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PeachPuff\", {\n        /**\n         * Gets the PeachPuff default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PeachPuff)) {\n                brush = (this.sBrushes.getValue(KnownColor.PeachPuff));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PeachPuff);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Peru\", {\n        /**\n         * Gets the Peru default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Peru)) {\n                brush = (this.sBrushes.getValue(KnownColor.Peru));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Peru);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Pink\", {\n        /**\n         * Gets the Pink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Pink)) {\n                brush = (this.sBrushes.getValue(KnownColor.Pink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Pink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Plum\", {\n        /**\n         * Gets the Plum default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Plum)) {\n                brush = (this.sBrushes.getValue(KnownColor.Plum));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Plum);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PowderBlue\", {\n        /**\n         * Gets the PowderBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PowderBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.PowderBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PowderBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Purple\", {\n        /**\n         * Gets the Purple default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Purple)) {\n                brush = (this.sBrushes.getValue(KnownColor.Purple));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Purple);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Red\", {\n        /**\n         * Gets the Red default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Red)) {\n                brush = (this.sBrushes.getValue(KnownColor.Red));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Red);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"RosyBrown\", {\n        /**\n         * Gets the RosyBrown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.RosyBrown)) {\n                brush = (this.sBrushes.getValue(KnownColor.RosyBrown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.RosyBrown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"RoyalBlue\", {\n        /**\n         * Gets the RoyalBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.RoyalBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.RoyalBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.RoyalBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SaddleBrown\", {\n        /**\n         * Gets the SaddleBrown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SaddleBrown)) {\n                brush = (this.sBrushes.getValue(KnownColor.SaddleBrown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SaddleBrown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Salmon\", {\n        /**\n         * Gets the Salmon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Salmon)) {\n                brush = (this.sBrushes.getValue(KnownColor.Salmon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Salmon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SandyBrown\", {\n        /**\n         * Gets the SandyBrown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SandyBrown)) {\n                brush = (this.sBrushes.getValue(KnownColor.SandyBrown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SandyBrown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SeaGreen\", {\n        /**\n         * Gets the SeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.SeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SeaShell\", {\n        /**\n         * Gets the SeaShell default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SeaShell)) {\n                brush = (this.sBrushes.getValue(KnownColor.SeaShell));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SeaShell);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Sienna\", {\n        /**\n         * Gets the Sienna default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Sienna)) {\n                brush = (this.sBrushes.getValue(KnownColor.Sienna));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Sienna);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Silver\", {\n        /**\n         * Gets the Silver default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Silver)) {\n                brush = (this.sBrushes.getValue(KnownColor.Silver));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Silver);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SkyBlue\", {\n        /**\n         * Gets the SkyBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SkyBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.SkyBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SkyBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SlateBlue\", {\n        /**\n         * Gets the SlateBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SlateBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.SlateBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SlateBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SlateGray\", {\n        /**\n         * Gets the SlateGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SlateGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.SlateGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SlateGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Snow\", {\n        /**\n         * Gets the Snow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Snow)) {\n                brush = (this.sBrushes.getValue(KnownColor.Snow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Snow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SpringGreen\", {\n        /**\n         * Gets the SpringGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SpringGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.SpringGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SpringGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SteelBlue\", {\n        /**\n         * Gets the SteelBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SteelBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.SteelBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SteelBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Tan\", {\n        /**\n         * Gets the Tan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Tan)) {\n                brush = (this.sBrushes.getValue(KnownColor.Tan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Tan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Teal\", {\n        /**\n         * Gets the Teal default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Teal)) {\n                brush = (this.sBrushes.getValue(KnownColor.Teal));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Teal);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Thistle\", {\n        /**\n         * Gets the Thistle default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Thistle)) {\n                brush = (this.sBrushes.getValue(KnownColor.Thistle));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Thistle);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Tomato\", {\n        /**\n         * Gets the Tomato default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Tomato)) {\n                brush = (this.sBrushes.getValue(KnownColor.Tomato));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Tomato);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Transparent\", {\n        /**\n         * Gets the Transparent default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Transparent)) {\n                brush = (this.sBrushes.getValue(KnownColor.Transparent));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Transparent);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Turquoise\", {\n        /**\n         * Gets the Turquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Turquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.Turquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Turquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Violet\", {\n        /**\n         * Gets the Violet default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Violet)) {\n                brush = (this.sBrushes.getValue(KnownColor.Violet));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Violet);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Wheat\", {\n        /**\n         * Gets the Wheat default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Wheat)) {\n                brush = (this.sBrushes.getValue(KnownColor.Wheat));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Wheat);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"White\", {\n        /**\n         * Gets the White default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.White)) {\n                brush = (this.sBrushes.getValue(KnownColor.White));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.White);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"WhiteSmoke\", {\n        /**\n         * Gets the WhiteSmoke default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.WhiteSmoke)) {\n                brush = (this.sBrushes.getValue(KnownColor.WhiteSmoke));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.WhiteSmoke);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Yellow\", {\n        /**\n         * Gets the Yellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Yellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.Yellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Yellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"YellowGreen\", {\n        /**\n         * Gets the YellowGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.YellowGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.YellowGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.YellowGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get the brush.\n     */\n    PdfBrushes.getBrush = function (colorName) {\n        var pdfColor = this.getColorValue(colorName);\n        var brush = new PdfSolidBrush(pdfColor);\n        this.sBrushes.setValue(colorName, brush);\n        return brush;\n    };\n    /**\n     * Get the color value.\n     * @param colorName The KnownColor name.\n     */\n    /* tslint:disable */\n    PdfBrushes.getColorValue = function (colorName) {\n        var color = new PdfColor();\n        switch (colorName) {\n            case KnownColor.Transparent:\n                color = new PdfColor(0, 255, 255, 255);\n                break;\n            case KnownColor.AliceBlue:\n                color = new PdfColor(255, 240, 248, 255);\n                break;\n            case KnownColor.AntiqueWhite:\n                color = new PdfColor(255, 250, 235, 215);\n                break;\n            case KnownColor.Aqua:\n                color = new PdfColor(255, 0, 255, 255);\n                break;\n            case KnownColor.Aquamarine:\n                color = new PdfColor(255, 127, 255, 212);\n                break;\n            case KnownColor.Azure:\n                color = new PdfColor(255, 240, 255, 255);\n                break;\n            case KnownColor.Beige:\n                color = new PdfColor(255, 245, 245, 220);\n                break;\n            case KnownColor.Bisque:\n                color = new PdfColor(255, 255, 228, 196);\n                break;\n            case KnownColor.Black:\n                color = new PdfColor(255, 0, 0, 0);\n                break;\n            case KnownColor.BlanchedAlmond:\n                color = new PdfColor(255, 255, 235, 205);\n                break;\n            case KnownColor.Blue:\n                color = new PdfColor(255, 0, 0, 255);\n                break;\n            case KnownColor.BlueViolet:\n                color = new PdfColor(255, 138, 43, 226);\n                break;\n            case KnownColor.Brown:\n                color = new PdfColor(255, 165, 42, 42);\n                break;\n            case KnownColor.BurlyWood:\n                color = new PdfColor(255, 222, 184, 135);\n                break;\n            case KnownColor.CadetBlue:\n                color = new PdfColor(255, 95, 158, 160);\n                break;\n            case KnownColor.Chartreuse:\n                color = new PdfColor(255, 127, 255, 0);\n                break;\n            case KnownColor.Chocolate:\n                color = new PdfColor(255, 210, 105, 30);\n                break;\n            case KnownColor.Coral:\n                color = new PdfColor(255, 255, 127, 80);\n                break;\n            case KnownColor.CornflowerBlue:\n                color = new PdfColor(255, 100, 149, 237);\n                break;\n            case KnownColor.Cornsilk:\n                color = new PdfColor(255, 255, 248, 220);\n                break;\n            case KnownColor.Crimson:\n                color = new PdfColor(255, 220, 20, 60);\n                break;\n            case KnownColor.Cyan:\n                color = new PdfColor(255, 0, 255, 255);\n                break;\n            case KnownColor.DarkBlue:\n                color = new PdfColor(255, 0, 0, 139);\n                break;\n            case KnownColor.DarkCyan:\n                color = new PdfColor(255, 0, 139, 139);\n                break;\n            case KnownColor.DarkGoldenrod:\n                color = new PdfColor(255, 184, 134, 11);\n                break;\n            case KnownColor.DarkGray:\n                color = new PdfColor(255, 169, 169, 169);\n                break;\n            case KnownColor.DarkGreen:\n                color = new PdfColor(255, 0, 100, 0);\n                break;\n            case KnownColor.DarkKhaki:\n                color = new PdfColor(255, 189, 183, 107);\n                break;\n            case KnownColor.DarkMagenta:\n                color = new PdfColor(255, 139, 0, 139);\n                break;\n            case KnownColor.DarkOliveGreen:\n                color = new PdfColor(255, 85, 107, 47);\n                break;\n            case KnownColor.DarkOrange:\n                color = new PdfColor(255, 255, 140, 0);\n                break;\n            case KnownColor.DarkOrchid:\n                color = new PdfColor(255, 153, 50, 204);\n                break;\n            case KnownColor.DarkRed:\n                color = new PdfColor(255, 139, 0, 0);\n                break;\n            case KnownColor.DarkSalmon:\n                color = new PdfColor(255, 233, 150, 122);\n                break;\n            case KnownColor.DarkSeaGreen:\n                color = new PdfColor(255, 143, 188, 139);\n                break;\n            case KnownColor.DarkSlateBlue:\n                color = new PdfColor(255, 72, 61, 139);\n                break;\n            case KnownColor.DarkSlateGray:\n                color = new PdfColor(255, 47, 79, 79);\n                break;\n            case KnownColor.DarkTurquoise:\n                color = new PdfColor(255, 0, 206, 209);\n                break;\n            case KnownColor.DarkViolet:\n                color = new PdfColor(255, 148, 0, 211);\n                break;\n            case KnownColor.DeepPink:\n                color = new PdfColor(255, 255, 20, 147);\n                break;\n            case KnownColor.DeepSkyBlue:\n                color = new PdfColor(255, 0, 191, 255);\n                break;\n            case KnownColor.DimGray:\n                color = new PdfColor(255, 105, 105, 105);\n                break;\n            case KnownColor.DodgerBlue:\n                color = new PdfColor(255, 30, 144, 255);\n                break;\n            case KnownColor.Firebrick:\n                color = new PdfColor(255, 178, 34, 34);\n                break;\n            case KnownColor.FloralWhite:\n                color = new PdfColor(255, 255, 250, 240);\n                break;\n            case KnownColor.ForestGreen:\n                color = new PdfColor(255, 34, 139, 34);\n                break;\n            case KnownColor.Fuchsia:\n                color = new PdfColor(255, 255, 0, 255);\n                break;\n            case KnownColor.Gainsboro:\n                color = new PdfColor(255, 220, 220, 220);\n                break;\n            case KnownColor.GhostWhite:\n                color = new PdfColor(255, 248, 248, 255);\n                break;\n            case KnownColor.Gold:\n                color = new PdfColor(255, 255, 215, 0);\n                break;\n            case KnownColor.Goldenrod:\n                color = new PdfColor(255, 218, 165, 32);\n                break;\n            case KnownColor.Gray:\n                color = new PdfColor(255, 128, 128, 128);\n                break;\n            case KnownColor.Green:\n                color = new PdfColor(255, 0, 128, 0);\n                break;\n            case KnownColor.GreenYellow:\n                color = new PdfColor(255, 173, 255, 47);\n                break;\n            case KnownColor.Honeydew:\n                color = new PdfColor(255, 240, 255, 240);\n                break;\n            case KnownColor.HotPink:\n                color = new PdfColor(255, 255, 105, 180);\n                break;\n            case KnownColor.IndianRed:\n                color = new PdfColor(255, 205, 92, 92);\n                break;\n            case KnownColor.Indigo:\n                color = new PdfColor(255, 75, 0, 130);\n                break;\n            case KnownColor.Ivory:\n                color = new PdfColor(255, 255, 255, 240);\n                break;\n            case KnownColor.Khaki:\n                color = new PdfColor(255, 240, 230, 140);\n                break;\n            case KnownColor.Lavender:\n                color = new PdfColor(255, 230, 230, 250);\n                break;\n            case KnownColor.LavenderBlush:\n                color = new PdfColor(255, 255, 240, 245);\n                break;\n            case KnownColor.LawnGreen:\n                color = new PdfColor(255, 124, 252, 0);\n                break;\n            case KnownColor.LemonChiffon:\n                color = new PdfColor(255, 255, 250, 205);\n                break;\n            case KnownColor.LightBlue:\n                color = new PdfColor(255, 173, 216, 230);\n                break;\n            case KnownColor.LightCoral:\n                color = new PdfColor(255, 240, 128, 128);\n                break;\n            case KnownColor.LightCyan:\n                color = new PdfColor(255, 224, 255, 255);\n                break;\n            case KnownColor.LightGoldenrodYellow:\n                color = new PdfColor(255, 250, 250, 210);\n                break;\n            case KnownColor.LightGreen:\n                color = new PdfColor(255, 144, 238, 144);\n                break;\n            case KnownColor.LightGray:\n                color = new PdfColor(255, 211, 211, 211);\n                break;\n            case KnownColor.LightPink:\n                color = new PdfColor(255, 255, 182, 193);\n                break;\n            case KnownColor.LightSalmon:\n                color = new PdfColor(255, 255, 160, 122);\n                break;\n            case KnownColor.LightSeaGreen:\n                color = new PdfColor(255, 32, 178, 170);\n                break;\n            case KnownColor.LightSkyBlue:\n                color = new PdfColor(255, 135, 206, 250);\n                break;\n            case KnownColor.LightSlateGray:\n                color = new PdfColor(255, 119, 136, 153);\n                break;\n            case KnownColor.LightSteelBlue:\n                color = new PdfColor(255, 176, 196, 222);\n                break;\n            case KnownColor.LightYellow:\n                color = new PdfColor(255, 255, 255, 224);\n                break;\n            case KnownColor.Lime:\n                color = new PdfColor(255, 0, 255, 0);\n                break;\n            case KnownColor.LimeGreen:\n                color = new PdfColor(255, 50, 205, 50);\n                break;\n            case KnownColor.Linen:\n                color = new PdfColor(255, 250, 240, 230);\n                break;\n            case KnownColor.Magenta:\n                color = new PdfColor(255, 255, 0, 255);\n                break;\n            case KnownColor.Maroon:\n                color = new PdfColor(255, 128, 0, 0);\n                break;\n            case KnownColor.MediumAquamarine:\n                color = new PdfColor(255, 102, 205, 170);\n                break;\n            case KnownColor.MediumBlue:\n                color = new PdfColor(255, 0, 0, 205);\n                break;\n            case KnownColor.MediumOrchid:\n                color = new PdfColor(255, 186, 85, 211);\n                break;\n            case KnownColor.MediumPurple:\n                color = new PdfColor(255, 147, 112, 219);\n                break;\n            case KnownColor.MediumSeaGreen:\n                color = new PdfColor(255, 60, 179, 113);\n                break;\n            case KnownColor.MediumSlateBlue:\n                color = new PdfColor(255, 123, 104, 238);\n                break;\n            case KnownColor.MediumSpringGreen:\n                color = new PdfColor(255, 0, 250, 154);\n                break;\n            case KnownColor.MediumTurquoise:\n                color = new PdfColor(255, 72, 209, 204);\n                break;\n            case KnownColor.MediumVioletRed:\n                color = new PdfColor(255, 199, 21, 133);\n                break;\n            case KnownColor.MidnightBlue:\n                color = new PdfColor(255, 25, 25, 112);\n                break;\n            case KnownColor.MintCream:\n                color = new PdfColor(255, 245, 255, 250);\n                break;\n            case KnownColor.MistyRose:\n                color = new PdfColor(255, 255, 228, 225);\n                break;\n            case KnownColor.Moccasin:\n                color = new PdfColor(255, 255, 228, 181);\n                break;\n            case KnownColor.NavajoWhite:\n                color = new PdfColor(255, 255, 222, 173);\n                break;\n            case KnownColor.Navy:\n                color = new PdfColor(255, 0, 0, 128);\n                break;\n            case KnownColor.OldLace:\n                color = new PdfColor(255, 253, 245, 230);\n                break;\n            case KnownColor.Olive:\n                color = new PdfColor(255, 128, 128, 0);\n                break;\n            case KnownColor.OliveDrab:\n                color = new PdfColor(255, 107, 142, 35);\n                break;\n            case KnownColor.Orange:\n                color = new PdfColor(255, 255, 165, 0);\n                break;\n            case KnownColor.OrangeRed:\n                color = new PdfColor(255, 255, 69, 0);\n                break;\n            case KnownColor.Orchid:\n                color = new PdfColor(255, 218, 112, 214);\n                break;\n            case KnownColor.PaleGoldenrod:\n                color = new PdfColor(255, 238, 232, 170);\n                break;\n            case KnownColor.PaleGreen:\n                color = new PdfColor(255, 152, 251, 152);\n                break;\n            case KnownColor.PaleTurquoise:\n                color = new PdfColor(255, 175, 238, 238);\n                break;\n            case KnownColor.PaleVioletRed:\n                color = new PdfColor(255, 219, 112, 147);\n                break;\n            case KnownColor.PapayaWhip:\n                color = new PdfColor(255, 255, 239, 213);\n                break;\n            case KnownColor.PeachPuff:\n                color = new PdfColor(255, 255, 218, 185);\n                break;\n            case KnownColor.Peru:\n                color = new PdfColor(255, 205, 133, 63);\n                break;\n            case KnownColor.Pink:\n                color = new PdfColor(255, 255, 192, 203);\n                break;\n            case KnownColor.Plum:\n                color = new PdfColor(255, 221, 160, 221);\n                break;\n            case KnownColor.PowderBlue:\n                color = new PdfColor(255, 176, 224, 230);\n                break;\n            case KnownColor.Purple:\n                color = new PdfColor(255, 128, 0, 128);\n                break;\n            case KnownColor.Red:\n                color = new PdfColor(255, 255, 0, 0);\n                break;\n            case KnownColor.RosyBrown:\n                color = new PdfColor(255, 188, 143, 143);\n                break;\n            case KnownColor.RoyalBlue:\n                color = new PdfColor(255, 65, 105, 225);\n                break;\n            case KnownColor.SaddleBrown:\n                color = new PdfColor(255, 139, 69, 19);\n                break;\n            case KnownColor.Salmon:\n                color = new PdfColor(255, 250, 128, 114);\n                break;\n            case KnownColor.SandyBrown:\n                color = new PdfColor(255, 244, 164, 96);\n                break;\n            case KnownColor.SeaGreen:\n                color = new PdfColor(255, 46, 139, 87);\n                break;\n            case KnownColor.SeaShell:\n                color = new PdfColor(255, 255, 245, 238);\n                break;\n            case KnownColor.Sienna:\n                color = new PdfColor(255, 160, 82, 45);\n                break;\n            case KnownColor.Silver:\n                color = new PdfColor(255, 192, 192, 192);\n                break;\n            case KnownColor.SkyBlue:\n                color = new PdfColor(255, 135, 206, 235);\n                break;\n            case KnownColor.SlateBlue:\n                color = new PdfColor(255, 106, 90, 205);\n                break;\n            case KnownColor.SlateGray:\n                color = new PdfColor(255, 112, 128, 144);\n                break;\n            case KnownColor.Snow:\n                color = new PdfColor(255, 255, 250, 250);\n                break;\n            case KnownColor.SpringGreen:\n                color = new PdfColor(255, 0, 255, 127);\n                break;\n            case KnownColor.SteelBlue:\n                color = new PdfColor(255, 70, 130, 180);\n                break;\n            case KnownColor.Tan:\n                color = new PdfColor(255, 210, 180, 140);\n                break;\n            case KnownColor.Teal:\n                color = new PdfColor(255, 0, 128, 128);\n                break;\n            case KnownColor.Thistle:\n                color = new PdfColor(255, 216, 191, 216);\n                break;\n            case KnownColor.Tomato:\n                color = new PdfColor(255, 255, 99, 71);\n                break;\n            case KnownColor.Turquoise:\n                color = new PdfColor(255, 64, 224, 208);\n                break;\n            case KnownColor.Violet:\n                color = new PdfColor(255, 238, 130, 238);\n                break;\n            case KnownColor.Wheat:\n                color = new PdfColor(255, 245, 222, 179);\n                break;\n            case KnownColor.White:\n                color = new PdfColor(255, 255, 255, 255);\n                break;\n            case KnownColor.WhiteSmoke:\n                color = new PdfColor(255, 245, 245, 245);\n                break;\n            case KnownColor.Yellow:\n                color = new PdfColor(255, 255, 255, 0);\n                break;\n            case KnownColor.YellowGreen:\n                color = new PdfColor(255, 154, 205, 50);\n                break;\n        }\n        return color;\n    };\n    //Static Fields\n    /**\n     * Local variable to store the brushes.\n     */\n    PdfBrushes.sBrushes = new Dictionary();\n    return PdfBrushes;\n}());\nexport { PdfBrushes };\n","/**\n * PdfBlend.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfColor } from './../pdf-color';\nimport { PdfColorBlend } from './pdf-color-blend';\n/**\n * `PdfBlend` Represents the blend color space\n * @private\n */\nvar PdfBlend = /** @class */ (function () {\n    function PdfBlend(count) {\n        //Constants\n        /**\n         * precision of the GCD calculations.\n         * @private\n         */\n        this.precision = 1000;\n        //\n    }\n    Object.defineProperty(PdfBlend.prototype, \"factors\", {\n        //Properties\n        /**\n         * Gets or sets the array of factor to the blend.\n         * @public\n         */\n        get: function () {\n            return this.mFactors;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Factors');\n            }\n            this.mFactors = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBlend.prototype, \"positions\", {\n        /**\n         * 'positions' Gets or sets the array of positions\n         * @public\n         */\n        get: function () {\n            return this.mPositions;\n        },\n        set: function (value) {\n            var positionarray = value;\n            for (var i = 0; i < positionarray.length; i++) {\n                if (((positionarray[i] < 0) || (positionarray[i] > 1))) {\n                    positionarray[i] = 0;\n                }\n            }\n            this.mPositions = positionarray;\n            this.mPositions = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBlend.prototype, \"count\", {\n        /**\n         * Gets the number of elements that specify the blend.\n         * @protected\n         */\n        get: function () {\n            return this.mCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Generates a correct color blend.\n     * @param colours The colours.\n     * @param colorSpace The color space.\n     */\n    PdfBlend.prototype.generateColorBlend = function (colours, colorSpace) {\n        if ((colours == null)) {\n            throw new Error('ArgumentNullException : colours');\n        }\n        if ((this.positions == null)) {\n            this.positions = [0];\n        }\n        var cBlend = new PdfColorBlend(this.count);\n        var positions = this.positions;\n        var clrs = null;\n        if ((positions.length === 1)) {\n            positions = [3];\n            positions[0] = 0;\n            positions[1] = this.positions[0];\n            positions[2] = 1;\n            /* tslint:disable */\n            clrs = new Array(3);\n            clrs[0] = colours[0];\n            clrs[1] = colours[0];\n            clrs[2] = colours[1];\n        }\n        else {\n            var c1 = colours[0];\n            var c2 = colours[1];\n            /* tslint:disable */\n            clrs = new Array(this.count);\n            var i = 0;\n            var count = this.count;\n            for (i = 0; i < count; ++i) {\n                clrs[i] = this.interpolate(this.mFactors[i], c1, c2, colorSpace);\n            }\n        }\n        cBlend.positions = positions;\n        cBlend.colors = clrs;\n        return cBlend;\n    };\n    /**\n     * 'clonePdfBlend' Clones this instance.\n     * @public\n     */\n    PdfBlend.prototype.clonePdfBlend = function () {\n        var blend = this;\n        if ((this.mFactors != null)) {\n            blend.factors = (this.mFactors);\n        }\n        if ((this.positions != null)) {\n            blend.positions = (this.positions);\n        }\n        return blend;\n    };\n    PdfBlend.prototype.gcd = function (u, v) {\n        if (typeof u === 'number' && typeof v === 'number' && typeof v !== 'undefined') {\n            if (((u < 0) || (u > 1))) {\n                throw new Error('ArgumentOutOfRangeException : u');\n            }\n            if (((v < 0) || (v > 1))) {\n                throw new Error('ArgumentOutOfRangeException : v');\n            }\n            var iU = (Math.max(1, (u * this.precision)));\n            var iV = (Math.max(1, (v * this.precision)));\n            var iResult = this.gcdInt(iU, iV);\n            var result = ((iResult) / this.precision);\n            return result;\n        }\n        else {\n            var values = u;\n            if ((values == null)) {\n                throw new Error('ArgumentNullException : values');\n            }\n            if ((values.length < 1)) {\n                throw new Error('ArgumentException : Not enough values in the array. - values');\n            }\n            var gcd = values[0];\n            if ((values.length > 1)) {\n                var count = values.length;\n                for (var i = 1; i < count; ++i) {\n                    gcd = this.gcd(values[i], gcd);\n                    if ((gcd === (1 / this.precision))) {\n                        break;\n                    }\n                }\n            }\n            return gcd;\n        }\n    };\n    /**\n     * Calculate the GCD int of the specified values.\n     * @param u The u.\n     * @param v The v.\n     */\n    PdfBlend.prototype.gcdInt = function (u, v) {\n        if ((u <= 0)) {\n            throw new Error('ArgumentOutOfRangeException' + u + 'The arguments cannot be less or equal to zero.');\n        }\n        if ((v <= 0)) {\n            throw new Error('ArgumentOutOfRangeException' + v + 'The arguments cannot be less or equal to zero.');\n        }\n        if (((u === 1) || (v === 1))) {\n            return 1;\n        }\n        var shift = 0;\n        while (this.isEven(u, v)) {\n            ++shift;\n            u >>= 1;\n            v >>= 1;\n        }\n        while (((u & 1) <= 0)) {\n            u >>= 1;\n        }\n        do {\n            while ((v & 1) <= 0) {\n                v >>= 1;\n            }\n            if (u > v) {\n                var t = v;\n                v = u;\n                u = t;\n            }\n            v = v - u;\n        } while (v !== 0);\n        return (u << shift);\n    };\n    PdfBlend.prototype.isEven = function (arg1, arg2) {\n        if (typeof arg2 === 'number' && typeof arg2 !== 'undefined') {\n            var result = true;\n            result = (result && ((arg1 & 1) <= 0)); //  Is u even?\n            result = (result && ((arg2 & 1) <= 0)); //  Is v even?\n            return result;\n        }\n        else {\n            return ((arg1 & 1) <= 0);\n        }\n    };\n    PdfBlend.prototype.interpolate = function (t, color1, color2, colorSpace) {\n        if (color1 instanceof PdfColor) {\n            var color = new PdfColor();\n            switch (colorSpace) {\n                case PdfColorSpace.Rgb:\n                    var red = (this.interpolate(t, color1.red, color2.red));\n                    var green = (this.interpolate(t, color1.green, color2.green));\n                    var blue = (this.interpolate(t, color1.blue, color2.blue));\n                    color = new PdfColor(red, green, blue);\n                    break;\n                case PdfColorSpace.GrayScale:\n                    var gray = (this.interpolate(t, color1.gray, color2.gray));\n                    color = new PdfColor(gray);\n                    break;\n                case PdfColorSpace.Cmyk:\n                    var cyan = (this.interpolate(t, color1.c, color2.c));\n                    var magenta = (this.interpolate(t, color1.m, color2.m));\n                    var yellow = (this.interpolate(t, color1.y, color2.y));\n                    var black = (this.interpolate(t, color1.k, color2.k));\n                    color = new PdfColor(cyan, magenta, yellow, black);\n                    break;\n            }\n            return color;\n        }\n        else {\n            var t0 = 0;\n            var t1 = 1;\n            var result = 0;\n            if ((t === t0)) {\n                result = color1;\n            }\n            else if ((t === t1)) {\n                result = color2;\n            }\n            else {\n                result = (color1 + ((t - t0) * ((color2 - color1) / (t1 - t0))));\n            }\n            return result;\n        }\n    };\n    return PdfBlend;\n}());\nexport { PdfBlend };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfColorBlend.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfSampledFunction } from './../../general/functions/pdf-sampled-function';\nimport { PdfBlend } from './pdf-blend';\n/**\n * `PdfColorBlend` Represents the arrays of colors and positions used for\n *  interpolating color blending in a multicolor gradient.\n * @private\n */\nvar PdfColorBlend = /** @class */ (function (_super) {\n    __extends(PdfColorBlend, _super);\n    function PdfColorBlend(count) {\n        var _this = _super.call(this) || this;\n        if (typeof count === 'number') {\n            _this = _super.call(this, count) || this;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfColorBlend.prototype, \"colors\", {\n        //Properties\n        /**\n         * Gets or sets the array of colors.\n         * @public\n         */\n        get: function () {\n            return this.mcolors;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Colors');\n            }\n            this.mcolors = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Gets the function.\n     * @param colorSpace The color space.\n     * @public\n     */\n    PdfColorBlend.prototype.getFunction = function (colorSpace) {\n        var domain = [0, 1];\n        var colourComponents = this.getColorComponentsCount(colorSpace);\n        var maxComponentValue = this.getMaxComponentValue(colorSpace);\n        var range = this.setRange(colourComponents, maxComponentValue);\n        var func = null;\n        if ((this.mbrush == null && typeof this.mbrush === 'undefined')) {\n            var sizes = [1];\n            var samplesCount = void 0;\n            var step = 1;\n            if (this.positions.length === 2) {\n                samplesCount = 2;\n            }\n            else {\n                var positions = this.positions;\n                var intervals = this.getIntervals(positions);\n                var gcd = this.gcd(intervals);\n                step = gcd;\n                samplesCount = (((1 / gcd)) + 1);\n            }\n            sizes[0] = samplesCount;\n            var samples = this.getSamplesValues(colorSpace, samplesCount, maxComponentValue, step);\n            func = new PdfSampledFunction(domain, range, sizes, samples);\n            return func;\n        }\n        return func;\n    };\n    /**\n     * 'cloneColorBlend' Clones this instance.\n     * @public\n     */\n    PdfColorBlend.prototype.cloneColorBlend = function () {\n        var cBlend = this;\n        if ((this.mcolors != null && typeof this.mcolors !== 'undefined')) {\n            cBlend.colors = (this.mcolors);\n        }\n        if ((this.positions != null && typeof this.positions !== 'undefined')) {\n            cBlend.positions = (this.positions);\n        }\n        return cBlend;\n    };\n    /**\n     * Sets the range.\n     * @param colourComponents The colour components.\n     * @param maxValue The max value.\n     */\n    PdfColorBlend.prototype.setRange = function (colourComponents, maxValue) {\n        var range = [(colourComponents * 2)];\n        for (var i = 0; (i < colourComponents); ++i) {\n            range[(i * 2)] = 0;\n            range[((i * 2) + 1)] = 1;\n        }\n        return range;\n    };\n    /**\n     * Calculates the color components count according to colour space.\n     * @param colorSpace The color space.\n     */\n    PdfColorBlend.prototype.getColorComponentsCount = function (colorSpace) {\n        var count = 0;\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                count = 3;\n                break;\n            case PdfColorSpace.Cmyk:\n                count = 4;\n                break;\n            case PdfColorSpace.GrayScale:\n                count = 1;\n                break;\n            default:\n                throw new Error('ArgumentException - Unsupported color space: ' + colorSpace + ' colorSpace');\n        }\n        return count;\n    };\n    /**\n     * Gets samples values for specified colour space.\n     * @param colorSpace The color space.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getSamplesValues = function (colorSpace, sampleCount, maxComponentValue, step) {\n        var values;\n        switch (colorSpace) {\n            case PdfColorSpace.GrayScale:\n                values = this.getGrayscaleSamples(sampleCount, maxComponentValue, step);\n                break;\n            case PdfColorSpace.Cmyk:\n                values = this.getCmykSamples(sampleCount, maxComponentValue, step);\n                break;\n            case PdfColorSpace.Rgb:\n                values = this.getRgbSamples(sampleCount, maxComponentValue, step);\n                break;\n            default:\n                throw new Error('ArgumentException - Unsupported color space: ' + colorSpace + ' colorSpace');\n        }\n        return values;\n    };\n    /**\n     * Gets the grayscale samples.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getGrayscaleSamples = function (sampleCount, maxComponentValue, step) {\n        var values = [(sampleCount * 2)];\n        for (var i = 0; (i < sampleCount); ++i) {\n            var color = this.getNextColor(i, step, PdfColorSpace.GrayScale);\n            var index = (i * 2);\n        }\n        return values;\n    };\n    /**\n     * Gets the RGB samples.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getRgbSamples = function (sampleCount, maxComponentValue, step) {\n        var values = [(sampleCount * 3)];\n        for (var i = 0; (i < sampleCount); ++i) {\n            var color = this.getNextColor(i, step, PdfColorSpace.Rgb);\n            var index = (i * 3);\n            values[index] = color.r;\n            values[(index + 1)] = color.g;\n            values[(index + 2)] = color.b;\n        }\n        return values;\n    };\n    /**\n     * Gets the CMYK samples.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getCmykSamples = function (sampleCount, maxComponentValue, step) {\n        var values = [(sampleCount * 4)];\n        for (var i = 0; (i < sampleCount); i++) {\n            var color = this.getNextColor(i, step, PdfColorSpace.Cmyk);\n            var index = (i * 4);\n            values[index] = ((color.c * maxComponentValue));\n            values[(index + 1)] = ((color.m * maxComponentValue));\n            values[(index + 2)] = ((color.y * maxComponentValue));\n            values[(index + 3)] = ((color.k * maxComponentValue));\n        }\n        return values;\n    };\n    /**\n     * Calculates the color that should be at the specified index.\n     * @param index The index.\n     * @param step The step.\n     * @param colorSpace The color space.\n     */\n    PdfColorBlend.prototype.getNextColor = function (index, step, colorSpace) {\n        var position = (step * index);\n        var indexHi;\n        var indexLow;\n        var result = this.getIndices(position, indexLow, indexHi);\n        indexLow = result.indexLow;\n        indexHi = result.indexHi;\n        var color;\n        if (indexLow === indexHi) {\n            color = this.mcolors[indexLow];\n        }\n        else {\n            var positionLow = this.positions[indexLow];\n            var positionHi = this.positions[indexHi];\n            var colorLow = this.mcolors[indexLow];\n            var colorHi = this.mcolors[indexHi];\n            var t = ((position - positionLow) / (positionHi - positionLow));\n            color = this.interpolate(t, colorLow, colorHi, colorSpace);\n        }\n        return color;\n    };\n    /**\n     * Gets the indices.\n     * @param position The position.\n     * @param indexLow The index low.\n     * @param indexHi The index hi.\n     */\n    PdfColorBlend.prototype.getIndices = function (position, indexLow, indexHi) {\n        var positions = this.positions;\n        indexLow = 0;\n        indexHi = 0;\n        for (var i = 0; (i < this.mcolors.length); ++i) {\n            var currPos = positions[i];\n            if ((currPos === position)) {\n                indexHi = i;\n                indexLow = i;\n                break;\n            }\n            else if ((currPos > position)) {\n                indexHi = i;\n                break;\n            }\n            indexLow = i;\n            indexHi = i;\n        }\n        return { indexLow: indexLow, indexHi: indexHi };\n    };\n    /**\n     * Calculates the max component value.\n     * @param colorSpace The color space.\n     */\n    PdfColorBlend.prototype.getMaxComponentValue = function (colorSpace) {\n        var result = 0;\n        switch (colorSpace) {\n            case PdfColorSpace.Cmyk:\n            case PdfColorSpace.Rgb:\n                result = 255;\n                break;\n            case PdfColorSpace.GrayScale:\n                result = 65535;\n                break;\n            default:\n                throw new Error('ArgumentException - Unsupported color space: ' + colorSpace + 'colorSpace');\n        }\n        return result;\n    };\n    /**\n     * Gets an intervals array from the positions array.\n     * @param positions The positions array.\n     */\n    PdfColorBlend.prototype.getIntervals = function (positions) {\n        var count = positions.length;\n        var intervals = [(count - 1)];\n        var prev = positions[0];\n        for (var i = 1; (i < count); ++i) {\n            var v = positions[i];\n            intervals[(i - 1)] = (v - prev);\n            prev = v;\n        }\n        return intervals;\n    };\n    return PdfColorBlend;\n}(PdfBlend));\nexport { PdfColorBlend };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfLinearGradientBrush.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfColor } from './../pdf-color';\nimport { PointF, Rectangle } from './../../drawing/pdf-drawing';\nimport { PdfDictionary } from '../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfBoolean } from '../../primitives/pdf-boolean';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfColorBlend } from './pdf-color-blend';\nimport { PdfGradientBrush } from './pdf-gradient-brush';\nimport { PdfExtend, PdfLinearGradientMode, ShadingType } from './enum';\n/**\n * `PdfLinearGradientBrush` Implements linear gradient brush by using PDF axial shading pattern.\n * @private\n */\nvar PdfLinearGradientBrush = /** @class */ (function (_super) {\n    __extends(PdfLinearGradientBrush, _super);\n    /**\n     * Initializes a new instance of the `PdfLinearGradientBrush` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfLinearGradientBrush(arg1, arg2, arg3, arg4) {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Local variable to store the dictionary properties.\n         * @private\n         */\n        _this.mDictionaryProperties = new DictionaryProperties();\n        if (arg1 instanceof PointF && arg2 instanceof PointF && arg3 instanceof PdfColor && arg4 instanceof PdfColor) {\n            _this.initialize(arg3, arg4);\n            _this.mPointStart = arg1;\n            _this.mPointEnd = arg2;\n            _this.setPoints(_this.mPointStart, _this.mPointEnd);\n        }\n        else if (arg1 instanceof Rectangle) {\n            _this.initialize(arg2, arg3);\n            /* tslint:disable-next-line:max-line-length */\n            if ((arg4 === PdfLinearGradientMode.BackwardDiagonal || arg4 === PdfLinearGradientMode.ForwardDiagonal || arg4 === PdfLinearGradientMode.Horizontal || arg4 === PdfLinearGradientMode.Vertical)) {\n                _this.mBoundaries = arg1;\n                switch (arg4) {\n                    case PdfLinearGradientMode.BackwardDiagonal:\n                        _this.mPointStart = new PointF(arg1.right, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.left, arg1.bottom);\n                        break;\n                    case PdfLinearGradientMode.ForwardDiagonal:\n                        _this.mPointStart = new PointF(arg1.left, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.right, arg1.bottom);\n                        break;\n                    case PdfLinearGradientMode.Horizontal:\n                        _this.mPointStart = new PointF(arg1.left, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.right, arg1.top);\n                        break;\n                    case PdfLinearGradientMode.Vertical:\n                        _this.mPointStart = new PointF(arg1.left, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.left, arg1.bottom);\n                        break;\n                    default:\n                        throw new Error('ArgumentException -- Unsupported linear gradient mode: ' + arg4 + ' mode');\n                }\n                _this.setPoints(_this.mPointStart, _this.mPointEnd);\n            }\n            else if (typeof arg4 === 'number' && typeof arg4 !== 'undefined') {\n                _this.mBoundaries = arg1;\n                arg4 = arg4 % 360;\n                if ((arg4 === 0)) {\n                    _this.mPointStart = new PointF(arg1.left, arg1.top);\n                    _this.mPointEnd = new PointF(arg1.right, arg1.top);\n                }\n                else if ((arg4 === 90)) {\n                    _this.mPointStart = new PointF(arg1.left, arg1.top);\n                    _this.mPointEnd = new PointF(arg1.left, arg1.bottom);\n                }\n                else if ((arg4 === 180)) {\n                    _this.mPointEnd = new PointF(arg1.left, arg1.top);\n                    _this.mPointStart = new PointF(arg1.right, arg1.top);\n                }\n                else if ((arg4 === 270)) {\n                    _this.mPointEnd = new PointF(arg1.left, arg1.top);\n                    _this.mPointStart = new PointF(arg1.left, arg1.bottom);\n                }\n                else {\n                    var d2r = (Math.PI / 180);\n                    var radAngle = (arg4 * d2r);\n                    var k = Math.tan(radAngle);\n                    var x = (_this.mBoundaries.left\n                        + ((_this.mBoundaries.right - _this.mBoundaries.left) / 2));\n                    var y = (_this.mBoundaries.top\n                        + ((_this.mBoundaries.bottom - _this.mBoundaries.top) / 2));\n                    var centre = new PointF(x, y);\n                    x = (_this.mBoundaries.width / (2 * (Math.cos(radAngle))));\n                    y = ((k * x));\n                    x = (x + centre.x);\n                    y = (y + centre.y);\n                    var p1 = new PointF(x, y);\n                    var cp1 = _this.subPoints(p1, centre);\n                    //  P1 - P0\n                    var p = _this.choosePoint(arg4);\n                    var coef = (_this.mulPoints(_this.subPoints(p, centre), cp1)\n                        / _this.mulPoints(cp1, cp1));\n                    _this.mPointEnd = _this.addPoints(centre, _this.mulPoint(cp1, coef));\n                    //  Parametric line equation.\n                    _this.mPointStart = _this.addPoints(centre, _this.mulPoint(cp1, (coef * -1)));\n                }\n                _this.setPoints(_this.mPointEnd, _this.mPointStart);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Initializes a new instance of the `PdfLinearGradientBrush` class.\n     * @param color1 The starting color of the gradient.\n     * @param color2 The end color of the gradient.\n     */\n    PdfLinearGradientBrush.prototype.initialize = function (color1, color2) {\n        this.mColours = [color1, color2];\n        this.mColourBlend = new PdfColorBlend(2);\n        this.mColourBlend.positions = [0, 1];\n        this.mColourBlend.colors = this.mColours;\n        this.initShading();\n    };\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"blend\", {\n        //Properties\n        /**\n         * Gets or sets a PdfBlend that specifies positions\n         * and factors that define a custom falloff for the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mBlend;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Blend');\n            }\n            if ((this.mColours == null)) {\n                throw new Error('NotSupportedException : There is no starting and ending colours specified.');\n            }\n            this.mBlend = value;\n            //  TODO: generate correct colour blend.\n            this.mColourBlend = this.mBlend.generateColorBlend(this.mColours, this.colorSpace);\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"interpolationColors\", {\n        /**\n         * Gets or sets a ColorBlend that defines a multicolor linear gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColourBlend;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : InterpolationColors');\n            }\n            this.mBlend = null;\n            this.mColours = null;\n            this.mColourBlend = value;\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"linearColors\", {\n        /**\n         * Gets or sets the starting and ending colors of the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColours;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : LinearColors');\n            }\n            if ((value.length < 2)) {\n                throw new Error('ArgumentException : The array is too small - LinearColors');\n            }\n            if ((this.mColours == null && typeof this.mColours === 'undefined')) {\n                this.mColours = [value[0], value[1]];\n            }\n            else {\n                this.mColours[0] = value[0];\n                this.mColours[1] = value[1];\n            }\n            if ((this.mBlend == null && typeof this.mBlend === 'undefined')) {\n                //  Set correct colour blend.\n                this.mColourBlend = new PdfColorBlend(2);\n                this.mColourBlend.colors = this.mColours;\n                this.mColourBlend.positions = [0, 1];\n            }\n            else {\n                this.mColourBlend = this.mBlend.generateColorBlend(this.mColours, this.colorSpace);\n            }\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"rectangle\", {\n        /**\n         * Gets a rectangular region that defines the boundaries of the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mBoundaries;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"extend\", {\n        /**\n         * Gets or sets the value indicating whether the gradient should extend starting and ending points.\n         * @public\n         */\n        get: function () {\n            var result = PdfExtend.None;\n            var extend = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            if ((extend != null)) {\n                var extStart = (extend.items(0));\n                var extEnd = (extend.items(1));\n                if (extStart.value) {\n                    result = (result | PdfExtend.Start);\n                }\n                if (extEnd.value) {\n                    result = (result | PdfExtend.End);\n                }\n            }\n            return result;\n        },\n        set: function (value) {\n            var extend = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            var extStart;\n            var extEnd;\n            if ((extend == null)) {\n                extStart = new PdfBoolean(false);\n                extEnd = new PdfBoolean(false);\n                extend = new PdfArray();\n                extend.add(extStart);\n                extend.add(extEnd);\n                this.shading.items.setValue(this.mDictionaryProperties.extend, extend);\n            }\n            else {\n                extStart = (extend.items(0));\n                extEnd = (extend.items(1));\n            }\n            // extStart.value = ((value && PdfExtend.Start) > 0);\n            // extEnd.value = ((value && PdfExtend.End) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Adds two points to each other.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.addPoints = function (point1, point2) {\n        var x = (point1.x + point2.x);\n        var y = (point1.y + point2.y);\n        var result = new PointF(x, y);\n        return result;\n    };\n    /**\n     * Subs the second point from the first one.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.subPoints = function (point1, point2) {\n        var x = (point1.x - point2.x);\n        var y = (point1.y - point2.y);\n        var result = new PointF(x, y);\n        return result;\n    };\n    /**\n     * Makes scalar multiplication of two points.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.mulPoints = function (point1, point2) {\n        var result = ((point1.x * point2.x) + (point1.y * point2.y));\n        return result;\n    };\n    /**\n     * Multiplies the point by the value specified.\n     * @param point The point1.\n     * @param value The value.\n     */\n    PdfLinearGradientBrush.prototype.mulPoint = function (point, value) {\n        point.x = (point.x * value);\n        point.y = (point.y * value);\n        return point;\n    };\n    /**\n     * Choose the point according to the angle.\n     * @param angle The angle.\n     */\n    PdfLinearGradientBrush.prototype.choosePoint = function (angle) {\n        var point = new PointF(0, 0);\n        //  Choose the correct point.\n        if ((angle < 90) && (angle > 0)) {\n            point = new PointF(this.mBoundaries.right, this.mBoundaries.bottom);\n        }\n        else if ((angle < 180) && (angle > 90)) {\n            point = new PointF(this.mBoundaries.left, this.mBoundaries.bottom);\n        }\n        else if ((angle < 270) && (angle > 180)) {\n            point = new PointF(this.mBoundaries.left, this.mBoundaries.top);\n        }\n        else if (angle > 270) {\n            point = new PointF(this.mBoundaries.right, this.mBoundaries.top);\n        }\n        else {\n            throw new Error('PdfException - Internal error.');\n        }\n        return point;\n    };\n    /**\n     * Sets the start and end points.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.setPoints = function (point1, point2) {\n        var points = new PdfArray();\n        points.add(new PdfNumber(point1.x));\n        points.add(new PdfNumber(this.updateY(point1.y)));\n        points.add(new PdfNumber(point2.x));\n        points.add(new PdfNumber(this.updateY(point2.y)));\n        this.shading.items.setValue(this.mDictionaryProperties.coords, points);\n    };\n    /**\n     * Updates y co-ordinate.\n     * @param y Y co-ordinate..\n     */\n    PdfLinearGradientBrush.prototype.updateY = function (y) {\n        if (y !== 0) {\n            return -y;\n        }\n        else {\n            return y;\n        }\n    };\n    //Overrides\n    /**\n     * Initializes the shading dictionary.\n     * @private\n     */\n    PdfLinearGradientBrush.prototype.initShading = function () {\n        this.colorSpace = PdfColorSpace.Rgb;\n        this.function = this.mColourBlend.getFunction(this.colorSpace);\n        this.shading.items.setValue(this.mDictionaryProperties.shadingType, new PdfNumber((ShadingType.Axial)));\n    };\n    //Overrides\n    /**\n     * Creates a new copy of a brush.\n     * @public\n     */\n    PdfLinearGradientBrush.prototype.clone = function () {\n        var brush = this;\n        brush.resetPatternDictionary(new PdfDictionary(this.patternDictionary));\n        brush.shading = new PdfDictionary();\n        brush.initShading();\n        brush.setPoints(brush.mPointStart, brush.mPointEnd);\n        if (brush !== null && brush instanceof PdfLinearGradientBrush) {\n            if ((this.matrix != null && typeof this.matrix !== 'undefined')) {\n                brush.matrix = this.matrix.clone();\n            }\n        }\n        if ((this.mColours != null && typeof this.mColours !== 'undefined')) {\n            brush.mColours = (this.mColours);\n        }\n        if ((this.blend != null && typeof this.blend !== 'undefined')) {\n            brush.blend = this.blend.clonePdfBlend();\n        }\n        else if ((this.interpolationColors != null && typeof this.interpolationColors !== 'undefined')) {\n            brush.interpolationColors = this.interpolationColors.cloneColorBlend();\n        }\n        brush.extend = this.extend;\n        this.cloneBackgroundValue(brush);\n        this.cloneAntiAliasingValue(brush);\n        return brush;\n    };\n    /**\n     * Resets the function.\n     * @public\n     */\n    PdfLinearGradientBrush.prototype.resetFunction = function () {\n        this.function = this.mColourBlend.getFunction(this.colorSpace);\n    };\n    return PdfLinearGradientBrush;\n}(PdfGradientBrush));\nexport { PdfLinearGradientBrush };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfRadialGradientBrush.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfDictionary } from '../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfBoolean } from '../../primitives/pdf-boolean';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfColorBlend } from './pdf-color-blend';\nimport { PdfGradientBrush } from './pdf-gradient-brush';\nimport { PdfExtend, ShadingType } from './enum';\n/**\n * `PdfRadialGradientBrush` Represent radial gradient brush.\n * @private\n */\nvar PdfRadialGradientBrush = /** @class */ (function (_super) {\n    __extends(PdfRadialGradientBrush, _super);\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfRadialGradientBrush` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfRadialGradientBrush(centerStart, radiusStart, centerEnd, radiusEnd, colorStart, colorEnd) {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Local varaible to store the dictionary properties.\n         */\n        _this.mDictionaryProperties = new DictionaryProperties();\n        _this.initialize(colorStart, colorEnd);\n        if (radiusStart < 0) {\n            throw new Error('ArgumentOutOfRangeException : radiusStart - The radius cannot be less then zero.');\n        }\n        if (radiusEnd < 0) {\n            throw new Error('ArgumentOutOfRangeException : radiusEnd - The radius cannpt be less then zero.');\n        }\n        _this.mPointEnd = centerEnd;\n        _this.mPointStart = centerStart;\n        _this.mRadiusStart = radiusStart;\n        _this.mRadiusEnd = radiusEnd;\n        _this.setPoints(_this.mPointStart, _this.mPointEnd, _this.mRadiusStart, _this.mRadiusEnd);\n        return _this;\n    }\n    /**\n     * Initializes a new instance of the `PdfRadialGradientBrush` class.\n     * @param color1 The color1.\n     * @param color2 The color2.\n     */\n    PdfRadialGradientBrush.prototype.initialize = function (color1, color2) {\n        this.mColour = [color1, color2];\n        this.mColourBlends = new PdfColorBlend(2);\n        this.mColourBlends.positions = [0, 1];\n        this.mColourBlends.colors = this.mColour;\n        this.initShading();\n    };\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"blend\", {\n        //Properties\n        /**\n         * Gets or sets a PdfBlend that specifies positions and factors that define a custom falloff for the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mBlend;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Blend');\n            }\n            if ((this.mColour == null && typeof this.mColour === 'undefined')) {\n                throw new Error('NotSupportedException : There is no starting and ending colours specified.');\n            }\n            this.mBlend = value;\n            this.mColourBlends = this.mBlend.generateColorBlend(this.mColour, this.colorSpace);\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"interpolationColors\", {\n        /**\n         * Gets or sets a ColorBlend that defines a multicolor radial gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColourBlends;\n        },\n        set: function (value) {\n            if (value == null) {\n                throw new Error('ArgumentNullException : InterpolationColors');\n            }\n            this.mBlend = null;\n            this.mColour = null;\n            this.mColourBlends = value;\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"linearColors\", {\n        /**\n         * Gets or sets the starting and ending colors of the radial gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColour;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : radial LinearColors');\n            }\n            if ((value.length < 2)) {\n                throw new Error('ArgumentException : The array is too small LinearColors');\n            }\n            if ((this.mColour == null && typeof this.mColour === 'undefined')) {\n                this.mColour = [value[0], value[1]];\n            }\n            else {\n                this.mColour[0] = value[0];\n                this.mColour[1] = value[1];\n            }\n            if ((this.mBlend == null && typeof this.mBlend === 'undefined')) {\n                //  Set correct colour blend.\n                this.mColourBlends = new PdfColorBlend(2);\n                this.mColourBlends.colors = this.mColour;\n                this.mColourBlends.positions = [0, 1];\n            }\n            else {\n                this.mColourBlends = this.mBlend.generateColorBlend(this.mColour, this.colorSpace);\n            }\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"rectangle\", {\n        /**\n         * Gets or sets the rectangle.\n         * @public\n         */\n        get: function () {\n            return this.mBoundaries;\n        },\n        set: function (value) {\n            this.mBoundaries = value;\n            this.bBox = PdfArray.fromRectangle(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"extend\", {\n        /**\n         * Gets or sets the value indicating whether the gradient\n         *  should extend starting and ending points.\n         * @public\n         */\n        get: function () {\n            var result1 = PdfExtend.None;\n            var extend1 = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            if (extend1 !== null && typeof extend1 !== 'undefined') {\n                var extStart = (extend1.items(0));\n                var extEnd = (extend1.items(1));\n                if (extStart.value) {\n                    result1 = (result1 | PdfExtend.Start);\n                }\n                if (extEnd.value) {\n                    result1 = (result1 | PdfExtend.End);\n                }\n            }\n            return result1;\n        },\n        set: function (value) {\n            var extend = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            var extStart;\n            var extEnd1;\n            if (extend == null && typeof extend === 'undefined') {\n                extStart = new PdfBoolean(false);\n                extEnd1 = new PdfBoolean(false);\n                extend = new PdfArray();\n                extend.add(extStart);\n                extend.add(extEnd1);\n                this.shading.items.setValue(this.mDictionaryProperties.extend, extend);\n            }\n            else {\n                extStart = (extend.items(0));\n                extEnd1 = (extend.items(1));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Sets the points.\n     * @param pointStart The point start.\n     * @param pointEnd The point end.\n     * @param radiusStart The radius start.\n     * @param radiusEnd The radius end.\n     */\n    PdfRadialGradientBrush.prototype.setPoints = function (pointStart, pointEnd, radiusStart, radiusEnd) {\n        var points = new PdfArray();\n        points.add(new PdfNumber(pointStart.x));\n        points.add(new PdfNumber(this.updateY(pointStart.y)));\n        points.add(new PdfNumber(radiusStart));\n        points.add(new PdfNumber(pointEnd.x));\n        points.add(new PdfNumber(this.updateY(pointEnd.y)));\n        if ((radiusStart !== radiusEnd)) {\n            points.add(new PdfNumber(radiusEnd));\n        }\n        else {\n            points.add(new PdfNumber(0));\n        }\n        this.shading.items.setValue(this.mDictionaryProperties.coords, points);\n    };\n    /**\n     * Update y co-ordinate.\n     * @param y Y co-ordinate.\n     */\n    PdfRadialGradientBrush.prototype.updateY = function (y) {\n        if (y !== 0) {\n            return -y;\n        }\n        else {\n            return y;\n        }\n    };\n    /**\n     * Initializess the shading dictionary.\n     * @private\n     */\n    PdfRadialGradientBrush.prototype.initShading = function () {\n        this.colorSpace = PdfColorSpace.Rgb;\n        this.function = this.mColourBlends.getFunction(this.colorSpace);\n        this.shading.items.setValue(this.mDictionaryProperties.shadingType, new PdfNumber((ShadingType.Radial)));\n    };\n    //Overrides\n    /**\n     * Creates a new copy of a brush.\n     * @public\n     */\n    PdfRadialGradientBrush.prototype.clone = function () {\n        var rBrush = this;\n        rBrush.resetPatternDictionary(new PdfDictionary(this.patternDictionary));\n        rBrush.shading = new PdfDictionary();\n        rBrush.initShading();\n        rBrush.setPoints(this.mPointStart, this.mPointEnd, this.mRadiusStart, this.mRadiusEnd);\n        if (rBrush instanceof PdfRadialGradientBrush) {\n            if ((this.matrix !== null && typeof this.matrix !== 'undefined')) {\n                rBrush.matrix = this.matrix.clone();\n            }\n        }\n        if ((this.mColour !== null && typeof this.mColour !== 'undefined')) {\n            rBrush.mColour = (this.mColour);\n        }\n        if ((this.blend !== null && typeof this.blend !== 'undefined')) {\n            rBrush.blend = this.blend.clonePdfBlend();\n        }\n        else if ((this.interpolationColors !== null && typeof this.interpolationColors !== 'undefined')) {\n            rBrush.interpolationColors = this.interpolationColors.cloneColorBlend();\n        }\n        rBrush.extend = this.extend;\n        this.cloneBackgroundValue(rBrush);\n        this.cloneAntiAliasingValue(rBrush);\n        return rBrush;\n    };\n    /**\n     * Resets the function.\n     * @public\n     */\n    PdfRadialGradientBrush.prototype.resetFunction = function () {\n        this.function = this.mColourBlends.getFunction(this.colorSpace);\n    };\n    return PdfRadialGradientBrush;\n}(PdfGradientBrush));\nexport { PdfRadialGradientBrush };\n","/**\n * public Enum for `PdfBorderOverlapStyle`.\n * @private\n */\nexport var PdfBorderOverlapStyle;\n(function (PdfBorderOverlapStyle) {\n    /**\n     * Specifies the type of `Overlap`.\n     * @private\n     */\n    PdfBorderOverlapStyle[PdfBorderOverlapStyle[\"Overlap\"] = 0] = \"Overlap\";\n    /**\n     * Specifies the type of `Inside`.\n     * @private\n     */\n    PdfBorderOverlapStyle[PdfBorderOverlapStyle[\"Inside\"] = 1] = \"Inside\";\n})(PdfBorderOverlapStyle || (PdfBorderOverlapStyle = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfBorders, PdfPaddings } from './pdf-borders';\nimport { PdfBorderOverlapStyle } from './../../tables/light-tables/enum';\n/**\n * Base class for the `grid style`,\n */\nvar PdfGridStyleBase = /** @class */ (function () {\n    function PdfGridStyleBase() {\n    }\n    Object.defineProperty(PdfGridStyleBase.prototype, \"backgroundBrush\", {\n        // Properties\n        /**\n         * Gets or sets the `background brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridBackgroundBrush;\n        },\n        set: function (value) {\n            this.gridBackgroundBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"textBrush\", {\n        /**\n         * Gets or sets the `text brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridTextBrush;\n        },\n        set: function (value) {\n            this.gridTextBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"textPen\", {\n        /**\n         * Gets or sets the `text pen`.\n         * @private\n         */\n        get: function () {\n            return this.gridTextPen;\n        },\n        set: function (value) {\n            this.gridTextPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"font\", {\n        /**\n         * Gets or sets the `font`.\n         * @private\n         */\n        get: function () {\n            return this.gridFont;\n        },\n        set: function (value) {\n            this.gridFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"backgroundImage\", {\n        /**\n         * Gets or sets the `background Image`.\n         * @private\n         */\n        get: function () {\n            return this.gridBackgroundImage;\n        },\n        set: function (value) {\n            this.gridBackgroundImage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridStyleBase;\n}());\nexport { PdfGridStyleBase };\n/**\n * `PdfGridStyle` class provides customization of the appearance for the 'PdfGrid'.\n */\nvar PdfGridStyle = /** @class */ (function (_super) {\n    __extends(PdfGridStyle, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGridStyle` class.\n     * @private\n     */\n    function PdfGridStyle() {\n        var _this = _super.call(this) || this;\n        _this.gridBorderOverlapStyle = PdfBorderOverlapStyle.Overlap;\n        _this.bAllowHorizontalOverflow = false;\n        _this.gridHorizontalOverflowType = PdfHorizontalOverflowType.LastPage;\n        return _this;\n    }\n    Object.defineProperty(PdfGridStyle.prototype, \"cellSpacing\", {\n        //Properties\n        /**\n         * Gets or sets the `cell spacing` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridCellSpacing === 'undefined') {\n                this.gridCellSpacing = 0;\n            }\n            return this.gridCellSpacing;\n        },\n        set: function (value) {\n            this.gridCellSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"horizontalOverflowType\", {\n        /**\n         * Gets or sets the type of the `horizontal overflow` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            return this.gridHorizontalOverflowType;\n        },\n        set: function (value) {\n            this.gridHorizontalOverflowType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"allowHorizontalOverflow\", {\n        /**\n         * Gets or sets a value indicating whether to `allow horizontal overflow`.\n         * @private\n         */\n        get: function () {\n            return this.bAllowHorizontalOverflow;\n        },\n        set: function (value) {\n            this.bAllowHorizontalOverflow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"cellPadding\", {\n        /**\n         * Gets or sets the `cell padding`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n            }\n            return this.gridCellPadding;\n        },\n        set: function (value) {\n            if (typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n                this.gridCellPadding = value;\n            }\n            else {\n                this.gridCellPadding = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"borderOverlapStyle\", {\n        /**\n         * Gets or sets the `border overlap style` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            return this.gridBorderOverlapStyle;\n        },\n        set: function (value) {\n            this.gridBorderOverlapStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridStyle;\n}(PdfGridStyleBase));\nexport { PdfGridStyle };\n/**\n * `PdfGridCellStyle` class provides customization of the appearance for the 'PdfGridCell'.\n */\nvar PdfGridCellStyle = /** @class */ (function (_super) {\n    __extends(PdfGridCellStyle, _super);\n    /**\n     * Initializes a new instance of the `PdfGridCellStyle` class.\n     * @private\n     */\n    function PdfGridCellStyle() {\n        var _this = _super.call(this) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridCellBorders = PdfBorders.default;\n        return _this;\n    }\n    Object.defineProperty(PdfGridCellStyle.prototype, \"stringFormat\", {\n        //Properties\n        /**\n         * Gets the `string format` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCellStyle.prototype, \"borders\", {\n        /**\n         * Gets or sets the `border` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.gridCellBorders;\n        },\n        set: function (value) {\n            this.gridCellBorders = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCellStyle.prototype, \"cellPadding\", {\n        /**\n         * Gets or sets the `cell padding`.\n         * @private\n         */\n        get: function () {\n            return this.gridCellPadding;\n        },\n        set: function (value) {\n            if (this.gridCellPadding == null || typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n            }\n            this.gridCellPadding = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridCellStyle;\n}(PdfGridStyleBase));\nexport { PdfGridCellStyle };\n/**\n * `PdfGridRowStyle` class provides customization of the appearance for the `PdfGridRow`.\n */\nvar PdfGridRowStyle = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRowStyle` class.\n     * @private\n     */\n    function PdfGridRowStyle() {\n        //\n    }\n    Object.defineProperty(PdfGridRowStyle.prototype, \"backgroundBrush\", {\n        // Properties\n        /**\n         * Gets or sets the `background brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowBackgroundBrush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setBackgroundBrush = function (value) {\n        this.gridRowBackgroundBrush = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.backgroundBrush = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"textBrush\", {\n        /**\n         * Gets or sets the `text brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowTextBrush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setTextBrush = function (value) {\n        this.gridRowTextBrush = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.textBrush = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"textPen\", {\n        /**\n         * Gets or sets the `text pen`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowTextPen;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setTextPen = function (value) {\n        this.gridRowTextPen = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.textPen = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"font\", {\n        /**\n         * Gets or sets the `font`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setFont = function (value) {\n        this.gridRowFont = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.font = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"border\", {\n        /**\n         * Gets or sets the `border` of the current row.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridRowBorder === 'undefined') {\n                this.setBorder(new PdfBorders());\n            }\n            return this.gridRowBorder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setBorder = function (value) {\n        this.gridRowBorder = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.borders = value;\n            }\n        }\n    };\n    /**\n     * sets the `parent row` of the current object.\n     * @private\n     */\n    PdfGridRowStyle.prototype.setParent = function (parent) {\n        this.parent = parent;\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"backgroundImage\", {\n        /**\n         * Gets or sets the `backgroundImage` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.gridRowBackgroundImage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * sets the `backgroundImage` of the 'PdfGridCell'.\n     * @private\n     */\n    PdfGridRowStyle.prototype.setBackgroundImage = function (value) {\n        this.gridRowBackgroundImage = value;\n    };\n    return PdfGridRowStyle;\n}());\nexport { PdfGridRowStyle };\n/**\n * public Enum for `PdfHorizontalOverflowType`.\n * @private\n */\nexport var PdfHorizontalOverflowType;\n(function (PdfHorizontalOverflowType) {\n    /**\n     * Specifies the type of `NextPage`.\n     * @private\n     */\n    PdfHorizontalOverflowType[PdfHorizontalOverflowType[\"NextPage\"] = 0] = \"NextPage\";\n    /**\n     * Specifies the type of `LastPage`.\n     * @private\n     */\n    PdfHorizontalOverflowType[PdfHorizontalOverflowType[\"LastPage\"] = 1] = \"LastPage\";\n})(PdfHorizontalOverflowType || (PdfHorizontalOverflowType = {}));\n","import { PdfGrid } from './pdf-grid';\nimport { PdfGridCellStyle } from './styles/style';\nimport { PdfStringLayouter } from './../../graphics/fonts/string-layouter';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfStringFormat } from './../../graphics/fonts/pdf-string-format';\nimport { RectangleF, PointF, SizeF } from './../../drawing/pdf-drawing';\nimport { PdfDashStyle, PdfLineCap } from './../../graphics/enum';\nimport { PdfBorderOverlapStyle } from './../tables/light-tables/enum';\nimport { PdfSolidBrush } from './../../graphics/brushes/pdf-solid-brush';\nimport { PdfColor } from './../../graphics/pdf-color';\nimport { PdfImage } from './../../graphics/images/pdf-image';\nimport { PdfBitmap } from './../../graphics/images/pdf-bitmap';\nimport { PdfTextWebLink } from './../../annotations/pdf-text-web-link';\nimport { PdfLayoutType } from './../../graphics/figures/enum';\nimport { PdfGridLayouter, PdfGridLayoutFormat } from './../../structured-elements/grid/layout/grid-layouter';\nimport { PdfLayoutParams } from '../../../implementation/graphics/figures/base/element-layouter';\n/**\n * `PdfGridCell` class represents the schema of a cell in a 'PdfGrid'.\n */\nvar PdfGridCell = /** @class */ (function () {\n    function PdfGridCell(row) {\n        /**\n         * `Width` of the cell.\n         * @default 0\n         * @private\n         */\n        this.cellWidth = 0;\n        /**\n         * `Height` of the cell.\n         * @default 0\n         * @private\n         */\n        this.cellHeight = 0;\n        /**\n         * `tempval`to stores current width .\n         * @default 0\n         * @private\n         */\n        this.tempval = 0;\n        this.fontSpilt = false;\n        /**\n         * Specifies weather the `cell is drawn`.\n         * @default true\n         * @private\n         */\n        this.finsh = true;\n        /**\n         * The `remaining height` of row span.\n         * @default 0\n         * @private\n         */\n        this.rowSpanRemainingHeight = 0;\n        this.hasRowSpan = false;\n        this.hasColSpan = false;\n        /**\n         * the 'isFinish' is set to page finish\n         */\n        this.isFinish = true;\n        /**\n         * The `present' to store the current cell.\n         * @default false\n         * @private\n         */\n        this.present = false;\n        this.gridRowSpan = 1;\n        this.colSpan = 1;\n        if (typeof row !== 'undefined') {\n            this.gridRow = row;\n        }\n    }\n    Object.defineProperty(PdfGridCell.prototype, \"isCellMergeContinue\", {\n        //Properties\n        get: function () {\n            return this.internalIsCellMergeContinue;\n        },\n        set: function (value) {\n            this.internalIsCellMergeContinue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isRowMergeContinue\", {\n        get: function () {\n            return this.internalIsRowMergeContinue;\n        },\n        set: function (value) {\n            this.internalIsRowMergeContinue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isCellMergeStart\", {\n        get: function () {\n            return this.internalIsCellMergeStart;\n        },\n        set: function (value) {\n            this.internalIsCellMergeStart = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isRowMergeStart\", {\n        get: function () {\n            return this.internalIsRowMergeStart;\n        },\n        set: function (value) {\n            this.internalIsRowMergeStart = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"remainingString\", {\n        /**\n         * Gets or sets the `remaining string` after the row split between pages.\n         * @private\n         */\n        get: function () {\n            return this.remaining;\n        },\n        set: function (value) {\n            this.remaining = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"FinishedDrawingCell\", {\n        /**\n         * Gets or sets the `FinishedDrawingCell` .\n         * @private\n         */\n        get: function () {\n            return this.isFinish;\n        },\n        set: function (value) {\n            this.isFinish = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"stringFormat\", {\n        /**\n         * Gets or sets the `string format`.\n         * @private\n         */\n        get: function () {\n            if (this.format == null) {\n                this.format = new PdfStringFormat();\n            }\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"row\", {\n        /**\n         * Gets or sets the parent `row`.\n         * @private\n         */\n        get: function () {\n            return this.gridRow;\n        },\n        set: function (value) {\n            this.gridRow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"value\", {\n        /**\n         * Gets or sets the `value` of the cell.\n         * @private\n         */\n        get: function () {\n            return this.objectValue;\n        },\n        set: function (value) {\n            this.objectValue = value;\n            if (this.objectValue instanceof PdfGrid) {\n                this.row.grid.isSingleGrid = false;\n                var grid = this.objectValue;\n                grid.ParentCell = this;\n                this.objectValue.isChildGrid = true;\n                var rowCount = this.row.grid.rows.count;\n                for (var i = 0; i < rowCount; i++) {\n                    var row = this.row.grid.rows.getRow(i);\n                    var colCount = row.cells.count;\n                    for (var j = 0; j < colCount; j++) {\n                        var cell = row.cells.getCell(j);\n                        cell.parent = this;\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"rowSpan\", {\n        /**\n         * Gets or sets a value that indicates the total number of rows that cell `spans` within a PdfGrid.\n         * @private\n         */\n        get: function () {\n            return this.gridRowSpan;\n        },\n        set: function (value) {\n            if (value < 1) {\n                throw new Error('ArgumentException : Invalid span specified, must be greater than or equal to 1');\n            }\n            else {\n                this.gridRowSpan = value;\n                this.row.rowSpanExists = true;\n                this.row.grid.hasRowSpanSpan = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"style\", {\n        /**\n         * Gets or sets the cell `style`.\n         * @private\n         */\n        get: function () {\n            if (this.cellStyle == null) {\n                this.cellStyle = new PdfGridCellStyle();\n            }\n            return this.cellStyle;\n        },\n        set: function (value) {\n            this.cellStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"height\", {\n        /**\n         * Gets the `height` of the PdfGrid cell.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.cellHeight === 0) {\n                this.cellHeight = this.measureHeight();\n            }\n            return this.cellHeight;\n        },\n        set: function (value) {\n            this.cellHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"columnSpan\", {\n        /**\n         * Gets or sets a value that indicates the total number of columns that cell `spans` within a PdfGrid.\n         * @private\n         */\n        get: function () {\n            return this.colSpan;\n        },\n        set: function (value) {\n            if (value < 1) {\n                throw Error('Invalid span specified, must be greater than or equal to 1');\n            }\n            else {\n                this.colSpan = value;\n                this.row.columnSpanExists = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"width\", {\n        /**\n         * Gets the `width` of the PdfGrid cell.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.cellWidth === 0 || this.row.grid.isComplete) {\n                this.cellWidth = this.measureWidth();\n            }\n            return Math.round(this.cellWidth);\n        },\n        set: function (value) {\n            this.cellWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Calculates the width`.\n     * @private\n     */\n    PdfGridCell.prototype.measureWidth = function () {\n        // .. Calculate the cell text width.\n        // .....Add border widths, cell spacings and paddings to the width.\n        var width = 0;\n        var layouter = new PdfStringLayouter();\n        if (typeof this.objectValue === 'string') {\n            /* tslint:disable */\n            var slr = layouter.layout(this.objectValue, this.getTextFont(), this.stringFormat, new SizeF(Number.MAX_VALUE, Number.MAX_VALUE), false, new SizeF(0, 0));\n            width += slr.actualSize.width;\n            width += (this.style.borders.left.width + this.style.borders.right.width) * 2;\n        }\n        else if (this.objectValue instanceof PdfGrid) {\n            width = this.objectValue.size.width;\n            //width += this.objectValue.style.cellSpacing;\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            width += this.objectValue.width;\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            var webLink = this.objectValue;\n            var result = layouter.layout(webLink.text, webLink.font, webLink.stringFormat, new SizeF(0, 0), false, new SizeF(0, 0));\n            /* tslint:enable */\n            width += result.actualSize.width;\n            width += (this.style.borders.left.width + this.style.borders.right.width) * 2;\n        }\n        if (!(this.objectValue instanceof PdfGrid)) {\n            if (this.style.cellPadding != null) {\n                width += (this.style.cellPadding.left + this.style.cellPadding.right);\n            }\n            else {\n                width += (this.row.grid.style.cellPadding.left + this.row.grid.style.cellPadding.right);\n            }\n        }\n        else {\n            if (this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined') {\n                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {\n                    width += this.style.cellPadding.left;\n                }\n                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {\n                    width += this.style.cellPadding.right;\n                }\n            }\n            else {\n                if (typeof this.row.grid.style.cellPadding.left !== 'undefined' && this.row.grid.style.cellPadding.hasLeftPad) {\n                    width += this.row.grid.style.cellPadding.left;\n                }\n                if (typeof this.row.grid.style.cellPadding.right !== 'undefined' && this.row.grid.style.cellPadding.hasRightPad) {\n                    width += this.row.grid.style.cellPadding.right;\n                }\n            }\n        }\n        width += this.row.grid.style.cellSpacing;\n        return width;\n    };\n    /**\n     * Draw the `cell background`.\n     * @private\n     */\n    PdfGridCell.prototype.drawCellBackground = function (graphics, bounds) {\n        var backgroundBrush = this.getBackgroundBrush();\n        //graphics.isTemplateGraphics = true;\n        if (backgroundBrush != null) {\n            graphics.save();\n            graphics.drawRectangle(backgroundBrush, bounds.x, bounds.y, bounds.width, bounds.height);\n            graphics.restore();\n        }\n        if (this.style.backgroundImage != null) {\n            var image = this.getBackgroundImage();\n            graphics.drawImage(this.style.backgroundImage, bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    /**\n     * `Adjusts the text layout area`.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGridCell.prototype.adjustContentLayoutArea = function (bounds) {\n        //Add Padding value to its Cell Bounds\n        var returnBounds = new RectangleF(bounds.x, bounds.y, bounds.width, bounds.height);\n        if (!(this.objectValue instanceof PdfGrid)) {\n            if (typeof this.style.cellPadding === 'undefined' || this.style.cellPadding == null) {\n                returnBounds.x += this.gridRow.grid.style.cellPadding.left;\n                returnBounds.y += this.gridRow.grid.style.cellPadding.top;\n                returnBounds.width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n                returnBounds.height -= (this.gridRow.grid.style.cellPadding.bottom + this.gridRow.grid.style.cellPadding.top);\n            }\n            else {\n                returnBounds.x += this.style.cellPadding.left;\n                returnBounds.y += this.style.cellPadding.top;\n                returnBounds.width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n                returnBounds.height -= (this.style.cellPadding.bottom + this.style.cellPadding.top);\n                if (this.rowSpan === 1) {\n                    returnBounds.width -= (this.style.borders.left.width);\n                }\n            }\n            if (typeof this.style.borders === 'undefined' || this.style.borders == null) {\n                returnBounds.x += this.gridRow.style.border.left.width;\n                returnBounds.y += this.gridRow.style.border.top.width;\n                returnBounds.width -= (this.gridRow.style.border.left.width + this.gridRow.style.border.right.width);\n                returnBounds.height -= (this.gridRow.style.border.top.width + this.gridRow.style.border.bottom.width);\n            }\n            else {\n                returnBounds.x += this.style.borders.left.width;\n                returnBounds.y += this.style.borders.top.width;\n                returnBounds.width -= (this.style.borders.left.width + this.style.borders.right.width);\n                returnBounds.height -= (this.style.borders.top.width + this.style.borders.bottom.width);\n                if (this.rowSpan === 1) {\n                    returnBounds.width -= (this.style.borders.left.width);\n                }\n            }\n        }\n        else {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                if (this.gridRow.grid.style.cellPadding !== null && typeof this.gridRow.grid.style.cellPadding !== 'undefined') {\n                    var hasLeftPad = this.gridRow.grid.style.cellPadding.hasLeftPad;\n                    var hasTopPad = this.gridRow.grid.style.cellPadding.hasTopPad;\n                    var hasRightPad = this.gridRow.grid.style.cellPadding.hasRightPad;\n                    var hasBottomPad = this.gridRow.grid.style.cellPadding.hasBottomPad;\n                    if (hasLeftPad || hasTopPad || hasRightPad || hasBottomPad) {\n                        if (typeof this.gridRow.grid.style.cellPadding.left !== 'undefined' && hasLeftPad) {\n                            returnBounds.x += this.gridRow.grid.style.cellPadding.left + this.cellStyle.borders.left.width;\n                            returnBounds.width -= this.gridRow.grid.style.cellPadding.left;\n                        }\n                        if (typeof this.gridRow.grid.style.cellPadding.top !== 'undefined' && hasTopPad) {\n                            returnBounds.y += this.gridRow.grid.style.cellPadding.top + this.cellStyle.borders.top.width;\n                            returnBounds.height -= this.gridRow.grid.style.cellPadding.top;\n                        }\n                        if (typeof this.gridRow.grid.style.cellPadding.right !== 'undefined' && hasRightPad) {\n                            returnBounds.width -= this.gridRow.grid.style.cellPadding.right;\n                        }\n                        if (typeof this.gridRow.grid.style.cellPadding.bottom !== 'undefined' && hasBottomPad) {\n                            returnBounds.height -= this.gridRow.grid.style.cellPadding.bottom;\n                        }\n                    }\n                    else {\n                        var format = this.getStringFormat();\n                        if (format.alignment === null || typeof format.alignment === 'undefined') {\n                            returnBounds.x += this.row.grid.style.cellPadding.left;\n                            returnBounds.y += this.row.grid.style.cellPadding.top;\n                        }\n                    }\n                }\n                else {\n                    var format = this.getStringFormat();\n                    if (format.alignment === null || typeof format.alignment === 'undefined') {\n                        returnBounds.x += this.row.grid.style.cellPadding.left;\n                        returnBounds.y += this.row.grid.style.cellPadding.top;\n                    }\n                }\n            }\n            else {\n                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {\n                    returnBounds.x += this.style.cellPadding.left + this.cellStyle.borders.left.width;\n                    returnBounds.width -= this.style.cellPadding.left;\n                }\n                if (typeof this.style.cellPadding.top !== 'undefined' && this.style.cellPadding.hasTopPad) {\n                    returnBounds.y += this.style.cellPadding.top + this.cellStyle.borders.top.width;\n                    returnBounds.height -= this.style.cellPadding.top;\n                }\n                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {\n                    returnBounds.width -= this.style.cellPadding.right;\n                }\n                if (typeof this.style.cellPadding.bottom !== 'undefined' && this.style.cellPadding.hasBottomPad) {\n                    returnBounds.height -= this.style.cellPadding.bottom;\n                }\n            }\n            returnBounds.width -= (this.cellStyle.borders.left.width + this.cellStyle.borders.right.width);\n            returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n        }\n        return returnBounds;\n    };\n    /**\n     * `Draws` the specified graphics.\n     * @private\n     */\n    PdfGridCell.prototype.draw = function (graphics, bounds, cancelSubsequentSpans) {\n        var isrowbreak = false;\n        /*if (!this.row.grid.isSingleGrid)\n        {\n            //Check whether the Grid Span to Nextpage\n            if ((this.remainingString != null) || (PdfGridLayouter.repeatRowIndex != -1))\n            {\n                this.DrawParentCells(graphics, bounds, true);\n            }\n            else if (this.row.grid.rows.count > 1)\n            {\n                for (let i : number  = 0; i < this.row.grid.rows.count; i++)\n                {\n                    if (this.row == this.row.grid.rows.getRow(i))\n                    {\n                        if (this.row.grid.rows.getRow(i).rowBreakHeight > 0)\n                            isrowbreak = true;\n                        if ((i > 0) && (isrowbreak))\n                            this.DrawParentCells(graphics, bounds, false);\n                    }\n                }\n            }\n        } */\n        var result = null;\n        /*if (cancelSubsequentSpans)\n        {\n            //..Cancel all subsequent cell spans, if no space exists.\n            let currentCellIndex : number = this.row.cells.indexOf(this);\n            for (let i : number = currentCellIndex + 1; i <= currentCellIndex + this.colSpan; i++)\n            {\n                this.row.cells.getCell(i).isCellMergeContinue = false;\n                this.row.cells.getCell(i).isRowMergeContinue = false;\n            }\n            this.colSpan = 1;\n        }*/\n        //..Skip cells which were already covered by spanmap.\n        if (this.internalIsCellMergeContinue || this.internalIsRowMergeContinue) {\n            if (this.internalIsCellMergeContinue && this.row.grid.style.allowHorizontalOverflow) {\n                if ((this.row.rowOverflowIndex > 0 && (this.row.cells.indexOf(this) != this.row.rowOverflowIndex + 1)) || (this.row.rowOverflowIndex == 0 && this.internalIsCellMergeContinue)) {\n                    return result;\n                }\n            }\n            else {\n                return result;\n            }\n        }\n        //Adjust bounds with Row and Column Spacing\n        bounds = this.adjustOuterLayoutArea(bounds, graphics);\n        this.drawCellBackground(graphics, bounds);\n        var textPen = this.getTextPen();\n        var textBrush = this.getTextBrush();\n        if (typeof textPen === 'undefined' && typeof textBrush === 'undefined') {\n            textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        }\n        var font = this.getTextFont();\n        var strFormat = this.getStringFormat();\n        var innerLayoutArea = bounds;\n        if (innerLayoutArea.height >= graphics.clientSize.height) {\n            // If to break row to next page.\n            if (this.row.grid.allowRowBreakAcrossPages) {\n                innerLayoutArea.height -= innerLayoutArea.y;\n                if (typeof this._rowHeight !== 'undefined' && this._rowHeight !== null && innerLayoutArea.height > this._rowHeight) {\n                    innerLayoutArea.height = this._rowHeight;\n                }\n                //bounds.height -= bounds.y;\n                // if(this.row.grid.isChildGrid)\n                // {\n                //     innerLayoutArea.height -= this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;\n                // }\n            }\n            // if user choose to cut the row whose height is more than page height.\n            // else\n            // {\n            //     innerLayoutArea.height = graphics.clientSize.height;\n            //     bounds.height = graphics.clientSize.height;\n            // }\n        }\n        innerLayoutArea = this.adjustContentLayoutArea(innerLayoutArea);\n        if (typeof this.objectValue === 'string' || typeof this.remaining === 'string') {\n            var temp = void 0;\n            var layoutRectangle = void 0;\n            if (innerLayoutArea.height < font.height)\n                layoutRectangle = new RectangleF(innerLayoutArea.x, innerLayoutArea.y, innerLayoutArea.width, font.height);\n            else\n                layoutRectangle = innerLayoutArea;\n            if (innerLayoutArea.height < font.height && this.row.grid.isChildGrid && this.row.grid.ParentCell != null) {\n                var height = layoutRectangle.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom - this.row.grid.style.cellPadding.bottom;\n                if (this.row.grid.splitChildRowIndex != -1) {\n                    this.fontSpilt = true;\n                    this.row.rowFontSplit = true;\n                }\n                if (height > 0 && height < font.height)\n                    layoutRectangle.height = height;\n                // else if (height + this.row.grid.style.cellPadding.bottom > 0 && height + this.row.grid.style.cellPadding.bottom < font.height)\n                //     layoutRectangle.height = height + this.row.grid.style.cellPadding.bottom;\n                // else if (bounds.height < font.height)\n                //     layoutRectangle.height = bounds.height;\n                // else if (bounds.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom < font.height)\n                //     layoutRectangle.height = bounds.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;                        \n            }\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                layoutRectangle.width -= this.gridRow.grid.style.cellSpacing;\n                bounds.width -= this.gridRow.grid.style.cellSpacing;\n            }\n            if (this.isFinish) {\n                // if (this.row.grid.splitChildRowIndex != -1 && !this.row.grid.isChildGrid && typeof this.remaining === 'undefined'){\n                //     this.remaining = '';\n                //     graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                // } else {\n                temp = this.remaining === '' ? this.remaining : this.objectValue;\n                graphics.drawString(temp, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                if (this.row.grid.splitChildRowIndex != -1 && !this.row.grid.isChildGrid && typeof this.remaining === 'undefined') {\n                    this.remaining = '';\n                    //graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                }\n            }\n            else {\n                if (typeof this.remaining == 'undefined' || this.remaining === null) {\n                    this.remaining = '';\n                }\n                if (this.row.repeatFlag) {\n                    graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                }\n                //  else {\n                //     if(this.row.grid.ParentCell.row.repeatFlag) {\n                //         graphics.drawString((this.remaining as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);                    \n                //     } else {\n                //         layoutRectangle.height = this.row.height;\n                //         graphics.drawString((this.objectValue as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                //         bounds.height = this.row.height;\n                //     }\n                //  }\n                this.isFinish = true;\n                //graphics.drawString((this.remaining as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n            }\n            result = graphics.stringLayoutResult;\n            // if(this.row.grid.isChildGrid && this.row.rowBreakHeight > 0 && result !=null) {\n            //     bounds.height -= this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;\n            // }\n        }\n        else if (this.objectValue instanceof PdfGrid) {\n            var childGrid = this.objectValue;\n            childGrid.isChildGrid = true;\n            childGrid.ParentCell = this;\n            var layoutRect = void 0;\n            layoutRect = innerLayoutArea;\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                bounds.width -= this.gridRow.grid.style.cellSpacing;\n            }\n            // layoutRect = bounds;\n            // if (this.style.cellPadding != null){\n            //     layoutRect = bounds;            \n            // } else if((this.row.grid.style.cellPadding != null) && (childGrid.style.cellPadding.bottom === 0.5) && (childGrid.style.cellPadding.top === 0.5)\n            //                               && (childGrid.style.cellPadding.left === 5.76) && (childGrid.style.cellPadding.right === 5.76)\n            //                               && (this.gridRow.grid.style.cellSpacing === 0) && (childGrid.style.cellSpacing === 0)) {\n            //     layoutRect = innerLayoutArea;\n            // }\n            // if(this.objectValue.style.cellPadding != null && typeof this.objectValue.style.cellPadding !== 'undefined'){\n            //     layoutRect = bounds;\n            // }           \n            var layouter = new PdfGridLayouter(childGrid);\n            var format = new PdfGridLayoutFormat();\n            if (this.row.grid.LayoutFormat != null)\n                format = this.row.grid.LayoutFormat;\n            else\n                format.layout = PdfLayoutType.Paginate;\n            var param = new PdfLayoutParams();\n            if (graphics.layer != null) {\n                // Define layout parameters.\n                param.page = graphics.page;\n                param.bounds = layoutRect;\n                param.format = format;\n                //Set the span \n                childGrid.setSpan();\n                childGrid.checkSpan();\n                // Draw the child grid.\n                var childGridResult = layouter.Layouter(param);\n                //let childGridResult : PdfLayoutResult = layouter.innerLayout(param);\n                this.value = childGrid;\n                if (this.row.grid.splitChildRowIndex !== -1) {\n                    this.height = this.row.rowBreakHeightValue;\n                }\n                if (param.page != childGridResult.page) //&& (isWidthGreaterthanParent != true))\n                 {\n                    if (this.row.rowBreakHeightValue !== null && typeof this.row.rowBreakHeightValue !== 'undefined')\n                        childGridResult.bounds.height = this.row.rowBreakHeightValue;\n                    if (this.row.rowBreakHeight == 0)\n                        this.row.NestedGridLayoutResult = childGridResult;\n                    else\n                        this.row.rowBreakHeight = this.row.rowBreakHeightValue;\n                    //bounds.height = this.row.rowBreakHeight;\n                    //After drawing paginated nested grid, the bounds of the parent grid in start page should be corrected for borders.\n                    //bounds.height = graphics.clientSize.height - bounds.y;\n                }\n            }\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            var imageBounds = new RectangleF(innerLayoutArea.x, innerLayoutArea.y, innerLayoutArea.width, innerLayoutArea.height);\n            var image = this.objectValue;\n            if (image.width <= innerLayoutArea.width) {\n                imageBounds.width = image.width;\n            }\n            if (image.height <= innerLayoutArea.height) {\n                imageBounds.height = image.height;\n            }\n            graphics.drawImage(this.objectValue, imageBounds.x, imageBounds.y, imageBounds.width, imageBounds.height);\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            this.objectValue.draw(graphics.currentPage, innerLayoutArea);\n        }\n        else if (typeof this.objectValue === 'undefined') {\n            this.objectValue = \"\";\n            graphics.drawString(this.objectValue, font, textPen, textBrush, innerLayoutArea.x, innerLayoutArea.y, innerLayoutArea.width, innerLayoutArea.height, strFormat);\n            if (this.style.cellPadding != null && this.style.cellPadding.bottom == 0 && this.style.cellPadding.left == 0 && this.style.cellPadding.right == 0 && this.style.cellPadding.top == 0) {\n                bounds.width -= (this.style.borders.left.width + this.style.borders.right.width);\n            }\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                bounds.width -= this.gridRow.grid.style.cellSpacing;\n            }\n        }\n        if (this.style.borders != null) {\n            if (!this.fontSpilt)\n                this.drawCellBorders(graphics, bounds);\n            else {\n                if (this.row.grid.ParentCell.row.grid.splitChildRowIndex != -1) {\n                    this.row.rowFontSplit = false;\n                    this.drawCellBorders(graphics, bounds);\n                }\n            }\n        }\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * Draws the `cell border` constructed by drawing lines.\n     * @private\n     */\n    PdfGridCell.prototype.drawCellBorders = function (graphics, bounds) {\n        if (this.row.grid.style.borderOverlapStyle === PdfBorderOverlapStyle.Inside) {\n            bounds.x += this.style.borders.left.width;\n            bounds.y += this.style.borders.top.width;\n            bounds.width -= this.style.borders.right.width;\n            bounds.height -= this.style.borders.bottom.width;\n        }\n        var p1 = new PointF(bounds.x, bounds.y + bounds.height);\n        var p2 = new PointF(bounds.x, bounds.y);\n        var pen = this.cellStyle.borders.left;\n        if (this.cellStyle.borders.left.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        // SetTransparency(ref graphics, pen);\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n        p1 = new PointF(bounds.x + bounds.width, bounds.y);\n        p2 = new PointF(bounds.x + bounds.width, bounds.y + bounds.height);\n        pen = this.cellStyle.borders.right;\n        if ((bounds.x + bounds.width) > (graphics.clientSize.width - (pen.width / 2))) {\n            p1 = new PointF(graphics.clientSize.width - (pen.width / 2), bounds.y);\n            p2 = new PointF(graphics.clientSize.width - (pen.width / 2), bounds.y + bounds.height);\n        }\n        if (this.cellStyle.borders.right.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n        p1 = new PointF(bounds.x, bounds.y);\n        p2 = new PointF(bounds.x + bounds.width, bounds.y);\n        pen = this.cellStyle.borders.top;\n        if (this.cellStyle.borders.top.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n        p1 = new PointF(bounds.x + bounds.width, bounds.y + bounds.height);\n        p2 = new PointF(bounds.x, bounds.y + bounds.height);\n        pen = this.cellStyle.borders.bottom;\n        if ((bounds.y + bounds.height) > (graphics.clientSize.height - (pen.width / 2))) {\n            p1 = new PointF((bounds.x + bounds.width), (graphics.clientSize.height - (pen.width / 2)));\n            p2 = new PointF(bounds.x, (graphics.clientSize.height - (pen.width / 2)));\n        }\n        if (this.cellStyle.borders.bottom.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n    };\n    // private setTransparency(graphics : PdfGraphics, pen : PdfPen) : void {\n    //     let alpha : number = (pen.color.a / 255) as number;\n    //     graphics.save();\n    //     graphics.setTransparency(alpha);\n    // }\n    /**\n     * `Adjusts the outer layout area`.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGridCell.prototype.adjustOuterLayoutArea = function (bounds, g) {\n        var isHeader = false;\n        var cellSpacing = this.row.grid.style.cellSpacing;\n        if (cellSpacing > 0) {\n            bounds = new RectangleF(bounds.x + cellSpacing, bounds.y + cellSpacing, bounds.width - cellSpacing, bounds.height - cellSpacing);\n        }\n        var currentColIndex = this.row.cells.indexOf(this);\n        if (this.columnSpan > 1 || (this.row.rowOverflowIndex > 0 && (currentColIndex == this.row.rowOverflowIndex + 1) && this.isCellMergeContinue)) {\n            var span = this.columnSpan;\n            if (span == 1 && this.isCellMergeContinue) {\n                for (var j = currentColIndex + 1; j < this.row.grid.columns.count; j++) {\n                    if (this.row.cells.getCell(j).isCellMergeContinue)\n                        span++;\n                    else\n                        break;\n                }\n            }\n            var totalWidth = 0;\n            for (var i = currentColIndex; i < currentColIndex + span; i++) {\n                if (this.row.grid.style.allowHorizontalOverflow) {\n                    var width = void 0;\n                    var compWidth = this.row.grid.size.width < g.clientSize.width ? this.row.grid.size.width : g.clientSize.width;\n                    if (this.row.grid.size.width > g.clientSize.width) {\n                        width = bounds.x + totalWidth + this.row.grid.columns.getColumn(i).width;\n                    }\n                    else {\n                        width = totalWidth + this.row.grid.columns.getColumn(i).width;\n                    }\n                    if (width > compWidth) {\n                        break;\n                    }\n                }\n                totalWidth += this.row.grid.columns.getColumn(i).width;\n            }\n            totalWidth -= this.row.grid.style.cellSpacing;\n            bounds.width = totalWidth;\n        }\n        if (this.rowSpan > 1 || this.row.rowSpanExists) {\n            var span = this.rowSpan;\n            var currentRowIndex = this.row.grid.rows.rowCollection.indexOf(this.row);\n            if (currentRowIndex == -1) {\n                currentRowIndex = this.row.grid.headers.indexOf(this.row);\n                if (currentRowIndex != -1) {\n                    isHeader = true;\n                }\n            }\n            // if (span == 1 && this.isCellMergeContinue) {\n            //         for (let j : number = currentRowIndex + 1; j < this.row.grid.rows.count; j++)\n            //         {\n            //             let flag : boolean = (isHeader ? this.row.grid.headers.getHeader(j).cells.getCell(currentColIndex).isCellMergeContinue : this.row.grid.rows.getRow(j).cells.getCell(currentColIndex).isCellMergeContinue);\n            //             if (flag)\n            //                 span++;\n            //             else\n            //                 break;\n            //         }\n            // }\n            var totalHeight = 0;\n            var max = 0;\n            for (var i = currentRowIndex; i < currentRowIndex + span; i++) {\n                totalHeight += (isHeader ? this.row.grid.headers.getHeader(i).height : this.row.grid.rows.getRow(i).height);\n                var row = this.row.grid.rows.getRow(i);\n                var rowIndex = this.row.grid.rows.rowCollection.indexOf(row);\n                /*if (this.rowSpan > 1)\n                    {\n                        for (let k : number = 0; k < this.row.cells.count; k++) {\n                            let cell : PdfGridCell = this.row.cells.getCell(k);\n                            if(cell.rowSpan>1)\n                            {\n                                let tempHeight : number =0;\n                                \n                                for (let j :number = i; j < i +cell.rowSpan; j++)\n                                {\n                                    if (!this.row.grid.rows.getRow(j).isRowSpanRowHeightSet)\n                                        this.row.grid.rows.getRow(j).isRowHeightSet = false;\n                                    tempHeight += this.row.grid.rows.getRow(j).height;\n                                    if (!this.row.grid.rows.getRow(j).isRowSpanRowHeightSet)\n                                        this.row.grid.rows.getRow(j).isRowHeightSet = true;\n                                }\n                                //To check the Row spanned cell height is greater than the total spanned row height.\n                                if(cell.height>tempHeight)\n                                {\n                                    if (max < (cell.height - tempHeight))\n                                    {\n                                        max = cell.height - tempHeight;\n                                        if (this.rowSpanRemainingHeight != 0 && max > this.rowSpanRemainingHeight)\n                                        {\n                                            max += this.rowSpanRemainingHeight;\n                                        }\n                                        let index :number = row.cells.indexOf(cell);\n                                        //set the m_rowspanRemainingHeight to last rowspanned row.\n                                        this.row.grid.rows.getRow((rowIndex +cell.rowSpan) - 1).cells.getCell(index).rowSpanRemainingHeight = max;\n                                        this.rowSpanRemainingHeight = this.row.grid.rows.getRow((rowIndex + cell.rowSpan) - 1).cells.getCell(index).rowSpanRemainingHeight;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    if (!this.row.grid.rows.getRow(i).isRowSpanRowHeightSet)\n                    this.row.grid.rows.getRow(i).isRowHeightSet = true;*/\n            }\n            var cellIndex = this.row.cells.indexOf(this);\n            totalHeight -= this.row.grid.style.cellSpacing;\n            // if (this.row.cells.getCell(cellIndex).height > totalHeight && (!this.row.grid.rows.getRow((currentRowIndex + span) - 1).isRowHeightSet)) {\n            //      this.row.grid.rows.getRow((currentRowIndex + span) - 1).cells.getCell(cellIndex).rowSpanRemainingHeight = this.row.cells.getCell(cellIndex).height - totalHeight;\n            //      totalHeight = this.row.cells.getCell(cellIndex).height;\n            //      bounds.height = totalHeight;\n            // } else {\n            bounds.height = totalHeight;\n            //  }\n            if (!this.row.rowMergeComplete) {\n                bounds.height = totalHeight;\n            }\n        }\n        return bounds;\n    };\n    /* tslint:enable */\n    /**\n     * Gets the `text font`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextFont = function () {\n        if (typeof this.style.font !== 'undefined' && this.style.font != null) {\n            return this.style.font;\n        }\n        else if (typeof this.row.style.font !== 'undefined' && this.row.style.font != null) {\n            return this.row.style.font;\n        }\n        else if (typeof this.row.grid.style.font !== 'undefined' && this.row.grid.style.font != null) {\n            return this.row.grid.style.font;\n        }\n        else {\n            return PdfDocument.defaultFont;\n        }\n    };\n    /**\n     * Gets the `text brush`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextBrush = function () {\n        if (typeof this.style.textBrush !== 'undefined' && this.style.textBrush != null) {\n            return this.style.textBrush;\n        }\n        else if (typeof this.row.style.textBrush !== 'undefined' && this.row.style.textBrush != null) {\n            return this.row.style.textBrush;\n        }\n        else {\n            return this.row.grid.style.textBrush;\n        }\n    };\n    /**\n     * Gets the `text pen`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextPen = function () {\n        if (typeof this.style.textPen !== 'undefined' && this.style.textPen != null) {\n            return this.style.textPen;\n        }\n        else if (typeof this.row.style.textPen !== 'undefined' && this.row.style.textPen != null) {\n            return this.row.style.textPen;\n        }\n        else {\n            return this.row.grid.style.textPen;\n        }\n    };\n    /**\n     * Gets the `background brush`.\n     * @private\n     */\n    PdfGridCell.prototype.getBackgroundBrush = function () {\n        if (typeof this.style.backgroundBrush !== 'undefined' && this.style.backgroundBrush != null) {\n            return this.style.backgroundBrush;\n        }\n        else if (typeof this.row.style.backgroundBrush !== 'undefined' && this.row.style.backgroundBrush != null) {\n            return this.row.style.backgroundBrush;\n        }\n        else {\n            return this.row.grid.style.backgroundBrush;\n        }\n    };\n    /**\n     * Gets the `background image`.\n     * @private\n     */\n    PdfGridCell.prototype.getBackgroundImage = function () {\n        if (typeof this.style.backgroundImage !== 'undefined' && this.style.backgroundImage != null) {\n            return this.style.backgroundImage;\n        }\n        else if (typeof this.row.style.backgroundImage !== 'undefined' && this.row.style.backgroundImage != null) {\n            return this.row.style.backgroundImage;\n        }\n        else {\n            return this.row.grid.style.backgroundImage;\n        }\n    };\n    /**\n     * Gets the current `StringFormat`.\n     * @private\n     */\n    PdfGridCell.prototype.getStringFormat = function () {\n        if (typeof this.style.stringFormat !== 'undefined' && this.style.stringFormat != null) {\n            return this.style.stringFormat;\n        }\n        else {\n            return this.stringFormat;\n        }\n    };\n    /**\n     * Calculates the `height`.\n     * @private\n     */\n    PdfGridCell.prototype.measureHeight = function () {\n        // .. Calculate the cell text height.\n        // .....Add border widths, cell spacings and paddings to the height.\n        var width = this.calculateWidth();\n        // //check whether the Current PdfGridCell has padding\n        if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n            width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n            //width -= (this.style.borders.left.width + this.style.borders.right.width);\n        }\n        else {\n            width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n            width -= (this.style.borders.left.width + this.style.borders.right.width);\n        }\n        var height = 0;\n        var layouter = new PdfStringLayouter();\n        if (typeof this.objectValue === 'string' || typeof this.remaining === 'string') {\n            var currentValue = this.objectValue;\n            /* tslint:disable */\n            if (!this.isFinish)\n                currentValue = !(this.remaining === null || this.remaining === '' ||\n                    typeof this.remaining === 'undefined') ? this.remaining : this.objectValue;\n            var slr = null;\n            var cellIndex = this.row.cells.indexOf(this);\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                width -= this.gridRow.grid.style.cellSpacing * 2;\n            }\n            if (!this.row.cells.getCell(cellIndex).hasColSpan && !this.row.cells.getCell(cellIndex).hasRowSpan) {\n                if (this.gridRow.grid.isChildGrid) {\n                    if (width < 0) {\n                        this.tempval = width;\n                        if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                            this.tempval += (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n                        }\n                        else {\n                            this.tempval += (this.style.cellPadding.right + this.style.cellPadding.left);\n                            this.tempval += (this.style.borders.left.width + this.style.borders.right.width);\n                        }\n                    }\n                    else {\n                        this.tempval = width;\n                    }\n                    slr = layouter.layout(currentValue, this.getTextFont(), this.stringFormat, new SizeF(this.tempval, 0), false, new SizeF(0, 0));\n                    height += slr.actualSize.height;\n                }\n                else {\n                    slr = layouter.layout(currentValue, this.getTextFont(), this.stringFormat, new SizeF(width, 0), false, new SizeF(0, 0));\n                    height += slr.actualSize.height;\n                }\n            }\n            /* tslint:enable */\n            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        }\n        else if (this.objectValue instanceof PdfGrid) {\n            var cellIndex = this.row.cells.indexOf(this);\n            var internalWidth = 0;\n            if ((this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined')) {\n                internalWidth = this.calculateWidth();\n                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {\n                    internalWidth -= this.style.cellPadding.left;\n                }\n                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {\n                    internalWidth -= this.style.cellPadding.right;\n                }\n            }\n            else if ((this.row.grid.style.cellPadding != null || typeof this.row.grid.style.cellPadding !== 'undefined')) {\n                internalWidth = this.calculateWidth();\n                if (typeof this.row.grid.style.cellPadding.left !== 'undefined' && this.row.grid.style.cellPadding.hasLeftPad) {\n                    internalWidth -= this.row.grid.style.cellPadding.left;\n                }\n                if (typeof this.row.grid.style.cellPadding.right !== 'undefined' && this.row.grid.style.cellPadding.hasRightPad) {\n                    internalWidth -= this.row.grid.style.cellPadding.right;\n                }\n            }\n            else {\n                internalWidth = this.calculateWidth();\n            }\n            this.objectValue.tempWidth = internalWidth;\n            if (!this.row.cells.getCell(cellIndex).hasColSpan && !this.row.cells.getCell(cellIndex).hasRowSpan) {\n                height = this.objectValue.size.height;\n            }\n            else {\n                height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n            }\n            if (this.gridRow.grid.style.cellSpacing !== 0) {\n                width -= this.gridRow.grid.style.cellSpacing * 2;\n                //height += (this.row.grid.style.cellPadding.top + this.row.grid.style.cellPadding.bottom);\n            }\n            if (this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined') {\n                if (typeof this.row.grid.style.cellPadding.top !== 'undefined' && this.row.grid.style.cellPadding.hasTopPad) {\n                    height += this.row.grid.style.cellPadding.top;\n                }\n                if (this.row.grid.style.cellPadding.hasBottomPad && typeof this.row.grid.style.cellPadding.bottom !== 'undefined') {\n                    height += this.row.grid.style.cellPadding.bottom;\n                }\n            }\n            height += this.objectValue.style.cellSpacing;\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            height += this.objectValue.height;\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            var webLink = this.objectValue;\n            /* tslint:disable */\n            var slr = layouter.layout(webLink.text, webLink.font, webLink.stringFormat, new SizeF(width, 0), false, new SizeF(0, 0));\n            /* tslint:enable */\n            height += slr.actualSize.height;\n            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        }\n        else if (typeof this.objectValue === 'undefined') {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n            }\n            else {\n                width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n                width -= (this.style.borders.left.width + this.style.borders.right.width);\n            }\n            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        }\n        //Add padding top and bottom value to height\n        if (!(this.objectValue instanceof PdfGrid)) {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                height += (this.row.grid.style.cellPadding.top + this.row.grid.style.cellPadding.bottom);\n            }\n            else {\n                height += (this.style.cellPadding.top + this.style.cellPadding.bottom);\n            }\n        }\n        else {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                if (typeof this.row.grid.style.cellPadding.top !== 'undefined' && this.row.grid.style.cellPadding.hasTopPad) {\n                    height += this.row.grid.style.cellPadding.top;\n                }\n                if (typeof this.row.grid.style.cellPadding.bottom !== 'undefined' && this.row.grid.style.cellPadding.hasBottomPad) {\n                    height += this.row.grid.style.cellPadding.bottom;\n                }\n            }\n            else {\n                if (typeof this.style.cellPadding.top !== 'undefined' && this.style.cellPadding.hasTopPad) {\n                    height += this.style.cellPadding.top;\n                }\n                if (typeof this.style.cellPadding.bottom !== 'undefined' && this.style.cellPadding.hasBottomPad) {\n                    height += this.style.cellPadding.bottom;\n                }\n            }\n        }\n        height += this.row.grid.style.cellSpacing;\n        return height;\n    };\n    /**\n     * return the calculated `width` of the cell.\n     * @private\n     */\n    PdfGridCell.prototype.calculateWidth = function () {\n        var cellIndex = this.row.cells.indexOf(this);\n        var rowindex = this.row.grid.rows.rowCollection.indexOf(this.row);\n        var columnSpan = this.columnSpan;\n        var width = 0;\n        if (columnSpan === 1) {\n            for (var i = 0; i < columnSpan; i++) {\n                width += this.row.grid.columns.getColumn(cellIndex + i).width;\n            }\n        }\n        else if (columnSpan > 1) {\n            for (var i = 0; i < columnSpan; i++) {\n                width += this.row.grid.columns.getColumn(cellIndex + i).width;\n                if ((i + 1) < columnSpan) {\n                    this.row.cells.getCell(cellIndex + i + 1).hasColSpan = true;\n                }\n            }\n        }\n        if (this.parent != null && this.parent.row.width > 0) {\n            if ((this.row.grid.isChildGrid) && this.parent != null && (this.row.width > this.parent.row.width)) {\n                width = 0;\n                for (var j = 0; j < this.parent.columnSpan; j++) {\n                    width += this.parent.row.grid.columns.getColumn(j).width;\n                }\n                width = width / this.row.cells.count;\n            }\n        }\n        return width;\n    };\n    return PdfGridCell;\n}());\nexport { PdfGridCell };\n/**\n * `PdfGridCellCollection` class provides access to an ordered,\n * strongly typed collection of 'PdfGridCell' objects.\n * @private\n */\nvar PdfGridCellCollection = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGridCellCollection` class with the row.\n     * @private\n     */\n    function PdfGridCellCollection(row) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.cells = [];\n        this.gridRow = row;\n    }\n    //Properties\n    /**\n     * Gets the current `cell`.\n     * @private\n     */\n    PdfGridCellCollection.prototype.getCell = function (index) {\n        if (index < 0 || index >= this.count) {\n            throw new Error('IndexOutOfRangeException');\n        }\n        return this.cells[index];\n    };\n    Object.defineProperty(PdfGridCellCollection.prototype, \"count\", {\n        /**\n         * Gets the cells `count`.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.cells.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridCellCollection.prototype.add = function (cell) {\n        if (typeof cell === 'undefined') {\n            var tempcell = new PdfGridCell();\n            this.add(tempcell);\n            return cell;\n        }\n        else {\n            cell.row = this.gridRow;\n            this.cells.push(cell);\n        }\n    };\n    /**\n     * Returns the `index of` a particular cell in the collection.\n     * @private\n     */\n    PdfGridCellCollection.prototype.indexOf = function (cell) {\n        return this.cells.indexOf(cell);\n    };\n    return PdfGridCellCollection;\n}());\nexport { PdfGridCellCollection };\n","import { PdfGridCell } from './pdf-grid-cell';\nimport { PdfStringFormat } from './../../graphics/fonts/pdf-string-format';\n/**\n * `PdfGridColumn` class represents the schema of a column in a 'PdfGrid'.\n */\nvar PdfGridColumn = /** @class */ (function () {\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfGridColumn` class with the parent grid.\n     * @private\n     */\n    function PdfGridColumn(grid) {\n        /**\n         * The `width` of the column.\n         * @default 0\n         * @private\n         */\n        this.columnWidth = 0;\n        this.grid = grid;\n    }\n    Object.defineProperty(PdfGridColumn.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the 'PdfGridColumn'.\n         * @private\n         */\n        get: function () {\n            return this.columnWidth;\n        },\n        set: function (value) {\n            this.isCustomWidth = true;\n            this.columnWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumn.prototype, \"format\", {\n        /**\n         * Gets or sets the information about the text `formatting`.\n         * @private\n         */\n        get: function () {\n            if (this.stringFormat == null) {\n                this.stringFormat = new PdfStringFormat(); //GetDefaultFormat();\n            }\n            return this.stringFormat;\n        },\n        set: function (value) {\n            this.stringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridColumn;\n}());\nexport { PdfGridColumn };\n/**\n * `PdfGridColumnCollection` class provides access to an ordered,\n * strongly typed collection of 'PdfGridColumn' objects.\n * @private\n */\nvar PdfGridColumnCollection = /** @class */ (function () {\n    //properties\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfGridColumnCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridColumnCollection(grid) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.internalColumns = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.columnWidth = 0;\n        this.grid = grid;\n        this.internalColumns = [];\n    }\n    //Iplementation\n    /**\n     * `Add` a new column to the 'PdfGrid'.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.add = function (count) {\n        // public add(column : PdfGridColumn) : void\n        // public add(arg : number|PdfGridColumn) : void {\n        // if (typeof arg === 'number') {\n        for (var i = 0; i < count; i++) {\n            this.internalColumns.push(new PdfGridColumn(this.grid));\n            for (var index = 0; index < this.grid.rows.count; index++) {\n                var row = this.grid.rows.getRow(index);\n                var cell = new PdfGridCell();\n                cell.value = '';\n                row.cells.add(cell);\n            }\n        }\n        // } else {\n        //     let column : PdfGridColumn = new PdfGridColumn(this.grid);\n        //     this.columns.push(column);\n        //     return column;\n        // }\n    };\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of columns` in the 'PdfGrid'.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.internalColumns.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"width\", {\n        /**\n         * Gets the `widths`.\n         * @private\n         */\n        get: function () {\n            if (this.columnWidth === 0) {\n                this.columnWidth = this.measureColumnsWidth();\n            }\n            if (this.grid.initialWidth !== 0 && this.columnWidth !== this.grid.initialWidth && !this.grid.style.allowHorizontalOverflow) {\n                this.columnWidth = this.grid.initialWidth;\n                this.grid.isPageWidth = true;\n            }\n            return this.columnWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"columns\", {\n        /**\n         * Gets the `array of PdfGridColumn`.[Read-Only]\n         * @private\n         */\n        get: function () {\n            return this.internalColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfGridColumn` from the specified index.[Read-Only]\n     * @private\n     */\n    PdfGridColumnCollection.prototype.getColumn = function (index) {\n        if (index >= 0 && index <= this.columns.length) {\n            return this.columns[index];\n        }\n        else {\n            throw Error('can not get the column from the index: ' + index);\n        }\n    };\n    //Implementation\n    /**\n     * `Calculates the column widths`.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.measureColumnsWidth = function () {\n        var totalWidth = 0;\n        this.grid.measureColumnsWidth();\n        for (var i = 0, count = this.internalColumns.length; i < count; i++) {\n            totalWidth += this.internalColumns[i].width;\n        }\n        return totalWidth;\n    };\n    /**\n     * Gets the `widths of the columns`.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.getDefaultWidths = function (totalWidth) {\n        var widths = [];\n        var summ = 0.0;\n        var subFactor = this.count;\n        for (var i = 0; i < this.count; i++) {\n            if (this.grid.isPageWidth && totalWidth >= 0 && !this.internalColumns[i].isCustomWidth) {\n                this.internalColumns[i].width = 0;\n            }\n            else {\n                widths[i] = this.internalColumns[i].width;\n                if (this.internalColumns[i].width > 0 && this.internalColumns[i].isCustomWidth) {\n                    totalWidth -= this.internalColumns[i].width;\n                    subFactor--;\n                }\n                else {\n                    widths[i] = 0;\n                }\n            }\n        }\n        for (var i = 0; i < this.count; i++) {\n            var width = totalWidth / subFactor;\n            if (widths[i] <= 0) {\n                widths[i] = width;\n            }\n        }\n        return widths;\n    };\n    return PdfGridColumnCollection;\n}());\nexport { PdfGridColumnCollection };\n","import { PdfGridCell, PdfGridCellCollection } from './pdf-grid-cell';\nimport { PdfGridRowStyle } from './styles/style';\n/**\n * `PdfGridRow` class provides customization of the settings for the particular row.\n */\nvar PdfGridRow = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRow` class with the parent grid.\n     * @private\n     */\n    function PdfGridRow(grid) {\n        /**\n         * Stores the index of the overflowing row.\n         * @private\n         */\n        this.gridRowOverflowIndex = 0;\n        /**\n         * The `height` of the row.\n         * @private\n         */\n        this.rowHeight = 0;\n        /**\n         * The `width` of the row.\n         * @private\n         */\n        this.rowWidth = 0;\n        /**\n         * The `isFinish` of the row.\n         * @private\n         */\n        this.isrowFinish = false;\n        /**\n         * Check whether the Row span row height `is set explicitly`.\n         * @default false\n         * @public\n         */\n        this.isRowSpanRowHeightSet = false;\n        /**\n         * The `page count` of the row.\n         * @public\n         */\n        this.noOfPageCount = 0;\n        /**\n         * Check whether the row height `is set explicitly`.\n         * @default false\n         * @private\n         */\n        this.isRowHeightSet = false;\n        this.isPageBreakRowSpanApplied = false;\n        /**\n         * Check weather the row merge `is completed` or not.\n         * @default true\n         * @private\n         */\n        this.isRowMergeComplete = true;\n        this.repeatFlag = false;\n        this.rowFontSplit = false;\n        this.isHeaderRow = false;\n        this.pdfGrid = grid;\n    }\n    Object.defineProperty(PdfGridRow.prototype, \"rowSpanExists\", {\n        //Properties\n        /**\n         * Gets or sets a value indicating [`row span exists`].\n         * @private\n         */\n        get: function () {\n            return this.bRowSpanExists;\n        },\n        set: function (value) {\n            this.bRowSpanExists = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"cells\", {\n        /**\n         * Gets the `cells` from the selected row.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.gridCells == null) {\n                this.gridCells = new PdfGridCellCollection(this);\n            }\n            return this.gridCells;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"grid\", {\n        /**\n         * Gets or sets the parent `grid`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGrid;\n        },\n        set: function (value) {\n            this.pdfGrid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"style\", {\n        /**\n         * Gets or sets the row `style`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.rowStyle === 'undefined') {\n                this.rowStyle = new PdfGridRowStyle();\n                this.rowStyle.setParent(this);\n            }\n            return this.rowStyle;\n        },\n        set: function (value) {\n            this.rowStyle = value;\n            for (var i = 0; i < this.cells.count; i++) {\n                this.cells.getCell(i).style.borders = value.border;\n                if (typeof value.font !== 'undefined') {\n                    this.cells.getCell(i).style.font = value.font;\n                }\n                if (typeof value.backgroundBrush !== 'undefined') {\n                    this.cells.getCell(i).style.backgroundBrush = value.backgroundBrush;\n                }\n                if (typeof value.backgroundImage !== 'undefined') {\n                    this.cells.getCell(i).style.backgroundImage = value.backgroundImage;\n                }\n                if (typeof value.textBrush !== 'undefined') {\n                    this.cells.getCell(i).style.textBrush = value.textBrush;\n                }\n                if (typeof value.textPen !== 'undefined') {\n                    this.cells.getCell(i).style.textPen = value.textPen;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowBreakHeight\", {\n        /**\n         * `Height` of the row yet to be drawn after split.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridRowBreakHeight === 'undefined') {\n                this.gridRowBreakHeight = 0;\n            }\n            return this.gridRowBreakHeight;\n        },\n        set: function (value) {\n            this.gridRowBreakHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowOverflowIndex\", {\n        /**\n         * `over flow index` of the row.\n         * @private\n         */\n        get: function () {\n            return this.gridRowOverflowIndex;\n        },\n        set: function (value) {\n            this.gridRowOverflowIndex = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"height\", {\n        /**\n         * Gets or sets the `height` of the row.\n         * @private\n         */\n        get: function () {\n            if (!this.isRowHeightSet) {\n                this.rowHeight = this.measureHeight();\n            }\n            return this.rowHeight;\n        },\n        set: function (value) {\n            this.rowHeight = value;\n            this.isRowHeightSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the row.\n         * @private\n         */\n        get: function () {\n            if (this.rowWidth === 0 || typeof this.rowWidth === 'undefined') {\n                this.rowWidth = this.measureWidth();\n            }\n            return this.rowWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"NestedGridLayoutResult\", {\n        /**\n         * Gets or sets the row `Nested grid Layout Result`.\n         * @private\n         */\n        get: function () {\n            return this.gridResult;\n        },\n        set: function (value) {\n            this.gridResult = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"columnSpanExists\", {\n        /**\n         * Gets or sets a value indicating [`column span exists`].\n         * @private\n         */\n        get: function () {\n            return this.bColumnSpanExists;\n        },\n        set: function (value) {\n            this.bColumnSpanExists = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowMergeComplete\", {\n        /**\n         * Check whether the Row `has row span or row merge continue`.\n         * @private\n         */\n        get: function () {\n            return this.isRowMergeComplete;\n        },\n        set: function (value) {\n            this.isRowMergeComplete = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowIndex\", {\n        /**\n         * Returns `index` of the row.\n         * @private\n         */\n        get: function () {\n            return this.grid.rows.rowCollection.indexOf(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Calculates the height`.\n     * @private\n     */\n    PdfGridRow.prototype.measureHeight = function () {\n        var rowSpanRemainingHeight = 0;\n        var rowHeight;\n        var maxHeight = 0;\n        if (this.cells.getCell(0).rowSpan > 1) {\n            rowHeight = 0;\n        }\n        else {\n            rowHeight = this.cells.getCell(0).height;\n        }\n        for (var i = 0; i < this.cells.count; i++) {\n            var cell = this.cells.getCell(i);\n            //get the maximum rowspan remaining height.\n            if (cell.rowSpanRemainingHeight > rowSpanRemainingHeight) {\n                rowSpanRemainingHeight = cell.rowSpanRemainingHeight;\n            }\n            //skip the cell if row spanned.\n            // if (cell.isRowMergeContinue) {\n            //     continue;\n            // }\n            // if (!cell.isRowMergeContinue) {\n            //     this.rowMergeComplete = false;\n            // }\n            this.rowMergeComplete = false;\n            if (cell.rowSpan > 1) {\n                var cellIn = i;\n                var rowin = this.isHeaderRow ? this.grid.headers.indexOf(this) : this.grid.rows.rowCollection.indexOf(this);\n                for (var j = 0; j < cell.rowSpan; j++) {\n                    if ((j + 1) < cell.rowSpan) {\n                        (this.isHeaderRow ? this.grid.headers.getHeader(rowin + j + 1) : this.grid.rows.getRow(rowin + j + 1)).cells.getCell(cellIn).hasRowSpan = true;\n                    }\n                }\n                if (maxHeight < cell.height) {\n                    maxHeight = cell.height;\n                }\n                continue;\n            }\n            rowHeight = Math.max(rowHeight, cell.height);\n        }\n        if (maxHeight > rowHeight) {\n            rowHeight = maxHeight;\n        }\n        if (rowHeight === 0) {\n            rowHeight = maxHeight;\n        }\n        else if (rowSpanRemainingHeight > 0) {\n            rowHeight += rowSpanRemainingHeight;\n        }\n        return rowHeight;\n    };\n    PdfGridRow.prototype.measureWidth = function () {\n        var rowWid = 0;\n        for (var i = 0; i < this.grid.columns.count; i++) {\n            var column = this.grid.columns.getColumn(i);\n            rowWid += column.width;\n        }\n        return rowWid;\n    };\n    return PdfGridRow;\n}());\nexport { PdfGridRow };\n/**\n * `PdfGridRowCollection` class provides access to an ordered, strongly typed collection of 'PdfGridRow' objects.\n * @private\n */\nvar PdfGridRowCollection = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRowCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridRowCollection(grid) {\n        this.rows = [];\n        this.grid = grid;\n    }\n    Object.defineProperty(PdfGridRowCollection.prototype, \"count\", {\n        //Properties\n        /**\n         * Gets the number of header in the `PdfGrid`.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.rows.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRowCollection.prototype, \"rowCollection\", {\n        //Implementation\n        /**\n         * Return the row collection of the `grid`.\n         * @private\n         */\n        get: function () {\n            return this.rows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowCollection.prototype.addRow = function (arg) {\n        if (typeof arg === 'undefined') {\n            var temprow = new PdfGridRow(this.grid);\n            this.addRow(temprow);\n            return temprow;\n        }\n        else {\n            arg.style.setBackgroundBrush(this.grid.style.backgroundBrush);\n            arg.style.setFont(this.grid.style.font);\n            arg.style.setTextBrush(this.grid.style.textBrush);\n            arg.style.setTextPen(this.grid.style.textPen);\n            if (arg.cells.count === 0) {\n                for (var i = 0; i < this.grid.columns.count; i++) {\n                    arg.cells.add(new PdfGridCell());\n                }\n            }\n            this.rows.push(arg);\n        }\n    };\n    /**\n     * Return the row by index.\n     * @private\n     */\n    PdfGridRowCollection.prototype.getRow = function (index) {\n        return this.rows[index];\n    };\n    return PdfGridRowCollection;\n}());\nexport { PdfGridRowCollection };\n/**\n * `PdfGridHeaderCollection` class provides customization of the settings for the header.\n * @private\n */\nvar PdfGridHeaderCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfGridHeaderCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridHeaderCollection(grid) {\n        /**\n         * The array to store the `rows` of the grid header.\n         * @private\n         */\n        this.rows = [];\n        this.grid = grid;\n        this.rows = [];\n    }\n    //Properties\n    /**\n     * Gets a 'PdfGridRow' object that represents the `header` row in a 'PdfGridHeaderCollection' control.[Read-Only].\n     * @private\n     */\n    PdfGridHeaderCollection.prototype.getHeader = function (index) {\n        // if (index < 0 || index >= Count) {\n        //     throw new IndexOutOfRangeException();\n        // }\n        return (this.rows[index]);\n    };\n    Object.defineProperty(PdfGridHeaderCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of header` in the 'PdfGrid'.[Read-Only]\n         * @private\n         */\n        get: function () {\n            return this.rows.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridHeaderCollection.prototype.add = function (arg) {\n        if (typeof arg === 'number') {\n            var row = void 0;\n            for (var i = 0; i < arg; i++) {\n                row = new PdfGridRow(this.grid);\n                row.isHeaderRow = true;\n                for (var j = 0; j < this.grid.columns.count; j++) {\n                    row.cells.add(new PdfGridCell());\n                }\n                this.rows.push(row);\n            }\n            return this.rows;\n        }\n        else {\n            this.rows.push(arg);\n        }\n    };\n    PdfGridHeaderCollection.prototype.indexOf = function (row) {\n        return this.rows.indexOf(row);\n    };\n    return PdfGridHeaderCollection;\n}());\nexport { PdfGridHeaderCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfGrid.ts class for EJ2-PDF\n */\nimport { PdfGridColumnCollection } from './pdf-grid-column';\nimport { PdfGridRowCollection, PdfGridHeaderCollection } from './pdf-grid-row';\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutElement } from './../../graphics/figures/layout-element';\nimport { PdfLayoutFormat } from './../../graphics/figures/base/element-layouter';\nimport { PdfGridStyle } from './styles/style';\nimport { PdfBorders } from './styles/pdf-borders';\nimport { PdfGridLayouter } from './../../structured-elements/grid/layout/grid-layouter';\nvar PdfGrid = /** @class */ (function (_super) {\n    __extends(PdfGrid, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGrid` class.\n     * @private\n     */\n    function PdfGrid() {\n        var _this = _super.call(this) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridSize = new SizeF(0, 0);\n        /**\n         * Check the child grid is ' split or not'\n         */\n        _this.isGridSplit = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isRearranged = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.pageBounds = new RectangleF();\n        /**\n         * @hidden\n         * @private\n         */\n        _this.listOfNavigatePages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.parentCellIndex = 0;\n        _this.tempWidth = 0;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.breakRow = true;\n        _this.splitChildRowIndex = -1;\n        /**\n         * The event raised on `begin cell lay outing`.\n         * @event\n         * @private\n         */\n        //public beginPageLayout : Function;\n        /**\n         * The event raised on `end cell lay outing`.\n         * @event\n         * @private\n         */\n        //public endPageLayout : Function;\n        _this.hasRowSpanSpan = false;\n        _this.hasColumnSpan = false;\n        _this.isSingleGrid = true;\n        return _this;\n    }\n    Object.defineProperty(PdfGrid.prototype, \"raiseBeginCellDraw\", {\n        //Properties\n        /**\n         * Gets a value indicating whether the `start cell layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.beginCellDraw !== 'undefined' && typeof this.beginCellDraw !== null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"raiseEndCellDraw\", {\n        /**\n         * Gets a value indicating whether the `end cell layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.endCellDraw !== 'undefined' && typeof this.endCellDraw !== null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"repeatHeader\", {\n        /**\n         * Gets or sets a value indicating whether to `repeat header`.\n         * @private\n         */\n        get: function () {\n            if (this.bRepeatHeader == null || typeof this.bRepeatHeader === 'undefined') {\n                this.bRepeatHeader = false;\n            }\n            return this.bRepeatHeader;\n        },\n        set: function (value) {\n            this.bRepeatHeader = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"allowRowBreakAcrossPages\", {\n        /**\n         * Gets or sets a value indicating whether to split or cut rows that `overflow a page`.\n         * @private\n         */\n        get: function () {\n            return this.breakRow;\n        },\n        set: function (value) {\n            this.breakRow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"columns\", {\n        /**\n         * Gets the `column` collection of the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridColumns == null || typeof this.gridColumns === 'undefined') {\n                this.gridColumns = new PdfGridColumnCollection(this);\n            }\n            return this.gridColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"rows\", {\n        /**\n         * Gets the `row` collection from the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridRows == null) {\n                this.gridRows = new PdfGridRowCollection(this);\n            }\n            return this.gridRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"headers\", {\n        /**\n         * Gets the `headers` collection from the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridHeaders == null || typeof this.gridHeaders === 'undefined') {\n                this.gridHeaders = new PdfGridHeaderCollection(this);\n            }\n            return this.gridHeaders;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"initialWidth\", {\n        /**\n         * Indicating `initial width` of the page.\n         * @private\n         */\n        get: function () {\n            return this.gridInitialWidth;\n        },\n        set: function (value) {\n            this.gridInitialWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"style\", {\n        /**\n         * Gets or sets the `grid style`.\n         * @private\n         */\n        get: function () {\n            if (this.gridStyle == null) {\n                this.gridStyle = new PdfGridStyle();\n            }\n            return this.gridStyle;\n        },\n        set: function (value) {\n            if (this.gridStyle == null) {\n                this.gridStyle = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"isPageWidth\", {\n        /**\n         * Gets a value indicating whether the grid column width is considered to be `page width`.\n         * @private\n         */\n        get: function () {\n            return this.ispageWidth;\n        },\n        set: function (value) {\n            this.ispageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"isChildGrid\", {\n        /**\n         * Gets or set if grid `is nested grid`.\n         * @private\n         */\n        get: function () {\n            return this.ischildGrid;\n        },\n        set: function (value) {\n            this.ischildGrid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"size\", {\n        /**\n         * Gets or set if grid ' is split or not'\n         * @public\n         */\n        // public get isGridSplit() : boolean {\n        //     return this.isgridSplit;\n        // }\n        // public set isGridSplit(value : boolean) {\n        //     this.isgridSplit = value;\n        // }public get isGridSplit() : boolean {\n        //     return this.isgridSplit;\n        // }\n        // public set isGridSplit(value : boolean) {\n        //     this.isgridSplit = value;\n        // }\n        /**\n         * Gets the `size`.\n         * @private\n         */\n        get: function () {\n            if ((this.gridSize.width === 0 || typeof this.gridSize.width === 'undefined') && this.gridSize.height === 0) {\n                this.gridSize = this.measure();\n            }\n            return this.gridSize;\n            // } else {\n            //     return this.gridSize;\n            // }\n        },\n        set: function (value) {\n            this.gridSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"ParentCell\", {\n        get: function () {\n            return this.parentCell;\n        },\n        set: function (value) {\n            this.parentCell = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"LayoutFormat\", {\n        get: function () {\n            return this.layoutFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGrid.prototype.draw = function (arg1, arg2, arg3, arg4) {\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2.x, arg2.y);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null)) {\n            var width = (arg1.graphics.clientSize.width - arg2);\n            var layoutRectangle = new RectangleF(arg2, arg3, width, 0);\n            return this.drawHelper(arg1, layoutRectangle, arg4);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'boolean') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n    };\n    /**\n     * `measures` this instance.\n     * @private\n     */\n    PdfGrid.prototype.measure = function () {\n        var height = 0;\n        var width = this.columns.width;\n        for (var i = 0; i < this.headers.count; i++) {\n            var row = this.headers.getHeader(i);\n            height += row.height;\n        }\n        for (var i = 0; i < this.rows.count; i++) {\n            var row = this.rows.getRow(i);\n            height += row.height;\n        }\n        return new SizeF(width, height);\n    };\n    PdfGrid.prototype.onBeginCellDraw = function (args) {\n        if (this.raiseBeginCellDraw) {\n            this.beginCellDraw(this, args);\n        }\n    };\n    PdfGrid.prototype.onEndCellDraw = function (args) {\n        if (this.raiseEndCellDraw) {\n            this.endCellDraw(this, args);\n        }\n    };\n    /**\n     * `Layouts` the specified graphics.\n     * @private\n     */\n    PdfGrid.prototype.layout = function (param) {\n        var width = param.bounds.width;\n        var height = param.bounds.height;\n        var hasChanged = false;\n        if (typeof param.bounds.width === 'undefined' || param.bounds.width === 0) {\n            width = param.page.getClientSize().width - param.bounds.x;\n            hasChanged = true;\n        }\n        if (typeof param.bounds.height === 'undefined' || param.bounds.height === 0) {\n            height = param.page.getClientSize().height;\n            hasChanged = true;\n        }\n        if (hasChanged) {\n            param.bounds = new RectangleF(param.bounds.x, param.bounds.y, width, height);\n        }\n        if (this.rows.count !== 0) {\n            var currentRow = this.rows.getRow(0).cells.getCell(0).style;\n            if (currentRow.borders != null && ((currentRow.borders.left != null && currentRow.borders.left.width !== 1) ||\n                (currentRow.borders.top != null && currentRow.borders.top.width !== 1))) {\n                var x = currentRow.borders.left.width / 2;\n                var y = currentRow.borders.top.width / 2;\n                if (param.bounds.x === PdfBorders.default.right.width / 2 && param.bounds.y === PdfBorders.default.right.width / 2) {\n                    var newBound = new RectangleF(x, y, this.gridSize.width, this.gridSize.height);\n                    param.bounds = newBound;\n                }\n            }\n        }\n        this.setSpan();\n        this.checkSpan();\n        this.layoutFormat = param.format;\n        this._gridLocation = param.bounds;\n        var layouter = new PdfGridLayouter(this);\n        var result = (layouter.Layouter(param));\n        return result;\n    };\n    PdfGrid.prototype.setSpan = function () {\n        var colSpan = 1;\n        var rowSpan = 1;\n        var currentCellIndex = 0;\n        var currentRowIndex = 0;\n        var maxSpan = 0;\n        var rowCount = this.headers.count;\n        for (var i = 0; i < rowCount; i++) {\n            var row = this.headers.getHeader(i);\n            maxSpan = 0;\n            var colCount = row.cells.count;\n            for (var j = 0; j < colCount; j++) {\n                var cell = row.cells.getCell(j);\n                maxSpan = Math.max(maxSpan, cell.rowSpan);\n                //Skip setting span map for already coverted rows/columns.\n                if (!cell.isCellMergeContinue && !cell.isRowMergeContinue && (cell.columnSpan > 1 || cell.rowSpan > 1)) {\n                    if (cell.columnSpan + j > row.cells.count) {\n                        throw new Error('Invalid span specified at row ' + j.toString() + ' column ' + i.toString());\n                    }\n                    if (cell.rowSpan + i > this.headers.count) {\n                        throw new Error('Invalid span specified at Header ' + j.toString() + ' column ' + i.toString());\n                    }\n                    // if (this.rows.count !== 0 && cell.rowSpan + i > this.rows.count) {\n                    //     throw new Error('Invalid span specified at row ' + j.toString() + ' column ' + i.toString());\n                    // }\n                    if (cell.columnSpan > 1 && cell.rowSpan > 1) {\n                        colSpan = cell.columnSpan;\n                        rowSpan = cell.rowSpan;\n                        currentCellIndex = j;\n                        currentRowIndex = i;\n                        cell.isCellMergeStart = true;\n                        cell.isRowMergeStart = true;\n                        //Set Column merges for first row\n                        while (colSpan > 1) {\n                            currentCellIndex++;\n                            row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                            row.cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                            row.cells.getCell(currentCellIndex).rowSpan = rowSpan;\n                            colSpan--;\n                        }\n                        currentCellIndex = j;\n                        colSpan = cell.columnSpan;\n                        //Set Row Merges and column merges foreach subsequent rows.\n                        while (rowSpan > 1) {\n                            currentRowIndex++;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                            rowSpan--;\n                            while (colSpan > 1) {\n                                currentCellIndex++;\n                                this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                colSpan--;\n                            }\n                            colSpan = cell.columnSpan;\n                            currentCellIndex = j;\n                        }\n                    }\n                    else if (cell.columnSpan > 1 && cell.rowSpan === 1) {\n                        colSpan = cell.columnSpan;\n                        currentCellIndex = j;\n                        cell.isCellMergeStart = true;\n                        //Set Column merges.\n                        while (colSpan > 1) {\n                            currentCellIndex++;\n                            row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                            colSpan--;\n                        }\n                    }\n                    else if (cell.columnSpan === 1 && cell.rowSpan > 1) {\n                        rowSpan = cell.rowSpan;\n                        currentRowIndex = i;\n                        //Set row Merges.\n                        while (rowSpan > 1) {\n                            currentRowIndex++;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                            rowSpan--;\n                        }\n                    }\n                }\n            }\n            row.maximumRowSpan = maxSpan;\n        }\n    };\n    PdfGrid.prototype.checkSpan = function () {\n        var cellcolSpan;\n        var cellrowSpan = 1;\n        var cellmaxSpan = 0;\n        var currentCellIndex;\n        var currentRowIndex = 0;\n        cellcolSpan = cellrowSpan = 1;\n        currentCellIndex = currentRowIndex = 0;\n        if (this.hasRowSpanSpan || this.hasColumnSpan) {\n            var rowCount = this.rows.count;\n            for (var i = 0; i < rowCount; i++) {\n                var row = this.rows.getRow(i);\n                cellmaxSpan = 0;\n                var colCount = row.cells.count;\n                for (var j = 0; j < colCount; j++) {\n                    var cell = row.cells.getCell(j);\n                    cellmaxSpan = Math.max(cellmaxSpan, cell.rowSpan);\n                    //Skip setting span map for already coverted rows/columns.\n                    if (!cell.isCellMergeContinue && !cell.isRowMergeContinue\n                        && (cell.columnSpan > 1 || cell.rowSpan > 1)) {\n                        if (cell.columnSpan + j > row.cells.count) {\n                            throw new Error('Invalid span specified at row  ' + j.toString() + ' column ' + i.toString());\n                        }\n                        if (cell.rowSpan + i > this.rows.count) {\n                            throw new Error('Invalid span specified at row  ' + j.toString() + ' column ' + i.toString());\n                        }\n                        if (cell.columnSpan > 1 && cell.rowSpan > 1) {\n                            cellcolSpan = cell.columnSpan;\n                            cellrowSpan = cell.rowSpan;\n                            currentCellIndex = j;\n                            currentRowIndex = i;\n                            cell.isCellMergeStart = true;\n                            cell.isRowMergeStart = true;\n                            //Set Column merges for first row\n                            while (cellcolSpan > 1) {\n                                currentCellIndex++;\n                                row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                row.cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                cellcolSpan--;\n                            }\n                            currentCellIndex = j;\n                            cellcolSpan = cell.columnSpan;\n                            //Set Row Merges and column merges foreach subsequent rows.\n                            while (cellrowSpan > 1) {\n                                currentRowIndex++;\n                                this.rows.getRow(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                                this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                cellrowSpan--;\n                                while (cellcolSpan > 1) {\n                                    currentCellIndex++;\n                                    this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                    this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                    cellcolSpan--;\n                                }\n                                cellcolSpan = cell.columnSpan;\n                                currentCellIndex = j;\n                            }\n                        }\n                        else if (cell.columnSpan > 1 && cell.rowSpan === 1) {\n                            cellcolSpan = cell.columnSpan;\n                            currentCellIndex = j;\n                            cell.isCellMergeStart = true;\n                            //Set Column merges.\n                            while (cellcolSpan > 1) {\n                                currentCellIndex++;\n                                row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                cellcolSpan--;\n                            }\n                        }\n                        else if (cell.columnSpan === 1 && cell.rowSpan > 1) {\n                            cellrowSpan = cell.rowSpan;\n                            currentRowIndex = i;\n                            //Set row Merges.\n                            while (cellrowSpan > 1) {\n                                currentRowIndex++;\n                                this.rows.getRow(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                                cellrowSpan--;\n                            }\n                        }\n                    }\n                }\n                row.maximumRowSpan = cellmaxSpan;\n            }\n        }\n    };\n    PdfGrid.prototype.measureColumnsWidth = function (bounds) {\n        if (typeof bounds !== 'undefined') {\n            this.isPageWidth = false;\n            var widths = this.columns.getDefaultWidths(bounds.width - bounds.x);\n            //let tempWidth : number = this.columns.getColumn(0).width;\n            for (var i = 0, count = this.columns.count; i < count; i++) {\n                // if (this.columns.getColumn(i).width < 0)\n                //     this.columns.getColumn(i).columnWidth = widths[i];\n                // else if (this.columns.getColumn(i).width > 0 && !this.columns.getColumn(i).isCustomWidth && widths[i]>0 && this.isComplete)\n                this.columns.getColumn(i).columnWidth = widths[i];\n                this.tempWidth = widths[i];\n            }\n            if (this.ParentCell != null && this.style.allowHorizontalOverflow == false && this.ParentCell.row.grid.style.allowHorizontalOverflow == false) {\n                var padding = 0;\n                var columnWidth = 0;\n                var columnCount = this.columns.count;\n                var childGridColumnWidth = 0;\n                if (this.ParentCell.style.cellPadding != null || typeof this.ParentCell.style.cellPadding !== 'undefined') {\n                    if (typeof this.ParentCell.style.cellPadding.left != 'undefined' && this.ParentCell.style.cellPadding.hasLeftPad) {\n                        padding += this.ParentCell.style.cellPadding.left;\n                    }\n                    if (typeof this.ParentCell.style.cellPadding.right != 'undefined' && this.ParentCell.style.cellPadding.hasRightPad) {\n                        padding += this.ParentCell.style.cellPadding.right;\n                    }\n                }\n                for (var i = 0; i < this.ParentCell.columnSpan; i++) {\n                    columnWidth += this.ParentCell.row.grid.columns.getColumn(this.parentCellIndex + i).width;\n                }\n                for (var j = 0; j < this.columns.count; j++) {\n                    if (this.gridColumns.getColumn(j).width > 0 && this.gridColumns.getColumn(j).isCustomWidth) {\n                        columnWidth -= this.gridColumns.getColumn(j).width;\n                        columnCount--;\n                    }\n                }\n                if ((this.ParentCell.row.grid.style.cellPadding != null || typeof this.ParentCell.row.grid.style.cellPadding != 'undefined')) {\n                    if (typeof this.ParentCell.row.grid.style.cellPadding.top != 'undefined' && this.ParentCell.row.grid.style.cellPadding.hasTopPad) {\n                        padding += this.ParentCell.row.grid.style.cellPadding.top;\n                    }\n                    if (typeof this.ParentCell.row.grid.style.cellPadding.bottom != 'undefined' && this.ParentCell.row.grid.style.cellPadding.hasBottomPad) {\n                        padding += this.ParentCell.row.grid.style.cellPadding.bottom;\n                    }\n                }\n                if (this.ParentCell.row.grid.style.cellSpacing != 0) {\n                    columnWidth -= this.ParentCell.row.grid.style.cellSpacing * 2;\n                }\n                if (columnWidth > padding) {\n                    childGridColumnWidth = (columnWidth - padding) / columnCount;\n                    this.tempWidth = childGridColumnWidth;\n                    if (this.ParentCell != null) {\n                        for (var j = 0; j < this.columns.count; j++) {\n                            if (!this.columns.getColumn(j).isCustomWidth)\n                                this.columns.getColumn(j).columnWidth = childGridColumnWidth;\n                        }\n                    }\n                }\n            }\n            // if (this.ParentCell != null && this.ParentCell.row.width > 0)\n            // {\n            //     if (this.isChildGrid && this.gridSize.width > this.ParentCell.row.width)\n            //     {\n            //         widths = this.columns.getDefaultWidths(bounds.width);\n            //         for (let i : number = 0; i < this.columns.count; i++)\n            //         {\n            //             this.columns.getColumn(i).width = widths[i];\n            //         }\n            //     }\n            // }\n        }\n        else {\n            var widths = [this.columns.count];\n            for (var n = 0; n < this.columns.count; n++) {\n                widths[n] = 0;\n            }\n            var cellWidth = 0;\n            var cellWidths = 0;\n            if ((typeof this.isChildGrid === 'undefined' && typeof this._gridLocation !== 'undefined') || (this.isChildGrid === null && typeof this._gridLocation !== 'undefined')) {\n                this.initialWidth = this._gridLocation.width;\n            }\n            if (this.headers.count > 0) {\n                var colCount_1 = this.headers.getHeader(0).cells.count;\n                var rowCount = this.headers.count;\n                for (var i = 0; i < colCount_1; i++) {\n                    cellWidth = 0;\n                    for (var j = 0; j < rowCount; j++) {\n                        var rowWidth = Math.min(this.initialWidth, this.headers.getHeader(j).cells.getCell(i).width);\n                        cellWidth = Math.max(cellWidth, rowWidth);\n                    }\n                    widths[i] = cellWidth;\n                }\n            }\n            // else {\n            //     let colCount : number = this.rows.getRow(0).cells.count;\n            //     let rowCount : number = this.rows.count;\n            //     for (let i : number = 0; i < colCount; i++) {\n            //         cellWidth = 0;\n            //         for (let j : number = 0; j < rowCount; j++) {\n            //             let rowWidth : number = Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width);\n            //             cellWidth = Math.max(cellWidth, rowWidth);\n            //         }\n            //         widths[i] = cellWidth;\n            //     }\n            // }\n            cellWidth = 0;\n            for (var i = 0, colCount_2 = this.columns.count; i < colCount_2; i++) {\n                for (var j = 0, rowCount = this.rows.count; j < rowCount; j++) {\n                    if ((this.rows.getRow(j).cells.getCell(i).columnSpan == 1 && !this.rows.getRow(j).cells.getCell(i).isCellMergeContinue) || this.rows.getRow(j).cells.getCell(i).value != null) {\n                        if (this.rows.getRow(j).cells.getCell(i).value != null && !this.rows.getRow(j).grid.style.allowHorizontalOverflow) {\n                            var value = this.rows.getRow(j).grid.style.cellPadding.right +\n                                this.rows.getRow(j).grid.style.cellPadding.left\n                                + this.rows.getRow(j).cells.getCell(i).style.borders.left.width / 2;\n                            //  if (this.initialWidth != 0 )\n                            //         (this.rows.getRow(j).cells.getCell(i).value as PdfGrid).initialWidth = this.initialWidth - value;\n                        }\n                        var rowWidth = 0;\n                        rowWidth = this.initialWidth > 0.0 ? Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width) : this.rows.getRow(j).cells.getCell(i).width;\n                        // let internalWidth : number = this.rows.getRow(j).cells.getCell(i).width;\n                        // internalWidth += this.rows.getRow(j).cells.getCell(i).style.borders.left.width;\n                        // internalWidth += this.rows.getRow(j).cells.getCell(i).style.borders.right.width;\n                        // let internalHeight : number = this.rows.getRow(j).cells.getCell(i).height;\n                        // internalHeight += (this.rows.getRow(j).cells.getCell(i).style.borders.top.width);\n                        // internalHeight += (this.rows.getRow(j).cells.getCell(i).style.borders.bottom.width);\n                        // let isCorrectWidth : boolean = (internalWidth + this.gridLocation.x) > this.currentGraphics.clientSize.width;\n                        // let isCorrectHeight : boolean = (internalHeight + this.gridLocation.y) > this.currentGraphics.clientSize.height;\n                        // if (isCorrectWidth || isCorrectHeight) {\n                        //     throw Error('Image size exceeds client size of the page. Can not insert this image');\n                        // }\n                        // rowWidth = Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width);\n                        cellWidth = Math.max(widths[i], Math.max(cellWidth, rowWidth));\n                        cellWidth = Math.max(this.columns.getColumn(i).width, cellWidth);\n                    }\n                }\n                if (this.rows.count != 0)\n                    widths[i] = cellWidth;\n                cellWidth = 0;\n            }\n            for (var i = 0, RowCount = this.rows.count; i < RowCount; i++) {\n                for (var j = 0, ColCount = this.columns.count; j < ColCount; j++) {\n                    if (this.rows.getRow(i).cells.getCell(j).columnSpan > 1) {\n                        var total = widths[j];\n                        for (var k = 1; k < this.rows.getRow(i).cells.getCell(j).columnSpan; k++) {\n                            total += widths[j + k];\n                        }\n                        // if (this.rows.getRow(i).cells.getCell(j).width > total)\n                        // {\n                        //     let extendedWidth : number = this.rows.getRow(i).cells.getCell(j).width - total;\n                        //     extendedWidth = extendedWidth / this.rows.getRow(i).cells.getCell(j).columnSpan;\n                        //     for (let k : number = j; k < j + this.rows.getRow(i).cells.getCell(j).columnSpan; k++)\n                        //         widths[k] += extendedWidth;\n                        // }\n                    }\n                }\n            }\n            // if (this.isChildGrid && this.initialWidth != 0)\n            // {\n            //     widths = this.columns.getDefaultWidths(this.initialWidth);\n            // }\n            for (var i = 0, count = this.columns.count; i < count; i++) {\n                if (this.columns.getColumn(i).width <= 0)\n                    this.columns.getColumn(i).columnWidth = widths[i];\n                else if (this.columns.getColumn(i).width > 0 && !this.columns.getColumn(i).isCustomWidth)\n                    this.columns.getColumn(i).columnWidth = widths[i];\n            }\n            var padding = 0;\n            var colWidth = 0;\n            var colCount = this.columns.count;\n            var childGridColWidth = 0;\n            colWidth = this.tempWidth;\n            for (var j = 0; j < this.columns.count; j++) {\n                if (this.gridColumns.getColumn(j).width > 0 && this.gridColumns.getColumn(j).isCustomWidth) {\n                    colWidth -= this.gridColumns.getColumn(j).width;\n                    colCount--;\n                }\n            }\n            // if (this.style.cellSpacing != 0){\n            //     colWidth -= this.style.cellSpacing * 2;\n            // }\n            if (colWidth > 0) {\n                if (this.ParentCell.row.grid.style.cellSpacing != 0) {\n                    colWidth -= this.ParentCell.row.grid.style.cellSpacing * 2;\n                }\n            }\n            if (colWidth > padding) {\n                childGridColWidth = (colWidth) / colCount;\n                if (this.ParentCell != null) {\n                    for (var j = 0; j < this.columns.count; j++) {\n                        if (!this.columns.getColumn(j).isCustomWidth)\n                            this.columns.getColumn(j).columnWidth = childGridColWidth;\n                    }\n                }\n            }\n        }\n    };\n    return PdfGrid;\n}(PdfLayoutElement));\nexport { PdfGrid };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfGrid } from '../pdf-grid';\nimport { PdfStringFormat } from './../../../graphics/fonts/pdf-string-format';\nimport { SizeF, RectangleF, PointF } from './../../../drawing/pdf-drawing';\nimport { PdfBorders } from '../styles/pdf-borders';\nimport { PdfLayoutType, PdfLayoutBreakType } from './../../../graphics/figures/enum';\nimport { PdfLayoutResult, PdfLayoutFormat, ElementLayouter } from './../../../graphics/figures/base/element-layouter';\nimport { PdfHorizontalOverflowType } from '../styles/style';\nimport { TemporaryDictionary } from './../../../collections/object-object-pair/dictionary';\nimport { PdfStringLayouter } from './../../../graphics/fonts/string-layouter';\nimport { PdfDocument } from './../../../document/pdf-document';\n/**\n * Class `lay outing the text`.\n *\n */\nvar PdfGridLayouter = /** @class */ (function (_super) {\n    __extends(PdfGridLayouter, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGrid` class.\n     * @private\n     */\n    function PdfGridLayouter(baseFormat) {\n        var _this = _super.call(this, baseFormat) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridInitialWidth = 0;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridSize = new SizeF(0, 0);\n        _this.parentCellIndex = 0;\n        _this.tempWidth = 0;\n        _this.childheight = 0;\n        /**\n         * Check weather it is `child grid or not`.\n         * @private\n         */\n        _this.isChildGrid = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.hasRowSpanSpan = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isRearranged = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.pageBounds = new RectangleF();\n        /**\n         * @hidden\n         * @private\n         */\n        _this.listOfNavigatePages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.flag = true;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.columnRanges = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.currentLocation = new PointF(0, 0);\n        /**\n         * @hidden\n         * @private\n         */\n        _this.breakRow = true;\n        _this.slr = null;\n        _this.remainderText = null;\n        _this.isPaginate = false;\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        _this.isOverloadWithPosition = false;\n        return _this;\n    }\n    Object.defineProperty(PdfGridLayouter.prototype, \"Grid\", {\n        //Properties\n        get: function () {\n            return this.elements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringLayouter` class.\n     * @private\n     */\n    //Public methods\n    /**\n     * `Layouts` the text.\n     * @private\n     */\n    /**\n     * `Layouts` the specified graphics.\n     * @private\n     */\n    /**\n     * `Layouts` the specified graphics.\n     * @private\n     */\n    /*public layout(graphics : PdfLayoutParams) : PdfLayoutResult\n    public layout(graphics : PdfGraphics, bounds : RectangleF) : void\n    public layout(graphics : PdfGraphics, bounds : PointF) : void\n    public layout(graphics ?: PdfGraphics | PdfLayoutParams, bounds ?: PointF | RectangleF) : void | PdfLayoutResult  {\n        if (graphics instanceof PdfGraphics) {\n        if (bounds instanceof PointF) {\n            if (bounds.x === 0) {\n                bounds.x = PdfBorders.default.right.width / 2;\n            }\n            if (bounds.y === 0) {\n                bounds.y = PdfBorders.default.top.width / 2;\n            }\n            let boundaries : RectangleF = new RectangleF(bounds, new SizeF(0, 0));\n            this.layout(graphics, boundaries);\n        } else {\n            let width : number = graphics.clientSize.width;\n            let parameter : PdfLayoutParams = new PdfLayoutParams();\n            parameter.bounds = bounds;\n            this.currentGraphics = graphics;\n            if (graphics.layer != null) {\n                let index : number = 0;\n                if (this.currentGraphics.page instanceof PdfPage) {\n                    index = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);\n                } else {\n                    index = (this.currentGraphics.page as PdfPageBase).defaultLayerIndex;\n                }\n            } else {\n                this.layoutInternal(parameter);\n            }\n        }\n    }\n    }*/\n    /**\n     * Gets the `format`.\n     * @private\n     */\n    PdfGridLayouter.prototype.getFormat = function (format) {\n        var f = format;\n        return f;\n    };\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    PdfGridLayouter.prototype.layoutInternal = function (param) {\n        var format = this.getFormat(param.format);\n        this.gridLayoutFormat = this.getFormat(param.format);\n        this.currentPage = param.page;\n        if (this.currentPage !== null) {\n            var pageHeight = this.currentPage.getClientSize().height;\n            var pageWidth = this.currentPage.getClientSize().width;\n            this.currentPageBounds = this.currentPage.getClientSize();\n        }\n        else {\n            throw Error('Can not set page as null');\n            //this.currentPageBounds = this.currentGraphics.clientSize;\n        }\n        this.currentGraphics = this.currentPage.graphics;\n        //this.currentGraphics = (this.currentPage != null ) ? this.currentPage.graphics : this.currentGraphics;\n        // if (this.currentGraphics.layer !== null) {\n        //     let index : number = 0;\n        //     if (this.currentGraphics.page instanceof PdfPage) {\n        //         index = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);\n        //     } else {\n        //         index = (this.currentGraphics.page as PdfPageBase).defaultLayerIndex;\n        //     }\n        //     this.listOfNavigatePages.push(index);\n        // }\n        var index = 0;\n        index = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n        this.listOfNavigatePages.push(index);\n        if (format != null && format.break === PdfLayoutBreakType.FitColumnsToPage) {\n            this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), new SizeF(this.Grid.columns.width, this.currentGraphics.clientSize.height));\n        }\n        else {\n            this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), this.currentGraphics.clientSize);\n        }\n        //this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), this.currentGraphics.clientSize);\n        if (this.Grid.rows.count !== 0) {\n            this.currentBounds.width = (param.bounds.width > 0) ? param.bounds.width :\n                (this.currentBounds.width - this.Grid.rows.getRow(0).cells.getCell(0).style.borders.left.width / 2);\n        }\n        else if (this.Grid.headers.count !== 0) {\n            // this.currentBounds.width = (param.bounds.width > 0) ? param.bounds.width : (this.currentBounds.width -\n            //                                 this.Grid.headers.getHeader(0).cells.getCell(0).style.borders.left.width / 2);\n            this.currentBounds.width = param.bounds.width;\n        }\n        else {\n            throw Error('Please add row or header into grid');\n        }\n        this.startLocation = new PointF(param.bounds.x, param.bounds.y);\n        // if (this.Grid.style.allowHorizontalOverflow && this.currentBounds.width > this.currentGraphics.clientSize.width) {\n        //     this.currentBounds.width = this.currentGraphics.clientSize.width;\n        //     this.currentBounds.width -= this.currentBounds.x;\n        // }\n        // if (this.Grid.isChildGrid) {\n        //     this.childheight = param.bounds.height;\n        // }\n        // if (param.format !== null && param.format.usePaginateBounds) {\n        //     if (param.format.paginateBounds.height > 0) {\n        //         this.currentBounds.height = param.format.paginateBounds.height;\n        //     }\n        //} else \n        if (param.bounds.height > 0 && !this.Grid.isChildGrid) {\n            this.currentBounds.height = param.bounds.height;\n        }\n        if (!this.Grid.isChildGrid) {\n            this.hType = this.Grid.style.horizontalOverflowType;\n        }\n        if (!this.Grid.style.allowHorizontalOverflow) {\n            this.columnRanges = [];\n            if (typeof this.Grid.isChildGrid !== 'undefined' && typeof this.Grid.isChildGrid) {\n                this.Grid.measureColumnsWidth(this.currentBounds);\n            }\n            else {\n                this.Grid.measureColumnsWidth(new RectangleF(this.currentBounds.x, this.currentBounds.y, this.currentBounds.x + this.currentBounds.width, this.currentBounds.height));\n            }\n            this.columnRanges.push([0, this.Grid.columns.count - 1]);\n        }\n        else {\n            this.Grid.measureColumnsWidth();\n            this.determineColumnDrawRanges();\n        }\n        if (this.Grid.hasRowSpanSpan) {\n            for (var i = 0; i < this.Grid.rows.count; i++) {\n                if (this.Grid.rows.getRow(i).height !== -1 && !this.Grid.rows.getRow(i).isRowHeightSet) {\n                    this.Grid.rows.getRow(i).isRowHeightSet = true;\n                }\n            }\n        }\n        var result = this.layoutOnPage(param);\n        return result;\n    };\n    // /* tslint:enable */\n    /**\n     * `Determines the column draw ranges`.\n     * @private\n     */\n    PdfGridLayouter.prototype.determineColumnDrawRanges = function () {\n        var startColumn = 0;\n        var endColumn = 0;\n        var cellWidths = 0;\n        var availableWidth = this.currentGraphics.clientSize.width - this.currentBounds.x;\n        for (var i = 0; i < this.Grid.columns.count; i++) {\n            cellWidths += this.Grid.columns.getColumn(i).width;\n            if (cellWidths >= availableWidth) {\n                var subWidths = 0;\n                for (var j = startColumn; j <= i; j++) {\n                    subWidths += this.Grid.columns.getColumn(j).width;\n                    if (subWidths > availableWidth) {\n                        break;\n                    }\n                    endColumn = j;\n                }\n                this.columnRanges.push([startColumn, endColumn]);\n                startColumn = endColumn + 1;\n                endColumn = startColumn;\n                cellWidths = (endColumn <= i) ? this.Grid.columns.getColumn(i).width : 0;\n            }\n        }\n        // if (startColumn !== this.columns.Count) {\n        this.columnRanges.push([startColumn, this.Grid.columns.count - 1]);\n        // }\n    };\n    /**\n     * `Layouts the on page`.\n     * @private\n     */\n    PdfGridLayouter.prototype.layoutOnPage = function (param) {\n        /* tslint:disable */\n        this.pageBounds.x = param.bounds.x;\n        this.pageBounds.y = param.bounds.y;\n        this.pageBounds.height = param.bounds.height;\n        var format = this.getFormat(param.format);\n        var endArgs = null;\n        var result = null;\n        var layoutedPages = new TemporaryDictionary();\n        var startPage = param.page;\n        var isParentCell = false;\n        var cellBounds = [];\n        for (var index = 0; index < this.columnRanges.length; index++) {\n            var range = this.columnRanges[index];\n            this.cellStartIndex = range[0];\n            this.cellEndIndex = range[1];\n            var returnObject = this.raiseBeforePageLayout(this.currentPage, this.currentBounds, this.currentRowIndex);\n            this.currentBounds = returnObject.currentBounds;\n            this.currentRowIndex = returnObject.currentRowIndex;\n            // if (returnObject.returnValue) {\n            //     result = new PdfGridLayoutResult(this.currentPage, this.currentBounds);\n            //     break;\n            // }\n            //Draw Headers.\n            var drawHeader = void 0;\n            for (var i_1 = 0; i_1 < this.Grid.headers.count; i_1++) {\n                var row = this.Grid.headers.getHeader(i_1);\n                var headerHeight = this.currentBounds.y;\n                this.isHeader = true;\n                if (startPage != this.currentPage) {\n                    for (var k = this.cellStartIndex; k <= this.cellEndIndex; k++) {\n                        if (row.cells.getCell(k).isCellMergeContinue) {\n                            row.cells.getCell(k).isCellMergeContinue = false;\n                            row.cells.getCell(k).value = \"\";\n                        }\n                    }\n                }\n                // RowLayoutResult\n                var headerResult = this.drawRow(row);\n                if (headerHeight === this.currentBounds.y) {\n                    drawHeader = true;\n                    if (PdfGridLayouter.repeatRowIndex === -1) {\n                        PdfGridLayouter.repeatRowIndex = i_1;\n                    }\n                }\n                else {\n                    drawHeader = false;\n                }\n                if (!headerResult.isFinish && startPage !== null\n                    && format.layout !== PdfLayoutType.OnePage && drawHeader) {\n                    this.startLocation.x = this.currentBounds.x;\n                    this.currentPage = this.getNextPageformat(format);\n                    this.startLocation.y = this.currentBounds.y;\n                    if (typeof format.paginateBounds !== 'undefined' && format.paginateBounds.x === 0 && format.paginateBounds.y === 0 && format.paginateBounds.width === 0 && format.paginateBounds.height === 0)\n                        this.currentBounds.x += this.startLocation.x;\n                    this.drawRow(row);\n                }\n                this.isHeader = false;\n            }\n            var i = 0;\n            var length_1 = this.Grid.rows.count;\n            var repeatRow = void 0;\n            var startingHeight = 0;\n            var flag = true;\n            //Here is to draw parent Grid and Cells\n            cellBounds = [];\n            //Draw row by row with the specified cell range.\n            for (var j = 0; j < this.Grid.rows.count; j++) {\n                var row = this.Grid.rows.getRow(j);\n                i++;\n                this.currentRowIndex = i - 1;\n                var originalHeight = this.currentBounds.y;\n                startPage = this.currentPage;\n                PdfGridLayouter.repeatRowIndex = -1;\n                if (flag && row.grid.isChildGrid) {\n                    startingHeight = originalHeight;\n                    flag = false;\n                }\n                var rowResult = null;\n                ///rowResult = this.drawRow(row);\n                /*if(!row.isrowFinish) {\n                    if(!row.grid.isgridSplit){\n                        rowResult = this.drawRow(row);\n                        row.isrowFinish = true;\n                        row.isrowDraw = true;\n                    } else {\n                        if(!row.isrowDraw){\n                            rowResult = this.drawRow(row);\n                            row.isrowFinish = true;\n                            row.isrowDraw = true;\n                            row.grid.isgridSplit = false;\n                        } else {\n                            rowResult =  null;\n                            break;\n                        }\n                    }\n                }\n                else {\n                    //row.isrowFinish = false;\n                    //rowResult = this.drawRow(row);\n                    rowResult = null;\n                    break;\n                    \n                }             */\n                if (this.Grid.splitChildRowIndex == -1) {\n                    rowResult = this.drawRow(row);\n                    row.isrowFinish = true;\n                }\n                else {\n                    if (row.grid.ParentCell.row.grid.isGridSplit && this.Grid.splitChildRowIndex <= row.rowIndex) {\n                        rowResult = this.drawRow(row);\n                        row.isrowFinish = true;\n                    }\n                    else if (row.isrowFinish) {\n                        continue;\n                    }\n                    else {\n                        break;\n                    }\n                }\n                //rowResult = this.drawRow(row);\n                cellBounds.push(rowResult.bounds.width);\n                /*if (row.isRowBreaksNextPage)\n                    {\n                        let x : number  = 0;\n                        for (let l : number = 0; l < row.cells.count; l++)\n                        {\n                            let isNestedRowBreak : boolean = false;\n                            if (row.height == row.cells.getCell(l).height)\n                            {\n                                let n : number;\n                                let grid : PdfGrid = row.cells.getCell(l).value as PdfGrid;\n                                for (let m : number = grid.rows.count; 0 < m; m--)\n                                {\n                                    if ((grid.rows.getRow(m - 1).rowBreakHeight > 0))\n                                    {\n                                        isNestedRowBreak = true;\n                                        break;\n                                    }\n                                    if (grid.rows.getRow(m - 1).isRowBreaksNextPage)\n                                    {\n                                        row.rowBreakHeightValue = grid.rows.getRow(m - 1).rowBreakHeightValue;\n                                        break;\n                                    }\n                                    row.rowBreakHeightValue += grid.rows.getRow(m - 1).height;\n                                }\n                            }\n                            if (isNestedRowBreak)\n                                break;\n                        }\n                        for (let j : number = 0; j < row.cells.count; j++)\n                        {\n\n                            if (row.height > row.cells.getCell(j).height)\n                            {\n                                row.cells.getCell(j).value = \" \";\n                                let rect : RectangleF ;\n                                let page : PdfPage = this.getNextPage(this.currentPage);\n                                let section : PdfSection = this.currentPage.section;\n                                let index : number = section.indexOf(page);\n                                for (let k : number = 0; k < (section.count - 1) - index; k++)\n                                {\n                                    rect = new RectangleF(x, 0, row.grid.columns.getColumn(j).width, page.getClientSize().height);\n                                    PdfGridLayouter.repeatRowIndex = -1;\n                                    row.cells.getCell(j).draw(page.graphics, rect, false);\n                                    page = this.getNextPage(page);\n                                }\n                                rect = new RectangleF(x, 0, row.grid.columns.getColumn(j).width, row.rowBreakHeightValue);\n\n                                row.cells.getCell(j).draw(page.graphics, rect, false);\n                            }\n                            x += row.grid.columns.getColumn(j).width;\n                        }\n                    }*/\n                //if height remains same, it is understood that row is not drawn in the page\n                if (originalHeight === this.currentBounds.y) {\n                    repeatRow = true;\n                    PdfGridLayouter.repeatRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                }\n                else {\n                    repeatRow = false;\n                    PdfGridLayouter.repeatRowIndex = -1;\n                }\n                while (!rowResult.isFinish && startPage != null) {\n                    var tempResult = this.getLayoutResult();\n                    /*if (startPage != this.currentPage)\n                        {\n                            if (row.grid.isChildGrid && row.grid.ParentCell != null)\n                            {\n                                let bounds : RectangleF= new RectangleF(new PointF(format.paginateBounds.x,format.paginateBounds.y), new SizeF(param.bounds.width, tempResult.bounds.height));\n                                bounds.x += param.bounds.x;\n                                if (row.grid.ParentCell.row.grid.style.cellPadding != null)\n                                {\n                                    bounds.y += row.grid.ParentCell.row.grid.style.cellPadding.top;\n                                    if (bounds.height > this.currentPageBounds.height)\n                                    {\n                                        bounds.height = this.currentPageBounds.height - bounds.y;\n                                        bounds.height -= (row.grid.ParentCell.row.grid.style.cellPadding.bottom);\n                                    }\n                                }\n                                // Draw border for cells in the nested grid cell's row.\n                                for (let c : number = 0; c < row.cells.count; c++)\n                                {\n                                    let cell : PdfGridCell = row.cells.getCell(c);\n                                    let cellWidth :  number= 0;\n                                    if (cell.columnSpan > 1)\n                                    {\n                                        for (; c < cell.columnSpan; c++)\n                                            cellWidth += row.grid.columns.getColumn(c).width;\n                                    }\n                                    else\n                                        cellWidth = Math.max(cell.width, row.grid.columns.getColumn(c).width);\n                                    cell.drawCellBorders(this.currentGraphics, new RectangleF(new PointF(bounds.x,bounds.y), new SizeF(cellWidth, bounds.height)));\n                                    bounds.x += cellWidth;\n                                    c += (cell.columnSpan - 1);\n                                }\n                            }\n                        }\n                        */\n                    endArgs = this.raisePageLayouted(tempResult);\n                    if (endArgs.cancel || repeatRow)\n                        break;\n                    else if (this.Grid.allowRowBreakAcrossPages) {\n                        //If there is no space in the current page, add new page and then draw the remaining row.\n                        this.currentPage = this.getNextPageformat(format);\n                        originalHeight = this.currentBounds.y;\n                        var location_1 = new PointF(PdfBorders.default.right.width / 2, PdfBorders.default.top.width / 2);\n                        if ((format.paginateBounds.x === 0 && format.paginateBounds.y === 0 && format.paginateBounds.width === 0 &&\n                            format.paginateBounds.height === 0) && (this.startLocation.x === location_1.x && this.startLocation.y === location_1.y)) {\n                            this.currentBounds.x += this.startLocation.x;\n                            this.currentBounds.y += this.startLocation.y;\n                        }\n                        if (this.isPaginate) {\n                            this.startLocation.y = this.currentBounds.y;\n                            this.isPaginate = false;\n                        }\n                        if (this.Grid.isChildGrid && row.grid.ParentCell != null) {\n                            if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                                if (row.rowBreakHeight + this.Grid.ParentCell.row.grid.style.cellPadding.top < this.currentBounds.height) {\n                                    this.currentBounds.y = this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                                }\n                            }\n                        }\n                        if (row.grid.ParentCell != null) {\n                            row.grid.ParentCell.row.isRowBreaksNextPage = true;\n                            row.grid.ParentCell.row.rowBreakHeightValue = row.rowBreakHeight + this.Grid.ParentCell.row.grid.style.cellPadding.top + this.Grid.ParentCell.row.grid.style.cellPadding.bottom;\n                            for (var i_2 = row.rowIndex + 1; i_2 < row.grid.rows.count; i_2++) {\n                                row.grid.ParentCell.row.rowBreakHeightValue += row.grid.rows.getRow(i_2).height;\n                            }\n                            //row.rowBreakHeight = row.grid.ParentCell.row.rowBreakHeightValue;\n                        }\n                        /*if (row.noOfPageCount > 1)\n                        {\n                            let temp : number = row.rowBreakHeightValue;\n                            for (let j : number = 1; j < row.noOfPageCount; j++)\n                            {\n                                row.rowBreakHeightValue = 0;\n                                row.height = ((row.noOfPageCount - 1) * this.currentPage.getClientSize().height);\n                                this.drawRow(row);\n                                this.currentPage = this.getNextPageformat(format);\n                                startPage = this.currentPage;\n                            }\n                            row.rowBreakHeightValue = temp;\n                            row.noOfPageCount = 1;\n                            rowResult = this.drawRow(row);\n                        } else {\n                            rowResult = this.drawRow(row);\n                        }\n                        /*if(row.grid.isChildGrid){\n                            row.isrowFinish = false;\n                            row.isrowDraw = false;\n                            row.grid.isgridSplit = true;\n                            row.grid.ParentCell.row.grid.isgridSplit = true;\n                            //rowResult.isFinish = false;\n                            break;\n                        }*/\n                        if (row.grid.isChildGrid) {\n                            //row.grid.isgridSplit = true;\n                            row.isrowFinish = false;\n                            //row.grid.ParentCell.row.grid.isgridSplit = true;\n                            row.grid.splitChildRowIndex = row.rowIndex;\n                            row.grid.ParentCell.row.grid.splitChildRowIndex = row.grid.ParentCell.row.rowIndex;\n                            if (row.grid.ParentCell.row.grid.isGridSplit) {\n                                row.grid.ParentCell.row.noOfPageCount += 1;\n                                row.grid.ParentCell.row.grid.isGridSplit = false;\n                            }\n                            break;\n                        }\n                        if (row.noOfPageCount < 1) {\n                            if (row.grid.splitChildRowIndex != -1) {\n                                row.grid.isGridSplit = true;\n                            }\n                            if (row.style.border != null && ((row.style.border.left != null && row.style.border.left.width !== 1)\n                                || (row.style.border.top != null && row.style.border.top.width !== 1))) {\n                                var x = row.style.border.left.width / 2;\n                                var y = row.style.border.top.width / 2;\n                                if (this.currentBounds.x === PdfBorders.default.right.width / 2 && this.currentBounds.y === PdfBorders.default.right.width / 2) {\n                                    var newBound = new RectangleF(x, y, this.currentBounds.width, this.currentBounds.height);\n                                    this.currentBounds = newBound;\n                                }\n                            }\n                            if (this.Grid.repeatHeader) {\n                                for (var j_1 = 0; j_1 < this.Grid.headers.count; j_1++) {\n                                    var headerRepeat = this.Grid.headers.getHeader(j_1);\n                                    this.drawRow(headerRepeat);\n                                }\n                            }\n                            rowResult = this.drawRow(row);\n                            if (row.noOfPageCount >= 1) {\n                                var temp = row.rowBreakHeightValue;\n                                for (var j_2 = 0; j_2 < row.noOfPageCount; j_2++) {\n                                    //this.currentPage.section.add();\n                                    var tempResult1 = this.getLayoutResult();\n                                    endArgs = this.raisePageLayouted(tempResult1);\n                                    this.currentPage = this.getNextPageformat(format);\n                                    originalHeight = this.currentBounds.y;\n                                    //row.rowBreakHeightValue = 0;\n                                    if (row.grid.splitChildRowIndex != -1) {\n                                        row.grid.isGridSplit = true;\n                                    }\n                                    this.currentBounds.y = 0.5;\n                                    if (this.Grid.repeatHeader) {\n                                        for (var i_3 = 0; i_3 < this.Grid.headers.count; i_3++) {\n                                            var header = this.Grid.headers.getHeader(i_3);\n                                            this.drawRow(header);\n                                        }\n                                    }\n                                    //row.height = ((row.noOfPageCount - 1) * this.currentPage.getClientSize().height);\n                                    this.drawRow(row);\n                                }\n                                // row.rowBreakHeight = temp;\n                                // row.noOfPageCount = 1;\n                                // rowResult = this.drawRow(row);\n                            }\n                            row.grid.splitChildRowIndex = -1;\n                            row.grid.isGridSplit = false;\n                            rowResult.isFinish = this.checkIsFisished(row);\n                            //row.NestedGridLayoutResult.bounds.height = row.rowBreakHeightValue;\n                            //this.currentBounds.y = rowResult.bounds.y;\n                            for (var i_4 = 0; i_4 < row.cells.count; i_4++) {\n                                if (row.cells.getCell(i_4).value instanceof PdfGrid) {\n                                    row.cells.getCell(i_4).value.splitChildRowIndex = -1;\n                                }\n                            }\n                        }\n                    }\n                    // else if (!this.Grid.allowRowBreakAcrossPages && i < length)\n                    // {\n                    //     this.currentPage = this.getNextPageformat(format);\n                    //     break;\n                    // }\n                    // else if (i >= length)\n                    //     break;\n                }\n                if (!rowResult.isFinish && startPage !== null && format.layout !== PdfLayoutType.OnePage && repeatRow) {\n                    // During pagination, cell position is maintained here.\n                    this.startLocation.x = this.currentBounds.x;\n                    var isAddNextPage = false;\n                    this.currentPage = this.getNextPageformat(format);\n                    /*if (!this.Grid.isSingleGrid)\n                    {\n                        for ( let j : number= 0; j < this.Grid.rows.count; j++)\n                        {\n                            let isWidthGreaterthanParent : boolean = false;\n                            for (let k : number = 0; k < this.Grid.rows.getRow(j).cells.count; k++)\n                            {\n                                if (this.Grid.rows.getRow(j).cells.getCell(k).width > this.currentPageBounds.width)\n                                    isWidthGreaterthanParent = true;\n                            }\n                            if (isWidthGreaterthanParent && this.Grid.rows.getRow(j).cells.getCell(this.rowBreakPageHeightCellIndex).pageCount > 0)\n                            {\n                                isAddNextPage = true;\n                            }\n                        }\n                    }\n                    if (!this.Grid.isRearranged && isAddNextPage)\n                         {\n                             let section : PdfSection = this.currentPage.section;\n                             \n                             //this.currentPage = section.add();\n                         \n                             this.currentGraphics = this.currentPage.graphics;\n                             this.currentBounds = new RectangleF(new PointF(0,0), this.currentPage.getClientSize());\n                          \n                             let pageindex  : number = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);\n                         }\n                         else\n                         {\n                             this.currentPage = this.getNextPageformat(format);\n                         }\n                         if (format.paginateBounds.y == 0)\n                             this.currentBounds.y = PdfBorders.default.top.width/2;\n                         else\n                         {\n                             this.currentBounds.y = format == null ? 0 : format.paginateBounds.y;\n                             \n                         }*/\n                    if (this.raiseBeforePageLayout(this.currentPage, this.currentBounds, this.currentRowIndex).returnValue) {\n                        break;\n                    }\n                    if ((param.format !== null) && !param.format.usePaginateBounds && param.bounds !== null &&\n                        param.bounds.height > 0 && !this.Grid.isChildGrid) {\n                        this.currentBounds.height = param.bounds.height;\n                    }\n                    if (typeof param.format !== 'undefined' && param.format != null && typeof param.format.usePaginateBounds !== 'undefined' && !param.format.usePaginateBounds && !(param.format.paginateBounds.x === 0 && param.format.paginateBounds.y === 0 && param.format.paginateBounds.width === 0 && param.format.paginateBounds.height === 0) && param.format.paginateBounds.y === 0) {\n                        this.currentBounds.y = PdfBorders.default.top.width / 2;\n                    }\n                    else {\n                        this.currentBounds.y = format == null ? 0 : format.paginateBounds.y;\n                        if (format != null && (format.paginateBounds.x !== 0 || format.paginateBounds.y !== 0 || format.paginateBounds.height !== 0 || format.paginateBounds.width !== 0)) {\n                            this.currentBounds.x = format.paginateBounds.x;\n                            this.currentBounds.width = format.paginateBounds.width;\n                            this.currentBounds.height = format.paginateBounds.height;\n                        }\n                    }\n                    if (typeof param.format !== 'undefined' && (param.format !== null) && typeof param.format.usePaginateBounds !== 'undefined' && !param.format.usePaginateBounds && param.bounds !== null &&\n                        param.bounds.y > 0 && !this.Grid.isChildGrid) {\n                        this.currentBounds.y = param.bounds.y;\n                    }\n                    this.startLocation.y = this.currentBounds.y;\n                    if ((format.paginateBounds.x === format.paginateBounds.y) &&\n                        (format.paginateBounds.y === format.paginateBounds.height) &&\n                        (format.paginateBounds.height === format.paginateBounds.width) && (format.paginateBounds.width === 0)) {\n                        this.currentBounds.x += this.startLocation.x;\n                    }\n                    if (this.currentBounds.x === PdfBorders.default.left.width / 2) {\n                        this.currentBounds.y += this.startLocation.x;\n                    }\n                    if (this.Grid.repeatHeader) {\n                        for (var i_5 = 0; i_5 < this.Grid.headers.count; i_5++) {\n                            var header = this.Grid.headers.getHeader(i_5);\n                            this.drawRow(header);\n                        }\n                    }\n                    this.drawRow(row);\n                    if (this.currentPage !== null && !layoutedPages.containsKey(this.currentPage)) {\n                        layoutedPages.add(this.currentPage, range);\n                    }\n                }\n                if (row.NestedGridLayoutResult != null) {\n                    // Position for next row in the grid.\n                    this.currentPage = row.NestedGridLayoutResult.page;\n                    this.currentGraphics = this.currentPage.graphics; //If not, next row will not be drawn in the layouted page.\n                    this.startLocation = new PointF(row.NestedGridLayoutResult.bounds.x, row.NestedGridLayoutResult.bounds.y);\n                    var recalHeight = this.ReCalculateHeight(row, row.NestedGridLayoutResult.bounds.height);\n                    this.currentBounds.y = recalHeight;\n                    //this.currentBounds.y = row.NestedGridLayoutResult.bounds.height;\n                    if (startPage != this.currentPage) {\n                        var section = this.currentPage.section;\n                        var startIndex = section.indexOf(startPage) + 1;\n                        var endIndex = section.indexOf(this.currentPage);\n                        for (var page = startIndex; page < endIndex + 1; page++) {\n                            var pageGraphics = section.getPages()[page].graphics;\n                            var location_2 = new PointF(format.paginateBounds.x, format.paginateBounds.y);\n                            var height = page == endIndex ? (row.NestedGridLayoutResult.bounds.height - param.bounds.y) :\n                                (this.currentBounds.height - location_2.y);\n                            if (height <= pageGraphics.clientSize.height)\n                                height += param.bounds.y;\n                            // if (row.grid.isChildGrid && row.grid.ParentCell != null)\n                            //     location.x += param.bounds.x;\n                            location_2.y = format == null ? 0.5 : format.paginateBounds.y;\n                            // Draw border for last paginated row containing nested grid.\n                            for (var c = 0; c < row.cells.count; c++) {\n                                var cell = row.cells.getCell(c);\n                                var cellWidth = 0;\n                                var totalwidth = 0;\n                                var childGridCell = void 0;\n                                if (cell.value instanceof PdfGrid) {\n                                    if (!childGridCell) {\n                                        childGridCell = cell;\n                                    }\n                                    for (var i_6 = 0; i_6 < cell.value.columns.count; i_6++) {\n                                        totalwidth += cell.value.columns.getColumn(i_6).columnWidth;\n                                    }\n                                }\n                                else {\n                                    totalwidth = cell.width;\n                                }\n                                if (cell.columnSpan > 1) {\n                                    for (; c < cell.columnSpan; c++)\n                                        cellWidth += row.grid.columns.getColumn(c).width;\n                                }\n                                else\n                                    cellWidth = Math.max(totalwidth, row.grid.columns.getColumn(c).width);\n                                var bottomPadding = void 0;\n                                if (childGridCell && childGridCell.style && childGridCell.style.cellPadding) {\n                                    bottomPadding = childGridCell.style.cellPadding.bottom;\n                                }\n                                else {\n                                    bottomPadding = this.Grid.style.cellPadding.bottom;\n                                }\n                                if (typeof bottomPadding === 'number' && (height + bottomPadding) < pageGraphics.clientSize.height) {\n                                    height += bottomPadding;\n                                    this.currentBounds.y += bottomPadding;\n                                }\n                                cell.drawCellBorders(pageGraphics, new RectangleF(location_2, new SizeF(cellWidth, height)));\n                                var rowWidth = this.Grid.rows.getRow(this.Grid.rows.count - 1).width;\n                                if (cellWidth !== rowWidth) {\n                                    cell.drawCellBorders(pageGraphics, new RectangleF(location_2, new SizeF(rowWidth, height)));\n                                }\n                                location_2.x += cellWidth;\n                                c += (cell.columnSpan - 1);\n                            }\n                        }\n                        // So, nested grid drawing is completed for the current row. Update page.\n                        // Otherwise, the next nested grid of the parent will draw borders from start.\n                        startPage = this.currentPage;\n                    }\n                }\n            }\n            var isPdfGrid = false;\n            var maximumCellBoundsWidth = 0;\n            if (cellBounds.length > 0) {\n                maximumCellBoundsWidth = cellBounds[0];\n            }\n            var largeNavigatePage = [[1, 2]];\n            for (var c = 0; c < this.Grid.rows.count; c++) {\n                if (this.cellEndIndex != -1 && this.Grid.rows.getRow(c).cells.getCell(this.cellEndIndex).value instanceof PdfGrid) {\n                    var grid = this.Grid.rows.getRow(c).cells.getCell(this.cellEndIndex).value;\n                    this.rowLayoutBoundsWidth = grid.rowLayoutBoundsWidth;\n                    isPdfGrid = true;\n                    // if (largeNavigatePage[0][0] < grid.listOfNavigatePages.length)\n                    // {\n                    //     largeNavigatePage[0][0] = grid.listOfNavigatePages.length;\n                    //     largeNavigatePage[0][1] = cellBounds[c];\n                    // }\n                    // else if ((largeNavigatePage[0][0] == grid.listOfNavigatePages.length) && (largeNavigatePage[0][1] < cellBounds[c]))\n                    // {\n                    //     largeNavigatePage[0][1] = cellBounds[c];\n                    // }\n                }\n            }\n            if (!isPdfGrid && cellBounds.length > 0) {\n                for (var c = 0; c < i - 1; c++) {\n                    if (maximumCellBoundsWidth < cellBounds[c]) {\n                        maximumCellBoundsWidth = cellBounds[c];\n                    }\n                }\n                this.rowLayoutBoundsWidth = maximumCellBoundsWidth;\n            }\n            else {\n                this.rowLayoutBoundsWidth = largeNavigatePage[0][1];\n            }\n            if (this.columnRanges.indexOf(range) < this.columnRanges.length - 1\n                && startPage != null && format.layout != PdfLayoutType.OnePage) {\n                isParentCell = this.Grid.isChildGrid;\n                if (largeNavigatePage[0][0] != 0) {\n                    var section = this.currentPage.section;\n                    var pageIndex = section.indexOf(this.currentPage);\n                    this.currentGraphics = this.currentPage.graphics;\n                    this.currentBounds = new RectangleF(new PointF(0, 0), this.currentPage.getClientSize());\n                    var pageindex = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n                }\n                else {\n                    this.currentPage = this.getNextPageformat(format);\n                }\n                // let locationGrid : PointF= new PointF(PdfBorders.default.right.width / 2, PdfBorders.default.top.width / 2);\n                // if (format.paginateBounds == new RectangleF(0,0,0,0) && this.startLocation == locationGrid)\n                // {\n                //     this.currentBounds.x += this.startLocation.x;\n                //     this.currentBounds.y += this.startLocation.y;\n                // }\n            }\n            if (this.columnRanges.length - 1 !== index && this.columnRanges.length > 1 && format.layout !== PdfLayoutType.OnePage) {\n                this.currentPage = this.getNextPageformat(format);\n                if ((format.paginateBounds.x === format.paginateBounds.y) && (format.paginateBounds.y === format.paginateBounds.height)\n                    && (format.paginateBounds.height === format.paginateBounds.width) && (format.paginateBounds.width === 0)) {\n                    this.currentBounds.x += this.startLocation.x;\n                    this.currentBounds.y += this.startLocation.y;\n                    //this.currentBounds.height = this.pageBounds.height;\n                }\n            }\n        }\n        result = this.getLayoutResult();\n        if (this.Grid.style.allowHorizontalOverflow && this.Grid.style.horizontalOverflowType == PdfHorizontalOverflowType.NextPage) {\n            this.reArrangePages(layoutedPages);\n        }\n        this.raisePageLayouted(result);\n        return result;\n    };\n    PdfGridLayouter.prototype.checkIsFisished = function (row) {\n        var result = true;\n        for (var i = 0; i < row.cells.count; i++) {\n            if (!row.cells.getCell(i).FinishedDrawingCell) {\n                result = false;\n            }\n        }\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * Gets the `next page`.\n     * @private\n     */\n    PdfGridLayouter.prototype.getNextPageformat = function (format) {\n        var section = this.currentPage.section;\n        var nextPage = null;\n        var index = section.indexOf(this.currentPage);\n        this.flag = false;\n        if (index === section.count - 1) {\n            nextPage = section.add();\n        }\n        else {\n            nextPage = section.getPages()[index + 1];\n        }\n        this.currentGraphics = nextPage.graphics;\n        var pageindex = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n        if (!(this.listOfNavigatePages.indexOf(pageindex) !== -1)) {\n            this.listOfNavigatePages.push(pageindex);\n        }\n        this.currentBounds = new RectangleF(new PointF(0, 0), nextPage.getClientSize());\n        if ((typeof format !== 'undefined') && format != null && format.usePaginateBounds && (typeof format.paginateBounds !== 'undefined') && format.paginateBounds != null && (format.paginateBounds.x !== format.paginateBounds.y) && (format.paginateBounds.y !== format.paginateBounds.height)\n            && (format.paginateBounds.height !== format.paginateBounds.width) && (format.paginateBounds.width !== 0)) {\n            this.currentBounds.x = format.paginateBounds.x;\n            this.currentBounds.y = format.paginateBounds.y;\n            this.currentBounds.height = format.paginateBounds.height;\n        }\n        return nextPage;\n    };\n    PdfGridLayouter.prototype.CheckIfDefaultFormat = function (format) {\n        var defaultFormat = new PdfStringFormat();\n        return (format.alignment === defaultFormat.alignment && format.characterSpacing === defaultFormat.characterSpacing &&\n            format.clipPath === defaultFormat.clipPath && format.firstLineIndent === defaultFormat.firstLineIndent &&\n            format.horizontalScalingFactor === defaultFormat.horizontalScalingFactor &&\n            format.lineAlignment === defaultFormat.lineAlignment\n            && format.lineLimit === defaultFormat.lineLimit && format.lineSpacing === defaultFormat.lineSpacing &&\n            format.measureTrailingSpaces === defaultFormat.measureTrailingSpaces && format.noClip === defaultFormat.noClip &&\n            format.paragraphIndent === defaultFormat.paragraphIndent && format.rightToLeft === defaultFormat.rightToLeft &&\n            format.subSuperScript === defaultFormat.subSuperScript && format.wordSpacing === defaultFormat.wordSpacing &&\n            format.wordWrap === defaultFormat.wordWrap);\n    };\n    /**\n     * `Raises BeforeCellDraw event`.\n     * @private\n     */\n    PdfGridLayouter.prototype.RaiseBeforeCellDraw = function (graphics, rowIndex, cellIndex, bounds, value, style) {\n        var args = null;\n        if (this.Grid.raiseBeginCellDraw) {\n            args = new PdfGridBeginCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style);\n            this.Grid.onBeginCellDraw(args);\n            style = args.style;\n        }\n        return style;\n    };\n    /**\n     * `Raises AfterCellDraw event`.\n     * @private\n     */\n    PdfGridLayouter.prototype.raiseAfterCellDraw = function (graphics, rowIndex, cellIndex, bounds, value, cellstyle) {\n        var args = null;\n        if (this.Grid.raiseEndCellDraw) {\n            args = new PdfGridEndCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, cellstyle);\n            this.Grid.onEndCellDraw(args);\n        }\n    };\n    PdfGridLayouter.prototype.reArrangePages = function (layoutedPages) {\n        var document = this.currentPage.document;\n        var pages = [];\n        var keys = layoutedPages.keys();\n        var values = layoutedPages.values();\n        for (var i = 0; i < keys.length; i++) {\n            var page = keys[i];\n            page.section = null;\n            pages.push(page);\n            document.pages.remove(page);\n        }\n        /* tslint:disable */\n        for (var i = 0; i < layoutedPages.size(); i++) {\n            var count = 0;\n            for (var j = i, count_1 = (layoutedPages.size() / this.columnRanges.length); j < layoutedPages.size(); j += count_1) {\n                var page = pages[j];\n                if (typeof page !== 'undefined' && document.pages.indexOf(page) === -1) {\n                    document.pages.add(page);\n                }\n            }\n        }\n        /* tslint:enable */\n    };\n    /**\n     * Gets the `layout result`.\n     * @private\n     */\n    PdfGridLayouter.prototype.getLayoutResult = function () {\n        if (this.Grid.isChildGrid && this.Grid.allowRowBreakAcrossPages) {\n            for (var i = 0; i < this.Grid.rows.count; i++) {\n                var row = this.Grid.rows.getRow(i);\n                if (row.rowBreakHeight > 0 && row.repeatFlag) {\n                    this.startLocation.y = this.currentPage.origin.y;\n                }\n            }\n        }\n        var bounds;\n        if (!this.isChanged) {\n            bounds = new RectangleF(this.startLocation, new SizeF(this.currentBounds.width, this.currentBounds.y -\n                this.startLocation.y));\n        }\n        // else {\n        //     bounds = new RectangleF(this.currentLocation, new SizeF(this.currentBounds.width, this.currentBounds.y -\n        //                              this.currentLocation.y));\n        // }\n        /* tslint:enable */\n        return new PdfGridLayoutResult(this.currentPage, bounds);\n    };\n    /**\n     * `Recalculate row height` for the split cell to be drawn.\n     * @private\n     */\n    PdfGridLayouter.prototype.ReCalculateHeight = function (row, height) {\n        var newHeight = 0.0;\n        for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n            if (!(row.cells.getCell(i).remainingString === null || row.cells.getCell(i).remainingString === '' ||\n                typeof row.cells.getCell(i).remainingString === 'undefined')) {\n                newHeight = Math.max(newHeight, row.cells.getCell(i).measureHeight());\n            }\n        }\n        return Math.max(height, newHeight);\n    };\n    /**\n     * `Raises BeforePageLayout event`.\n     * @private\n     */\n    PdfGridLayouter.prototype.raiseBeforePageLayout = function (currentPage, currentBounds, currentRow) {\n        var cancel = false;\n        if (this.Grid.raiseBeginPageLayout) {\n            var args = new PdfGridBeginPageLayoutEventArgs(currentBounds, currentPage, currentRow);\n            this.Grid.onBeginPageLayout(args);\n            // if (currentBounds !== args.Bounds) {\n            //     this.isChanged = true;\n            //     this.currentLocation = new PointF(args.Bounds.x, args.Bounds.y);\n            //     this.measureColumnsWidth(new RectangleF(new PointF(args.Bounds.x, args.Bounds.y) ,\n            //                                                  new SizeF(args.Bounds.width + args.Bounds.x ,\n            //                                                                 args.Bounds.height)));\n            // }\n            cancel = (typeof args.cancel === 'undefined' ? false : args.cancel);\n            currentBounds = args.bounds;\n            currentRow = args.startRowIndex;\n        }\n        return { returnValue: cancel, currentBounds: currentBounds, currentRowIndex: currentRow };\n    };\n    /**\n     * `Raises PageLayout event` if needed.\n     * @private\n     */\n    PdfGridLayouter.prototype.raisePageLayouted = function (result) {\n        var args = new PdfGridEndPageLayoutEventArgs(result);\n        if (this.Grid.raiseEndPageLayout) {\n            this.Grid.onEndPageLayout(args);\n        }\n        return args;\n    };\n    PdfGridLayouter.prototype.drawRow = function (row, result, height) {\n        if (typeof result === 'undefined') {\n            //.. Check if required space available.\n            //.....If the row conains spans which  falls through more than one page, then draw the row to next page.                        \n            var result_1 = new RowLayoutResult();\n            var rowHeightWithSpan = 0;\n            var location_3 = new PointF(0, 0);\n            var size = new SizeF(0, 0);\n            var isHeader = false;\n            var allowRowBreak = true;\n            if (row.rowSpanExists) {\n                var maxSpan = 0;\n                var currRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                if (currRowIndex === -1) {\n                    currRowIndex = this.Grid.headers.indexOf(row);\n                    if (currRowIndex !== -1) {\n                        isHeader = true;\n                    }\n                }\n                for (var i = 0; i < row.cells.count; i++) {\n                    var cell = row.cells.getCell(i);\n                    maxSpan = Math.max(maxSpan, cell.rowSpan);\n                }\n                for (var i = currRowIndex; i < currRowIndex + maxSpan; i++) {\n                    rowHeightWithSpan += (isHeader ? this.Grid.headers.getHeader(i).height : this.Grid.rows.getRow(i).height);\n                }\n                // let rowMaxHeight : number = rowHeightWithSpan;\n                // for (let i : number = 0; i < row.cells.count; i++ ) {\n                //     rowMaxHeight = rowMaxHeight > row.cells.getCell(i).height ? rowMaxHeight : row.cells.getCell(i).height;\n                // }\n                // let flag : boolean = true;\n                // let nextRow : PdfGridRow = this.Grid.headers.getHeader(this.Grid.headers.indexOf(row) + 1);\n                // for (let i : number = 0; i < nextRow.cells.count; i++ ) {\n                //     if (nextRow.cells.getCell(i).value !== '' && nextRow.cells.getCell(i).value !== undefined) {\n                //         flag = false;\n                //         break;\n                //     }\n                // }\n                // if ((rowMaxHeight > rowHeightWithSpan) && flag) {\n                //     row.height += (rowMaxHeight - rowHeightWithSpan);\n                // }\n                if ((rowHeightWithSpan > this.currentBounds.height ||\n                    rowHeightWithSpan + this.currentBounds.y > this.currentBounds.height)) {\n                    if (row.rowSpanExists &&\n                        (this.Grid.LayoutFormat.break === PdfLayoutBreakType.FitElement || !this.Grid.allowRowBreakAcrossPages)) {\n                        allowRowBreak = false;\n                    }\n                }\n                if ((rowHeightWithSpan > this.currentBounds.height || rowHeightWithSpan + this.currentBounds.y > this.currentBounds.height)\n                    && allowRowBreak) {\n                    rowHeightWithSpan = 0;\n                    row.isPageBreakRowSpanApplied = true;\n                    for (var i = 0; i < row.cells.count; i++) {\n                        var cell = row.cells.getCell(i);\n                        maxSpan = cell.rowSpan;\n                        for (var i_7 = currRowIndex; i_7 < currRowIndex + maxSpan; i_7++) {\n                            rowHeightWithSpan += isHeader ? this.Grid.headers.getHeader(i_7).height : this.Grid.rows.getRow(i_7).height;\n                            var layoutFormat = this.Grid.LayoutFormat;\n                            var currentBoundsHeight = this.currentPageBounds.height;\n                            if (layoutFormat.usePaginateBounds && layoutFormat.paginateBounds && layoutFormat.paginateBounds.height > 0) {\n                                var bottom = layoutFormat.paginateBounds.y + layoutFormat.paginateBounds.height;\n                                if (!this.Grid.isChildGrid && this.Grid.listOfNavigatePages.length === 1) {\n                                    bottom += this.Grid._gridLocation.y;\n                                }\n                                if (bottom < currentBoundsHeight) {\n                                    currentBoundsHeight = bottom;\n                                    this.currentPageBounds.height = currentBoundsHeight;\n                                    this.currentBounds.height = currentBoundsHeight;\n                                }\n                            }\n                            if ((this.currentBounds.y + rowHeightWithSpan) > currentBoundsHeight) {\n                                rowHeightWithSpan -= isHeader ? this.Grid.headers.getHeader(i_7).height : this.Grid.rows.getRow(i_7).height;\n                                for (var j = 0; j < this.Grid.rows.getRow(currRowIndex).cells.count; j++) {\n                                    var newSpan = i_7 - currRowIndex;\n                                    if (!isHeader &&\n                                        this.Grid.rows.getRow(currRowIndex).cells.getCell(j).rowSpan === maxSpan &&\n                                        newSpan !== 0) {\n                                        var currCell = this.Grid.rows.getRow(currRowIndex).cells.getCell(j);\n                                        var nextCell = this.Grid.rows.getRow(i_7).cells.getCell(j);\n                                        currCell.rowSpan = newSpan === 0 ? 1 : newSpan;\n                                        this.Grid.rows.getRow(currRowIndex).maximumRowSpan = newSpan === 0 ? 1 : newSpan;\n                                        nextCell.rowSpan = maxSpan - newSpan;\n                                        if (this.Grid.rows.getRow(i_7).maximumRowSpan < (maxSpan - newSpan)) {\n                                            this.Grid.rows.getRow(i_7).maximumRowSpan = maxSpan - newSpan;\n                                        }\n                                        var pdfGrid = currCell.value;\n                                        nextCell.stringFormat = currCell.stringFormat;\n                                        nextCell.style = currCell.style;\n                                        nextCell.style.backgroundImage = null;\n                                        nextCell.columnSpan = currCell.columnSpan;\n                                        if (pdfGrid instanceof PdfGrid &&\n                                            this.currentBounds.y + pdfGrid.size.height + this.Grid.rows.getRow(i_7).height +\n                                                pdfGrid.style.cellPadding.top + pdfGrid.style.cellPadding.bottom >= this.currentBounds.height) {\n                                            nextCell.value = currCell.value;\n                                        }\n                                        else if (!(pdfGrid instanceof PdfGrid)) {\n                                            nextCell.value = currCell.value;\n                                        }\n                                        if (i_7 > 0)\n                                            this.Grid.rows.getRow(i_7 - 1).rowSpanExists = true;\n                                        nextCell.isRowMergeContinue = false;\n                                        nextCell.isRowMergeStart = true;\n                                    }\n                                    else if (isHeader &&\n                                        this.Grid.headers.getHeader(currRowIndex).cells.getCell(j).rowSpan === maxSpan) {\n                                        var headerCell = this.Grid.headers.getHeader(currRowIndex).cells.getCell(j);\n                                        var nextHeaderCell = this.Grid.headers.getHeader(i_7).cells.getCell(j);\n                                        headerCell.rowSpan = newSpan === 0 ? 1 : newSpan;\n                                        nextHeaderCell.rowSpan = maxSpan - newSpan;\n                                        nextHeaderCell.stringFormat = headerCell.stringFormat;\n                                        nextHeaderCell.style = headerCell.style;\n                                        nextHeaderCell.columnSpan = headerCell.columnSpan;\n                                        nextHeaderCell.value = headerCell.value;\n                                        this.Grid.headers.getHeader(i_7 - 1).rowSpanExists = false;\n                                        nextHeaderCell.isRowMergeContinue = false;\n                                        nextHeaderCell.isRowMergeStart = true;\n                                    }\n                                }\n                                break;\n                            }\n                        }\n                        rowHeightWithSpan = 0;\n                    }\n                }\n            }\n            var calculatedHeight = row.rowBreakHeight > 0.0 ? row.rowBreakHeight : row.height;\n            if (typeof this.Grid.isChildGrid !== 'undefined' && this.Grid.isChildGrid && typeof this.Grid.ParentCell !== 'undefined' && this.Grid.ParentCell != null) {\n                //Split row only if row height exceeds page height and AllowRowBreakAcrossPages is true.\n                // if (calculatedHeight + this.Grid.ParentCell.row.grid.style.cellPadding.bottom +\n                //             this.Grid.ParentCell.row.grid.style.cellPadding.top > this.currentPageBounds.height) {\n                //     if (this.Grid.allowRowBreakAcrossPages) {\n                //         result.isFinish = true;\n                //         if ( this.Grid.isChildGrid && row.rowBreakHeight > 0 ) {\n                //             if (this.Grid.ParentCell.row.grid.style.cellPadding !== null) {\n                //                 this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                //             }\n                //             this.currentBounds.x = this.startLocation.x;\n                //         }\n                //         result.bounds = this.currentBounds ;\n                //         this.drawRowWithBreak(result, row, calculatedHeight);\n                //     } else {\n                //         //If AllowRowBreakAcrossPages is not true, draw the row till it fits the page.                       \n                //         if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                //             this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                //             calculatedHeight = this.currentBounds.height - this.currentBounds.y -\n                //                     this.Grid.ParentCell.row.grid.style.cellPadding.bottom;\n                //         }\n                //         result.isFinish = false;\n                //         this.drawRow( row, result, calculatedHeight);\n                //     }\n                // } else\n                if (this.currentBounds.y + this.Grid.ParentCell.row.grid.style.cellPadding.bottom + calculatedHeight >\n                    this.currentPageBounds.height || this.currentBounds.y + this.Grid.ParentCell.row.grid.style.cellPadding.bottom\n                    + calculatedHeight > this.currentBounds.height || this.currentBounds.y +\n                    this.Grid.ParentCell.row.grid.style.cellPadding.bottom + rowHeightWithSpan > this.currentPageBounds.height) {\n                    //If a row is repeated and still cannot fit in page, proceed draw.\n                    if (typeof this.Grid.ParentCell.row.grid.LayoutFormat !== 'undefined' && this.Grid.ParentCell.row.grid.LayoutFormat.break === PdfLayoutBreakType.FitPage) {\n                        PdfGridLayouter.repeatRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                        this.Grid.splitChildRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                    }\n                    if (PdfGridLayouter.repeatRowIndex > -1 && PdfGridLayouter.repeatRowIndex === row.rowIndex) {\n                        if (this.Grid.allowRowBreakAcrossPages) {\n                            result_1.isFinish = true;\n                            // if (this.Grid.isChildGrid && row.rowBreakHeightValue > 0) {\n                            //     // if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                            //     //     this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                            //     // }\n                            //     this.currentBounds.x = this.startLocation.x;\n                            // }\n                            result_1.bounds = this.currentBounds;\n                            this.drawRowWithBreak(result_1, row, calculatedHeight);\n                            row.repeatFlag = true;\n                            row.repeatRowNumber = PdfGridLayouter.repeatRowIndex;\n                        }\n                        // else {\n                        //     result.isFinish = false;\n                        //     row.repeatFlag = false;\n                        //     this.drawRow( row, result, calculatedHeight);\n                        // }\n                    }\n                    // else {\n                    //     result.isFinish = false;\n                    // }\n                }\n                else {\n                    result_1.isFinish = true;\n                    if (row.grid.ParentCell.row.rowBreakHeightValue > 0) {\n                        row.repeatFlag = true;\n                    }\n                    else {\n                        row.repeatFlag = false;\n                        calculatedHeight = row.height;\n                    }\n                    if (this.Grid.isChildGrid && row.rowBreakHeight > 0) {\n                        if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                            calculatedHeight += this.Grid.ParentCell.row.grid.style.cellPadding.bottom;\n                        }\n                    }\n                    this.drawRow(row, result_1, calculatedHeight);\n                }\n            }\n            else {\n                //Split row only if row height exceeds page height and AllowRowBreakAcrossPages is true.\n                if (calculatedHeight > this.currentPageBounds.height) {\n                    if (this.Grid.allowRowBreakAcrossPages) {\n                        result_1.isFinish = true;\n                        //result.bounds = this.currentBounds;\n                        this.drawRowWithBreak(result_1, row, calculatedHeight);\n                        row.isrowFinish = true;\n                        row.repeatFlag = true;\n                        if (row.grid.splitChildRowIndex !== -1) {\n                            result_1.isFinish = false;\n                        }\n                    }\n                    // else {\n                    //     //If AllowRowBreakAcrossPages is not true, draw the row till it fits the page.\n                    //     result.isFinish = false;\n                    //     this.drawRow( row, result, calculatedHeight);\n                    // }\n                }\n                else if (this.currentBounds.y + calculatedHeight > this.currentPageBounds.height ||\n                    this.currentBounds.y + calculatedHeight > (this.currentBounds.height + this.startLocation.y) ||\n                    this.currentBounds.y + rowHeightWithSpan > this.currentPageBounds.height) {\n                    // If a row is repeated and still cannot fit in page, proceed draw.\n                    var isFit = false;\n                    if ((this.Grid.allowRowBreakAcrossPages && !this.Grid.repeatHeader && !row.isRowHeightSet && !row.rowMergeComplete)) {\n                        if (this.Grid.LayoutFormat !== null && this.Grid.LayoutFormat.paginateBounds.height > 0) {\n                            isFit = this.isFitToCell((this.currentBounds.height + this.startLocation.y) - this.currentBounds.y, this.Grid, row);\n                        }\n                        else\n                            isFit = this.isFitToCell(this.currentPageBounds.height - this.currentBounds.y, this.Grid, row);\n                        if (isFit) {\n                            this.isPaginate = true;\n                        }\n                    }\n                    else if (this.Grid.allowRowBreakAcrossPages && this.Grid.LayoutFormat != null && this.Grid.LayoutFormat.layout == PdfLayoutType.Paginate && this.Grid.LayoutFormat.break != PdfLayoutBreakType.FitElement && row.isRowHeightSet && this.currentBounds.y + height > this.currentPageBounds.height) {\n                        isFit = this.isFitToCell(this.currentPageBounds.height - this.currentBounds.y, this.Grid, row);\n                        if (!isFit)\n                            isFit = !(this.slr !== null && this.slr.actualSize.height == 0 && this.slr.remainder != null && this.slr.remainder.length > 0 && this.remainderText == this.slr.remainder);\n                        if (isFit && this.slr != null && this.slr.lineCount > 1) {\n                            //It may text cutoff issue\n                            isFit = false;\n                        }\n                        this.remainderText = null;\n                    }\n                    if (PdfGridLayouter.repeatRowIndex > -1 && PdfGridLayouter.repeatRowIndex === row.rowIndex || isFit) {\n                        if (this.Grid.allowRowBreakAcrossPages) {\n                            result_1.isFinish = true;\n                            this.drawRowWithBreak(result_1, row, calculatedHeight);\n                            row.repeatFlag = true;\n                            row.repeatRowNumber = PdfGridLayouter.repeatRowIndex;\n                            if (row.grid.splitChildRowIndex !== -1) {\n                                result_1.isFinish = false;\n                            }\n                        }\n                        else {\n                            result_1.isFinish = false;\n                            this.drawRow(row, result_1, calculatedHeight);\n                        }\n                    }\n                    else {\n                        result_1.isFinish = false;\n                    }\n                }\n                else {\n                    result_1.isFinish = true;\n                    this.drawRow(row, result_1, calculatedHeight);\n                    row.repeatFlag = false;\n                }\n            }\n            return result_1;\n        }\n        else {\n            var skipcell = false;\n            var loc = new PointF(this.currentBounds.x, this.currentBounds.y);\n            // if (row.grid.isChildGrid && row.grid.allowRowBreakAcrossPages && this.startLocation.x !== this.currentBounds.x && row.width <\n            //                 this.currentPage.getClientSize().width) {\n            //     location.x = this.startLocation.x;\n            // }\n            result.bounds = new RectangleF(loc, new SizeF(0, 0));\n            height = this.ReCalculateHeight(row, height);\n            for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n                var cancelSpans = ((i > this.cellEndIndex + 1) && (row.cells.getCell(i).columnSpan > 1));\n                // let cancelSpans : boolean = false;\n                if (!cancelSpans) {\n                    for (var j = 1; j < row.cells.getCell(i).columnSpan; j++) {\n                        row.cells.getCell(i + j).isCellMergeContinue = true;\n                    }\n                }\n                var size = new SizeF(this.Grid.columns.getColumn(i).width, height);\n                // if (size.width > this.currentGraphics.clientSize.width) {\n                //     size.width = this.currentGraphics.clientSize.width;\n                // }\n                // if (this.Grid.isChildGrid && this.Grid.style.allowHorizontalOverflow) {\n                //     if (size.width >= this.currentGraphics.clientSize.width) {\n                //         size.width -= 2 * this.currentBounds.x;\n                //     }\n                // }\n                /* tslint:disable */\n                if (!this.CheckIfDefaultFormat(this.Grid.columns.getColumn(i).format) &&\n                    this.CheckIfDefaultFormat(row.cells.getCell(i).stringFormat)) {\n                    row.cells.getCell(i).stringFormat = this.Grid.columns.getColumn(i).format;\n                }\n                var cellstyle = row.cells.getCell(i).style;\n                var tempValue = ((typeof row.cells.getCell(i).value === 'string' &&\n                    row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '');\n                row.cells.getCell(i).style = this.RaiseBeforeCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(loc, size), tempValue, cellstyle);\n                //row.cells.getCell(i).style = cellstyle;\n                if (!skipcell) {\n                    if (row.cells.getCell(i).value instanceof PdfGrid) {\n                        var grid = row.cells.getCell(i).value;\n                        grid.parentCellIndex = i;\n                    }\n                    var stringResult = row.cells.getCell(i).draw(this.currentGraphics, new RectangleF(loc, size), cancelSpans);\n                    if (row.grid.style.allowHorizontalOverflow && (row.cells.getCell(i).columnSpan > this.cellEndIndex ||\n                        i + row.cells.getCell(i).columnSpan > this.cellEndIndex + 1) && this.cellEndIndex < row.cells.count - 1) {\n                        row.rowOverflowIndex = this.cellEndIndex;\n                    }\n                    if (row.grid.style.allowHorizontalOverflow && (row.rowOverflowIndex > 0 && (row.cells.getCell(i).columnSpan >\n                        this.cellEndIndex || i + row.cells.getCell(i).columnSpan > this.cellEndIndex + 1)) &&\n                        row.cells.getCell(i).columnSpan - this.cellEndIndex + i - 1 > 0) {\n                        row.cells.getCell(row.rowOverflowIndex + 1).value = stringResult !== null ? (stringResult.remainder !== undefined) ?\n                            stringResult.remainder : '' : '';\n                        row.cells.getCell(row.rowOverflowIndex + 1).stringFormat = row.cells.getCell(i).stringFormat;\n                        row.cells.getCell(row.rowOverflowIndex + 1).style = row.cells.getCell(i).style;\n                        row.cells.getCell(row.rowOverflowIndex + 1).columnSpan = row.cells.getCell(i).columnSpan - this.cellEndIndex + i - 1;\n                    }\n                }\n                /* tslint:enable */\n                tempValue = ((typeof row.cells.getCell(i).value === 'string' &&\n                    row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '');\n                if (!cancelSpans) {\n                    this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(loc, size), tempValue, row.cells.getCell(i).style);\n                }\n                if (row.cells.getCell(i).value instanceof PdfGrid) {\n                    var grid = row.cells.getCell(i).value;\n                    if (this.Grid.columns.getColumn(i).width >= this.currentGraphics.clientSize.width) {\n                        loc.x = grid.rowLayoutBoundsWidth;\n                        loc.x += grid.style.cellSpacing;\n                    }\n                    else {\n                        loc.x += this.Grid.columns.getColumn(i).width;\n                    }\n                }\n                else {\n                    loc.x += this.Grid.columns.getColumn(i).width;\n                }\n            }\n            if (!row.rowMergeComplete || row.isRowHeightSet) {\n                this.currentBounds.y += height;\n            }\n            result.bounds = new RectangleF(new PointF(result.bounds.x, result.bounds.y), new SizeF(loc.x, loc.y));\n        }\n    };\n    PdfGridLayouter.prototype.isFitToCell = function (currentHeight, grid, gridRow) {\n        var isFit = false;\n        var layouter = new PdfStringLayouter();\n        for (var i = 0; i < gridRow.cells.count; i++) {\n            var cell = gridRow.cells.getCell(i);\n            if (typeof cell.value !== 'undefined' && cell.value !== null && typeof cell.value === 'string') {\n                var font = null;\n                if (typeof cell.style.font !== 'undefined' && cell.style.font != null) {\n                    font = cell.style.font;\n                }\n                else if (typeof cell.row.style.font !== 'undefined' && cell.row.style.font != null) {\n                    font = cell.row.style.font;\n                }\n                else if (typeof cell.row.grid.style.font !== 'undefined' && cell.row.grid.style.font != null) {\n                    font = cell.row.grid.style.font;\n                }\n                else {\n                    font = PdfDocument.defaultFont;\n                }\n                this.remainderText = cell.value;\n                var width = cell.width;\n                var column = grid.columns.getColumn(i);\n                if (column.isCustomWidth && cell.width > column.width) {\n                    width = column.width;\n                }\n                this.slr = layouter.layout(cell.value, font, cell.stringFormat, new SizeF(width, currentHeight), false, this.currentPageBounds);\n                var height = this.slr.actualSize.height;\n                if (cell.value !== '' && height === 0) {\n                    isFit = false;\n                    break;\n                }\n                if (cell.style !== null && cell.style.borders !== null && cell.style.borders.top !== null && cell.style.borders.bottom !== null) {\n                    height += (cell.style.borders.top.width + cell.style.borders.bottom.width) * 2;\n                }\n                if (this.slr.lineCount > 1 && cell.stringFormat != null && cell.stringFormat.lineSpacing != 0) {\n                    height += (this.slr.lineCount - 1) * (cell.style.stringFormat.lineSpacing);\n                }\n                if (cell.style.cellPadding === null) {\n                    height += (grid.style.cellPadding.top + grid.style.cellPadding.bottom);\n                }\n                else {\n                    height += (grid.style.cellPadding.top + grid.style.cellPadding.bottom);\n                }\n                height += grid.style.cellSpacing;\n                if (currentHeight > height || (typeof this.slr.remainder !== 'undefined' && this.slr.remainder !== null)) {\n                    isFit = true;\n                    break;\n                }\n            }\n        }\n        return isFit;\n    };\n    PdfGridLayouter.prototype.drawRowWithBreak = function (result, row, calculateHeight) {\n        var location = new PointF(this.currentBounds.x, this.currentBounds.y);\n        if (row.grid.isChildGrid && row.grid.allowRowBreakAcrossPages && this.startLocation.x !== this.currentBounds.x) {\n            location.x = this.startLocation.x;\n        }\n        result.bounds = new RectangleF(location, new SizeF(0, 0));\n        this.gridHeight = row.rowBreakHeight > 0 ? this.currentPageBounds.height : 0;\n        // Calculate the remaining height.\n        if (row.grid.style.cellPadding.top + this.currentBounds.y + row.grid.style.cellPadding.bottom < this.currentPageBounds.height) {\n            row.rowBreakHeight = this.currentBounds.y + calculateHeight - this.currentPageBounds.height;\n        }\n        // else {\n        //     row.rowBreakHeight = calculateHeight;\n        //     result.isFinish = false;\n        //     return;\n        // }\n        // No need to explicit break if the row height is equal to grid height.\n        for (var i = 0; i < row.cells.count; i++) {\n            var cell = row.cells.getCell(i);\n            var cellHeight = cell.measureHeight();\n            if (cellHeight === calculateHeight && cell.value instanceof PdfGrid) {\n                row.rowBreakHeight = 0;\n            }\n            // else if (cellHeight === calculateHeight && (cell.value as PdfGrid) === null) {\n            //     row.rowBreakHeight = this.currentBounds.y + calculateHeight - this.currentPageBounds.height;\n            // }\n        }\n        for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n            var gridColumnWidth = this.Grid.columns.getColumn(i).width;\n            var cancelSpans = ((row.cells.getCell(i).columnSpan + i > this.cellEndIndex + 1) &&\n                (row.cells.getCell(i).columnSpan > 1));\n            if (!cancelSpans) {\n                for (var k = 1; k < row.cells.getCell(i).columnSpan; k++) {\n                    row.cells.getCell(i + k).isCellMergeContinue = true;\n                    gridColumnWidth += this.Grid.columns.getColumn(i + k).width;\n                }\n            }\n            var size = new SizeF(gridColumnWidth, this.gridHeight > 0.0 ? this.gridHeight :\n                this.currentPageBounds.height);\n            // if (size.width === 0) {\n            //     size = new SizeF(row.cells.getCell(i).width, size.height);\n            // }\n            // if (!this.CheckIfDefaultFormat(this.Grid.columns.getColumn(i).format) &&\n            //         this.CheckIfDefaultFormat((row.cells.getCell(i).stringFormat))) {\n            //     row.cells.getCell(i).stringFormat = this.Grid.columns.getColumn(i).format;\n            // }\n            var cellstyle1 = row.cells.getCell(i).style;\n            row.cells.getCell(i).style = cellstyle1;\n            var skipcell = false;\n            var stringResult = null;\n            if (!skipcell) {\n                row.cells.getCell(i)._rowHeight = row.height;\n                stringResult = row.cells.getCell(i).draw(this.currentGraphics, new RectangleF(location, size), cancelSpans);\n            }\n            //If still row is to be drawn, set cell finished drawing cell as false and update the text to be drawn.\n            if (row.rowBreakHeight > 0.0) {\n                if (stringResult != null && typeof stringResult.remainder !== 'undefined') {\n                    row.cells.getCell(i).FinishedDrawingCell = false;\n                    row.cells.getCell(i).remainingString = stringResult.remainder == null ? ' ' : stringResult.remainder;\n                    row.rowBreakHeight = calculateHeight - stringResult.actualSize.height;\n                }\n            }\n            result.isFinish = (!result.isFinish) ? result.isFinish : row.cells.getCell(i).FinishedDrawingCell;\n            // let tempValue : string = ((typeof row.cells.getCell(i).value === 'string' &&\n            //row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '') as string;\n            // if (!cancelSpans) {\n            //     // this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i,\n            //     //           new RectangleF(location, size), tempValue, row.cells.getCell(i).style);            \n            //     this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location, size),\n            //                             (row.cells.getCell(i).value as string) ? row.cells.getCell(i).value.toString() : ' ',\n            //                             row.cells.getCell(i).style);\n            //     }                \n            if (row.cells.getCell(i).value instanceof PdfGrid) {\n                var grid = row.cells.getCell(i).value;\n                this.rowBreakPageHeightCellIndex = i;\n                // row.cells.getCell(i).pageCount = grid.listOfNavigatePages.length;\n                // for (let j : number = 0;j<grid.listOfNavigatePages.length;j++){\n                //     let pageIndex : number =grid.listOfNavigatePages.indexOf(j);\n                //             this.Grid.listOfNavigatePages.push(pageIndex);\n                //     }\n                if (this.Grid.columns.getColumn(i).width >= this.currentGraphics.clientSize.width) {\n                    location.x = this.rowLayoutBoundsWidth;\n                    location.x += grid.style.cellSpacing;\n                }\n                else {\n                    location.x += this.Grid.columns.getColumn(i).width;\n                }\n            }\n            else {\n                location.x += this.Grid.columns.getColumn(i).width;\n            }\n        }\n        this.currentBounds.y += this.gridHeight > 0.0 ? this.gridHeight : calculateHeight;\n        result.bounds = new RectangleF(new PointF(result.bounds.x, result.bounds.y), new SizeF(location.x, location.y));\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    PdfGridLayouter.repeatRowIndex = -1;\n    return PdfGridLayouter;\n}(ElementLayouter));\nexport { PdfGridLayouter };\n// recalculateBounds : boolean, clientSize : SizeF\n//Implementation\n/**\n * `Initializes` internal data.\n * @private\n */\n//Internal declaration\nvar PdfGridLayoutResult = /** @class */ (function (_super) {\n    __extends(PdfGridLayoutResult, _super);\n    /**\n     * Constructor\n     * @private\n     */\n    function PdfGridLayoutResult(page, bounds) {\n        return _super.call(this, page, bounds) || this;\n    }\n    return PdfGridLayoutResult;\n}(PdfLayoutResult));\nexport { PdfGridLayoutResult };\n/**\n * `PdfGridLayoutFormat` class represents a flexible grid that consists of columns and rows.\n */\nvar PdfGridLayoutFormat = /** @class */ (function (_super) {\n    __extends(PdfGridLayoutFormat, _super);\n    /**\n     * Initializes a new instance of the `PdfGridLayoutFormat` class.\n     * @private\n     */\n    function PdfGridLayoutFormat(baseFormat) {\n        return _super.call(this, baseFormat) || this;\n    }\n    return PdfGridLayoutFormat;\n}(PdfLayoutFormat));\nexport { PdfGridLayoutFormat };\nvar GridCellEventArgs = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initialize a new instance for `GridCellEventArgs` class.\n     * @private\n     */\n    function GridCellEventArgs(graphics, rowIndex, cellIndex, bounds, value) {\n        this.gridRowIndex = rowIndex;\n        this.gridCellIndex = cellIndex;\n        this.internalValue = value;\n        this.gridBounds = bounds;\n        this.pdfGraphics = graphics;\n    }\n    Object.defineProperty(GridCellEventArgs.prototype, \"rowIndex\", {\n        // Properties\n        /**\n         * Gets the value of current `row index`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"cellIndex\", {\n        /**\n         * Gets the value of current `cell index`.\n         * @private\n         */\n        get: function () {\n            return this.gridCellIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"value\", {\n        /**\n         * Gets the actual `value` of current cell.\n         * @private\n         */\n        get: function () {\n            return this.internalValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"bounds\", {\n        /**\n         * Gets the `bounds` of current cell.\n         * @private\n         */\n        get: function () {\n            return this.gridBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"graphics\", {\n        /**\n         * Gets the instance of `current graphics`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return GridCellEventArgs;\n}());\nexport { GridCellEventArgs };\nvar PdfGridBeginCellDrawEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridBeginCellDrawEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `StartCellLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridBeginCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style) {\n        var _this = _super.call(this, graphics, rowIndex, cellIndex, bounds, value) || this;\n        _this.style = style;\n        return _this;\n    }\n    Object.defineProperty(PdfGridBeginCellDrawEventArgs.prototype, \"skip\", {\n        // Properties\n        /**\n         * Gets or sets a value indicating whether the value of this cell should be `skipped`.\n         * @private\n         */\n        get: function () {\n            return this.bSkip;\n        },\n        set: function (value) {\n            this.bSkip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridBeginCellDrawEventArgs.prototype, \"style\", {\n        /**\n         * Gets or sets a `style` value of the cell.\n         * @private\n         */\n        get: function () {\n            return this.cellStyle;\n        },\n        set: function (value) {\n            this.cellStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridBeginCellDrawEventArgs;\n}(GridCellEventArgs));\nexport { PdfGridBeginCellDrawEventArgs };\nvar PdfGridEndCellDrawEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridEndCellDrawEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfGridEndCellLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridEndCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style) {\n        var _this = _super.call(this, graphics, rowIndex, cellIndex, bounds, value) || this;\n        _this.cellStyle = style;\n        return _this;\n    }\n    Object.defineProperty(PdfGridEndCellDrawEventArgs.prototype, \"style\", {\n        // Propertise\n        /**\n         * Get the `PdfGridCellStyle`.\n         * @private\n         */\n        get: function () {\n            return this.cellStyle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridEndCellDrawEventArgs;\n}(GridCellEventArgs));\nexport { PdfGridEndCellDrawEventArgs };\nvar PdfCancelEventArgs = /** @class */ (function () {\n    function PdfCancelEventArgs() {\n    }\n    Object.defineProperty(PdfCancelEventArgs.prototype, \"cancel\", {\n        // Properties\n        /**\n         * Gets and Sets the value of `cancel`.\n         * @private\n         */\n        get: function () {\n            return this.isCancel;\n        },\n        set: function (value) {\n            this.isCancel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCancelEventArgs;\n}());\nexport { PdfCancelEventArgs };\nvar BeginPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(BeginPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `BeginPageLayoutEventArgs` class with the specified rectangle and page.\n     * @private\n     */\n    function BeginPageLayoutEventArgs(bounds, page) {\n        var _this = _super.call(this) || this;\n        _this.bounds = bounds;\n        _this.pdfPage = page;\n        return _this;\n    }\n    Object.defineProperty(BeginPageLayoutEventArgs.prototype, \"bounds\", {\n        // Properties\n        /**\n         * Gets or sets value that indicates the lay outing `bounds` on the page.\n         * @private\n         */\n        get: function () {\n            return this.cellBounds;\n        },\n        set: function (value) {\n            this.cellBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BeginPageLayoutEventArgs.prototype, \"page\", {\n        /**\n         * Gets the `page` where the lay outing should start.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return BeginPageLayoutEventArgs;\n}(PdfCancelEventArgs));\nexport { BeginPageLayoutEventArgs };\n/**\n * `EndPageLayoutEventArgs` class is alternate for end page layout events.\n */\nvar EndPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(EndPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `EndPageLayoutEventArgs` class. with the specified 'PdfLayoutResult'.\n     * @private\n     */\n    function EndPageLayoutEventArgs(result) {\n        var _this = _super.call(this) || this;\n        _this.layoutResult = result;\n        return _this;\n    }\n    Object.defineProperty(EndPageLayoutEventArgs.prototype, \"result\", {\n        // Properties\n        /**\n         * Gets the lay outing `result` of the page.\n         * @private\n         */\n        get: function () {\n            return this.layoutResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EndPageLayoutEventArgs.prototype, \"nextPage\", {\n        /**\n         * Gets or sets a value indicating the `next page` where the element should be layout.\n         * @private\n         */\n        get: function () {\n            return this.nextPdfPage;\n        },\n        set: function (value) {\n            this.nextPdfPage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EndPageLayoutEventArgs;\n}(PdfCancelEventArgs));\nexport { EndPageLayoutEventArgs };\n/**\n * `PdfGridBeginPageLayoutEventArgs` class is alternate for begin page layout events.\n */\nvar PdfGridBeginPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridBeginPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initialize a new instance of `PdfGridBeginPageLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridBeginPageLayoutEventArgs(bounds, page, startRow) {\n        var _this = _super.call(this, bounds, page) || this;\n        _this.startRow = startRow;\n        return _this;\n    }\n    Object.defineProperty(PdfGridBeginPageLayoutEventArgs.prototype, \"startRowIndex\", {\n        // Properties\n        /**\n         * Gets the `start row index`.\n         * @private\n         */\n        get: function () {\n            return this.startRow;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridBeginPageLayoutEventArgs;\n}(BeginPageLayoutEventArgs));\nexport { PdfGridBeginPageLayoutEventArgs };\n/**\n * `PdfGridEndPageLayoutEventArgs` class is alternate for begin page layout events.\n */\nvar PdfGridEndPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridEndPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initialize a new instance of `PdfGridEndPageLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridEndPageLayoutEventArgs(result) {\n        return _super.call(this, result) || this;\n    }\n    return PdfGridEndPageLayoutEventArgs;\n}(EndPageLayoutEventArgs));\nexport { PdfGridEndPageLayoutEventArgs };\nvar RowLayoutResult = /** @class */ (function () {\n    //Constructors\n    /**\n     * Initializes a new instance of the `RowLayoutResult` class.\n     * @private\n     */\n    function RowLayoutResult() {\n        this.layoutedBounds = new RectangleF(0, 0, 0, 0);\n    }\n    Object.defineProperty(RowLayoutResult.prototype, \"isFinish\", {\n        /**\n         * Gets or sets a value indicating whether this instance `is finish`.\n         * @private\n         */\n        get: function () {\n            return this.bIsFinished;\n        },\n        set: function (value) {\n            this.bIsFinished = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RowLayoutResult.prototype, \"bounds\", {\n        /**\n         * Gets or sets the `bounds`.\n         * @private\n         */\n        get: function () {\n            return this.layoutedBounds;\n        },\n        set: function (value) {\n            this.layoutedBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RowLayoutResult;\n}());\nexport { RowLayoutResult };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * ShapeLayouter.ts class for EJ2-PDF\n * @private\n */\nimport { ElementLayouter, PdfLayoutResult } from './element-layouter';\nimport { RectangleF, PointF } from './../../../drawing/pdf-drawing';\nimport { PdfLayoutBreakType, PdfLayoutType } from './../../figures/enum';\nimport { BeginPageLayoutEventArgs, EndPageLayoutEventArgs } from './../../../structured-elements/grid/layout/grid-layouter';\n/**\n * ShapeLayouter class.\n * @private\n */\nvar ShapeLayouter = /** @class */ (function (_super) {\n    __extends(ShapeLayouter, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `ShapeLayouter` class.\n     * @private\n     */\n    function ShapeLayouter(element) {\n        var _this = _super.call(this, element) || this;\n        // Fields\n        /**\n         * Initializes the object to store `older form elements` of previous page.\n         * @default 0\n         * @private\n         */\n        _this.olderPdfForm = 0;\n        /**\n         * The `bounds` of the shape element.\n         * * @default new RectangleF()\n         * @private\n         */\n        _this.shapeBounds = new RectangleF();\n        /**\n         * Total Page size of the web page.\n         * * @default 0\n         * @private\n         */\n        _this.totalPageSize = 0;\n        return _this;\n    }\n    Object.defineProperty(ShapeLayouter.prototype, \"element\", {\n        // Properties\n        /**\n         * Gets shape element.\n         * @private\n         */\n        get: function () {\n            return this.elements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Layouts the element.\n     * @private\n     */\n    ShapeLayouter.prototype.layoutInternal = function (param) {\n        var currentPage = param.page;\n        var currentBounds = param.bounds;\n        var shapeLayoutBounds = this.element.getBounds();\n        shapeLayoutBounds.x = 0;\n        shapeLayoutBounds.y = 0;\n        /* tslint:disable */\n        var isEmpty = (this.shapeBounds.x === this.shapeBounds.y && this.shapeBounds.y === this.shapeBounds.width && this.shapeBounds.width === this.shapeBounds.height && this.shapeBounds.height === 0) ? true : false;\n        /* tslint:enable */\n        if ((this.isPdfGrid) && (!(isEmpty))) {\n            shapeLayoutBounds = this.shapeBounds;\n        }\n        var result = null;\n        var pageResult = new ShapeLayoutResult();\n        pageResult.page = currentPage;\n        /*tslint:disable:no-constant-condition */\n        while (true) {\n            // Raise event.\n            var result1 = this.raiseBeforePageLayout(currentPage, currentBounds);\n            currentBounds = result1.currentBounds;\n            var endArgs = null;\n            if (!result1.cancel) {\n                pageResult = this.layoutOnPage(currentPage, currentBounds, shapeLayoutBounds, param);\n                // Raise event.\n                endArgs = this.raiseEndPageLayout(pageResult);\n                result1.cancel = (endArgs === null) ? false : endArgs.cancel;\n            }\n            if (!pageResult.end && !result1.cancel) {\n                currentBounds = this.getPaginateBounds(param);\n                shapeLayoutBounds = this.getNextShapeBounds(shapeLayoutBounds, pageResult);\n                currentPage = (endArgs === null || endArgs.nextPage === null) ?\n                    this.getNextPage(currentPage) : endArgs.nextPage;\n                if (this.isPdfGrid) {\n                    result = this.getLayoutResult(pageResult);\n                    break;\n                }\n            }\n            else {\n                result = this.getLayoutResult(pageResult);\n                break;\n            }\n        }\n        return result;\n    };\n    /**\n     * Raises BeforePageLayout event.\n     * @private\n     */\n    ShapeLayouter.prototype.raiseBeforePageLayout = function (currentPage, currentBounds) {\n        var cancel = false;\n        if (this.element.raiseBeginPageLayout) {\n            var args = new BeginPageLayoutEventArgs(currentBounds, currentPage);\n            this.element.onBeginPageLayout(args);\n            cancel = args.cancel;\n            currentBounds = args.bounds;\n        }\n        return { currentBounds: currentBounds, cancel: cancel };\n    };\n    /**\n     * Raises PageLayout event if needed.\n     * @private\n     */\n    ShapeLayouter.prototype.raiseEndPageLayout = function (pageResult) {\n        var args = null;\n        if (this.element.raiseEndPageLayout) {\n            var res = this.getLayoutResult(pageResult);\n            args = new EndPageLayoutEventArgs(res);\n            this.element.onEndPageLayout(args);\n        }\n        return args;\n    };\n    /**\n     * Creates layout result.\n     * @private\n     */\n    ShapeLayouter.prototype.getLayoutResult = function (pageResult) {\n        var result = new PdfLayoutResult(pageResult.page, pageResult.bounds);\n        return result;\n    };\n    /**\n     * Calculates the next active shape bounds.\n     * @private\n     */\n    ShapeLayouter.prototype.getNextShapeBounds = function (shapeLayoutBounds, pageResult) {\n        var layoutedBounds = pageResult.bounds;\n        shapeLayoutBounds.y = (shapeLayoutBounds.y + layoutedBounds.height);\n        shapeLayoutBounds.height = (shapeLayoutBounds.height - layoutedBounds.height);\n        return shapeLayoutBounds;\n    };\n    /**\n     * Layouts the element on the current page.\n     * @private\n     */\n    ShapeLayouter.prototype.layoutOnPage = function (currentPage, curBounds, sBounds, param) {\n        var result = new ShapeLayoutResult();\n        curBounds = this.checkCorrectCurrentBounds(currentPage, curBounds, param);\n        var fitToPage = this.fitsToBounds(curBounds, sBounds);\n        var canDraw = !((param.format.break === PdfLayoutBreakType.FitElement)\n            && (!fitToPage && (currentPage === param.page)));\n        var shapeFinished = false;\n        if (canDraw) {\n            var drawRectangle = this.getDrawBounds(curBounds, sBounds);\n            this.drawShape(currentPage.graphics, curBounds, drawRectangle);\n            result.bounds = this.getPageResultBounds(curBounds, sBounds);\n            shapeFinished = ((curBounds.height) >= (sBounds.height));\n        }\n        result.end = (shapeFinished || (param.format.layout === PdfLayoutType.OnePage));\n        result.page = currentPage;\n        return result;\n    };\n    /**\n     * Returns Rectangle for element drawing on the page.\n     * @private\n     */\n    ShapeLayouter.prototype.getDrawBounds = function (currentBounds, shapeLayoutBounds) {\n        var result = currentBounds;\n        result.y = (result.y - shapeLayoutBounds.y);\n        result.height = (result.height + shapeLayoutBounds.y);\n        return result;\n    };\n    /**\n     * Draws the shape.\n     * @private\n     */\n    ShapeLayouter.prototype.drawShape = function (g, currentBounds, drawRectangle) {\n        var gState = g.save();\n        try {\n            g.setClip(currentBounds);\n            this.element.drawGraphicsHelper(g, new PointF(drawRectangle.x, drawRectangle.y));\n        }\n        finally {\n            g.restore(gState);\n        }\n    };\n    /**\n     * Corrects current bounds on the page.\n     * @protected\n     */\n    ShapeLayouter.prototype.checkCorrectCurrentBounds = function (currentPage, curBounds, param) {\n        var pageSize = currentPage.graphics.clientSize;\n        curBounds.width = (curBounds.width > 0) ? curBounds.width : (pageSize.width - curBounds.x);\n        curBounds.height = (curBounds.height > 0) ? curBounds.height : (pageSize.height - curBounds.y);\n        if (this.isPdfGrid) {\n            curBounds.height = (curBounds.height - this.bottomCellPadding);\n        }\n        return curBounds;\n    };\n    /**\n     * Calculates bounds where the shape was layout on the page.\n     * @private\n     */\n    ShapeLayouter.prototype.getPageResultBounds = function (currentBounds, shapeLayoutBounds) {\n        var result = currentBounds;\n        result.height = Math.min(result.height, shapeLayoutBounds.height);\n        return result;\n    };\n    /**\n     * Checks whether shape rectangle fits to the lay outing bounds.\n     * @private\n     */\n    ShapeLayouter.prototype.fitsToBounds = function (currentBounds, shapeLayoutBounds) {\n        var fits = (shapeLayoutBounds.height <= currentBounds.height);\n        return fits;\n    };\n    /**\n     * Initializes the offset `index`.\n     * * @default 0\n     * @private\n     */\n    ShapeLayouter.index = 0;\n    /**\n     * Initializes the `difference in page height`.\n     * * @default 0\n     * @private\n     */\n    ShapeLayouter.splitDiff = 0;\n    /**\n     * Determines the `end of Vertical offset` values.\n     * * @default false\n     * @private\n     */\n    ShapeLayouter.last = false;\n    /**\n     * Determines the document link annotation `border width`.\n     * * @default 0\n     * @private\n     */\n    ShapeLayouter.borderWidth = 0;\n    return ShapeLayouter;\n}(ElementLayouter));\nexport { ShapeLayouter };\n/**\n * Contains lay outing result settings.\n * @private\n */\nvar ShapeLayoutResult = /** @class */ (function () {\n    function ShapeLayoutResult() {\n    }\n    return ShapeLayoutResult;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLayoutElement } from './../layout-element';\nimport { ShapeLayouter } from './shape-layouter';\n/**\n * Base class for the main shapes.\n * @private\n */\nvar PdfShapeElement = /** @class */ (function (_super) {\n    __extends(PdfShapeElement, _super);\n    function PdfShapeElement() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    // methods\n    /**\n     * Gets the bounds.\n     * @private\n     */\n    PdfShapeElement.prototype.getBounds = function () {\n        var rect = this.getBoundsInternal();\n        return rect;\n    };\n    /**\n     * `drawGraphicsHelper` the graphics.\n     * @public\n     */\n    PdfShapeElement.prototype.drawGraphicsHelper = function (graphics, location) {\n        if ((graphics == null)) {\n            throw new Error('ArgumentNullException :graphics');\n        }\n        this.drawShapeHelper(graphics, location.x, location.y);\n    };\n    /**\n     * `drawShapeHelper` the graphics.\n     * @private\n     */\n    PdfShapeElement.prototype.drawShapeHelper = function (graphics, x, y) {\n        var bNeedSave = (x !== 0.5 || y !== 0.5);\n        var gState = null;\n        // Translate co-ordinates.\n        if (bNeedSave) {\n            // Save state.\n            gState = graphics.save();\n            graphics.translateTransform(x, y);\n        }\n        this.drawInternal(graphics);\n        if (bNeedSave) {\n            // Restore state.\n            graphics.restore(gState);\n        }\n    };\n    /**\n     * Layouts the element.\n     * @private\n     */\n    PdfShapeElement.prototype.layout = function (param) {\n        var layouter = new ShapeLayouter(this);\n        var result = layouter.layout(param);\n        return result;\n    };\n    return PdfShapeElement;\n}(PdfLayoutElement));\nexport { PdfShapeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfDrawElement.ts class for EJ2-PDF\n */\nimport { PdfShapeElement } from './pdf-shape-element';\n/**\n * Represents a base class for all page graphics elements.\n */\nvar PdfDrawElement = /** @class */ (function (_super) {\n    __extends(PdfDrawElement, _super);\n    /**\n     * Initializes a new instance of the `PdfDrawElement` class.\n     * @protected\n     */\n    function PdfDrawElement(pen) {\n        var _this = _super.call(this) || this;\n        if (typeof pen !== 'undefined') {\n            _this.mpen = pen;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfDrawElement.prototype, \"pen\", {\n        // Properties\n        /**\n         * Gets or sets a pen that will be used to draw the element.\n         * @public\n         */\n        get: function () {\n            return this.mpen;\n        },\n        set: function (value) {\n            this.mpen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfDrawElement;\n}(PdfShapeElement));\nexport { PdfDrawElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfFillElement.ts class for EJ2-PDF\n */\nimport { PdfDrawElement } from './draw-element';\nimport { PdfPen } from './../../pdf-pen';\nimport { PdfColor } from './../../pdf-color';\n/**\n * Represents a base class for all page graphics elements.\n */\nvar PdfFillElement = /** @class */ (function (_super) {\n    __extends(PdfFillElement, _super);\n    /**\n     * Initializes a new instance of the `PdfFillElement` class.\n     * @protected\n     */\n    function PdfFillElement(arg1, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Internal variable to store pen.\n         * @private\n         */\n        _this.mbrush = null;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof PdfPen) {\n            _this = _super.call(this, arg1) || this;\n        }\n        else {\n            _this.mbrush = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfFillElement.prototype, \"brush\", {\n        // Properties\n        /**\n         * Gets or sets a brush of the element.\n         * @public\n         */\n        get: function () {\n            return this.mbrush;\n        },\n        set: function (value) {\n            this.mbrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Gets the pen. If both pen and brush are not explicitly defined, default pen will be used.\n     * @protected\n     */\n    PdfFillElement.prototype.obtainPen = function () {\n        return ((this.mbrush == null) && (this.pen == null)) ? new PdfPen(new PdfColor(0, 0, 0)) : this.pen;\n    };\n    return PdfFillElement;\n}(PdfDrawElement));\nexport { PdfFillElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Path.ts class for EJ2-PDF\n */\nimport { PdfBrush } from './../brushes/pdf-brush';\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutFormat } from './../figures/base/element-layouter';\nimport { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PathPointType } from './enum';\nimport { PdfFillElement } from './../figures/base/fill-element';\nimport { PdfFillMode } from './../enum';\n/**\n * `PdfPath` class Implements graphics path, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfPath = /** @class */ (function (_super) {\n    __extends(PdfPath, _super);\n    /**\n     * Initializes a new instance of the `PdfPath` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfPath(arg1, arg2, arg3, arg4) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Local variable to store the points.\n         * @private\n         */\n        _this.mpoints = null;\n        /**\n         * Local variable to store the path Types.\n         * @private\n         */\n        _this.mpathTypes = null;\n        /**\n         * Local variable to store the Start Figure.\n         * @private\n         */\n        _this.mStartFigure = true;\n        /**\n         * Local variable to store the fill Mode.\n         * @private\n         */\n        _this.mfillMode = PdfFillMode.Alternate;\n        /**\n         * Local variable to store the Beziers.\n         * @private\n         */\n        _this.isBeziers3 = false;\n        /**\n         * Local variable to store the xps.\n         * @private\n         */\n        _this.isXps = false;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof PdfPen) {\n            _this = _super.call(this, arg1) || this;\n            if (arg2 instanceof PdfBrush) {\n                _this = _super.call(this, arg1, arg2) || this;\n                _this.fillMode = arg3;\n            }\n            else if (arg2 !== null && typeof arg2 !== 'undefined' && arg3 !== null && typeof arg3 !== 'undefined') {\n                _this.addPath(arg2, arg3);\n            }\n        }\n        else if (arg1 instanceof PdfBrush) {\n            _this = _super.call(this, arg1) || this;\n            if (arg2 !== null && typeof arg2 !== 'undefined') {\n                _this.fillMode = arg2;\n            }\n            if (arg3 !== null && typeof arg3 !== 'undefined' && arg4 !== null && typeof arg4 !== 'undefined') {\n                _this.addPath(arg3, arg4);\n            }\n        }\n        else {\n            _this.addPath(arg1, arg2);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPath.prototype, \"fillMode\", {\n        // Properties\n        /**\n         * Gets or sets the fill mode.\n         * @public\n         */\n        get: function () {\n            return this.mfillMode;\n        },\n        set: function (value) {\n            this.mfillMode = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pathPoints\", {\n        /**\n         * Gets the path points.\n         * @public\n         */\n        get: function () {\n            return this.points;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pathTypes\", {\n        /**\n         * Gets the path point types.\n         * @public\n         */\n        get: function () {\n            return this.types;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pointCount\", {\n        /**\n         * Gets the point count.\n         * @public\n         */\n        get: function () {\n            var count = 0;\n            if ((this.mpoints != null)) {\n                count = this.mpoints.length;\n            }\n            return count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"lastPoint\", {\n        /**\n         * Gets the last points.\n         * @public\n         */\n        get: function () {\n            return this.getLastPoint();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"points\", {\n        /**\n         * Gets the points list.\n         * @private\n         */\n        get: function () {\n            if ((this.mpoints == null)) {\n                this.mpoints = [];\n            }\n            return this.mpoints;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"types\", {\n        /**\n         * Gets the types.\n         * @private\n         */\n        get: function () {\n            if ((this.mpathTypes == null)) {\n                this.mpathTypes = [];\n            }\n            return this.mpathTypes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPath.prototype.draw = function (arg1, arg2, arg3, arg4) {\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2.x, arg2.y);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof PointF && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null) && typeof arg3 === 'number') {\n            var widthValue = (arg1.graphics.clientSize.width - arg2);\n            var layoutRect = new RectangleF(arg2, arg3, widthValue, 0);\n            return this.drawHelper(arg1, layoutRect, arg4);\n        }\n        else if (arg2 instanceof RectangleF && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n        else {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n    };\n    PdfPath.prototype.addArc = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof RectangleF) {\n            this.addArc(arg1.x, arg1.y, arg1.width, arg1.height, arg2, arg3);\n        }\n        else {\n            var points = this.getBezierArcPoints(arg1, arg2, (arg2 + arg3), (arg2 + arg4), arg5, arg6);\n            for (var i = 0; i < points.length; i = i + 8) {\n                /* tslint:disable-next-line:max-line-length */\n                var point = [points[i], points[i + 1], points[i + 2], points[i + 3], points[i + 4], points[i + 5], points[i + 6], points[i + 7]];\n                this.addPoints(point, PathPointType.Bezier3);\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PdfPath.prototype.addBezier = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\n        if (arg1 instanceof PointF && arg2 instanceof PointF && arg3 instanceof PointF && arg4 instanceof PointF) {\n            this.addBezier(arg1.x, arg1.y, arg2.x, arg2.y, arg3.x, arg3.y, arg4.x, arg4.y);\n        }\n        else {\n            var points = [];\n            points.push(arg1);\n            points.push(arg2);\n            points.push(arg3);\n            points.push(arg4);\n            points.push(arg5);\n            points.push(arg6);\n            points.push(arg7);\n            points.push(arg8);\n            this.addPoints(points, PathPointType.Bezier3);\n        }\n    };\n    PdfPath.prototype.addEllipse = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof RectangleF) {\n            this.addEllipse(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            this.startFigure();\n            this.addArc(arg1, arg2, arg3, arg4, 0, 360);\n            this.closeFigure();\n        }\n    };\n    PdfPath.prototype.addLine = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof PointF && arg2 instanceof PointF) {\n            this.addLine(arg1.x, arg1.y, arg2.x, arg2.y);\n        }\n        else {\n            var points = [];\n            points.push(arg1);\n            points.push(arg2);\n            points.push(arg3);\n            points.push(arg4);\n            this.addPoints(points, PathPointType.Line);\n        }\n    };\n    PdfPath.prototype.addPath = function (arg1, arg2) {\n        if (arg1 instanceof PdfPath) {\n            this.addPath(arg1.pathPoints, arg1.pathTypes);\n        }\n        else {\n            if ((arg1 == null)) {\n                throw new Error('ArgumentNullException:pathPoints');\n            }\n            if ((arg2 == null)) {\n                throw new Error('ArgumentNullException:pathTypes');\n            }\n            var count = arg1.length;\n            if ((count !== arg2.length)) {\n                throw new Error('The argument arrays should be of equal length.');\n            }\n        }\n    };\n    PdfPath.prototype.addPie = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof RectangleF) {\n            this.addPie(arg1.x, arg1.y, arg1.width, arg1.height, arg2, arg3);\n        }\n        else {\n            this.startFigure();\n            this.addArc(arg1, arg2, arg3, arg4, arg5, arg6);\n            this.addPoint(new PointF((arg1 + (arg3 / 2)), (arg2 + (arg4 / 2))), PathPointType.Line);\n            this.closeFigure();\n        }\n    };\n    /**\n     * `add a polygon` specified by points.\n     * @param points The points of the polygon\n     */\n    PdfPath.prototype.addPolygon = function (points) {\n        var count = (points.length * 2);\n        var p = [];\n        this.startFigure();\n        for (var i = 0; i < points.length; i++) {\n            p.push(points[i].x);\n            p.push(points[i].y);\n        }\n        this.addPoints(p, PathPointType.Line);\n        this.closeFigure();\n    };\n    PdfPath.prototype.addRectangle = function (arg1, y, width, height) {\n        if (arg1 instanceof RectangleF) {\n            this.addRectangle(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            var points = [];\n            this.startFigure();\n            points.push(arg1);\n            points.push(y);\n            points.push((arg1 + width));\n            points.push(y);\n            points.push((arg1 + width));\n            points.push((y + height));\n            points.push(arg1);\n            points.push((y + height));\n            this.addPoints(points, PathPointType.Line);\n            this.closeFigure();\n        }\n    };\n    /**\n     * Starts a new figure.\n     * @public\n     */\n    PdfPath.prototype.startFigure = function () {\n        this.mStartFigure = true;\n    };\n    /**\n     * Closed all non-closed figures.\n     * @public\n     */\n    PdfPath.prototype.closeAllFigures = function () {\n        var startPath = this.pathPoints[0];\n        for (var i = 0; i < this.mpathTypes.length; i++) {\n            var pt = ((this.types[i]));\n            var flag = false;\n            if (((i !== 0) && (pt === PathPointType.Start))) {\n                this.closeFigure((i - 1));\n                flag = true;\n            }\n            else if (((i === (this.mpathTypes.length - 1)) && (!flag && this.isXps))) {\n                if ((startPath.x === this.pathPoints[i].y)) {\n                    this.closeFigure(i);\n                }\n            }\n        }\n    };\n    /**\n     * Gets the last point.\n     * @public\n     */\n    PdfPath.prototype.getLastPoint = function () {\n        var lastPoint = new PointF(0, 0);\n        var count = this.pointCount;\n        if (((count > 0) && (this.mpoints != null))) {\n            lastPoint.x = this.mpoints[(count - 1)].x;\n            lastPoint.y = this.mpoints[(count - 1)].y;\n        }\n        return lastPoint;\n    };\n    /**\n     * Gets the bezier points for arc constructing.\n     * @public\n     */\n    PdfPath.prototype.getBezierArcPoints = function (x1, y1, x2, y2, s1, e1) {\n        if ((x1 > x2)) {\n            var tmp = void 0;\n            tmp = x1;\n            x1 = x2;\n            x2 = tmp;\n        }\n        if ((y2 > y1)) {\n            var tmp = void 0;\n            tmp = y1;\n            y1 = y2;\n            y2 = tmp;\n        }\n        var fragAngle;\n        var numFragments;\n        if ((Math.abs(e1) <= 90)) {\n            fragAngle = e1;\n            numFragments = 1;\n        }\n        else {\n            numFragments = (Math.ceil((Math.abs(e1) / 90)));\n            fragAngle = (e1 / numFragments);\n        }\n        var xcen = ((x1 + x2) / 2);\n        var ycen = ((y1 + y2) / 2);\n        var rx = ((x2 - x1) / 2);\n        var ry = ((y2 - y1) / 2);\n        var halfAng = ((fragAngle * (Math.PI / 360)));\n        var kappa = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(halfAng)) / Math.sin(halfAng)));\n        var pointList = [];\n        for (var i = 0; (i < numFragments); i++) {\n            var theta0 = (((s1 + (i * fragAngle)) * (Math.PI / 180)));\n            var theta1 = (((s1 + ((i + 1) * fragAngle)) * (Math.PI / 180)));\n            var cos0 = (Math.cos(theta0));\n            var cos1 = (Math.cos(theta1));\n            var sin0 = (Math.sin(theta0));\n            var sin1 = (Math.sin(theta1));\n            if ((fragAngle > 0)) {\n                /* tslint:disable-next-line:max-line-length */\n                pointList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 - (kappa * sin0)))), (ycen - (ry * (sin0 + (kappa * cos0)))), (xcen + (rx * (cos1 + (kappa * sin1)))), (ycen - (ry * (sin1 - (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n            else {\n                /* tslint:disable-next-line:max-line-length */\n                pointList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 + (kappa * sin0)))), (ycen - (ry * (sin0 - (kappa * cos0)))), (xcen + (rx * (cos1 - (kappa * sin1)))), (ycen - (ry * (sin1 + (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n        }\n        return pointList;\n    };\n    /**\n     * `getBoundsInternal` Returns a rectangle that bounds this element.\n     * @public\n     */\n    PdfPath.prototype.getBoundsInternal = function () {\n        var points = this.pathPoints;\n        var bounds = new RectangleF(0, 0, 0, 0);\n        if ((points.length > 0)) {\n            var xmin = points[0].x;\n            var xmax = points[0].x;\n            var ymin = points[0].y;\n            var ymax = points[0].y;\n            for (var i = 1; i < points.length; i++) {\n                var point = points[i];\n                xmin = Math.min(point.x, xmin);\n                xmax = Math.max(point.x, xmax);\n                ymin = Math.min(point.y, ymin);\n                ymax = Math.max(point.y, ymax);\n            }\n            bounds = new RectangleF(xmin, ymin, (xmax - xmin), (ymax - ymin));\n        }\n        return bounds;\n    };\n    /**\n     * `drawInternal` Draws an element on the Graphics.\n     * @param graphics Graphics context where the element should be printed.\n     * @public\n     */\n    PdfPath.prototype.drawInternal = function (graphics) {\n        if ((graphics == null)) {\n            throw new Error('ArgumentNullException :graphics');\n        }\n        graphics.drawPath(this.obtainPen(), this.brush, this);\n    };\n    PdfPath.prototype.addPoints = function (points, pointType, startIndex, endIndex) {\n        if (typeof startIndex === 'undefined' && typeof endIndex === 'undefined') {\n            this.addPoints(points, pointType, 0, points.length);\n        }\n        else {\n            for (var i = startIndex; i < endIndex; i++) {\n                var point = new PointF(points[i], points[(i + 1)]);\n                if ((i === startIndex)) {\n                    if (((this.pointCount <= 0) || this.mStartFigure)) {\n                        this.addPoint(point, PathPointType.Start);\n                        this.mStartFigure = false;\n                    }\n                    else if (((point.x !== this.lastPoint.x) && (point.y !== this.lastPoint.y) && !this.isBeziers3)) {\n                        this.addPoint(point, PathPointType.Line);\n                    }\n                    else if ((point.x !== this.lastPoint.x) && (point.y !== this.lastPoint.y)) {\n                        this.addPoint(point, PathPointType.Bezier3);\n                    }\n                }\n                else {\n                    this.addPoint(point, pointType);\n                }\n                i++;\n            }\n        }\n    };\n    /**\n     * `add a point` Adds the point and its type\n     * @param points The points.\n     * @param pointType Type of the points.\n     * @private\n     */\n    PdfPath.prototype.addPoint = function (point, pointType) {\n        this.points.push(point);\n        this.types.push((pointType));\n    };\n    PdfPath.prototype.closeFigure = function (index) {\n        if (typeof index === 'undefined') {\n            if ((this.pointCount > 0)) {\n                this.closeFigure(this.pointCount - 1);\n            }\n            this.startFigure();\n        }\n        else {\n            if ((index < 0)) {\n                throw new Error('IndexOutOfRangeException()');\n            }\n            var pt = ((this.types[index]));\n            pt = (pt | PathPointType.CloseSubpath);\n            this.types[index] = (pt);\n        }\n    };\n    return PdfPath;\n}(PdfFillElement));\nexport { PdfPath };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPen } from './../pdf-pen';\nimport { RectangleF } from './../../drawing/pdf-drawing';\nimport { PdfFillElement } from './../figures/base/fill-element';\n/**\n * `PdfRectangleArea` class Implements graphics rectangle area, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfRectangleArea = /** @class */ (function (_super) {\n    __extends(PdfRectangleArea, _super);\n    /* tslint:disable-next-line:max-line-length */\n    function PdfRectangleArea(arg1, arg2, arg3, arg4, arg5, arg6) {\n        var _this = _super.call(this) || this;\n        //Fields\n        /**\n         * public variable to store the rectangle.\n         * @public\n         */\n        _this.bounds = new RectangleF(0, 0, 0, 0);\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof PdfPen) {\n            _this = _super.call(this, arg1, arg2) || this;\n            if (arg3 instanceof RectangleF) {\n                _this.bounds = arg3;\n            }\n            else {\n                _this.bounds = new RectangleF(arg3, arg4, arg5, arg6);\n            }\n        }\n        else if (arg1 instanceof RectangleF) {\n            _this.bounds = arg1;\n        }\n        else {\n            _this.bounds = new RectangleF(arg1, arg2, arg3, arg4);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfRectangleArea.prototype, \"x\", {\n        //Properties\n        /**\n         * Gets or sets the X co-ordinate of the upper-left corner of this the element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.x;\n        },\n        set: function (value) {\n            this.bounds.x = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRectangleArea.prototype, \"y\", {\n        /**\n         * Gets or sets the Y co-ordinate of the upper-left corner of this the element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.y;\n        },\n        set: function (value) {\n            this.bounds.y = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRectangleArea.prototype, \"width\", {\n        /**\n         * Gets or sets the width of this element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.width;\n        },\n        set: function (value) {\n            this.bounds.width = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRectangleArea.prototype, \"height\", {\n        /**\n         * Gets or sets the height of this element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.height;\n        },\n        set: function (value) {\n            this.bounds.height = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    PdfRectangleArea.prototype.getBoundsInternal = function () {\n        return this.bounds;\n    };\n    return PdfRectangleArea;\n}(PdfFillElement));\nexport { PdfRectangleArea };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPen } from './../pdf-pen';\nimport { RectangleF } from './../../drawing/pdf-drawing';\nimport { PdfRectangleArea } from './rectangle-area';\n/**\n * `PdfEllipsePart` class Implements graphics ellipse part, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfEllipsePart = /** @class */ (function (_super) {\n    __extends(PdfEllipsePart, _super);\n    /* tslint:disable-next-line:max-line-length */\n    function PdfEllipsePart(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * public variable to store the start angle.\n         * @public\n         */\n        _this.startAngle = 0;\n        /**\n         * public variable to store the sweep angle.\n         * @public\n         */\n        _this.sweepAngle = 0;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof RectangleF && typeof arg2 !== 'undefined' && typeof arg3 !== 'undefined') {\n            _this = _super.call(this, arg1) || this;\n            _this.startAngle = arg2;\n            _this.sweepAngle = arg3;\n        }\n        else if (arg1 instanceof PdfPen) {\n            if (arg3 instanceof RectangleF) {\n                _this = _super.call(this, arg1, arg2, arg3) || this;\n                _this.startAngle = arg4;\n                _this.sweepAngle = arg5;\n            }\n            else {\n                _this = _super.call(this, arg1, arg2, arg3, arg4, arg5, arg6) || this;\n                _this.startAngle = arg7;\n                _this.sweepAngle = arg8;\n            }\n        }\n        else {\n            _this = _super.call(this, arg1, arg2, arg3, arg4) || this;\n            _this.startAngle = arg5;\n            _this.sweepAngle = arg6;\n        }\n        return _this;\n    }\n    return PdfEllipsePart;\n}(PdfRectangleArea));\nexport { PdfEllipsePart };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * arc.ts class for EJ2-PDF\n */\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutFormat } from './../figures/base/element-layouter';\nimport { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfEllipsePart } from './../figures/ellipse-part';\n/**\n * `PdfArc` class Implements graphics arc, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfArc = /** @class */ (function (_super) {\n    __extends(PdfArc, _super);\n    /* tslint:disable-next-line:max-line-length */\n    function PdfArc(arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        var _this = this;\n        if (typeof arg1 === 'undefined') {\n            _this = _super.call(this) || this;\n        }\n        else if (arg1 instanceof RectangleF) {\n            _this = _super.call(this, arg1, arg2, arg3) || this;\n        }\n        else if (arg1 instanceof PdfPen) {\n            if (arg2 instanceof RectangleF) {\n                _this = _super.call(this, arg1, null, arg2, arg3, arg4) || this;\n            }\n            else if (typeof arg6 === 'undefined' && typeof arg7 === 'undefined') {\n                _this = _super.call(this, arg1, null, 0, 0, arg2, arg3, arg4, arg5) || this;\n            }\n            else if (typeof arg6 !== 'undefined' && typeof arg7 !== 'undefined') {\n                _this = _super.call(this, arg1, null, arg2, arg3, arg4, arg5, arg6, arg7) || this;\n            }\n        }\n        else if (typeof arg1 !== 'undefined' && typeof arg5 === 'undefined' && typeof arg6 === 'undefined') {\n            _this = _super.call(this, 0, 0, arg1, arg2, arg3, arg4) || this;\n        }\n        else if (typeof arg1 !== 'undefined' && typeof arg5 !== 'undefined' && typeof arg6 !== 'undefined') {\n            _this = _super.call(this, arg1, arg2, arg3, arg4, arg5, arg6) || this;\n        }\n        return _this;\n    }\n    PdfArc.prototype.draw = function (argu1, arg2, arg3, arg4) {\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(argu1, arg2.x, arg2.y);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(argu1, arg2, null);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(argu1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof PointF && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(argu1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null) && typeof arg3 === 'number') {\n            var widthValue = (argu1.graphics.clientSize.width - arg2);\n            var layoutRect = new RectangleF(arg2, arg3, widthValue, 0);\n            return this.drawHelper(argu1, layoutRect, arg4);\n        }\n        else {\n            return this.drawHelper(argu1, arg2, arg3);\n        }\n    };\n    // Implementation\n    /**\n     * `drawInternal` Draws an element on the Graphics.\n     * @param graphics Graphics context where the element should be printed.\n     *\n     */\n    PdfArc.prototype.drawInternal = function (graphics) {\n        if ((graphics == null)) {\n            throw new Error('ArgumentNullException : graphics');\n        }\n        graphics.drawArc(this.obtainPen(), this.bounds, this.startAngle, this.sweepAngle);\n    };\n    return PdfArc;\n}(PdfEllipsePart));\nexport { PdfArc };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfTrueTypeFont.ts class for EJ2-PDF\n */\nimport { UnicodeTrueTypeFont } from './unicode-true-type-font';\nimport { PdfFont } from './pdf-font';\nimport { PdfFontStyle } from './enum';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfTextDirection } from './../enum';\nimport { RtlRenderer } from './rtl-renderer';\n//https://www.giftofspeed.com/base64-encoder/\nvar PdfTrueTypeFont = /** @class */ (function (_super) {\n    __extends(PdfTrueTypeFont, _super);\n    function PdfTrueTypeFont(base64String, size, style) {\n        var _this = _super.call(this, size) || this;\n        /**\n         * Indicates whether the font is embedded or not.\n         * @private\n         */\n        _this.isEmbedFont = false;\n        /**\n         * Indicates whether the font is unicoded or not.\n         * @private\n         */\n        _this.isUnicode = true;\n        if (style !== undefined) {\n            _this.createFontInternal(base64String, style);\n        }\n        else {\n            _this.createFontInternal(base64String, PdfFontStyle.Regular);\n        }\n        return _this;\n    }\n    PdfTrueTypeFont.prototype.equalsToFont = function (font) {\n        var result = false;\n        //let result : boolean = this.fontInternal.equalsToFont(font);\n        return result;\n    };\n    PdfTrueTypeFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n            var returnValue = this.getUnicodeLineWidth(line, /*out*/ width, format);\n            width = returnValue.width;\n        }\n        else {\n            width = this.fontInternal.getLineWidth(line);\n        }\n        var size = this.metrics.getSize(format);\n        width *= (PdfFont.charSizeMultiplier * size);\n        width = this.applyFormatSettings(line, format, width);\n        return width;\n    };\n    /**\n     * Returns width of the char.\n     */\n    PdfTrueTypeFont.prototype.getCharWidth = function (charCode, format) {\n        var codeWidth = this.fontInternal.getCharWidth(charCode);\n        var size = this.metrics.getSize(format);\n        codeWidth *= (0.001 * size);\n        return codeWidth;\n    };\n    //Implementation\n    PdfTrueTypeFont.prototype.createFontInternal = function (base64String, style) {\n        this.fontInternal = new UnicodeTrueTypeFont(base64String, this.size);\n        this.calculateStyle(style);\n        this.initializeInternals();\n    };\n    PdfTrueTypeFont.prototype.calculateStyle = function (style) {\n        var iStyle = this.fontInternal.ttfMetrics.macStyle;\n        if ((style & PdfFontStyle.Underline) !== 0) {\n            iStyle |= PdfFontStyle.Underline;\n        }\n        if ((style & PdfFontStyle.Strikeout) !== 0) {\n            iStyle |= PdfFontStyle.Strikeout;\n        }\n        this.setStyle(iStyle);\n    };\n    PdfTrueTypeFont.prototype.initializeInternals = function () {\n        var equalFont = null;\n        if (PdfDocument.enableCache) {\n            // Search for the similar fonts.\n            equalFont = PdfDocument.cache.search(this);\n        }\n        var internals = null;\n        // There is not equal font in the cache.\n        if (equalFont !== null && equalFont !== undefined) {\n            // Get the settings from the cached font.\n            internals = equalFont.getInternals();\n            var metrics = equalFont.metrics;\n            metrics = metrics.clone();\n            metrics.size = this.size;\n            this.metrics = metrics;\n            this.fontInternal = equalFont.fontInternal;\n        }\n        else {\n            if (equalFont == null) {\n                if (this.fontInternal instanceof UnicodeTrueTypeFont) {\n                    this.fontInternal.isEmbed = this.isEmbedFont;\n                }\n                this.fontInternal.createInternals();\n                internals = this.fontInternal.getInternals();\n                this.metrics = this.fontInternal.metrics;\n            }\n        }\n        this.metrics.isUnicodeFont = true;\n        this.setInternals(internals);\n        //this.ttfReader = (this.fontInternal as UnicodeTrueTypeFont).ttfReader;\n    };\n    /**\n     * Stores used symbols.\n     */\n    PdfTrueTypeFont.prototype.setSymbols = function (text) {\n        var internalFont = this.fontInternal;\n        if (internalFont != null) {\n            internalFont.setSymbols(text);\n        }\n    };\n    Object.defineProperty(PdfTrueTypeFont.prototype, \"Unicode\", {\n        /**\n         * Property\n         *\n         */\n        get: function () {\n            return this.isUnicode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // public get Font() : UnicodeTrueTypeFont {\n    //     return this.fontInternal as UnicodeTrueTypeFont;\n    // }\n    PdfTrueTypeFont.prototype.getUnicodeLineWidth = function (line, /*out*/ width, format) {\n        // if (line == null) {\n        //     throw new Error('ArgumentNullException : line');\n        // }\n        width = 0;\n        var glyphIndices = null;\n        var rtlRender = new RtlRenderer();\n        /* tslint:disable-next-line:max-line-length */\n        var result = rtlRender.getGlyphIndex(line, this, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, /*out*/ glyphIndices, true);\n        var resultGlyph = result.success;\n        glyphIndices = result.glyphs;\n        if (resultGlyph && glyphIndices !== null) {\n            var ttfReader = this.fontInternal.ttfReader;\n            for (var i = 0, len = glyphIndices.length; i < len; i++) {\n                var glyphIndex = glyphIndices[i];\n                var glyph = ttfReader.getGlyph(glyphIndex);\n                if (glyph !== null && typeof glyph !== 'undefined') {\n                    width += glyph.width;\n                }\n            }\n        }\n        return { success: resultGlyph, width: width };\n    };\n    return PdfTrueTypeFont;\n}(PdfFont));\nexport { PdfTrueTypeFont };\n","/**\n * PdfPageTemplateElement.ts class for EJ2-Pdf\n */\nimport { PdfDockStyle, PdfAlignmentStyle, TemplateType } from './enum';\nimport { PointF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTemplate } from './../graphics/figures/pdf-template';\nimport { PdfPage } from './pdf-page';\nimport { RectangleF } from './../drawing/pdf-drawing';\n/**\n * Describes a `page template` object that can be used as header/footer, watermark or stamp.\n */\nvar PdfPageTemplateElement = /** @class */ (function () {\n    /* tslint:disable */\n    function PdfPageTemplateElement(arg1, arg2, arg3, arg4, arg5) {\n        if (arg1 instanceof RectangleF && typeof arg2 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg1.width, arg1.height, null);\n        }\n        else if (arg1 instanceof RectangleF && arg2 instanceof PdfPage && typeof arg3 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg1.width, arg1.height, arg2);\n        }\n        else if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg2.width, arg2.height, null);\n        }\n        else if (arg1 instanceof PointF && arg2 instanceof SizeF && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg2.width, arg2.height, arg3);\n        }\n        else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1.width, arg1.height, null);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1, arg2, null);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1, arg2, arg3);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            this.InitiateBounds(arg1, arg2, arg3, arg4, null);\n        }\n        else {\n            this.InitiateBounds(arg1, arg2, arg3, arg4, null);\n            // this.graphics.colorSpace = this.page.document.colorSpace;\n        }\n        /* tslint:enable */\n    }\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"dock\", {\n        // Properties\n        /**\n         * Gets or sets the `dock style` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.dockStyle;\n        },\n        set: function (value) {\n            // if (this.dockStyle !== value && this.Type === TemplateType.None) {\n            this.dockStyle = value;\n            // Reset alignment.\n            this.resetAlignment();\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"alignment\", {\n        /**\n         * Gets or sets `alignment` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.alignmentStyle;\n        },\n        set: function (value) {\n            // if (this.alignmentStyle !== value) {\n            this.setAlignment(value);\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"foreground\", {\n        /**\n         * Indicates whether the page template is located `in front of the page layers or behind of it`.\n         * @private\n         */\n        get: function () {\n            return this.isForeground;\n        },\n        set: function (value) {\n            // if (this.foreground !== value) {\n            this.isForeground = value;\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"background\", {\n        /**\n         * Indicates whether the page template is located `behind of the page layers or in front of it`.\n         * @private\n         */\n        get: function () {\n            return !this.isForeground;\n        },\n        set: function (value) {\n            this.isForeground = !value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"location\", {\n        /**\n         * Gets or sets `location` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.currentLocation;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"x\", {\n        /**\n         * Gets or sets `X` co-ordinate of the template element on the page.\n         * @private\n         */\n        get: function () {\n            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.x : 0;\n            return value;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation.x = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"y\", {\n        /**\n         * Gets or sets `Y` co-ordinate of the template element on the page.\n         * @private\n         */\n        get: function () {\n            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.y : 0;\n            return value;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation.y = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"size\", {\n        /**\n         * Gets or sets `size` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.size;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.template.reset(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"width\", {\n        /**\n         * Gets or sets `width` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.width;\n        },\n        set: function (value) {\n            if (this.template.width !== value && this.type === TemplateType.None) {\n                var size = this.template.size;\n                size.width = value;\n                this.template.reset(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"height\", {\n        /**\n         * Gets or sets `height` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.height;\n        },\n        set: function (value) {\n            if (this.template.height !== value && this.type === TemplateType.None) {\n                var size = this.template.size;\n                size.height = value;\n                this.template.reset(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"graphics\", {\n        /**\n         * Gets `graphics` context of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.graphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"template\", {\n        /**\n         * Gets Pdf `template` object.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.pdfTemplate === 'undefined' || this.pdfTemplate == null) {\n            //     this.pdfTemplate = new PdfTemplate(this.size);\n            // }\n            return this.pdfTemplate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"type\", {\n        /**\n         * Gets or sets `type` of the usage of this page template.\n         * @private\n         */\n        get: function () {\n            return this.templateType;\n        },\n        set: function (value) {\n            this.updateDocking(value);\n            this.templateType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"bounds\", {\n        /**\n         * Gets or sets `bounds` of the page template.\n         * @public\n         */\n        get: function () {\n            return new RectangleF(new PointF(this.x, this.y), this.size);\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.location = new PointF(value.x, value.y);\n                this.size = new SizeF(value.width, value.height);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Initialize Bounds` Initialize the bounds value of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.InitiateBounds = function (arg1, arg2, arg3, arg4, arg5) {\n        this.x = arg1;\n        this.y = arg2;\n        this.pdfTemplate = new PdfTemplate(arg3, arg4);\n        // this.graphics.colorSpace = this.page.document.colorSpace;\n    };\n    /**\n     * `Updates Dock` property if template is used as header/footer.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.updateDocking = function (type) {\n        if (type !== TemplateType.None) {\n            switch (type) {\n                case TemplateType.Top:\n                    this.dock = PdfDockStyle.Top;\n                    break;\n                case TemplateType.Bottom:\n                    this.dock = PdfDockStyle.Bottom;\n                    break;\n                case TemplateType.Left:\n                    this.dock = PdfDockStyle.Left;\n                    break;\n                case TemplateType.Right:\n                    this.dock = PdfDockStyle.Right;\n                    break;\n            }\n            this.resetAlignment();\n        }\n    };\n    /**\n     * `Resets alignment` of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.resetAlignment = function () {\n        this.alignment = PdfAlignmentStyle.None;\n    };\n    /**\n     * `Sets alignment` of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.setAlignment = function (alignment) {\n        if (this.dock === PdfDockStyle.None) {\n            this.alignmentStyle = alignment;\n        }\n        else {\n            // Template is docked and alignment has been changed.\n            var canBeSet = false;\n            switch (this.dock) {\n                case PdfDockStyle.Left:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.MiddleLeft ||\n                        alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Top:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.TopCenter ||\n                        alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Right:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.MiddleRight ||\n                        alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Bottom:\n                    canBeSet = (alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.BottomCenter\n                        || alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Fill:\n                    canBeSet = (alignment === PdfAlignmentStyle.MiddleCenter || alignment === PdfAlignmentStyle.None);\n                    break;\n            }\n            if (canBeSet) {\n                this.alignmentStyle = alignment;\n            }\n        }\n    };\n    /**\n     * Draws the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.draw = function (layer, document) {\n        var page = layer.page;\n        var bounds = this.calculateBounds(page, document);\n        layer.graphics.drawPdfTemplate(this.template, new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n    };\n    /**\n     * Calculates bounds of the page template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.calculateBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.alignmentStyle !== PdfAlignmentStyle.None) {\n            result = this.getAlignmentBounds(page, document);\n        }\n        else if (this.dockStyle !== PdfDockStyle.None) {\n            result = this.getDockBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getAlignmentBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.type === TemplateType.None) {\n            result = this.getSimpleAlignmentBounds(page, document);\n        }\n        else {\n            result = this.getTemplateAlignmentBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getSimpleAlignmentBounds = function (page, document) {\n        var bounds = this.bounds;\n        var pdfSection = page.section;\n        var actualBounds = pdfSection.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        switch (this.alignmentStyle) {\n            case PdfAlignmentStyle.TopLeft:\n                x = 0;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.TopCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.TopRight:\n                x = actualBounds.width - this.width;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.MiddleLeft:\n                x = 0;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleRight:\n                x = actualBounds.width - this.width;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.BottomLeft:\n                x = 0;\n                y = actualBounds.height - this.height;\n                break;\n            case PdfAlignmentStyle.BottomCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = actualBounds.height - this.height;\n                break;\n            case PdfAlignmentStyle.BottomRight:\n                x = actualBounds.width - this.width;\n                y = actualBounds.height - this.height;\n                break;\n        }\n        bounds.x = x;\n        bounds.y = y;\n        return bounds;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getTemplateAlignmentBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        switch (this.alignmentStyle) {\n            case PdfAlignmentStyle.TopLeft:\n                if (this.type === TemplateType.Left) {\n                    x = this.convertSign(actualBounds.x);\n                    y = 0;\n                }\n                else if (this.type === TemplateType.Top) {\n                    x = this.convertSign(actualBounds.x);\n                    y = this.convertSign(actualBounds.y);\n                }\n                break;\n            case PdfAlignmentStyle.TopCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = this.convertSign(actualBounds.y);\n                break;\n            case PdfAlignmentStyle.TopRight:\n                if (this.type === TemplateType.Right) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = 0;\n                }\n                else if (this.type === TemplateType.Top) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = this.convertSign(actualBounds.y);\n                }\n                break;\n            case PdfAlignmentStyle.MiddleLeft:\n                x = this.convertSign(actualBounds.x);\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleRight:\n                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.BottomLeft:\n                if (this.type === TemplateType.Left) {\n                    x = this.convertSign(actualBounds.x);\n                    y = actualBounds.height - this.height;\n                }\n                else if (this.type === TemplateType.Bottom) {\n                    x = this.convertSign(actualBounds.x);\n                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                }\n                break;\n            case PdfAlignmentStyle.BottomCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                break;\n            case PdfAlignmentStyle.BottomRight:\n                if (this.type === TemplateType.Right) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = actualBounds.height - this.height;\n                }\n                else if (this.type === TemplateType.Bottom) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                }\n                break;\n        }\n        result.x = x;\n        result.y = y;\n        return result;\n    };\n    /**\n     * Calculates bounds according to the docking.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getDockBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.type === TemplateType.None) {\n            result = this.getSimpleDockBounds(page, document);\n        }\n        else {\n            result = this.getTemplateDockBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the docking.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getSimpleDockBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        switch (this.dockStyle) {\n            case PdfDockStyle.Left:\n                x = 0;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Top:\n                x = 0;\n                y = 0;\n                width = actualBounds.width;\n                height = this.height;\n                break;\n            case PdfDockStyle.Right:\n                x = actualBounds.width - this.width;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Bottom:\n                x = 0;\n                y = actualBounds.height - this.height;\n                width = actualBounds.width;\n                height = this.height;\n                break;\n            case PdfDockStyle.Fill:\n                x = 0;\n                x = 0;\n                width = actualBounds.width;\n                height = actualBounds.height;\n                break;\n        }\n        result = new RectangleF(x, y, width, height);\n        return result;\n    };\n    /**\n     * Calculates template bounds basing on docking if template is a page template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getTemplateDockBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var actualSize = section.pageSettings.getActualSize();\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        switch (this.dockStyle) {\n            case PdfDockStyle.Left:\n                x = this.convertSign(actualBounds.x);\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Top:\n                x = this.convertSign(actualBounds.x);\n                y = this.convertSign(actualBounds.y);\n                width = actualSize.width;\n                height = this.height;\n                if (actualBounds.height < 0) {\n                    y = actualSize.height - actualBounds.y;\n                }\n                break;\n            case PdfDockStyle.Right:\n                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Bottom:\n                x = this.convertSign(actualBounds.x);\n                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                width = actualSize.width;\n                height = this.height;\n                if (actualBounds.height < 0) {\n                    y -= actualSize.height;\n                }\n                break;\n            case PdfDockStyle.Fill:\n                x = 0;\n                x = 0;\n                width = actualBounds.width;\n                height = actualBounds.height;\n                break;\n        }\n        result = new RectangleF(x, y, width, height);\n        return result;\n    };\n    /**\n     * Ignore value zero, otherwise convert sign.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.convertSign = function (value) {\n        return (value !== 0 || (value === 0 && 1 / value === -Infinity)) ? -value : value;\n    };\n    return PdfPageTemplateElement;\n}());\nexport { PdfPageTemplateElement };\n"],"names":["defaultToString","item","Object","prototype","toString","call","Dictionary","getValue","key","pair","this","table","toStr","value","setValue","k","nElements","remove","previousElement","keys","keysArray","namesOfKeys","index1","length","pair1","push","values","valuesArray","namesOfValues","index2","pair2","containsKey","clear","size","toStringFunction","defineProperty","PdfName","get","status6","set","enumerable","configurable","isSaving6","index6","position6","internalValue","val","normalizeValue","save","writer","write","stringStartMark","escapeString","clone","crossTable","newName","stringValue","result","i","len_1","ch","delimiters","indexOf","c","replacements","Operators","obj","endObj","r","whiteSpace","slash","newLine","stream","endStream","xref","f","n","trailer","startxref","eof","header","beginText","endText","beginPath","appendLineSegment","stroke","fill","fillEvenOdd","fillStroke","fillStrokeEvenOdd","appendbeziercurve","appendRectangle","saveState","restoreState","paintXObject","modifyCtm","modifyTM","setLineWidth","setLineCapStyle","setLineJoinStyle","setDashPattern","setFlatnessTolerance","closePath","closeStrokePath","closeFillStrokePath","setCharacterSpace","setWordSpace","setHorizontalScaling","setTextLeading","setFont","setRenderingMode","setTextRise","setTextScaling","setCoords","goToNextLine","setText","setTextWithFormatting","setTextOnNewLine","selectcolorspaceforstroking","selectcolorspacefornonstroking","setrbgcolorforstroking","setrbgcolorfornonstroking","setcmykcolorforstroking","setcmykcolorfornonstroking","setgraycolorforstroking","setgraycolorfornonstroking","clipPath","clipPathEvenOdd","endPath","setGraphicsState","comment","evenOdd","setMiterLimit","setColorAndPattern","setColorAndPatternStroking","forTest","DictionaryProperties","pages","kids","count","resources","type","mediaBox","parent","root","decodeParms","filter","font","type1","baseFont","encoding","subtype","contents","procset","colorSpace","extGState","pattern","xObject","width","height","bitsPerComponent","image","dctdecode","columns","blackIs1","s","predictor","deviceRgb","next","action","link","a","annot","p","rect","uri","annots","ca","CA","xyz","fit","dest","BM","flatedecode","rotate","bBox","form","w","cIDFontType2","cIDToGIDMap","cIDFontType0C","identity","dw","fontDescriptor","cIDSystemInfo","cIDFontType0","fontName","flags","fontBBox","missingWidth","stemV","italicAngle","capHeight","ascent","descent","leading","avgWidth","fontFile2","fontFile3","maxWidth","xHeight","stemH","registry","ordering","supplement","type0","identityH","toUnicode","descendantFonts","background","shading","matrix","antiAlias","function","extend","shadingType","coords","domain","range","functionType","bitsPerSample","patternType","paintType","tilingType","xStep","yStep","viewerPreferences","centerWindow","displayTitle","fitWindow","hideMenuBar","hideToolBar","hideWindowUI","pageMode","pageLayout","duplex","printScaling","PdfDictionary","primitiveItems","status7","isSaving7","index7","object","position7","getArchive","archive","setArchive","setEncrypt","encrypt","modify","getEncrypt","freezeChanges","freezer","bChanged","onBeginSave","beginSave","sender","onFontDictionaryBeginSave","fontDictionaryBeginSave","onDescendantFontBeginSave","descendantFontBeginSave","onTemplateBeginSave","pageBeginDrawTemplate","pageBeginSave","onBeginAnnotationSave","annotationBeginSave","onSectionBeginSave","saveEvent","sectionBeginSave","state","bRaiseEvent","prefix","Count","saveItems","suffix","index","dictionary","isResource","items","status","dictionaryProperties","SaveSectionCollectionEventHandler","SaveDescendantFontEventHandler","SaveFontDictionaryEventHandler","SaveAnnotationEventHandler","SaveSectionEventHandler","SaveTemplateEventHandler","PdfNumber","integer","status5","isSaving5","index5","position5","intValue","floatToString","number","returnString","toFixed","min","x","y","z","Math","PdfArray","internalElements","status9","isSaving9","clonedObject9","position9","index9","pdfCrossTable","add","element","markedChange","contains","tempElement","inputElement","getItems","startMark","len","endMark","newArray","fromRectangle","bounds","insert","tempElements","markChanged","removeAt","tempArray","array","isFont","elements","tempNumberArray","pdfNumber","extendStatics","d","b","setPrototypeOf","__proto__","Array","hasOwnProperty","__","constructor","create","PdfStream","_super","dataStream2","bCompress","clearStream","internalStream","text","Error","writeBytes","data","String","fromCharCode","onCmapBeginSave","cmapBeginSave","onFontProgramBeginSave","fontProgramBeginSave","compressContent","byteArray","charCodeAt","dataArray","Uint8Array","sw","CompressedStreamWriter","close","getCompressedString","addFilter","filterName","PdfReferenceHolder","name","dicPrefix","dicSuffix","bytesToString","output","_this","clonedObject2","bCompress2","SaveCmapEventHandler","SaveFontProgramEventHandler","PdfString","ForceEncoding","InternalEnum","bHex","status1","isSaving1","clonedObject1","position1","bConverted","bForceEncoding","bytesToHex","bytes","builder","undefined","encode","Ascii","pdfEncode","stringMark","escapeSymbols","currentData","CrossTable","newString","isColorSpace","toUnicodeArray","bAddPrefix","code","byteToString","hexStringMark","hexFormatPattern","bDecrypted","isParentDecrypted","isPacked","isFormField","isHexString","PdfReference","status3","isSaving3","index3","position3","objNumber","genNumber","Number","status4","isSaving4","index4","position4","primitiveObject","pdfReference","objectIndex","initialize","obj1","position","cTable","document","isSaving","getReference","obj2","PdfAction","pdfDictionary","PdfUriAction","uniformResourceIdentifier","PdfHorizontalAlignment","PdfVerticalAlignment","PdfTextAlignment","TextRenderingMode","PdfLineJoin","PdfLineCap","PdfDashStyle","PdfFillMode","PdfColorSpace","PdfBlendMode","PdfGraphicsUnit","PdfGridImagePosition","PdfTextDirection","PdfColor","assignRGB","g","inverseScale","filled","cyanColor","magentaColor","yellowColor","blackColor","grayColor","redColor","greenColor","blueColor","maxColourChannelValue","scaleFactor","max","round","assignCMYK","red","green","blue","black","cyan","magenta","yellow","alpha","isEmpty","str","Rgb","rgbToString","GrayScale","grayScaleToString","Cmyk","cmykToString","ifStroking","gray","colour","grayStringsSroke","grayStringsFill","rgbStrings","m","toArray","color1","color2","color3","color4","PointF","SizeF","RectangleF","arg1","arg2","arg3","arg4","pointf","sizef","Rectangle","right","left","bottom","top","topLeft","PdfBrush","PdfSolidBrush","pdfColor","monitorChanges","brush","streamWriter","getResources","saveChanges","currentColorSpace","diff","setColorAndSpace","resetChanges","color","PdfFontStyle","PdfFontFamily","PdfFontType","PdfWordWrapType","PdfSubSuperScript","FontEncoding","TtfCmapFormat","TtfCmapEncoding","TtfPlatformID","TtfMicrosoftEncodingID","TtfMacintoshEncodingID","FontDescriptorFlags","TtfCompositeGlyphFlags","PdfStringFormat","textAlignment","direction","verticalAlignment","Top","isRightToLeft","internalCharacterSpacing","internalWordSpacing","clip","pdfSubSuperScript","None","internalParagraphIndent","firstLineIndent","internalLineLimit","trailingSpaces","isNoClip","wordWrapType","scalingFactor","initialLineIndent","Word","StringTokenizer","currentPosition","getCharsCount","symbols","numSymbols","curIndex","readLine","text2","pos","substr","peekLine","line","readWord","textValue","peekWord","word","read","end","num","peek","readToEnd","symbol","spaces","tab","whiteSpacePattern","PdfStringLayouter","layout","arg5","arg6","arg7","isOverloadWithPosition","clientSize","doLayout","format","rectSize","pageHeight","rectangle","reader","PdfStringLayoutResult","lines","lineIndent","getLineIndent","lineResult","layoutLine","returnedValue","copyToResult","success","numSymbolsInserted","numInserted","finalizeResult","firstLine","paragraphIndent","getLineHeight","lineSpacing","getLineWidth","layoutLineHeight","lineWidth","lineType","LineType","FirstParagraphLine","addToLineResult","NewLineBreak","curLine","curIndent","ln","curLineWidth","getWrapType","WordOnly","textRemainder","substring","wordWrap","Character","LayoutBreak","LastParagraphLine","layoutLines","breakType","info","LineInfo","actualSize","size1","allowPartialLines","lineLimit","maxHeight","expHeight","lineHeight","trimLine","rightToLeft","trim","empty","content","PdfFont","metrics","fontSize","getHeight","fontStyle","style","Bold","Italic","Strikeout","Underline","fontMetrics","pdfFontInternals","measureString","temparg2","layoutArea","temparg3","equalsTo","equalsToFont","getInternals","setInternals","internals","setStyle","applyFormatSettings","realWidth","characterSpacing","wordSpacing","charSizeMultiplier","syncObject","Regular","_PdfChunkBuffer","committed","offset","grow","current","chunkSize","chunks","writeAscii","idx","byteLength","space","toWrite","toUint8Array","total","out","lastIdx","chunk","subarray","destroy","PdfWriter","pdfDocument","PdfWriterHelper","buffer","byteCountForStreamWriter","PdfArrayBuffer","buf","ObjectStatus","PdfMainObjectCollection","objectCollections","isNew","objInfo","ObjectInfo","primitiveObjectCollection","Registered","lookFor","reference","wasNew","trySetReference","found","setReference","_i","_a","pdfObject","objectCollectionIndex","mainObjectCollection","PdfDocumentBase","objects","currentSavingObject","pdfCatalog","setMainObjectCollection","setCrossTable","setCatalog","catalog","filename","encoding_1","SW_1","Encoding","SW","StreamWriter","Promise","resolve","reject","blobData","Blob","docSave","_save","_docSave","isStreamCopied","PdfDocument","ObjectType","PdfBoolean","objectStatus","saving","boolToStr","PdfViewerPreferences","_centerWindow","_dictionary","_dictionaryProperties","_displayTitle","_fitWindow","_hideMenuBar","_hideToolBar","_hideWindowUI","_pageMode","_catalog","_mapPageMode","_duplex","_mapDuplexMode","_pageLayout","_mapPageLayout","_pageScaling","PageScalingMode","AppDefault","mode","DuplexMode","Simplex","DuplexFlipShortEdge","DuplexFlipLongEdge","PdfPageMode","UseNone","UseOutlines","UseThumbs","FullScreen","UseOC","UseAttachments","PdfPageLayout","SinglePage","OneColumn","TwoColumnLeft","TwoColumnRight","TwoPageLeft","TwoPageRight","_splitWindow","PdfCatalog","sections","tempDictionaryProperties","_viewerPreferences","PdfCrossTable","merging","internalTrailer","pdfObjects","objectCount","_saveProcess","saveHead","mappedReferences","markTrailerReferences","saveObjects","saveCount","xrefPos","registerObject","saveSections","saveTrailer","saveTheEndess","objectCollection","prevXRef","objectNum","prepareSubsection","saveSubsection","Free","getItem","generation","isFree","addOffsetLength","addGenNumberLength","split","version","generateFileVersion","bNew","getSubReference","tempkey","tempvalue","tempObj","objnumber","nextObjNumber","tempIndex","bForceNew","saveIndirectObject","currentSavingObj","doSaveObject","free","RegisteredObject","maxGenNumIndex","dereference","offsetNumber","tempReference","Normal","PdfPageSize","letter","note","legal","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a10","b0","b1","b2","b3","b4","b5","archE","archD","archC","archB","archA","flsa","halfLetter","letter11x17","ledger","PdfPageOrientation","PdfPageRotateAngle","PdfNumberStyle","PdfDockStyle","PdfAlignmentStyle","TemplateType","PdfMargins","leftMargin","topMargin","rightMargin","bottomMargin","setMargins","margin1","margin2","margin3","margin4","pdfMargin","PdfPageSettings","pageSize","setSize","pageOrientation","orientation","updateSize","pageMargins","pageOrigin","rotateAngle","isRotation","Portrait","Landscape","getActualSize","margins","RotateAngle0","PdfStreamWriter","dictionaryName","writeOperator","executeObject","useEvenOddRule","fillStrokePath","fillPath","closeFillPath","textScaling","strokePath","restoreGraphicsState","saveGraphicsState","startNextLine","writePoint","showText","checkTextParam","writeText","setLeading","setTextRenderingMode","renderingMode","setCharacterSpacing","charSpacing","setWordSpacing","showNextLineText","setColorSpace","op","opcode","start","updateY","arg","string","writeComment","forStroking","setLineDashPattern","patternOffset","setLineDashPatternHelper","tempPattern","miterLimit","setLineCap","lineCapStyle","setLineJoin","lineJoinStyle","returnValue","appendBezierSegment","setColourWithPattern","colours","patternName","PdfPen","dashOffsetValue","penDashPattern","pdfDashStyle","Custom","Dash","Dot","DashDot","DashDotDot","Solid","pdfLineCap","pdfLineJoin","internalMiterLimit","penWidth","setBrush","sBrush","pdfBrush","currentPen","dashControl","lineJoin","lineCap","pen","getPattern","dashOffset","dashPattern","PdfTransformationMatrix","transformationMatrix","translate","offsetX","offsetY","scale","scaleX","scaleY","angle","PI","cos","sin","multiply","degreesToRadians","degreesX","degRadFactor","radiansToDegrees","radians","radDegFactor","Matrix","metrixElements","transform","point","x2","y2","tempMatrix","dispose","ProcedureSets","pdf","imageB","imageC","imageI","TemporaryDictionary","mKeys","ReferenceError","mValues","RangeError","splice","PdfTransparency","PdfAutomaticFieldInfoCollection","automaticFieldsInformation","fieldInfo","automaticFields","PdfGraphicsElement","drawHelper","graphics","bNeedSave","gState","translateTransform","drawInternal","restore","PdfAutomaticField","internalBounds","internalFont","internalBrush","internalPen","internalStringFormat","performDrawHelper","location","scalingX","scalingY","internalTemplateSize","getFont","stringFormat","draw","location_1","PdfAutomaticFieldInfo","getSize","getBrush","defaultFont","getPageFromGraphics","page","currentPage","pageNumberFieldLocation","pageNumberField","field","ByteArray","mPosition","readByte","getBuffer","writeFromBase64String","base64","arr","encodedString","input","chr2","enc1","enc2","enc3","keyStr","resultIndex","totalLength","replace","charAt","chr3","readNextTwoBytes","dataView","DataView","ImageFormat","ImageDecoder","mHeight","mWidth","mbitsPerComponent","mImageData","internalBuffer","mFormat","Unknown","checkIfJpeg","TypeError","Jpeg","parseJpegImage","reset","mStream","imgData","isLengthExceed","skip","readExceededJPGImage","mJpegHeader","getImageDictionary","imageData","imageStream","tempString","decodedString","imageDataAsNumberArray","compress","getColorSpace","getDecodeParams","decodeParams","isContinueReading","getMarker","sof1Marker","sof2Marker","sof3Marker","sof5Marker","sof6Marker","sof7Marker","sof9Marker","sof10Marker","sof11Marker","sof13Marker","sof14Marker","sof15Marker","skipStream","noOfBytes","temp","marker","markerLength","mPngHeader","GIF_HEADER","BMP_HEADER","PdfUnitConverter","convertUnits","from","to","convertFromPixels","convertToPixels","proportions","updateProportionsHelper","pixelPerInch","horizontalResolution","verticalResolution","dpi","PdfImage","imageWidth","imageHeight","imagePhysicalDimension","getPointSize","ucX","ucY","dpiX","dpiY","ptWidth","Pixel","Point","ptHeight","PdfBitmap","loadImage","initializeAsync","decoder","imageStatus","TtfTableInfo","checksum","TtfNameTable","TtfNameRecord","TtfHeadTable","TtfMetrics","macStyle","TtfHorizontalHeaderTable","TtfOS2Table","TtfPostTable","TtfLongHorMetric","TtfCmapSubTable","TtfCmapTable","TtfGlyphInfo","charCode","compareTo","TtfLocaTable","TtfAppleCmapSubTable","TtfMicrosoftCmapSubTable","TtfTrimmedCmapSubTable","TtfGlyphHeader","BigEndianWriter","bufferLength","length_1","internalPosition","writeShort","flush","writeInt","writeUInt","writeString","buff","capacity","int32Size","int16Size","int64Size","TtfReader","macintoshDictionary","microsoftDictionary","internalMacintoshGlyphs","internalMicrosoftGlyphs","readFontDictionary","nameTable","readNameTable","headTable","readHeadTable","initializeFontName","checkPreambula","numTables","readInt16","tableDirectory","tableKey","readString","readInt32","lowestPosition","isTtcFont","fixOffsets","minOffset","MAX_VALUE","tableKeys","shift","isMacTtf","_isOpenTypeFont","tableInfo","getTable","formatSelector","readUInt16","recordsCount","nameRecords","record","unicode","platformID","encodingID","languageID","nameID","readFixed","fontRevision","checkSumAdjustment","readUInt32","magicNumber","unitsPerEm","created","readInt64","modified","xMin","yMin","xMax","yMax","lowestReadableSize","fontDirectionHint","indexToLocalFormat","glyphDataFormat","readHorizontalHeaderTable","ascender","descender","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","metricDataFormat","numberOfHMetrics","readOS2Table","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","readBytes","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","vendorIdentifier","fsSelection","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefaultChar","usBreakChar","usMaxContext","readPostTable","formatType","underlinePosition","underlineThickness","isFixedPitch","minType42","maxType42","minType1","maxType1","readWidthTable","glyphCount","glyph","glyphWidth","advanceWidth","lsb","floor","readCmapTable","tablesCount","subTables","subTable","readCmapSubTable","getCmapEncoding","Macintosh","Microsoft","Apple","readAppleCmapTable","readMicrosoftCmapTable","Trimmed","readTrimmedCmapTable","maxMacIndex","glyphInfo","getWidth","macintosh","addGlyph","collection","Unicode","microsoft","segCount","segCountX2","searchRange","entrySelector","rangeShift","endCount","readUshortArray","reservedPad","startCount","idDelta","idRangeOffset","codeOffset","glyphID","j","id","Symbol","firstCode","entryCount","fontFamily","postScriptName","glyphCode","Undefined","Roman","microsoftGlyphs","macintoshGlyphs","initializeMetrics","horizontalHeadTable","os2Table","postTable","cmapTables","bSymbol","isSymbol","factor","winAscent","macAscent","winDescent","macDescent","ceil","fontBox","widthTable","updateWidth","subScriptSizeFactor","superscriptSizeFactor","getGlyph","byteToProcess","getString","getDefaultGlyph","readLocaTable","bShort","offsets","updateGlyphChars","glyphChars","locaTable","glyphCharKeys","nextKey","processCompositeGlyph","glyphOffset","glyphHeader","numberOfContours","skipBytes","glyphIndex","MoreComponents","Arg1And2AreWords","WeHaveScale","WeHaveAnXyScale","WeHaveTwoByTwo","generateGlyphTable","newLocaTable","newGlyphTable","activeGlyphs","glyphSize","sort","glyphSizeAligned","align","oldGlyphOffset","oldNextGlyphOffset","nextGlyphOffset","nextGlyphIndex","glyphTableSize","updateLocaTable","bLocaIsShort","newLocaTableOut","newLocaUpdated","newLocaSize","getFontProgram","locaTableSize","tableNames","getFontProgramLength","fontProgramLength","entrySelectors","writeCheckSums","writeGlyphs","tableName","usedTablesSize","nextTableSize","calculateCheckSum","byte1","byte2","byte3","byte4","i_1","setOffset","createInternals","bIsLocaShort","isMacTTF","isFontPresent","getGlyphChars","chars","charKeys","getAllGlyphs","allGlyphInfo","readFontProgram","result1","missedGlyphs","result2","_readCompactFontFormatTable","cffData","convertString","getCharWidth","isUnicode","fontData","i1","i2","i3","i4","low","written","metricsName","__extends","PdfFontMetrics","getAscent","getDescent","getLineGap","subSuperScript","SubScript","SuperScript","WidthTable","internalWidthTable","StandardWidthTable","widths","UnicodeTrueTypeFont","ttfReader","Initialize","fontString","ttfMetrics","fontDictionary","fontProgram","cmap","descendantFont","subsetName","getFontName","createDescendantFont","createCmap","createFontDictionary","createFontProgram","isBold","random","nameString","formatName","ret","createFontDescriptor","systemInfo","createSystemInfo","descriptor","getDescriptorFlags","getBoundBox","descFonts","usedChars","getDescendantWidth","generateCmap","isCompress","generateFontProgram","chLen","firstGlyphIndex","lastGlyphIndex","firstGlyphIndexWasSet","widthDetails","first","last","middlePart","toHexString","nextRange","cmapPrefix","cmapEndCodespaceRange","cmapEndRange","cmapBeginRange","cmapSuffix","FixedPitch","Symbolic","Nonsymbolic","isItalic","ForceBold","abs","isCaseChange","toUpperCase","setSymbols","isEmbedFont","base64String","ArabicShapeRenderer","getCharacterShape","hamza","bwhb","arabicMapTable","lwawm","lwa","shape","level","str2","doShape","previous","ArabicShape","present","shapeCount","ligature","getShapeCount","Shapes","Value","append","Ligature","Type","vowel","fathatan","hamzaBelow","superScriptalef","shadda","alef","alefHamzaBelow","lwawhb","hamzaAbove","alefHamza","lwawh","waw","wawHamza","yeh","alefMaksura","farsiYeh","yehHamza","madda","alefMadda","lam","zeroWidthJoiner","arabicCharTable","shapeValue","shapeType","shapeVowel","shapeLigature","shapeShapes","Bidi","doMirrorShaping","indexLevels","mirroringShapeCharacters","res","getLogicalToVisualString","inputText","isRtl","rtlCharacters","RtlCharacters","getVisualOrder","setDefaultIndexLevel","doOrder","resultBuilder","indexes","sIndex","eIndex","odd","even","reArrange","pstart","pend","update","types","getCharacterCode","textOrder","LRE","L","doVisualOrder","levels","characterCodes","rtlCharacterTypes","setDefaultLevels","setLevels","R","updateLevels","getEmbeddedCharactersLength","preview","preType","checkNSM","checkEmbeddedCharacters","RLE","LRO","RLO","PDF","BN","startType","endType","charType","NSM","checkEuropeanDigits","EN","AL","AN","checkArabicCharacters","checkEuropeanNumberSeparator","ES","CS","checkEuropeanNumberTerminator","ET","l","getLength","checkOtherNeutrals","ON","checkOtherCharacters","pst","checkCommanCharacters","validSet","t","WS","B","S","byte","lt","tt","rt","charTypes","RtlRenderer","rtl","wordSpace","customLayout","splitLayout","customSplitLayout","getGlyphIndex","glyphs","custom","fontInternal","Uint16Array","textDirection","layouted","txt","words","addChars","openBracket","closeBracket","PdfLayoutType","PdfLayoutBreakType","PathPointType","PdfGradientBrush","mbackground","sh","aa","mfunction","mcolorSpace","csValue","colorSpaceToDeviceName","mbStroking","mpatternDictionary","mshading","patternDictionary","mmatrix","resetFunction","name_1","getName","resetPatternDictionary","cloneAntiAliasingValue","cloneBackgroundValue","PdfTemplate","templateSize","pdfGraphics","gr","GetResourceEventHandler","PdfGraphics","initializeCoordinates","PdfResources","addType","addSubType","tempSize","writeTransformation","getNames","sName","primitive","names","generateName","PdfTilingBrush","pdfNames","fonts","requireProcedureSet","procedureSetName","procSets","removeFont","Guid","getNewGuidString","xobjects","savable","transDic","parentXObjects","hasSameImageStream","oldReference","values_1","baseDictionary","properties","mPage","mLocation","mTransformationMatrix","tempBrushStream","brushStream","tempResource","mDictionaryProperties","setBox","setObligatoryFields","tileTransform","mBox","box","mGraphics","mResources","mStroking","name1","PdfPage","pdfStringLayoutResult","canvasSize","internalMediaBoxUpperRightBound","clipBounds","pdfStreamWriter","pageLayer","internalAutomaticFields","bStateSaved","currentBrush","currentFont","bCSInitialized","previousTextRenderingMode","previousCharacterSpacing","previousWordSpacing","previousTextScaling","currentStringFormat","procedureSets","drawPdfTemplate","template","bNeedScale","getTranslateTransform","getScaleTransform","newLocation","drawString","arg8","arg9","temparg4","temparg5","temparg6","temparg7","temparg8","temparg9","checkCorrectLayoutRectangle","drawStringLayoutResult","isEmfTextScaled","emfScalingFactor","isNormalRender","isUseFontSize","drawLine","stateControl","drawRectangle","xOffset","yOffset","layer","temparg1","drawPathHelper","drawRoundedRectangle","radius","arc","diameter","_pathPoints","_pathTypes","startFigure","_addArc","CloseSubpath","_drawPath","Alternate","startAngle","sweepAngle","points","_getBezierArcPoints","_addArcPoints","Bezier3","pointType","_addPoint","Start","_getLastPoint","Line","lastPoint","x1","y1","s1","e1","tmp","fragAngle","numFragments","xcen","ycen","rx","ry","halfAng","kappa","pointList","theta0","theta1","cos0","cos1","sin0","sin1","Winding","isBrush","isEvenOdd","isPen","drawImage","physicalDimension","name_2","setResources","resource","getLineBounds","lineIndex","layoutRectangle","lineCount","getTextVerticalAlignShift","hShift","getHorizontalAlignShift","shouldJustify","textSize","layoutedRectangle","alignment","Center","Right","lineAlignment","Middle","Bottom","setLayer","pageSave","performDraw","applyStringSettings","horizontalScalingFactor","resultHeight","remainingString","startCutIndex","drawLayoutResult","underlineStrikeoutText","isEmfPlus","getNextPage","section","getPages","setClip","tm","getTextRenderingMode","cs","ws","textHeight","boundsHeight","vAlignShift","lineInfo","hAlignShift","drawUnicodeLine","drawAsciiLine","isPointOverload","justifyLine","blocks","useWordSpace","Justify","rtlRender","rightAlign","ttfFont","RightToLeft","drawUnicodeBlocks","breakUnicodeLine","tokens","token","convertToUnicode","getUnicodeString","xShift","spaceWidth","tokenWidth","converted","boundsWidth","hasWordSpacing","whitespacesCount","justifyStyle","goodWidth","hasSpaces","goodLineBreakStyle","underline","strikeout","linePen","createUnderlineStikeoutPen","vShift","underlineYOffset","strikeoutYOffset","FillStroke","Stroke","Fill","ClipFlag","layoutBounds","firstParagraphLine","Left","colorSpaceChanged","lastDocumentCS","lastGraphicsCS","initCurrentColorSpace","penControl","brushControl","fontControl","colorspace","currentColorSpaces","lgb","curSubSuper","prevSubSuper","setTransparency","transp","td","istransparencySet","trasparencies","TransparencyData","name_3","clipTranslateMargins","clipArea","scaleTransform","rotateTransform","getRotateTransform","mediaBoxUpperRightBound","cropBox","PdfGraphicsState","textRenderingMode","graphicsState","doRestoreState","pop","drawPath","path","pathPoints","pathTypes","fillMode","buildUpPath","drawArc","constructArcPath","cnt","typeValue","p2","p3","getBezierPoints","checkFlags","pathTypesValuesMask","startAng","getBezierArc","pt","numX1","numY1","numX2","numY2","fragAngle1","pointsList","thetaValue0","thetaValue1","transparencyObject","isEmf","isBaselineFormat","isImageOptimized","internalTextScaling","pdfPen","pdfFont","pdfColorSpace","internalTextRenderingMode","elements_1","forEach","alphaPen","alphaBrush","blendMode","PdfPageLayer","pdfPage","layerid","layerName","isVisible","initializeGraphics","PdfPageLayerCollection","sublayer","sign","oPage","isSame","sc","origin","clipRect","getActualBounds","pageSettings","clipPageTemplates","streamClipPageTemplates","contentLength","PdfCollection","list","firstArgument","secondArgument","addLayer","insertLayer","parseLayers","loadedPage","saveStream","restoreStream","saveData","parentLayerCount","optionalContent","PdfPageBase","pdfSection","pageDictionary","layers","defaultLayerIndex","layerCollection","defLayerIndex","PdfAnnotationCollection","internalAnnotations","annotation","doAdd","destination","setPage","lists","layoutResult","lastPosition","setColor","alreadyExistsAnnotationError","missingAnnotationException","defaultLayer","parentDocument","annotationCollection","annotations","setSection","resetProgress","isProgressOn","getClientSize","doc","drawPageTemplates","frontLayer","containsTemplates","backLayer","drawTemplates","PageAddedEventArgs","PdfSectionPageCollection","PdfDocumentTemplate","leftTemplate","checkElement","topTemplate","rightTemplate","bottomTemplate","evenLeft","evenTop","evenRight","evenBottom","oddLeft","oddTop","oddRight","oddBottom","getLeft","isEven","EvenLeft","OddLeft","getTop","EvenTop","OddTop","getRight","EvenRight","OddRight","getBottom","EvenBottom","OddBottom","pageCollectionIndex","templateElement","PdfSectionTemplate","leftValue","topValue","rightValue","bottomValue","stampValue","PdfSection","sectionCollection","settings","pagesReferences","pageTemplate","pagesCollection","pdfPages","pointToNativePdf","setPageSettings","PageSettingsState","pageCount","foreground","documentHeaders","getDocumentTemplates","sectionTemplates","getSectionTemplates","templates","applyDocumentTopTemplate","applyDocumentBottomTemplate","applyDocumentLeftTemplate","applyDocumentRightTemplate","page_1","checkPresence","pageAddedMethod","rh","args","onPageAdded","top_1","document_1","getLeftIndentWidth","getTopIndentHeight","getRightIndentWidth","getBottomIndentHeight","includeMargins","templateWidth","docTemplateWidth","templateHeight","docTemplateHeight","temproaryPages","applyPageSettings","container","parentSettings","PdfSectionCollection","rotateFactor","sectionHeaders","drawTemplatesHelper","pageAdded","initialSettings","pageRotate","sectionCount","pdfSectionCollection","section_1","checkSection","countPages","PdfDocumentPageCollection","pdfPageCollectionIndex","getLastSection","getPageByIndex","getPage","sectionStartIndex","pageIndex","numPages","PdfCacheCollection","search","group","getGroup","createNewGroup","referenceObjects","tGroup","representative","removeGroup","slice","pdfFontCollection","defaultStandardFont","PdfStandardFont","Helvetica","defaultMargin","documentPageCollection","cacheCollection","isCacheEnabled","checkPagesPresence","cache","isMerging","isMerge","PdfStandardFontMetricsFactory","getMetrics","getHelveticaMetrics","Courier","getCourierMetrics","TimesRoman","getTimesMetrics","getSymbolMetrics","ZapfDingbats","getZapfDingbatsMetrics","subSuperScriptFactor","helveticaBoldItalicAscent","helveticaBoldItalicDescent","helveticaBoldItalicName","arialBoldWidth","helveticaBoldAscent","helveticaBoldDescent","helveticaBoldName","helveticaItalicAscent","helveticaItalicDescent","helveticaItalicName","helveticaAscent","helveticaDescent","helveticaName","arialWidth","courierBoldItalicAscent","courierBoldItalicDescent","courierBoldItalicName","courierBoldAscent","courierBoldDescent","courierBoldName","courierItalicAscent","courierItalicDescent","courierItalicName","courierAscent","courierDescent","courierName","fixedWidth","timesBoldItalicAscent","timesBoldItalicDescent","timesBoldItalicName","timesRomanBoldItalicWidths","timesBoldAscent","timesBoldDescent","timesBoldName","timesRomanBoldWidth","timesItalicAscent","timesItalicDescent","timesItalicName","timesRomanItalicWidth","timesAscent","timesDescent","timesName","timesRomanWidth","symbolAscent","symbolDescent","symbolName","symbolWidth","zapfDingbatsAscent","zapfDingbatsDescent","zapfDingbatsName","zapfDingbatsWidth","pdfFontFamily","checkStyle","convert","getCharWidthInternal","fontFamilyEqual","lineReducer","equal","styleEqual","initializeInternals","encodings","WinAnsiEncoding","charOffset","fontFamilyPrototype","PdfAnnotation","internalColor","textFont","textBrush","nativeRectangle","initialHeight","tempLoacation","darkness","PdfLinkAnnotation","PdfActionLinkAnnotation","getSetAction","pdfAction","PdfDocumentLinkAnnotation","pdfDestination","ElementLayouter","layoutElement","getElement","param","layoutInternal","Layouter","getPaginateBounds","usePaginateBounds","paginateBounds","PdfLayoutFormat","layoutType","layoutPaginateBounds","boundsSet","baseFormat","break","PdfLayoutParams","layoutFormat","PdfLayoutResult","PdfBorders","leftPen","rightPen","topPen","bottomPen","defaultBorderPenLeft","defaultBorderPenRight","dashStyle","defaultBorderPenTop","defaultBorderPenBottom","PdfPaddings","leftPad","hasLeftPad","rightPad","hasRightPad","topPad","hasTopPad","bottomPad","hasBottomPad","PdfLayoutElement","beginPageLayout","endPageLayout","onBeginPageLayout","onEndPageLayout","newBound","bEmbedFonts","default","TextLayouter","currentBounds","pageResult","TextPageLayoutResult","remainder","layoutOnPage","getLayoutResult","PdfTextLayoutResult","lastLineBounds","checkCorrectBounds","stringResult","textFinished","FitElement","PdfTextWebLink","_isLastElement","PdfTextElement","getTextPageBounds","verticalShift","remainderText","lastLineTextBounds","elementValue","drawText","hasPointOverload","stringLayoutResult","previousPosition","calculateResultBounds","lineSize","maximumWidth","startPosition","isPdfTextElement","PdfUriAnnotation","pdfUriAction","uriAction","uniformResourceLocator","previousFontStyle","recalculateBounds","calculateBounds","uriAnnotation","url","defaultBorder","drawMultipleLineWithPoint","drawMultipleLineWithBounds","PdfNumbersConvertor","intArabic","numberStyle","Numeric","LowerLatin","arabicToLetter","toLowerCase","LowerRoman","arabicToRoman","UpperLatin","UpperRoman","retval","retvalM","generateNumber","retvalCM","retvalD","retvalCD","retvalC","retvalXC","retvalL","retvalXL","retvalX","retvalIX","retvalV","retvalIV","retvalI","arabic","stack","convertToLetter","appendChar","magnitude","numberstring","letterLimit","acsiiStartIndex","PdfTemplateValuePair","pdfTemplate","PdfMultipleValueField","drawLocation","PdfPageNumberField","internalNumberStyle","internalGetValue","PdfCompositeField","internalText","automaticField","arguments","PdfSingleValueField","painterGraphics","PdfPageCountField","PdfDestinationMode","PdfDestination","zoomFactor","initializePrimitive","destinationMode","destinationLocation","Location","simplePage","FitToPage","PdfFunction","mDictionary","PdfSampledFunction","checkParams","sizes","samples","setDomainAndRange","setSizeAndValues","PdfExtend","PdfLinearGradientMode","ShadingType","KnownColor","PdfBrushes","sBrushes","AliceBlue","AntiqueWhite","Aqua","Aquamarine","Azure","Beige","Bisque","Black","BlanchedAlmond","Blue","BlueViolet","Brown","BurlyWood","CadetBlue","Chartreuse","Chocolate","Coral","CornflowerBlue","Cornsilk","Crimson","Cyan","DarkBlue","DarkCyan","DarkGoldenrod","DarkGray","DarkGreen","DarkKhaki","DarkMagenta","DarkOliveGreen","DarkOrange","DarkOrchid","DarkRed","DarkSalmon","DarkSeaGreen","DarkSlateBlue","DarkSlateGray","DarkTurquoise","DarkViolet","DeepPink","DeepSkyBlue","DimGray","DodgerBlue","Firebrick","FloralWhite","ForestGreen","Fuchsia","Gainsboro","GhostWhite","Gold","Goldenrod","Gray","Green","GreenYellow","Honeydew","HotPink","IndianRed","Indigo","Ivory","Khaki","Lavender","LavenderBlush","LawnGreen","LemonChiffon","LightBlue","LightCoral","LightCyan","LightGoldenrodYellow","LightGray","LightGreen","LightPink","LightSalmon","LightSeaGreen","LightSkyBlue","LightSlateGray","LightSteelBlue","LightYellow","Lime","LimeGreen","Linen","Magenta","Maroon","MediumAquamarine","MediumBlue","MediumOrchid","MediumPurple","MediumSeaGreen","MediumSlateBlue","MediumSpringGreen","MediumTurquoise","MediumVioletRed","MidnightBlue","MintCream","MistyRose","Moccasin","NavajoWhite","Navy","OldLace","Olive","OliveDrab","Orange","OrangeRed","Orchid","PaleGoldenrod","PaleGreen","PaleTurquoise","PaleVioletRed","PapayaWhip","PeachPuff","Peru","Pink","Plum","PowderBlue","Purple","Red","RosyBrown","RoyalBlue","SaddleBrown","Salmon","SandyBrown","SeaGreen","SeaShell","Sienna","Silver","SkyBlue","SlateBlue","SlateGray","Snow","SpringGreen","SteelBlue","Tan","Teal","Thistle","Tomato","Transparent","Turquoise","Violet","Wheat","White","WhiteSmoke","Yellow","YellowGreen","colorName","getColorValue","PdfBlend","mFactors","mPositions","positionarray","mCount","generateColorBlend","positions","cBlend","PdfColorBlend","clrs","c1","c2","interpolate","colors","clonePdfBlend","factors","gcd","u","v","iU","precision","iV","gcdInt","mcolors","getFunction","step","samplesCount","colourComponents","getColorComponentsCount","maxComponentValue","getMaxComponentValue","setRange","func","mbrush","intervals","getIntervals","getSamplesValues","cloneColorBlend","maxValue","sampleCount","getGrayscaleSamples","getCmykSamples","getRgbSamples","getNextColor","positionLow","positionHi","getIndices","indexLow","indexHi","colorLow","colorHi","currPos","prev","PdfLinearGradientBrush","mColours","mColourBlend","initShading","mBlend","mBoundaries","extStart","extEnd","End","addPoints","point1","point2","subPoints","mulPoints","mulPoint","choosePoint","setPoints","mPointStart","mPointEnd","blend","interpolationColors","centre","coef","BackwardDiagonal","ForwardDiagonal","Horizontal","Vertical","radAngle","tan","p1","cp1","PdfRadialGradientBrush","mColour","mColourBlends","extend1","extEnd1","pointStart","pointEnd","radiusStart","radiusEnd","rBrush","mRadiusStart","mRadiusEnd","centerStart","centerEnd","colorStart","colorEnd","PdfBorderOverlapStyle","PdfGridStyleBase","gridBackgroundBrush","gridTextBrush","gridTextPen","gridFont","gridBackgroundImage","PdfGridStyle","gridCellSpacing","gridHorizontalOverflowType","bAllowHorizontalOverflow","gridCellPadding","gridBorderOverlapStyle","Overlap","PdfHorizontalOverflowType","LastPage","PdfGridCellStyle","gridCellBorders","PdfGridRowStyle","gridRowBackgroundBrush","setBackgroundBrush","cells","getCell","backgroundBrush","gridRowTextBrush","setTextBrush","gridRowTextPen","setTextPen","textPen","gridRowFont","gridRowBorder","setBorder","borders","setParent","gridRowBackgroundImage","setBackgroundImage","PdfGridCell","internalIsCellMergeContinue","internalIsRowMergeContinue","internalIsCellMergeStart","internalIsRowMergeStart","remaining","isFinish","gridRow","objectValue","PdfGrid","row","grid","isSingleGrid","ParentCell","isChildGrid","rowCount","rows","getRow","colCount","gridRowSpan","rowSpanExists","hasRowSpanSpan","cellStyle","cellHeight","measureHeight","colSpan","columnSpanExists","cellWidth","isComplete","measureWidth","webLink","layouter","getTextFont","cellPadding","cellSpacing","drawCellBackground","getBackgroundBrush","backgroundImage","getBackgroundImage","adjustContentLayoutArea","returnBounds","getStringFormat","rowSpan","border","cancelSubsequentSpans","allowHorizontalOverflow","rowOverflowIndex","adjustOuterLayoutArea","childGrid","childGridResult","imageBounds","getTextPen","getTextBrush","strFormat","innerLayoutArea","allowRowBreakAcrossPages","_rowHeight","splitChildRowIndex","fontSpilt","rowFontSplit","repeatFlag","layoutRect","PdfGridLayouter","PdfGridLayoutFormat","LayoutFormat","Paginate","setSpan","checkSpan","rowBreakHeightValue","rowBreakHeight","NestedGridLayoutResult","drawCellBorders","borderOverlapStyle","Inside","Square","isHeader","currentColIndex","columnSpan","isCellMergeContinue","span","totalWidth","getColumn","currentRowIndex","rowCollection","totalHeight","headers","getHeader","rowMergeComplete","cellIndex","calculateWidth","currentValue","hasColSpan","hasRowSpan","tempval","internalWidth","tempWidth","finsh","rowSpanRemainingHeight","PdfGridCellCollection","cell","tempcell","PdfGridColumn","columnWidth","isCustomWidth","PdfGridColumnCollection","internalColumns","measureColumnsWidth","initialWidth","isPageWidth","getDefaultWidths","subFactor","PdfGridRow","bRowSpanExists","gridCells","pdfGrid","rowStyle","gridRowBreakHeight","gridRowOverflowIndex","isRowHeightSet","rowHeight","rowWidth","gridResult","bColumnSpanExists","isRowMergeComplete","cellIn","rowin","isHeaderRow","rowWid","isrowFinish","isRowSpanRowHeightSet","noOfPageCount","isPageBreakRowSpanApplied","PdfGridRowCollection","addRow","temprow","PdfGridHeaderCollection","beginCellDraw","endCellDraw","bRepeatHeader","breakRow","gridColumns","gridRows","gridHeaders","gridInitialWidth","gridStyle","ispageWidth","ischildGrid","gridSize","measure","parentCell","onBeginCellDraw","raiseBeginCellDraw","onEndCellDraw","raiseEndCellDraw","hasChanged","currentRow","_gridLocation","currentCellIndex","maxSpan","isRowMergeContinue","isCellMergeStart","isRowMergeStart","maximumRowSpan","cellrowSpan","cellmaxSpan","cellcolSpan","hasColumnSpan","childGridColumnWidth","padding","columnCount","parentCellIndex","colCount_1","colCount_2","RowCount","ColCount","childGridColWidth","colWidth","isGridSplit","isRearranged","pageBounds","listOfNavigatePages","getFormat","gridLayoutFormat","currentPageBounds","currentGraphics","FitColumnsToPage","Grid","startLocation","hType","horizontalOverflowType","determineColumnDrawRanges","columnRanges","startColumn","endColumn","cellWidths","availableWidth","subWidths","layoutedPages","startPage","cellBounds","returnObject","cellStartIndex","cellEndIndex","raiseBeforePageLayout","drawHeader","headerHeight","headerResult","drawRow","repeatRowIndex","OnePage","getNextPageformat","repeatRow","flag","originalHeight","rowResult","rowIndex","tempResult","raisePageLayouted","cancel","isPaginate","isRowBreaksNextPage","i_2","repeatHeader","j_1","headerRepeat","j_2","tempResult1","i_3","checkIsFisished","i_4","i_5","recalHeight","ReCalculateHeight","startIndex","endIndex","pageGraphics","location_2","totalwidth","childGridCell","i_6","bottomPadding","isPdfGrid","maximumCellBoundsWidth","largeNavigatePage","rowLayoutBoundsWidth","NextPage","reArrangePages","FinishedDrawingCell","nextPage","pageindex","CheckIfDefaultFormat","defaultFormat","measureTrailingSpaces","noClip","RaiseBeforeCellDraw","PdfGridBeginCellDrawEventArgs","raiseAfterCellDraw","cellstyle","PdfGridEndCellDrawEventArgs","count_1","isChanged","PdfGridLayoutResult","newHeight","raiseBeginPageLayout","PdfGridBeginPageLayoutEventArgs","startRowIndex","PdfGridEndPageLayoutEventArgs","raiseEndPageLayout","result_1","RowLayoutResult","rowHeightWithSpan","allowRowBreak","currRowIndex","i_7","currentBoundsHeight","currCell","nextCell","newSpan","headerCell","nextHeaderCell","isFit","calculatedHeight","FitPage","drawRowWithBreak","repeatRowNumber","isFitToCell","slr","loc","cancelSpans","tempValue","currentHeight","column","calculateHeight","gridHeight","gridColumnWidth","cellstyle1","rowBreakPageHeightCellIndex","childheight","currentLocation","GridCellEventArgs","gridRowIndex","gridCellIndex","gridBounds","bSkip","PdfCancelEventArgs","isCancel","BeginPageLayoutEventArgs","EndPageLayoutEventArgs","nextPdfPage","startRow","bIsFinished","layoutedBounds","ShapeLayouter","shapeLayoutBounds","getBounds","shapeBounds","ShapeLayoutResult","endArgs","getNextShapeBounds","curBounds","sBounds","fitToPage","checkCorrectCurrentBounds","fitsToBounds","shapeFinished","getDrawBounds","drawShape","getPageResultBounds","drawGraphicsHelper","bottomCellPadding","splitDiff","borderWidth","olderPdfForm","totalPageSize","PdfShapeElement","getBoundsInternal","drawShapeHelper","apply","PdfDrawElement","mpen","PdfFillElement","obtainPen","PdfPath","mfillMode","mpoints","getLastPoint","mpathTypes","widthValue","addArc","getBezierArcPoints","addBezier","addEllipse","closeFigure","addLine","addPath","addPie","addPoint","addPolygon","addRectangle","mStartFigure","closeAllFigures","startPath","isXps","pointCount","xmin","xmax","ymin","ymax","isBeziers3","PdfRectangleArea","PdfEllipsePart","PdfArc","argu1","PdfTrueTypeFont","getUnicodeLineWidth","codeWidth","createFontInternal","calculateStyle","iStyle","equalFont","enableCache","isEmbed","isUnicodeFont","resultGlyph","glyphIndices","PdfPageTemplateElement","dockStyle","resetAlignment","alignmentStyle","setAlignment","isForeground","templateType","updateDocking","InitiateBounds","dock","canBeSet","TopLeft","MiddleLeft","BottomLeft","TopCenter","TopRight","MiddleRight","BottomRight","BottomCenter","MiddleCenter","getAlignmentBounds","getDockBounds","getSimpleAlignmentBounds","getTemplateAlignmentBounds","actualBounds","convertSign","getSimpleDockBounds","getTemplateDockBounds","Infinity"],"mappings":"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AU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,IAAU,IAAU,KACzC,CAAC,IAAU,IAAU,KACrB,CAAC,IAAU,IAAU,MAEzB7iD,KAAK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,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,KAAK,EAClDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,KAAK,EAClDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,KAAK,EAClDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,KAAK,EAClDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,KAAK,EAClDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EAEjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,KAAM,IAAI,EACjDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,IAAI,EAClDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,IAAI,EAClDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD,SAAS,MAAO,KAAK,EACnDJ,KAAKsjD,yBAAyBljD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AAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,CAAC,GAMxCzD,EAA8B6D,kBAAoB,CAC9C,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,I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"}