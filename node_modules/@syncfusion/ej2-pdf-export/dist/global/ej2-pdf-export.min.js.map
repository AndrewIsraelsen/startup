{"version":3,"file":"ej2-pdf-export.min.js","sources":["../../src/implementation/collections/utils.js","../../src/implementation/collections/dictionary.js","../../src/implementation/primitives/pdf-name.js","../../src/implementation/input-output/pdf-operators.js","../../src/implementation/input-output/pdf-dictionary-properties.js","../../src/implementation/primitives/pdf-dictionary.js","../../src/implementation/primitives/pdf-number.js","../../src/implementation/primitives/pdf-array.js","../../src/implementation/primitives/pdf-stream.js","../../src/implementation/primitives/pdf-string.js","../../src/implementation/primitives/pdf-reference.js","../../src/implementation/actions/action.js","../../src/implementation/actions/uri-action.js","../../src/implementation/graphics/enum.js","../../src/implementation/graphics/pdf-color.js","../../src/implementation/drawing/pdf-drawing.js","../../src/implementation/graphics/brushes/pdf-brush.js","../../src/implementation/graphics/brushes/pdf-solid-brush.js","../../src/implementation/graphics/fonts/enum.js","../../src/implementation/graphics/fonts/pdf-string-format.js","../../src/implementation/graphics/fonts/string-tokenizer.js","../../src/implementation/graphics/fonts/string-layouter.js","../../src/implementation/graphics/fonts/pdf-font.js","../../src/implementation/input-output/pdf-writer.js","../../src/implementation/input-output/enum.js","../../src/implementation/input-output/pdf-main-object-collection.js","../../src/implementation/document/pdf-document-base.js","../../src/implementation/input-output/cross-table.js","../../src/implementation/primitives/pdf-boolean.js","../../src/implementation/document/pdf-viewer-preferences.js","../../src/implementation/document/pdf-catalog.js","../../src/implementation/input-output/pdf-cross-table.js","../../src/implementation/pages/pdf-page-size.js","../../src/implementation/pages/enum.js","../../src/implementation/graphics/pdf-margins.js","../../src/implementation/pages/pdf-page-settings.js","../../src/implementation/input-output/pdf-stream-writer.js","../../src/implementation/graphics/pdf-pen.js","../../src/implementation/graphics/pdf-transformation-matrix.js","../../src/implementation/graphics/constants.js","../../src/implementation/collections/object-object-pair/dictionary.js","../../src/implementation/graphics/pdf-transparency.js","../../src/implementation/document/automatic-fields/automatic-field-info-collection.js","../../src/implementation/graphics/figures/base/graphics-element.js","../../src/implementation/document/automatic-fields/automatic-field.js","../../src/implementation/document/automatic-fields/automatic-field-info.js","../../src/implementation/graphics/images/byte-array.js","../../src/implementation/graphics/images/image-decoder.js","../../src/implementation/graphics/unit-convertor.js","../../src/implementation/graphics/images/pdf-image.js","../../src/implementation/graphics/images/pdf-bitmap.js","../../src/implementation/graphics/fonts/ttf-table-info.js","../../src/implementation/graphics/fonts/ttf-name-table.js","../../src/implementation/graphics/fonts/ttf-name-record.js","../../src/implementation/graphics/fonts/ttf-head-table.js","../../src/implementation/graphics/fonts/ttf-metrics.js","../../src/implementation/graphics/fonts/ttf-horizontal-header-table.js","../../src/implementation/graphics/fonts/ttf-OS2-Table.js","../../src/implementation/graphics/fonts/ttf-post-table.js","../../src/implementation/graphics/fonts/ttf-long-hor-metric.js","../../src/implementation/graphics/fonts/ttf-cmap-sub-table.js","../../src/implementation/graphics/fonts/ttf-cmap-table.js","../../src/implementation/graphics/fonts/ttf-glyph-info.js","../../src/implementation/graphics/fonts/ttf-loca-table.js","../../src/implementation/graphics/fonts/ttf-apple-cmap-sub-table.js","../../src/implementation/graphics/fonts/ttf-microsoft-cmap-sub-table.js","../../src/implementation/graphics/fonts/ttf-trimmed-cmap-sub-table.js","../../src/implementation/graphics/fonts/ttf-glyph-header.js","../../src/implementation/input-output/big-endian-writer.js","../../src/implementation/graphics/fonts/ttf-reader.js","../../src/implementation/graphics/fonts/pdf-font-metrics.js","../../src/implementation/graphics/fonts/unicode-true-type-font.js","../../src/implementation/graphics/fonts/rtl/rtl-text-shape.js","../../src/implementation/graphics/fonts/rtl/rtl-bidirectional.js","../../src/implementation/graphics/fonts/rtl-renderer.js","../../src/implementation/graphics/figures/enum.js","../../src/implementation/graphics/brushes/pdf-gradient-brush.js","../../src/implementation/graphics/figures/pdf-template.js","../../src/implementation/graphics/pdf-resources.js","../../src/implementation/graphics/brushes/pdf-tiling-brush.js","../../src/implementation/graphics/pdf-graphics.js","../../src/implementation/pages/pdf-page-layer.js","../../src/implementation/general/pdf-collection.js","../../src/implementation/pages/pdf-page-layer-collection.js","../../src/implementation/pages/pdf-page-base.js","../../src/implementation/annotations/annotation-collection.js","../../src/implementation/pages/pdf-page.js","../../src/implementation/pages/page-added-event-arguments.js","../../src/implementation/pages/pdf-section-page-collection.js","../../src/implementation/document/pdf-document-template.js","../../src/implementation/pages/pdf-section-templates.js","../../src/implementation/pages/pdf-section.js","../../src/implementation/pages/pdf-section-collection.js","../../src/implementation/pages/pdf-document-page-collection.js","../../src/implementation/general/pdf-cache-collection.js","../../src/implementation/document/pdf-document.js","../../src/implementation/graphics/fonts/pdf-standard-font-metrics-factory.js","../../src/implementation/graphics/fonts/pdf-standard-font.js","../../src/implementation/annotations/annotation.js","../../src/implementation/annotations/link-annotation.js","../../src/implementation/annotations/action-link-annotation.js","../../src/implementation/annotations/document-link-annotation.js","../../src/implementation/graphics/figures/base/element-layouter.js","../../src/implementation/structured-elements/grid/styles/pdf-borders.js","../../src/implementation/graphics/figures/layout-element.js","../../src/implementation/graphics/figures/base/text-layouter.js","../../src/implementation/graphics/figures/text-element.js","../../src/implementation/annotations/uri-annotation.js","../../src/implementation/annotations/pdf-text-web-link.js","../../src/implementation/document/automatic-fields/pdf-numbers-convertor.js","../../src/implementation/document/automatic-fields/pdf-template-value-pair.js","../../src/implementation/document/automatic-fields/multiple-value-field.js","../../src/implementation/document/automatic-fields/pdf-page-number-field.js","../../src/implementation/document/automatic-fields/composite-field.js","../../src/implementation/document/automatic-fields/single-value-field.js","../../src/implementation/document/automatic-fields/page-count-field.js","../../src/implementation/general/enum.js","../../src/implementation/graphics/brushes/enum.js","../../src/implementation/general/pdf-destination.js","../../src/implementation/general/functions/pdf-function.js","../../src/implementation/general/functions/pdf-sampled-function.js","../../src/implementation/graphics/brushes/pdf-brushes.js","../../src/implementation/graphics/brushes/pdf-blend.js","../../src/implementation/graphics/brushes/pdf-color-blend.js","../../src/implementation/graphics/brushes/pdf-linear-gradient-brush.js","../../src/implementation/graphics/brushes/pdf-radial-gradient-brush.js","../../src/implementation/structured-elements/tables/light-tables/enum.js","../../src/implementation/structured-elements/grid/styles/style.js","../../src/implementation/structured-elements/grid/pdf-grid-cell.js","../../src/implementation/structured-elements/grid/pdf-grid-column.js","../../src/implementation/structured-elements/grid/pdf-grid-row.js","../../src/implementation/structured-elements/grid/pdf-grid.js","../../src/implementation/structured-elements/grid/layout/grid-layouter.js","../../src/implementation/graphics/figures/base/shape-layouter.js","../../src/implementation/graphics/figures/base/pdf-shape-element.js","../../src/implementation/graphics/figures/base/draw-element.js","../../src/implementation/graphics/figures/base/fill-element.js","../../src/implementation/graphics/figures/path.js","../../src/implementation/graphics/figures/rectangle-area.js","../../src/implementation/graphics/figures/ellipse-part.js","../../src/implementation/graphics/figures/arc.js","../../src/implementation/graphics/fonts/pdf-true-type-font.js","../../src/implementation/pages/pdf-page-template-element.js"],"sourcesContent":["/**\n * @private\n * @hidden\n */\nexport function defaultToString(item) {\n    // if (item === null) {\n    //     return 'COLLECTION_NULL';\n    // } else if (typeof item === 'undefined') {\n    //     return 'COLLECTION_UNDEFINED';\n    // } else if (Object.prototype.toString.call(item) === '[object String]') {\n    if (Object.prototype.toString.call(item) === '[object String]') {\n        return '$s' + item;\n    }\n    else {\n        return '$o' + item.toString();\n    }\n}\n","/**\n * Dictionary.ts class for EJ2-PDF\n * @private\n * @hidden\n */\nimport { defaultToString } from './utils';\n/**\n * @private\n * @hidden\n */\nvar Dictionary = /** @class */ (function () {\n    /**\n     * @private\n     * @hidden\n     */\n    function Dictionary(toStringFunction) {\n        this.table = {};\n        this.nElements = 0;\n        this.toStr = toStringFunction || defaultToString;\n    }\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.getValue = function (key) {\n        var pair = this.table['$' + this.toStr(key)];\n        if (typeof pair === 'undefined') {\n            return undefined;\n        }\n        return pair.value;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.setValue = function (key, value) {\n        // if (typeof key === 'undefined' || typeof value === 'undefined') {\n        //     return undefined;\n        // }\n        var ret;\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        // if (typeof previousElement === 'undefined') {\n        this.nElements++;\n        ret = undefined;\n        // }\n        this.table[k] = {\n            key: key,\n            value: value\n        };\n        return ret;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.remove = function (key) {\n        var k = '$' + this.toStr(key);\n        var previousElement = this.table[k];\n        // if (typeof previousElement !== 'undefined') {\n        delete this.table[k];\n        this.nElements--;\n        return previousElement.value;\n        // }\n        // return undefined;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.keys = function () {\n        var keysArray = [];\n        var namesOfKeys = Object.keys(this.table);\n        for (var index1 = 0; index1 < namesOfKeys.length; index1++) {\n            // if (Object.prototype.hasOwnProperty.call(this.table, namesOfKeys[index1])) {\n            var pair1 = this.table[namesOfKeys[index1]];\n            keysArray.push(pair1.key);\n            // }\n        }\n        return keysArray;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.values = function () {\n        var valuesArray = [];\n        var namesOfValues = Object.keys(this.table);\n        for (var index2 = 0; index2 < namesOfValues.length; index2++) {\n            // if (Object.prototype.hasOwnProperty.call(this.table, namesOfValues[index2])) {\n            var pair2 = this.table[namesOfValues[index2]];\n            valuesArray.push(pair2.value);\n            // }\n        }\n        return valuesArray;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.containsKey = function (key) {\n        var retutnValue = true;\n        if (typeof this.getValue(key) === 'undefined') {\n            retutnValue = true;\n        }\n        else {\n            retutnValue = false;\n        }\n        return !retutnValue;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.clear = function () {\n        this.table = {};\n        this.nElements = 0;\n    };\n    /**\n     * @private\n     * @hidden\n     */\n    Dictionary.prototype.size = function () {\n        return this.nElements;\n    };\n    return Dictionary;\n}()); // End of dictionary\nexport { Dictionary };\n","/**\n * `PdfName` class is used to perform name (element names) related primitive operations.\n * @private\n */\nvar PdfName = /** @class */ (function () {\n    function PdfName(value) {\n        /**\n         * `Start symbol` of the name object.\n         * @default /\n         * @private\n         */\n        this.stringStartMark = '/';\n        /**\n         * `Value` of the element.\n         * @private\n         */\n        this.internalValue = '';\n        /**\n         * Indicates if the object is currently in `saving state or not`.\n         * @default false\n         * @private\n         */\n        this.isSaving6 = false;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position6 = -1;\n        this.internalValue = this.normalizeValue(value);\n    }\n    Object.defineProperty(PdfName.prototype, \"status\", {\n        //property\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status6;\n        },\n        set: function (value) {\n            this.status6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving6;\n        },\n        set: function (value) {\n            this.isSaving6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index6;\n        },\n        set: function (value) {\n            this.index6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position6;\n        },\n        set: function (value) {\n            this.position6 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfName.prototype, \"value\", {\n        /**\n         * Gets or sets the `value` of the object.\n         * @private\n         */\n        get: function () {\n            return this.internalValue;\n        },\n        set: function (value) {\n            // if (value !== this.value) {\n            var val = value;\n            if (value !== null && value.length > 0) {\n                // val = (value.substring(0, 1) === this.stringStartMark) ? value.substring(1) : value;\n                val = value;\n                this.internalValue = this.normalizeValue(val);\n            }\n            else {\n                this.internalValue = val;\n            }\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //public methods\n    /**\n     * `Saves` the name using the specified writer.\n     * @private\n     */\n    PdfName.prototype.save = function (writer) {\n        // if (writer === null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        writer.write(this.toString());\n    };\n    /**\n     * Gets `string` representation of the primitive.\n     * @private\n     */\n    PdfName.prototype.toString = function () {\n        return (this.stringStartMark + this.escapeString(this.value));\n    };\n    /**\n     * Creates a `copy of PdfName`.\n     * @private\n     */\n    PdfName.prototype.clone = function (crossTable) {\n        var newName = new PdfName();\n        newName.value = this.internalValue;\n        return newName;\n    };\n    /**\n     * Replace some characters with its `escape sequences`.\n     * @private\n     */\n    PdfName.prototype.escapeString = function (stringValue) {\n        // if (str === null) {\n        //     throw new Error('ArgumentNullException : str');\n        // }\n        // if (str === '') {\n        //     return str;\n        // }\n        var result = '';\n        var len = 0;\n        for (var i = 0, len_1 = stringValue.length; i < len_1; i++) {\n            var ch = stringValue[i];\n            var index = PdfName.delimiters.indexOf(ch);\n            // switch (ch) {\n            //     case '\\r' :\n            //         result = result + '\\\\r';\n            //         break;\n            //     case '\\n' :\n            //         result = result + '\\n';\n            //         break;\n            //     case '(' :\n            //     case ')' :\n            //     case '\\\\' :\n            //         //result.Append( '\\\\' ).Append( ch );\n            //         result = result + ch;\n            //         break;\n            //     default :\n            //         result = result + ch;\n            //         break;\n            // }\n            result = result + ch;\n        }\n        return result;\n    };\n    //methiods\n    /**\n     * Replace a symbol with its code with the precedence of the `sharp sign`.\n     * @private\n     */\n    PdfName.prototype.normalizeValue = function (value, c) {\n        // if (typeof c === undefined) {\n        //     let str : string = value;\n        //     for (let i : number = 0; i < PdfName.replacements.length; i++) {\n        //         str = this.normalizeValue(str, c);\n        //     }\n        //     return str;\n        // } else {\n        var strFormat = '#{0:X}';\n        //return value.replace(c.toString(),String.format(strFormat,c));\n        return value;\n        // }\n    };\n    /**\n     * PDF `special characters`.\n     * @private\n     */\n    PdfName.delimiters = '()<>[]{}/%}';\n    /**\n     * The symbols that are not allowed in PDF names and `should be replaced`.\n     * @private\n     */\n    PdfName.replacements = [' ', '\\t', '\\n', '\\r'];\n    return PdfName;\n}());\nexport { PdfName };\n","/**\n * PdfOperators.ts class for EJ2-PDF\n * Class of string PDF common operators.\n * @private\n */\nvar Operators = /** @class */ (function () {\n    /**\n     * Create an instance of `PdfOperator` class.\n     * @private\n     */\n    function Operators() {\n        /**\n         * Specifies the value of `test`.\n         * @private\n         */\n        this.forTest = 'test';\n        this.forTest = Operators.obj;\n    }\n    /**\n     * Specifies the value of `obj`.\n     * @private\n     */\n    Operators.obj = 'obj';\n    /**\n     * Specifies the value of `endObj`.\n     * @private\n     */\n    Operators.endObj = 'endobj';\n    /**\n     * Specifies the value of `R`.\n     * @private\n     */\n    Operators.r = 'R';\n    /**\n     * Specifies the value of ` `.\n     * @private\n     */\n    Operators.whiteSpace = ' ';\n    /**\n     * Specifies the value of `/`.\n     * @private\n     */\n    Operators.slash = '/';\n    /**\n     * Specifies the value of `\\r\\n`.\n     * @private\n     */\n    Operators.newLine = '\\r\\n';\n    /**\n     * Specifies the value of `stream`.\n     * @private\n     */\n    Operators.stream = 'stream';\n    /**\n     * Specifies the value of `endStream`.\n     * @private\n     */\n    Operators.endStream = 'endstream';\n    /**\n     * Specifies the value of `xref`.\n     * @private\n     */\n    Operators.xref = 'xref';\n    /**\n     * Specifies the value of `f`.\n     * @private\n     */\n    Operators.f = 'f';\n    /**\n     * Specifies the value of `n`.\n     * @private\n     */\n    Operators.n = 'n';\n    /**\n     * Specifies the value of `trailer`.\n     * @private\n     */\n    Operators.trailer = 'trailer';\n    /**\n     * Specifies the value of `startxref`.\n     * @private\n     */\n    Operators.startxref = 'startxref';\n    /**\n     * Specifies the value of `eof`.\n     * @private\n     */\n    Operators.eof = '%%EOF';\n    /**\n     * Specifies the value of `header`.\n     * @private\n     */\n    Operators.header = '%PDF-1.5';\n    /**\n     * Specifies the value of `beginText`.\n     * @private\n     */\n    Operators.beginText = 'BT';\n    /**\n     * Specifies the value of `endText`.\n     * @private\n     */\n    Operators.endText = 'ET';\n    /**\n     * Specifies the value of `m`.\n     * @private\n     */\n    Operators.beginPath = 'm';\n    /**\n     * Specifies the value of `l`.\n     * @private\n     */\n    Operators.appendLineSegment = 'l';\n    /**\n     * Specifies the value of `S`.\n     * @private\n     */\n    Operators.stroke = 'S';\n    /**\n     * Specifies the value of `f`.\n     * @private\n     */\n    Operators.fill = 'f';\n    /**\n     * Specifies the value of `f*`.\n     * @private\n     */\n    Operators.fillEvenOdd = 'f*';\n    /**\n     * Specifies the value of `B`.\n     * @private\n     */\n    Operators.fillStroke = 'B';\n    /**\n     * Specifies the value of `B*`.\n     * @private\n     */\n    Operators.fillStrokeEvenOdd = 'B*';\n    /**\n     * Specifies the value of `c`.\n     * @private\n     */\n    Operators.appendbeziercurve = 'c';\n    /**\n     * Specifies the value of `re`.\n     * @private\n     */\n    Operators.appendRectangle = 're';\n    /**\n     * Specifies the value of `q`.\n     * @private\n     */\n    Operators.saveState = 'q';\n    /**\n     * Specifies the value of `Q`.\n     * @private\n     */\n    Operators.restoreState = 'Q';\n    /**\n     * Specifies the value of `Do`.\n     * @private\n     */\n    Operators.paintXObject = 'Do';\n    /**\n     * Specifies the value of `cm`.\n     * @private\n     */\n    Operators.modifyCtm = 'cm';\n    /**\n     * Specifies the value of `Tm`.\n     * @private\n     */\n    Operators.modifyTM = 'Tm';\n    /**\n     * Specifies the value of `w`.\n     * @private\n     */\n    Operators.setLineWidth = 'w';\n    /**\n     * Specifies the value of `J`.\n     * @private\n     */\n    Operators.setLineCapStyle = 'J';\n    /**\n     * Specifies the value of `j`.\n     * @private\n     */\n    Operators.setLineJoinStyle = 'j';\n    /**\n     * Specifies the value of `d`.\n     * @private\n     */\n    Operators.setDashPattern = 'd';\n    /**\n     * Specifies the value of `i`.\n     * @private\n     */\n    Operators.setFlatnessTolerance = 'i';\n    /**\n     * Specifies the value of `h`.\n     * @private\n     */\n    Operators.closePath = 'h';\n    /**\n     * Specifies the value of `s`.\n     * @private\n     */\n    Operators.closeStrokePath = 's';\n    /**\n     * Specifies the value of `b`.\n     * @private\n     */\n    Operators.closeFillStrokePath = 'b';\n    /**\n     * Specifies the value of `setCharacterSpace`.\n     * @private\n     */\n    Operators.setCharacterSpace = 'Tc';\n    /**\n     * Specifies the value of `setWordSpace`.\n     * @private\n     */\n    Operators.setWordSpace = 'Tw';\n    /**\n     * Specifies the value of `setHorizontalScaling`.\n     * @private\n     */\n    Operators.setHorizontalScaling = 'Tz';\n    /**\n     * Specifies the value of `setTextLeading`.\n     * @private\n     */\n    Operators.setTextLeading = 'TL';\n    /**\n     * Specifies the value of `setFont`.\n     * @private\n     */\n    Operators.setFont = 'Tf';\n    /**\n     * Specifies the value of `setRenderingMode`.\n     * @private\n     */\n    Operators.setRenderingMode = 'Tr';\n    /**\n     * Specifies the value of `setTextRise`.\n     * @private\n     */\n    Operators.setTextRise = 'Ts';\n    /**\n     * Specifies the value of `setTextScaling`.\n     * @private\n     */\n    Operators.setTextScaling = 'Tz';\n    /**\n     * Specifies the value of `setCoords`.\n     * @private\n     */\n    Operators.setCoords = 'Td';\n    /**\n     * Specifies the value of `goToNextLine`.\n     * @private\n     */\n    Operators.goToNextLine = 'T*';\n    /**\n     * Specifies the value of `setText`.\n     * @private\n     */\n    Operators.setText = 'Tj';\n    /**\n     * Specifies the value of `setTextWithFormatting`.\n     * @private\n     */\n    Operators.setTextWithFormatting = 'TJ';\n    /**\n     * Specifies the value of `setTextOnNewLine`.\n     * @private\n     */\n    Operators.setTextOnNewLine = '\\'';\n    /**\n     * Specifies the value of `selectcolorspaceforstroking`.\n     * @private\n     */\n    Operators.selectcolorspaceforstroking = 'CS';\n    /**\n     * Specifies the value of `selectcolorspacefornonstroking`.\n     * @private\n     */\n    Operators.selectcolorspacefornonstroking = 'cs';\n    /**\n     * Specifies the value of `setrbgcolorforstroking`.\n     * @private\n     */\n    Operators.setrbgcolorforstroking = 'RG';\n    /**\n     * Specifies the value of `setrbgcolorfornonstroking`.\n     * @private\n     */\n    Operators.setrbgcolorfornonstroking = 'rg';\n    /**\n     * Specifies the value of `K`.\n     * @private\n     */\n    Operators.setcmykcolorforstroking = 'K';\n    /**\n     * Specifies the value of `k`.\n     * @private\n     */\n    Operators.setcmykcolorfornonstroking = 'k';\n    /**\n     * Specifies the value of `G`.\n     * @private\n     */\n    Operators.setgraycolorforstroking = 'G';\n    /**\n     * Specifies the value of `g`.\n     * @private\n     */\n    Operators.setgraycolorfornonstroking = 'g';\n    /**\n     * Specifies the value of `W`.\n     * @private\n     */\n    Operators.clipPath = 'W';\n    /**\n     * Specifies the value of `clipPathEvenOdd`.\n     * @private\n     */\n    Operators.clipPathEvenOdd = 'W*';\n    /**\n     * Specifies the value of `n`.\n     * @private\n     */\n    Operators.endPath = 'n';\n    /**\n     * Specifies the value of `setGraphicsState`.\n     * @private\n     */\n    Operators.setGraphicsState = 'gs';\n    /**\n     * Specifies the value of `%`.\n     * @private\n     */\n    Operators.comment = '%';\n    /**\n     * Specifies the value of `*`.\n     * @private\n     */\n    Operators.evenOdd = '*';\n    /**\n     * Specifies the value of `M`.\n     * @private\n     */\n    Operators.setMiterLimit = 'M';\n    /**\n     * Same as SC, but also supports Pattern, Separation, DeviceN, and ICCBased color spaces. For non-stroking operations.\n     * @public\n     */\n    Operators.setColorAndPattern = 'scn';\n    /**\n     * Same as SC, but also supports Pattern, Separation, DeviceN, and ICCBased color spaces. For stroking.\n     */\n    Operators.setColorAndPatternStroking = 'SCN';\n    return Operators;\n}());\nexport { Operators };\n","/**\n * dictionaryProperties.ts class for EJ2-PDF\n * PDF dictionary properties.\n * @private\n */\nvar DictionaryProperties = /** @class */ (function () {\n    /**\n     * Initialize an instance for `PdfDictionaryProperties` class.\n     * @private\n     */\n    function DictionaryProperties() {\n        /**\n         * Specifies the value of `Pages`.\n         * @private\n         */\n        this.pages = 'Pages';\n        /**\n         * Specifies the value of `Kids`.\n         * @private\n         */\n        this.kids = 'Kids';\n        /**\n         * Specifies the value of `Count`.\n         * @private\n         */\n        this.count = 'Count';\n        /**\n         * Specifies the value of `Resources`.\n         * @private\n         */\n        this.resources = 'Resources';\n        /**\n         * Specifies the value of `Type`.\n         * @private\n         */\n        this.type = 'Type';\n        /**\n         * Specifies the value of `Size`.\n         * @private\n         */\n        this.size = 'Size';\n        /**\n         * Specifies the value of `MediaBox`.\n         * @private\n         */\n        this.mediaBox = 'MediaBox';\n        /**\n         * Specifies the value of `Parent`.\n         * @private\n         */\n        this.parent = 'Parent';\n        /**\n         * Specifies the value of `Root`.\n         * @private\n         */\n        this.root = 'Root';\n        /**\n         * Specifies the value of `DecodeParms`.\n         * @private\n         */\n        this.decodeParms = 'DecodeParms';\n        /**\n         * Specifies the value of `Filter`.\n         * @private\n         */\n        this.filter = 'Filter';\n        /**\n         * Specifies the value of `Font`.\n         * @private\n         */\n        this.font = 'Font';\n        /**\n         * Specifies the value of `Type1`.\n         * @private\n         */\n        this.type1 = 'Type1';\n        /**\n         * Specifies the value of `BaseFont`.\n         * @private\n         */\n        this.baseFont = 'BaseFont';\n        /**\n         * Specifies the value of `Encoding`.\n         * @private\n         */\n        this.encoding = 'Encoding';\n        /**\n         * Specifies the value of `Subtype`.\n         * @private\n         */\n        this.subtype = 'Subtype';\n        /**\n         * Specifies the value of `Contents`.\n         * @private\n         */\n        this.contents = 'Contents';\n        /**\n         * Specifies the value of `ProcSet`.\n         * @private\n         */\n        this.procset = 'ProcSet';\n        /**\n         * Specifies the value of `ColorSpace`.\n         * @private\n         */\n        this.colorSpace = 'ColorSpace';\n        /**\n         * Specifies the value of `ExtGState`.\n         * @private\n         */\n        this.extGState = 'ExtGState';\n        /**\n         * Specifies the value of `Pattern`.\n         * @private\n         */\n        this.pattern = 'Pattern';\n        /**\n         * Specifies the value of `XObject`.\n         * @private\n         */\n        this.xObject = 'XObject';\n        /**\n         * Specifies the value of `Length`.\n         * @private\n         */\n        this.length = 'Length';\n        /**\n         * Specifies the value of `Width`.\n         * @private\n         */\n        this.width = 'Width';\n        /**\n         * Specifies the value of `Height`.\n         * @private\n         */\n        this.height = 'Height';\n        /**\n         * Specifies the value of `BitsPerComponent`.\n         * @private\n         */\n        this.bitsPerComponent = 'BitsPerComponent';\n        /**\n         * Specifies the value of `Image`.\n         * @private\n         */\n        this.image = 'Image';\n        /**\n         * Specifies the value of `dctdecode`.\n         * @private\n         */\n        this.dctdecode = 'DCTDecode';\n        /**\n         * Specifies the value of `Columns`.\n         * @private\n         */\n        this.columns = 'Columns';\n        /**\n         * Specifies the value of `BlackIs1`.\n         * @private\n         */\n        this.blackIs1 = 'BlackIs1';\n        /**\n         * Specifies the value of `K`.\n         * @private\n         */\n        this.k = 'K';\n        /**\n         * Specifies the value of `S`.\n         * @private\n         */\n        this.s = 'S';\n        /**\n         * Specifies the value of `Predictor`.\n         * @private\n         */\n        this.predictor = 'Predictor';\n        /**\n         * Specifies the value of `DeviceRGB`.\n         * @private\n         */\n        this.deviceRgb = 'DeviceRGB';\n        /**\n         * Specifies the value of `Next`.\n         * @private\n         */\n        this.next = 'Next';\n        /**\n         * Specifies the value of `Action`.\n         * @private\n         */\n        this.action = 'Action';\n        /**\n         * Specifies the value of `Link`.\n         * @private\n         */\n        this.link = 'Link';\n        /**\n         *\n         * Specifies the value of `A`.\n         * @private\n         */\n        this.a = 'A';\n        /**\n         * Specifies the value of `Annot`.\n         * @private\n         */\n        this.annot = 'Annot';\n        /**\n         * Specifies the value of `P`.\n         * @private\n         */\n        this.p = 'P';\n        /**\n         * Specifies the value of `C`.\n         * @private\n         */\n        this.c = 'C';\n        /**\n         * Specifies the value of `Rect`.\n         * @private\n         */\n        this.rect = 'Rect';\n        /**\n         * Specifies the value of `URI`.\n         * @private\n         */\n        this.uri = 'URI';\n        /**\n         * Specifies the value of `Annots`.\n         * @private\n         */\n        this.annots = 'Annots';\n        /**\n         * Specifies the value of `ca`.\n         * @private\n         */\n        this.ca = 'ca';\n        /**\n         * Specifies the value of `CA`.\n         * @private\n         */\n        this.CA = 'CA';\n        /**\n         * Specifies the value of `XYZ`.\n         * @private\n         */\n        this.xyz = 'XYZ';\n        /**\n         * Specifies the value of `Fit`.\n         * @private\n         */\n        this.fit = 'Fit';\n        /**\n         * Specifies the value of `Dest`.\n         * @private\n         */\n        this.dest = 'Dest';\n        /**\n         * Specifies the value of `BM`.\n         * @private\n         */\n        this.BM = 'BM';\n        /**\n         * Specifies the value of `flatedecode`.\n         * @private\n         */\n        this.flatedecode = 'FlateDecode';\n        /**\n         * Specifies the value of `Rotate`.\n         * @private\n         */\n        this.rotate = 'Rotate';\n        /**\n         * Specifies the value of 'bBox'.\n         * @private\n         */\n        this.bBox = 'BBox';\n        /**\n         * Specifies the value of 'form'.\n         * @private\n         */\n        this.form = 'Form';\n        /**\n         * Specifies the value of 'w'.\n         * @private\n         */\n        this.w = 'W';\n        /**\n         * Specifies the value of 'cIDFontType2'.\n         * @private\n         */\n        this.cIDFontType2 = 'CIDFontType2';\n        /**\n         * Specifies the value of 'cIDToGIDMap'.\n         * @private\n         */\n        this.cIDToGIDMap = 'CIDToGIDMap';\n        /**\n         * Specifies the value of 'cIDFontType0C'.\n         * @private\n         */\n        this.cIDFontType0C = 'CIDFontType0C';\n        /**\n         * Specifies the value of 'identity'.\n         * @private\n         */\n        this.identity = 'Identity';\n        /**\n         * Specifies the value of 'dw'.\n         * @private\n         */\n        this.dw = 'DW';\n        /**\n         * Specifies the value of 'fontDescriptor'.\n         * @private\n         */\n        this.fontDescriptor = 'FontDescriptor';\n        /**\n         * Specifies the value of 'cIDSystemInfo'.\n         * @private\n         */\n        this.cIDSystemInfo = 'CIDSystemInfo';\n        /**\n         * Specifies the value of 'CIDFontType0'.\n         * @private\n         */\n        this.cIDFontType0 = 'CIDFontType0';\n        /**\n         * Specifies the value of 'fontName'.\n         * @private\n         */\n        this.fontName = 'FontName';\n        /**\n         * Specifies the value of 'flags'.\n         * @private\n         */\n        this.flags = 'Flags';\n        /**\n         * Specifies the value of 'fontBBox'.\n         * @private\n         */\n        this.fontBBox = 'FontBBox';\n        /**\n         * Specifies the value of 'missingWidth'.\n         * @private\n         */\n        this.missingWidth = 'MissingWidth';\n        /**\n         * Specifies the value of 'stemV'.\n         * @private\n         */\n        this.stemV = 'StemV';\n        /**\n         * Specifies the value of 'italicAngle'.\n         * @private\n         */\n        this.italicAngle = 'ItalicAngle';\n        /**\n         * Specifies the value of 'capHeight'.\n         * @private\n         */\n        this.capHeight = 'CapHeight';\n        /**\n         * Specifies the value of 'ascent'.\n         * @private\n         */\n        this.ascent = 'Ascent';\n        /**\n         * Specifies the value of 'descent'.\n         * @private\n         */\n        this.descent = 'Descent';\n        /**\n         * Specifies the value of 'leading'.\n         * @private\n         */\n        this.leading = 'Leading';\n        /**\n         * Specifies the value of 'avgWidth'.\n         * @private\n         */\n        this.avgWidth = 'AvgWidth';\n        /**\n         * Specifies the value of 'fontFile2'.\n         * @private\n         */\n        this.fontFile2 = 'FontFile2';\n        /**\n         * Specifies the value of 'fontFile3'.\n         * @private\n         */\n        this.fontFile3 = 'FontFile3';\n        /**\n         * Specifies the value of 'maxWidth'.\n         * @private\n         */\n        this.maxWidth = 'MaxWidth';\n        /**\n         * Specifies the value of 'xHeight'.\n         * @private\n         */\n        this.xHeight = 'XHeight';\n        /**\n         * Specifies the value of 'stemH'.\n         * @private\n         */\n        this.stemH = 'StemH';\n        /**\n         * Specifies the value of 'registry'.\n         * @private\n         */\n        this.registry = 'Registry';\n        /**\n         * Specifies the value of 'ordering'.\n         * @private\n         */\n        this.ordering = 'Ordering';\n        /**\n         * Specifies the value of 'supplement'.\n         * @private\n         */\n        this.supplement = 'Supplement';\n        /**\n         * Specifies the value of 'type0'.\n         * @private\n         */\n        this.type0 = 'Type0';\n        /**\n         * Specifies the value of 'identityH'.\n         * @private\n         */\n        this.identityH = 'Identity-H';\n        /**\n         * Specifies the value of 'toUnicode'.\n         * @private\n         */\n        this.toUnicode = 'ToUnicode';\n        /**\n         * Specifies the value of 'descendantFonts'.\n         * @private\n         */\n        this.descendantFonts = 'DescendantFonts';\n        /**\n         * Specifies the value of 'background'.\n         * @private\n         */\n        this.background = 'Background';\n        /**\n         * Specifies the value of 'shading'.\n         * @private\n         */\n        this.shading = 'Shading';\n        /**\n         * Specifies the value of 'matrix'.\n         * @private\n         */\n        this.matrix = 'Matrix';\n        /**\n         * Specifies the value of 'antiAlias'.\n         * @private\n         */\n        this.antiAlias = 'AntiAlias';\n        /**\n         * Specifies the value of 'function'.\n         * @private\n         */\n        this.function = 'Function';\n        /**\n         * Specifies the value of 'extend'.\n         * @private\n         */\n        this.extend = 'Extend';\n        /**\n         * Specifies the value of 'shadingType'.\n         * @private\n         */\n        this.shadingType = 'ShadingType';\n        /**\n         * Specifies the value of 'coords'.\n         * @private\n         */\n        this.coords = 'Coords';\n        /**\n         * Specifies the value of 'domain'.\n         * @private\n         */\n        this.domain = 'Domain';\n        /**\n         * Specifies the value of 'range'.\n         * @private\n         */\n        this.range = 'Range';\n        /**\n         * Specifies the value of 'functionType'.\n         * @private\n         */\n        this.functionType = 'FunctionType';\n        /**\n         * Specifies the value of 'bitsPerSample'.\n         * @private\n         */\n        this.bitsPerSample = 'BitsPerSample';\n        /**\n         * Specifies the value of 'patternType'.\n         * @private\n         */\n        this.patternType = 'PatternType';\n        /**\n         * Specifies the value of 'paintType'.\n         * @private\n         */\n        this.paintType = 'PaintType';\n        /**\n         * Specifies the value of 'tilingType'.\n         * @private\n         */\n        this.tilingType = 'TilingType';\n        /**\n         * Specifies the value of 'xStep'.\n         * @private\n         */\n        this.xStep = 'XStep';\n        /**\n         * Specifies the value of 'yStep'.\n         * @private\n         */\n        this.yStep = 'YStep';\n        /**\n         * Specifies the value of viewer preferences.\n         * @private\n         */\n        this.viewerPreferences = 'ViewerPreferences';\n        /**\n         * Specifies the value of center window.\n         * @private\n         */\n        this.centerWindow = 'CenterWindow';\n        /**\n         * Specifies the value of display title.\n         * @private\n         */\n        this.displayTitle = 'DisplayTitle';\n        /**\n         * Specifies the value of fit window.\n         * @private\n         */\n        this.fitWindow = 'FitWindow';\n        /**\n         * Specifies the value of hide menu bar.\n         * @private\n         */\n        this.hideMenuBar = 'HideMenubar';\n        /**\n         * Specifies the value of hide tool bar.\n         * @private\n         */\n        this.hideToolBar = 'HideToolbar';\n        /**\n         * Specifies the value of hide window UI.\n         * @private\n         */\n        this.hideWindowUI = 'HideWindowUI';\n        /**\n         * Specifies the value of page mode.\n         * @private\n         */\n        this.pageMode = 'PageMode';\n        /**\n         * Specifies the value of page layout.\n         * @private\n         */\n        this.pageLayout = 'PageLayout';\n        /**\n         * Specifies the value of duplex.\n         * @private\n         */\n        this.duplex = 'Duplex';\n        /**\n         * Specifies the value of print scaling.\n         * @private\n         */\n        this.printScaling = 'PrintScaling';\n        //\n    }\n    return DictionaryProperties;\n}());\nexport { DictionaryProperties };\n","import { Dictionary } from './../collections/dictionary';\nimport { PdfName } from './pdf-name';\nimport { Operators } from './../input-output/pdf-operators';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfDictionary` class is used to perform primitive operations.\n * @private\n */\nvar PdfDictionary = /** @class */ (function () {\n    function PdfDictionary(dictionary) {\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position7 = -1;\n        /**\n         * The `IPdfSavable` with the specified key.\n         * @private\n         */\n        this.primitiveItems = new Dictionary();\n        /**\n         * `Start marker` for dictionary.\n         * @private\n         */\n        this.prefix = '<<';\n        /**\n         * `End marker` for dictionary.\n         * @private\n         */\n        this.suffix = '>>';\n        /**\n         * @hidden\n         * @private\n         */\n        this.resources = [];\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.object = null;\n        /**\n         * Flag for PDF file formar 1.5 is dictionary `archiving` needed.\n         * @default true\n         * @private\n         */\n        this.archive = true;\n        /**\n         * Represents the Font dictionary.\n         * @hidden\n         * @private\n         */\n        this.isResource = false;\n        if (typeof dictionary === 'undefined') {\n            this.primitiveItems = new Dictionary();\n            this.encrypt = true;\n            this.dictionaryProperties = new DictionaryProperties();\n        }\n        else {\n            this.primitiveItems = new Dictionary();\n            var keys = dictionary.items.keys();\n            var values = dictionary.items.values();\n            for (var index = 0; index < dictionary.items.size(); index++) {\n                this.primitiveItems.setValue(keys[index], values[index]);\n            }\n            this.status = dictionary.status;\n            this.freezeChanges(this);\n            this.encrypt = true;\n            this.dictionaryProperties = new DictionaryProperties();\n        }\n    }\n    Object.defineProperty(PdfDictionary.prototype, \"items\", {\n        //Properties\n        /**\n         * Gets or sets the `IPdfSavable` with the specified key.\n         * @private\n         */\n        get: function () {\n            return this.primitiveItems;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status7;\n        },\n        set: function (value) {\n            this.status7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving7;\n        },\n        set: function (value) {\n            this.isSaving7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index7;\n        },\n        set: function (value) {\n            this.index7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position7;\n        },\n        set: function (value) {\n            this.position7 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"Count\", {\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.primitiveItems.size();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDictionary.prototype, \"Dictionary\", {\n        /**\n         * Collection of `items` in the object.\n         * @private\n         */\n        get: function () {\n            return this;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get flag if need to `archive` dictionary.\n     * @private\n     */\n    PdfDictionary.prototype.getArchive = function () {\n        return this.archive;\n    };\n    /**\n     * Set flag if need to `archive` dictionary.\n     * @private\n     */\n    PdfDictionary.prototype.setArchive = function (value) {\n        this.archive = value;\n    };\n    /**\n     * Sets flag if `encryption` is needed.\n     * @private\n     */\n    PdfDictionary.prototype.setEncrypt = function (value) {\n        this.encrypt = value;\n        this.modify();\n    };\n    /**\n     * Gets flag if `encryption` is needed.\n     * @private\n     */\n    PdfDictionary.prototype.getEncrypt = function () {\n        return this.encrypt;\n    };\n    /**\n     * `Freezes` the changes.\n     * @private\n     */\n    PdfDictionary.prototype.freezeChanges = function (freezer) {\n        this.bChanged = false;\n    };\n    /**\n     * Creates a `copy of PdfDictionary`.\n     * @private\n     */\n    PdfDictionary.prototype.clone = function (crossTable) {\n        //Need to add more codings\n        var newDict = new PdfDictionary();\n        return newDict;\n    };\n    /**\n     * `Mark` this instance modified.\n     * @private\n     */\n    PdfDictionary.prototype.modify = function () {\n        this.bChanged = true;\n    };\n    /**\n     * `Removes` the specified key.\n     * @private\n     */\n    PdfDictionary.prototype.remove = function (key) {\n        if (typeof key !== 'string') {\n            this.primitiveItems.remove(key.value);\n            this.modify();\n        }\n        else {\n            this.remove(new PdfName(key));\n        }\n    };\n    /**\n     * `Determines` whether the dictionary contains the key.\n     * @private\n     */\n    PdfDictionary.prototype.containsKey = function (key) {\n        var returnValue = false;\n        returnValue = this.primitiveItems.containsKey(key.toString());\n        return returnValue;\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onBeginSave = function () {\n        this.beginSave.sender.beginSave();\n    };\n    /**\n     * Raises event `Font Dictionary BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onFontDictionaryBeginSave = function () {\n        this.fontDictionaryBeginSave.sender.fontDictionaryBeginSave();\n    };\n    /**\n     * Raises event `Descendant Font BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onDescendantFontBeginSave = function () {\n        this.descendantFontBeginSave.sender.descendantFontBeginSave();\n    };\n    /**\n     * Raises event 'BeginSave'.\n     * @private\n     */\n    PdfDictionary.prototype.onTemplateBeginSave = function () {\n        this.pageBeginDrawTemplate.sender.pageBeginSave();\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onBeginAnnotationSave = function () {\n        this.annotationBeginSave.sender.beginSave();\n    };\n    /**\n     * Raises event `BeginSave`.\n     * @private\n     */\n    PdfDictionary.prototype.onSectionBeginSave = function (writer) {\n        var saveEvent = this.sectionBeginSave;\n        saveEvent.sender.beginSave(saveEvent.state, writer);\n    };\n    PdfDictionary.prototype.save = function (writer, bRaiseEvent) {\n        if (typeof bRaiseEvent === 'undefined') {\n            this.save(writer, true);\n        }\n        else {\n            writer.write(this.prefix);\n            if (typeof this.beginSave !== 'undefined') {\n                this.onBeginSave();\n            }\n            if (typeof this.descendantFontBeginSave !== 'undefined') {\n                this.onDescendantFontBeginSave();\n            }\n            if (typeof this.fontDictionaryBeginSave !== 'undefined') {\n                this.onFontDictionaryBeginSave();\n            }\n            if (typeof this.annotationBeginSave !== 'undefined') {\n                this.onBeginAnnotationSave();\n            }\n            if (typeof this.sectionBeginSave !== 'undefined') {\n                this.onSectionBeginSave(writer);\n            }\n            if (typeof this.pageBeginDrawTemplate !== 'undefined') {\n                this.onTemplateBeginSave();\n            }\n            // }\n            if (this.Count > 0) {\n                this.saveItems(writer);\n            }\n            writer.write(this.suffix);\n            writer.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Save dictionary items`.\n     * @private\n     */\n    PdfDictionary.prototype.saveItems = function (writer) {\n        writer.write(Operators.newLine);\n        var keys = this.primitiveItems.keys();\n        var values = this.primitiveItems.values();\n        for (var index = 0; index < keys.length; index++) {\n            var key = keys[index];\n            var name_1 = new PdfName(key);\n            name_1.save(writer);\n            writer.write(Operators.whiteSpace);\n            var resources = values[index];\n            resources.save(writer);\n            writer.write(Operators.newLine);\n        }\n    };\n    return PdfDictionary;\n}());\nexport { PdfDictionary };\nvar SaveSectionCollectionEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveSectionCollectionEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveSectionCollectionEventHandler;\n}());\nexport { SaveSectionCollectionEventHandler };\nvar SaveDescendantFontEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveDescendantFontEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveDescendantFontEventHandler;\n}());\nexport { SaveDescendantFontEventHandler };\nvar SaveFontDictionaryEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveFontDictionaryEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveFontDictionaryEventHandler;\n}());\nexport { SaveFontDictionaryEventHandler };\nvar SaveAnnotationEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save annotation event handler` class.\n     * @private\n     */\n    function SaveAnnotationEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveAnnotationEventHandler;\n}());\nexport { SaveAnnotationEventHandler };\nvar SaveSectionEventHandler = /** @class */ (function () {\n    // constructors\n    /**\n     * New instance for `save section event handler` class.\n     * @private\n     */\n    function SaveSectionEventHandler(sender, state) {\n        this.sender = sender;\n        this.state = state;\n    }\n    return SaveSectionEventHandler;\n}());\nexport { SaveSectionEventHandler };\n/**\n * SaveTemplateEventHandler class used to store information about template elements.\n * @private\n * @hidden\n */\nvar SaveTemplateEventHandler = /** @class */ (function () {\n    /**\n     * New instance for save section collection event handler class.\n     * @public\n     */\n    function SaveTemplateEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveTemplateEventHandler;\n}());\nexport { SaveTemplateEventHandler };\n","/**\n * `PdfNumber` class is used to perform number related primitive operations.\n * @private\n */\nvar PdfNumber = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfNumber` class.\n     * @private\n     */\n    function PdfNumber(value) {\n        /**\n         * Sotres the `position`.\n         * @default -1\n         * @private\n         */\n        this.position5 = -1;\n        this.value = value;\n    }\n    Object.defineProperty(PdfNumber.prototype, \"intValue\", {\n        /**\n         * Gets or sets the `integer` value.\n         * @private\n         */\n        get: function () {\n            return this.value;\n        },\n        set: function (value) {\n            this.value = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"isInteger\", {\n        /**\n         * Gets or sets a value indicating whether this instance `is integer`.\n         * @private\n         */\n        get: function () {\n            return this.integer;\n        },\n        set: function (value) {\n            this.integer = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status5;\n        },\n        set: function (value) {\n            this.status5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving5;\n        },\n        set: function (value) {\n            this.isSaving5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index5;\n        },\n        set: function (value) {\n            this.index5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position5;\n        },\n        set: function (value) {\n            this.position5 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfNumber.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var rValue = null;\n            return rValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Saves the object`.\n     * @private\n     */\n    PdfNumber.prototype.save = function (writer) {\n        writer.write(this.intValue.toString()); //tostring(CultureInfo.InletiantCulture)\n    };\n    /**\n     * Creates a `copy of PdfNumber`.\n     * @private\n     */\n    PdfNumber.prototype.clone = function (crossTable) {\n        var newNumber = new PdfNumber(this.value);\n        return newNumber;\n    };\n    /**\n     * Converts a `float value to a string` using Adobe PDF rules.\n     * @private\n     */\n    PdfNumber.floatToString = function (number) {\n        // let tempString1 : string = number.toString();\n        // let tempString2 : string = tempString1.indexOf('.') != -1 ? tempString1.substring(0, tempString1.indexOf('.')) : tempString1;\n        var returnString = number.toFixed(2);\n        if (returnString === '0.00') {\n            returnString = '.00';\n        }\n        // let prefixLength : number = (22 - tempString2.length) >= 0 ? (22 - tempString2.length) : 0;\n        // for (let index : number = 0; index < prefixLength; index++) {\n        //     returnString += '0';\n        // }\n        // returnString += tempString2 + '.00';\n        // returnString += (tempString3.length > 6) ? tempString3.substring(0,6) : tempString3;\n        // let suffixLength : number = (6 - tempString3.length) >= 0 ? (6 - tempString3.length) : 0;\n        // for (let index : number = 0; index < suffixLength; index++) {\n        //     returnString += '0';\n        // }\n        return returnString;\n    };\n    /**\n     * Determines the `minimum of the three values`.\n     * @private\n     */\n    PdfNumber.min = function (x, y, z) {\n        var r = Math.min(x, y);\n        return Math.min(z, r);\n    };\n    return PdfNumber;\n}());\nexport { PdfNumber };\n","import { PdfNumber } from './pdf-number';\nimport { Operators } from './../input-output/pdf-operators';\n/**\n * `PdfArray` class is used to perform array related primitive operations.\n * @private\n */\nvar PdfArray = /** @class */ (function () {\n    function PdfArray(array) {\n        //Fields\n        /**\n         * `startMark` - '['\n         * @private\n         */\n        this.startMark = '[';\n        /**\n         * `endMark` - ']'.\n         * @private\n         */\n        this.endMark = ']';\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position9 = -1;\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.clonedObject9 = null;\n        /**\n         * Represents the Font dictionary.\n         * @hidden\n         * @private\n         */\n        this.isFont = false;\n        if (typeof array === 'undefined') {\n            this.internalElements = [];\n        }\n        else {\n            if (typeof array !== 'undefined' && !(array instanceof PdfArray)) {\n                var tempNumberArray = array;\n                for (var index = 0; index < tempNumberArray.length; index++) {\n                    var pdfNumber = new PdfNumber(tempNumberArray[index]);\n                    this.add(pdfNumber);\n                }\n                // } else if (typeof array !== 'undefined' && (array instanceof PdfArray)) {\n            }\n            else {\n                var tempArray = array;\n                // if (tempArray.Elements.length > 0) {\n                this.internalElements = [];\n                for (var index = 0; index < tempArray.elements.length; index++) {\n                    this.internalElements.push(tempArray.elements[index]);\n                }\n                // }\n            }\n        }\n    }\n    //property\n    /**\n     * Gets the `IPdfSavable` at the specified index.\n     * @private\n     */\n    PdfArray.prototype.items = function (index) {\n        // if (index < 0 || index >= this.Count) {\n        //     throw new Error('ArgumentOutOfRangeException : index, The index can\"t be less then zero or greater then Count.');\n        // }\n        return this.internalElements[index];\n    };\n    Object.defineProperty(PdfArray.prototype, \"count\", {\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.internalElements.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status9;\n        },\n        set: function (value) {\n            this.status9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving9;\n        },\n        set: function (value) {\n            this.isSaving9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.clonedObject9;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position9;\n        },\n        set: function (value) {\n            this.position9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index9;\n        },\n        set: function (value) {\n            this.index9 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"CrossTable\", {\n        /**\n         * Returns `PdfCrossTable` associated with the object.\n         * @private\n         */\n        get: function () {\n            return this.pdfCrossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfArray.prototype, \"elements\", {\n        /**\n         * Gets the `elements` of the Pdf Array.\n         * @private\n         */\n        get: function () {\n            return this.internalElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Adds` the specified element to the PDF array.\n     * @private\n     */\n    PdfArray.prototype.add = function (element) {\n        // if (element === null) {\n        //     throw new Error('ArgumentNullException : obj');\n        // }\n        if (typeof this.internalElements === 'undefined') {\n            this.internalElements = [];\n        }\n        this.internalElements.push(element);\n        this.markedChange();\n    };\n    /**\n     * `Marks` the object changed.\n     * @private\n     */\n    PdfArray.prototype.markedChange = function () {\n        this.bChanged = true;\n    };\n    /**\n     * `Determines` whether the specified element is within the array.\n     * @private\n     */\n    PdfArray.prototype.contains = function (element) {\n        var returnValue = false;\n        for (var index = 0; index < this.internalElements.length; index++) {\n            var tempElement = this.internalElements[index];\n            var inputElement = element;\n            if (tempElement != null && typeof tempElement !== 'undefined' && inputElement != null && typeof inputElement !== 'undefined') {\n                if (tempElement.value === inputElement.value) {\n                    return true;\n                }\n            }\n            // if (this.internalElements[index] === element) {\n            //     returnValue = true;\n            // }\n        }\n        return returnValue;\n    };\n    /**\n     * Returns the `primitive object` of input index.\n     * @private\n     */\n    PdfArray.prototype.getItems = function (index) {\n        // if (index < 0 || index >= this.Count) {\n        //     throw new Error('ArgumentOutOfRangeException : index , The index can\"t be less then zero or greater then Count.');\n        // }\n        return this.internalElements[index];\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfArray.prototype.save = function (writer) {\n        // if (writer === null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        writer.write(this.startMark);\n        for (var i = 0, len = this.count; i < len; i++) {\n            this.getItems(i).save(writer);\n            if (i + 1 !== len) {\n                writer.write(Operators.whiteSpace);\n            }\n        }\n        writer.write(this.endMark);\n    };\n    /**\n     * Creates a `copy of PdfArray`.\n     * @private\n     */\n    PdfArray.prototype.clone = function (crossTable) {\n        // if (this.clonedObject9 !== null && this.clonedObject9.CrossTable === crossTable) {\n        //     return this.clonedObject9;\n        // } else {\n        this.clonedObject9 = null;\n        // Else clone the object.\n        var newArray = new PdfArray();\n        for (var index = 0; index < this.internalElements.length; index++) {\n            var obj = this.internalElements[index];\n            newArray.add(obj.clone(crossTable));\n        }\n        newArray.pdfCrossTable = crossTable;\n        this.clonedObject9 = newArray;\n        return newArray;\n    };\n    /**\n     * Creates filled PDF array `from the rectangle`.\n     * @private\n     */\n    PdfArray.fromRectangle = function (bounds) {\n        var values = [bounds.x, bounds.y, bounds.width, bounds.height];\n        var array = new PdfArray(values);\n        return array;\n    };\n    // /**\n    //  * Creates the rectangle from filled PDF array.\n    //  * @private\n    //  */\n    // public ToRectangle() : RectangleF {\n    //     if (this.Count < 4) {\n    //         throw Error('InvalidOperationException-Can not convert to rectangle.');\n    //     }\n    //     let x1 : number;\n    //     let x2 : number;\n    //     let y1 : number;\n    //     let y2 : number;\n    //     let num : PdfNumber = this.getItems(0) as PdfNumber;\n    //     x1 = num.IntValue;\n    //     num = this.getItems(1) as PdfNumber;\n    //     y1 = num.IntValue;\n    //     num = this.getItems(2) as PdfNumber;\n    //     x2 = num.IntValue;\n    //     num = this.getItems(3) as PdfNumber;\n    //     y2 = num.IntValue;\n    //     let x : number = Math.min(x1, x2);\n    //     let y : number = Math.min(y1, y2);\n    //     let width : number = Math.abs(x1 - x2);\n    //     let height : number = Math.abs(y1 - y2);\n    //     let rect : RectangleF = new RectangleF(new PointF(x, y), new SizeF(width, height));\n    //     return rect;\n    // }\n    /**\n     * `Inserts` the element into the array.\n     * @private\n     */\n    PdfArray.prototype.insert = function (index, element) {\n        if (index < this.internalElements.length && index > 0) {\n            var tempElements = [];\n            for (var i = 0; i < index; i++) {\n                tempElements.push(this.internalElements[i]);\n            }\n            tempElements.push(element);\n            for (var i = index; i < this.internalElements.length; i++) {\n                tempElements.push(this.internalElements[i]);\n            }\n            this.internalElements = tempElements;\n        }\n        else {\n            this.internalElements.push(element);\n        }\n        this.markChanged();\n    };\n    /**\n     * `Checks whether array contains the element`.\n     * @private\n     */\n    PdfArray.prototype.indexOf = function (element) {\n        return this.internalElements.indexOf(element);\n    };\n    /**\n     * `Removes` element from the array.\n     * @private\n     */\n    PdfArray.prototype.remove = function (element) {\n        // if (element === null) {\n        //     throw new Error('ArgumentNullException : element');\n        // }\n        var index = this.internalElements.indexOf(element);\n        // if (index >= 0 && index < this.internalElements.length) {\n        this.internalElements[index] = null;\n        // }\n        this.markChanged();\n    };\n    /**\n     * `Remove` the element from the array by its index.\n     * @private\n     */\n    PdfArray.prototype.removeAt = function (index) {\n        // this.internalElements.RemoveAt(index);\n        if (this.internalElements.length > index) {\n            var tempArray = [];\n            for (var i = 0; i < index; i++) {\n                tempArray.push(this.internalElements[i]);\n            }\n            for (var i = index + 1; i < this.internalElements.length; i++) {\n                tempArray.push(this.internalElements[i]);\n            }\n            this.internalElements = tempArray;\n        }\n        this.markChanged();\n    };\n    /**\n     * `Clear` the array.\n     * @private\n     */\n    PdfArray.prototype.clear = function () {\n        this.internalElements = [];\n        this.markChanged();\n    };\n    /**\n     * `Marks` the object changed.\n     * @private\n     */\n    PdfArray.prototype.markChanged = function () {\n        this.bChanged = true;\n    };\n    return PdfArray;\n}());\nexport { PdfArray };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfDictionary } from './pdf-dictionary';\nimport { PdfNumber } from './pdf-number';\nimport { Operators } from './../input-output/pdf-operators';\nimport { PdfName } from './pdf-name';\nimport { PdfArray } from './pdf-array';\nimport { PdfReferenceHolder } from './pdf-reference';\nimport { CompressedStreamWriter } from '@syncfusion/ej2-compression';\n/**\n * `PdfStream` class is used to perform stream related primitive operations.\n * @private\n */\nvar PdfStream = /** @class */ (function (_super) {\n    __extends(PdfStream, _super);\n    function PdfStream(dictionary, data) {\n        var _this = _super.call(this, dictionary) || this;\n        //Constants\n        /**\n         * @hidden\n         * @private\n         */\n        _this.dicPrefix = 'stream';\n        /**\n         * @hidden\n         * @private\n         */\n        _this.dicSuffix = 'endstream';\n        /**\n         * Internal variable to hold `cloned object`.\n         * @private\n         */\n        _this.clonedObject2 = null;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.bCompress = true;\n        if (typeof dictionary !== 'undefined' || typeof data !== 'undefined') {\n            _this.dataStream2 = [];\n            _this.dataStream2 = data;\n            _this.bCompress2 = false;\n        }\n        else {\n            _this.dataStream2 = [];\n            _this.bCompress2 = true;\n            //Pending\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfStream.prototype, \"internalStream\", {\n        /**\n         * Gets the `internal` stream.\n         * @private\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"compress\", {\n        /**\n         * Gets or sets `compression` flag.\n         * @private\n         */\n        get: function () {\n            return this.bCompress;\n        },\n        set: function (value) {\n            this.bCompress = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStream.prototype, \"data\", {\n        /**\n         * Gets or sets the `data`.\n         * @private\n         */\n        get: function () {\n            return this.dataStream2;\n        },\n        set: function (value) {\n            this.dataStream2 = [];\n            this.dataStream2 = value;\n            this.modify();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Clear` the internal stream.\n     * @private\n     */\n    PdfStream.prototype.clearStream = function () {\n        this.internalStream = [];\n        if (this.items.containsKey(this.dictionaryProperties.filter)) {\n            this.remove(this.dictionaryProperties.filter);\n        }\n        this.bCompress = true;\n        this.modify();\n    };\n    /**\n     * `Writes` the specified string.\n     * @private\n     */\n    PdfStream.prototype.write = function (text) {\n        if (text == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        if (text.length <= 0) {\n            throw new Error('ArgumentException: Can not write an empty string, text');\n        }\n        this.dataStream2.push(text);\n        this.modify();\n    };\n    /**\n     * `Writes` the specified bytes.\n     * @private\n     */\n    PdfStream.prototype.writeBytes = function (data) {\n        if (data === null) {\n            throw new Error('ArgumentNullException:data');\n        }\n        if (data.length <= 0) {\n            throw new Error('ArgumentException: Can not write an empty bytes, data');\n        }\n        var text = '';\n        for (var i = 0; i < data.length; i++) {\n            text += String.fromCharCode(data[i]);\n        }\n        this.dataStream2.push(text);\n        this.modify();\n    };\n    /**\n     * Raises event `Cmap BeginSave`.\n     * @private\n     */\n    PdfStream.prototype.onCmapBeginSave = function () {\n        this.cmapBeginSave.sender.cmapBeginSave();\n    };\n    /**\n     * Raises event `Font Program BeginSave`.\n     * @private\n     */\n    PdfStream.prototype.onFontProgramBeginSave = function () {\n        this.fontProgramBeginSave.sender.fontProgramBeginSave();\n    };\n    /**\n     * `Compresses the content` if it's required.\n     * @private\n     */\n    PdfStream.prototype.compressContent = function (data, writer) {\n        if (this.bCompress) {\n            var byteArray = [];\n            for (var i = 0; i < data.length; i++) {\n                byteArray.push(data.charCodeAt(i));\n            }\n            var dataArray = new Uint8Array(byteArray);\n            var sw = new CompressedStreamWriter();\n            // data = 'Hello World!!!';\n            sw.write(dataArray, 0, dataArray.length);\n            sw.close();\n            data = sw.getCompressedString;\n            this.addFilter(this.dictionaryProperties.flatedecode);\n        }\n        return data;\n    };\n    /**\n     * `Adds a filter` to the filter array.\n     * @private\n     */\n    PdfStream.prototype.addFilter = function (filterName) {\n        var obj = this.items.getValue(this.dictionaryProperties.filter);\n        if (obj instanceof PdfReferenceHolder) {\n            var rh = obj;\n            obj = rh.object;\n        }\n        var array = obj;\n        var name = obj;\n        if (name != null) {\n            array = new PdfArray();\n            array.insert(0, name);\n            this.items.setValue(this.dictionaryProperties.filter, array);\n        }\n        name = new PdfName(filterName);\n        if (array == null) {\n            this.items.setValue(this.dictionaryProperties.filter, name);\n        }\n        else {\n            array.insert(0, name);\n        }\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfStream.prototype.save = function (writer) {\n        if (typeof this.cmapBeginSave !== 'undefined') {\n            this.onCmapBeginSave();\n        }\n        if (typeof this.fontProgramBeginSave !== 'undefined') {\n            this.onFontProgramBeginSave();\n        }\n        var data = '';\n        for (var i = 0; i < this.data.length; i++) {\n            data = data + this.data[i];\n        }\n        if (data.length > 1 && !this.isResource) {\n            data = 'q\\r\\n' + data + 'Q\\r\\n';\n        }\n        data = this.compressContent(data, writer);\n        var length = data.length;\n        this.items.setValue(this.dictionaryProperties.length, new PdfNumber(length));\n        _super.prototype.save.call(this, writer, false);\n        writer.write(this.dicPrefix);\n        writer.write(Operators.newLine);\n        if (data.length > 0) {\n            writer.write(data);\n        }\n        writer.write(Operators.newLine);\n        writer.write(this.dicSuffix);\n        writer.write(Operators.newLine);\n    };\n    /**\n     * Converts `bytes to string`.\n     * @private\n     */\n    PdfStream.bytesToString = function (byteArray) {\n        var output = '';\n        for (var i = 0; i < byteArray.length; i++) {\n            output = output + String.fromCharCode(byteArray[i]);\n        }\n        return output;\n    };\n    return PdfStream;\n}(PdfDictionary));\nexport { PdfStream };\nvar SaveCmapEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveCmapEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveCmapEventHandler;\n}());\nexport { SaveCmapEventHandler };\nvar SaveFontProgramEventHandler = /** @class */ (function () {\n    /**\n     * New instance for `save section collection event handler` class.\n     * @private\n     */\n    function SaveFontProgramEventHandler(sender) {\n        this.sender = sender;\n    }\n    return SaveFontProgramEventHandler;\n}());\nexport { SaveFontProgramEventHandler };\n","/**\n * `PdfString` class is used to perform string related primitive operations.\n * @private\n */\nexport var InternalEnum;\n(function (InternalEnum) {\n    //Internals\n    /**\n     * public Enum for `ForceEncoding`.\n     * @private\n     */\n    var ForceEncoding;\n    (function (ForceEncoding) {\n        /**\n         * Specifies the type of `None`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"None\"] = 0] = \"None\";\n        /**\n         * Specifies the type of `Ascii`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"Ascii\"] = 1] = \"Ascii\";\n        /**\n         * Specifies the type of `Unicode`.\n         * @private\n         */\n        ForceEncoding[ForceEncoding[\"Unicode\"] = 2] = \"Unicode\";\n    })(ForceEncoding = InternalEnum.ForceEncoding || (InternalEnum.ForceEncoding = {}));\n    /**\n     * public Enum for `SourceType`.\n     * @private\n     */\n    var SourceType;\n    (function (SourceType) {\n        /**\n         * Specifies the type of `StringValue`.\n         * @private\n         */\n        SourceType[SourceType[\"StringValue\"] = 0] = \"StringValue\";\n        /**\n         * Specifies the type of `ByteBuffer`.\n         * @private\n         */\n        SourceType[SourceType[\"ByteBuffer\"] = 1] = \"ByteBuffer\";\n    })(SourceType || (SourceType = {}));\n})(InternalEnum || (InternalEnum = {}));\nvar PdfString = /** @class */ (function () {\n    function PdfString(value) {\n        /**\n         * Value indicating whether the string was converted to hex.\n         * @default false\n         * @private\n         */\n        this.bHex = false;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position1 = -1;\n        /**\n         * Internal variable to hold `cloned object`.\n         * @default null\n         * @private\n         */\n        this.clonedObject1 = null;\n        /**\n         * `Shows` if the data of the stream was decrypted.\n         * @default false\n         * @private\n         */\n        this.bDecrypted = false;\n        /**\n         * Shows if the data of the stream `was decrypted`.\n         * @default false\n         * @private\n         */\n        this.isParentDecrypted = false;\n        /**\n         * Gets a value indicating whether the object is `packed or not`.\n         * @default false\n         * @private\n         */\n        this.isPacked = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isFormField = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isColorSpace = false;\n        /**\n         * @hidden\n         * @private\n         */\n        this.isHexString = true;\n        if (typeof value === 'undefined') {\n            this.bHex = false;\n        }\n        else {\n            if (!(value.length > 0 && value[0] === '0xfeff')) {\n                this.stringValue = value;\n                this.data = [];\n                for (var i = 0; i < value.length; ++i) {\n                    this.data.push(value.charCodeAt(i));\n                }\n            }\n        }\n    }\n    Object.defineProperty(PdfString.prototype, \"hex\", {\n        //Property\n        /**\n         * Gets a value indicating whether string is in `hex`.\n         * @private\n         */\n        get: function () {\n            return this.bHex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"value\", {\n        /**\n         * Gets or sets string `value` of the object.\n         * @private\n         */\n        get: function () {\n            return this.stringValue;\n        },\n        set: function (value) {\n            this.stringValue = value;\n            this.data = null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"status\", {\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status1;\n        },\n        set: function (value) {\n            this.status1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving1;\n        },\n        set: function (value) {\n            this.isSaving1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index1;\n        },\n        set: function (value) {\n            this.index1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return this.clonedObject1;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position1;\n        },\n        set: function (value) {\n            this.position1 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"CrossTable\", {\n        /**\n         * Returns `PdfCrossTable` associated with the object.\n         * @private\n         */\n        get: function () {\n            return this.crossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"converted\", {\n        /**\n         * Gets a value indicating whether to check if the value has unicode characters.\n         * @private\n         */\n        get: function () {\n            return this.bConverted;\n        },\n        /**\n         * sets a value indicating whether to check if the value has unicode characters.\n         * @private\n         */\n        set: function (value) {\n            this.bConverted = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfString.prototype, \"encode\", {\n        /**\n         * Gets value indicating whether we should convert data to Unicode.\n         */\n        get: function () {\n            return this.bForceEncoding;\n        },\n        set: function (value) {\n            this.bForceEncoding = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * Converts `bytes to string using hex format` for representing string.\n     * @private\n     */\n    PdfString.bytesToHex = function (bytes) {\n        if (bytes == null) {\n            return '';\n        }\n        var builder = '';\n        return builder;\n    };\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfString.prototype.save = function (writer) {\n        if (writer === null) {\n            throw new Error('ArgumentNullException : writer');\n        }\n        if (this.encode !== undefined && this.encode === InternalEnum.ForceEncoding.Ascii) {\n            writer.write(this.pdfEncode());\n        }\n        else {\n            writer.write(PdfString.stringMark[0] + this.value + PdfString.stringMark[1]);\n        }\n    };\n    PdfString.prototype.pdfEncode = function () {\n        var result = '';\n        if (this.encode !== undefined && this.encode === InternalEnum.ForceEncoding.Ascii) {\n            var data = this.escapeSymbols(this.value);\n            for (var i = 0; i < data.length; i++) {\n                result += String.fromCharCode(data[i]);\n            }\n            result = PdfString.stringMark[0] + result + PdfString.stringMark[1];\n        }\n        else {\n            result = this.value;\n        }\n        return result;\n    };\n    PdfString.prototype.escapeSymbols = function (value) {\n        var data = [];\n        for (var i = 0; i < value.length; i++) {\n            var currentData = value.charCodeAt(i);\n            switch (currentData) {\n                case 40:\n                case 41:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                case 13:\n                    data.push(92);\n                    data.push(114);\n                    break;\n                case 92:\n                    data.push(92);\n                    data.push(currentData);\n                    break;\n                default:\n                    data.push(currentData);\n                    break;\n            }\n        }\n        return data;\n    };\n    /**\n     * Creates a `copy of PdfString`.\n     * @private\n     */\n    PdfString.prototype.clone = function (crossTable) {\n        if (this.clonedObject1 !== null && this.clonedObject1.CrossTable === crossTable) {\n            return this.clonedObject1;\n        }\n        else {\n            this.clonedObject1 = null;\n        }\n        var newString = new PdfString(this.stringValue);\n        newString.bHex = this.bHex;\n        newString.crossTable = crossTable;\n        newString.isColorSpace = this.isColorSpace;\n        this.clonedObject1 = newString;\n        return newString;\n    };\n    /**\n     * Converts string to array of unicode symbols.\n     */\n    PdfString.toUnicodeArray = function (value, bAddPrefix) {\n        if (value == null) {\n            throw new Error('Argument Null Exception : value');\n        }\n        var startIndex = 0;\n        var output = [];\n        for (var i = 0; i < value.length; i++) {\n            var code = value.charCodeAt(i);\n            output.push(code / 256 >>> 0);\n            output.push(code & 0xff);\n        }\n        return output;\n    };\n    /**\n     * Converts byte data to string.\n     */\n    PdfString.byteToString = function (data) {\n        if (data == null) {\n            throw new Error('Argument Null Exception : stream');\n        }\n        var result = '';\n        for (var i = 0; i < data.length; ++i) {\n            result += String.fromCharCode(data[i]);\n        }\n        return result;\n    };\n    //constants = ;\n    /**\n     * `General markers` for string.\n     * @private\n     */\n    PdfString.stringMark = '()';\n    /**\n     * `Hex markers` for string.\n     * @private\n     */\n    PdfString.hexStringMark = '<>';\n    /**\n     * Format of password data.\n     * @private\n     */\n    PdfString.hexFormatPattern = '{0:X2}';\n    return PdfString;\n}());\nexport { PdfString };\n","import { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfStream } from './../primitives/pdf-stream';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfString } from './../primitives/pdf-string';\n/**\n * `PdfReference` class is used to perform reference related primitive operations.\n * @private\n */\nvar PdfReference = /** @class */ (function () {\n    function PdfReference(objNumber, genNumber) {\n        /**\n         * Holds the `index` number of the object.\n         * @default -1\n         * @private\n         */\n        this.index3 = -1;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position3 = -1;\n        /**\n         * Holds the `object number`.\n         * @default 0\n         * @private\n         */\n        this.objNumber = 0;\n        /**\n         * Holds the `generation number` of the object.\n         * @default 0\n         * @private\n         */\n        this.genNumber = 0;\n        if (typeof objNumber === 'number' && typeof genNumber === 'number') {\n            this.objNumber = objNumber;\n            this.genNumber = genNumber;\n            // } else if (typeof objNum === 'string' && typeof genNum === 'string') {\n        }\n        else {\n            this.objNumber = Number(objNumber);\n            this.genNumber = Number(genNumber);\n        }\n    }\n    Object.defineProperty(PdfReference.prototype, \"status\", {\n        //Property\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status3;\n        },\n        set: function (value) {\n            this.status3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving3;\n        },\n        set: function (value) {\n            this.isSaving3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index3;\n        },\n        set: function (value) {\n            this.index3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position3;\n        },\n        set: function (value) {\n            this.position3 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReference.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var returnObject3 = null;\n            return returnObject3;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //IPdfPrimitives methods\n    /**\n     * `Saves` the object.\n     * @private\n     */\n    PdfReference.prototype.save = function (writer) {\n        writer.write(this.toString());\n    };\n    /**\n     * Returns a `string` representing the object.\n     * @private\n     */\n    PdfReference.prototype.toString = function () {\n        return this.objNumber.toString() + ' ' + this.genNumber.toString() + ' R';\n    };\n    /**\n     * Creates a `deep copy` of the IPdfPrimitive object.\n     * @private\n     */\n    PdfReference.prototype.clone = function (crossTable) {\n        return null;\n    };\n    return PdfReference;\n}());\nexport { PdfReference };\n/**\n * `PdfReferenceHolder` class is used to perform reference holder related primitive operations.\n * @private\n */\nvar PdfReferenceHolder = /** @class */ (function () {\n    function PdfReferenceHolder(obj1, obj2) {\n        /**\n         * Holds the `index` number of the object.\n         * @default -1\n         * @private\n         */\n        this.index4 = -1;\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.position4 = -1;\n        /**\n         * The `index` of the object within the object collection.\n         * @default -1\n         * @private\n         */\n        this.objectIndex = -1;\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // if (typeof obj2 === 'undefined') {\n        this.initialize(obj1);\n        // }\n        // else {\n        //     if (obj2 === null) {\n        //         throw new Error('ArgumentNullException : crossTable');\n        //     }\n        //     if (obj1 === null) {\n        //         throw new Error('ArgumentNullException : reference');\n        //     }\n        //     this.crossTable = obj2;\n        //     let tempObj1 : PdfReference = <PdfReference>obj1;\n        //     this.reference = tempObj1;\n        // }\n    }\n    Object.defineProperty(PdfReferenceHolder.prototype, \"status\", {\n        //Properties\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.status4;\n        },\n        set: function (value) {\n            this.status4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.isSaving4;\n        },\n        set: function (value) {\n            this.isSaving4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index4;\n        },\n        set: function (value) {\n            this.index4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.position4;\n        },\n        set: function (value) {\n            this.position4 = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"object\", {\n        /**\n         * Gets the `object` the reference is of.\n         * @private\n         */\n        get: function () {\n            // if ((this.reference != null) || (this.object == null)) {\n            //     this.object = this.GetterObject();\n            // }\n            return this.primitiveObject;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"reference\", {\n        /**\n         * Gets the `reference`.\n         * @private\n         */\n        get: function () {\n            return this.pdfReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"index\", {\n        /**\n         * Gets the `index` of the object.\n         * @private\n         */\n        get: function () {\n            // let items : PdfMainObjectCollection = this.crossTable.PdfObjects;\n            // this.objectIndex = items.GetObjectIndex(this.reference);\n            // if (this.objectIndex < 0) {\n            //     let obj : IPdfPrimitive = this.crossTable.GetObject(this.reference);\n            //     this.objectIndex = items.Count - 1;\n            // }\n            return this.objectIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfReferenceHolder.prototype, \"element\", {\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.primitiveObject;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfReferenceHolder.prototype.initialize = function (obj1) {\n        if (obj1 instanceof PdfArray\n            || obj1 instanceof PdfDictionary\n            || obj1 instanceof PdfName\n            || obj1 instanceof PdfNumber\n            || obj1 instanceof PdfStream\n            || obj1 instanceof PdfReference\n            || obj1 instanceof PdfString) {\n            this.primitiveObject = obj1;\n        }\n        else {\n            var tempObj = obj1;\n            this.initialize(tempObj.element);\n        }\n    };\n    /**\n     * `Writes` a reference into a PDF document.\n     * @private\n     */\n    PdfReferenceHolder.prototype.save = function (writer) {\n        // if (writer == null) {\n        //     throw new Error('ArgumentNullException : writer');\n        // }\n        var position = writer.position;\n        var cTable = writer.document.crossTable;\n        // if (cTable.Document instanceof PdfDocument) {\n        this.object.isSaving = true;\n        // }\n        var reference = null;\n        // if (writer.Document.FileStructure.IncrementalUpdate === true && writer.Document.isStreamCopied === true) {\n        //     if (this.reference === null) {\n        //         reference = cTable.GetReference(this.Object);\n        //     } else {\n        //         reference = this.reference;\n        //     }\n        // } else {\n        //     reference = cTable.GetReference(this.Object);\n        // }\n        // if (!(writer.Document.FileStructure.IncrementalUpdate === true && writer.Document.isStreamCopied === true)) {\n        reference = cTable.getReference(this.object);\n        // }\n        // if (writer.Position !== position) {\n        //     writer.Position = position;\n        // }\n        reference.save(writer);\n    };\n    /**\n     * Creates a `copy of PdfReferenceHolder`.\n     * @private\n     */\n    PdfReferenceHolder.prototype.clone = function (crossTable) {\n        var refHolder = null;\n        var temp = null;\n        var refNum = '';\n        var reference = null;\n        // Restricts addition of same object multiple time.\n        /* if (this.Reference != null && this.crossTable != null && this.crossTable.PageCorrespondance.containsKey(this.Reference)) {\n            refHolder = new PdfReferenceHolder(this.crossTable.PageCorrespondance.getValue(this.Reference) as PdfReference, crossTable);\n            return refHolder;\n        }\n        if (Object instanceof PdfNumber) {\n            return new PdfNumber((Object as PdfNumber).IntValue);\n        }\n        */\n        // if (Object instanceof PdfDictionary) {\n        //     // Meaning the referenced page is not available for import.\n        //     let type : PdfName = new PdfName(this.dictionaryProperties.type);\n        //     let dict : PdfDictionary = Object as PdfDictionary;\n        //     if (dict.ContainsKey(type)) {\n        //         let pageName : PdfName = dict.Items.getValue(type.Value) as PdfName;\n        //         if (pageName !== null) {\n        //             if (pageName.Value === 'Page') {\n        //                 return new PdfNull();\n        //             }\n        //         }\n        //     }\n        // }\n        /* if (Object instanceof PdfName) {\n            return new PdfName ((Object as PdfName ).Value);\n        }\n        */\n        // Resolves circular references.\n        // if (crossTable.PrevReference !== null && (crossTable.PrevReference.indexOf(this.Reference) !== -1)) {\n        //     let obj : IPdfPrimitive = this.crossTable.GetObject(this.Reference).ClonedObject;\n        //     if (obj !== null) {\n        //         reference = crossTable.GetReference(obj);\n        //         return new PdfReferenceHolder(reference, crossTable);\n        //     } else {\n        //         return new PdfNull();\n        //     }\n        // }\n        /*if (this.Reference !== null) {\n            crossTable.PrevReference.push(this.Reference);\n        }\n        reference = crossTable.GetReference(temp);\n        refHolder = new PdfReferenceHolder(reference, crossTable);\n        return refHolder;\n        */\n        return null;\n    };\n    return PdfReferenceHolder;\n}());\nexport { PdfReferenceHolder };\n","import { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfName } from './../primitives/pdf-name';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfAction` class represents base class for all action types.\n * @private\n */\nvar PdfAction = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initialize instance for `Action` class.\n     * @private\n     */\n    function PdfAction() {\n        /**\n         * Specifies the Next `action` to perform.\n         * @private\n         */\n        this.action = null;\n        /**\n         * Specifies the Internal variable to store `dictionary properties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // super(); -> Object()\n        this.initialize();\n    }\n    Object.defineProperty(PdfAction.prototype, \"next\", {\n        // Properties\n        /**\n         * Gets and Sets the `Next` action to perform.\n         * @private\n         */\n        get: function () {\n            return this.action;\n        },\n        set: function (value) {\n            // if (this.action !== value) {\n            this.action = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.next, new PdfReferenceHolder(this.action));\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAction.prototype, \"dictionary\", {\n        /**\n         * Gets and Sets the instance of PdfDictionary class for `Dictionary`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfDictionary === 'undefined') {\n                this.pdfDictionary = new PdfDictionary();\n            }\n            return this.pdfDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the action type.\n     * @private\n     */\n    PdfAction.prototype.initialize = function () {\n        this.dictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.action));\n    };\n    Object.defineProperty(PdfAction.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the `Element` as IPdfPrimitive class.\n         * @private\n         */\n        get: function () {\n            return this.dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAction;\n}());\nexport { PdfAction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfAction } from './action';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * `PdfUriAction` class for initialize the uri related internals.\n * @private\n */\nvar PdfUriAction = /** @class */ (function (_super) {\n    __extends(PdfUriAction, _super);\n    function PdfUriAction(uri) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Specifies the `uri` string.\n         * @default ''.\n         * @private\n         */\n        _this.uniformResourceIdentifier = '';\n        return _this;\n    }\n    Object.defineProperty(PdfUriAction.prototype, \"uri\", {\n        // Properties\n        /**\n         * Gets and Sets the value of `Uri`.\n         * @private\n         */\n        get: function () {\n            return this.uniformResourceIdentifier;\n        },\n        set: function (value) {\n            this.uniformResourceIdentifier = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.uri, new PdfString(this.uniformResourceIdentifier));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the internals.\n     * @private\n     */\n    PdfUriAction.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.s, new PdfName(this.dictionaryProperties.uri));\n    };\n    return PdfUriAction;\n}(PdfAction));\nexport { PdfUriAction };\n","/**\n * public Enum for `PdfHorizontalAlignment`.\n * @private\n */\nexport var PdfHorizontalAlignment;\n(function (PdfHorizontalAlignment) {\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Left\"] = 0] = \"Left\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfHorizontalAlignment[PdfHorizontalAlignment[\"Right\"] = 2] = \"Right\";\n})(PdfHorizontalAlignment || (PdfHorizontalAlignment = {}));\n/**\n * public Enum for `PdfVerticalAlignment`.\n * @private\n */\nexport var PdfVerticalAlignment;\n(function (PdfVerticalAlignment) {\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Top\"] = 0] = \"Top\";\n    /**\n     * Specifies the type of `Middle`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Middle\"] = 1] = \"Middle\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    PdfVerticalAlignment[PdfVerticalAlignment[\"Bottom\"] = 2] = \"Bottom\";\n})(PdfVerticalAlignment || (PdfVerticalAlignment = {}));\n/**\n * public Enum for `public`.\n * @private\n */\nexport var PdfTextAlignment;\n(function (PdfTextAlignment) {\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Left\"] = 0] = \"Left\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Right\"] = 2] = \"Right\";\n    /**\n     * Specifies the type of `Justify`.\n     * @private\n     */\n    PdfTextAlignment[PdfTextAlignment[\"Justify\"] = 3] = \"Justify\";\n})(PdfTextAlignment || (PdfTextAlignment = {}));\n/**\n * public Enum for `TextRenderingMode`.\n * @private\n */\nexport var TextRenderingMode;\n(function (TextRenderingMode) {\n    /**\n     * Specifies the type of `Fill`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Fill\"] = 0] = \"Fill\";\n    /**\n     * Specifies the type of `Stroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Stroke\"] = 1] = \"Stroke\";\n    /**\n     * Specifies the type of `FillStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"FillStroke\"] = 2] = \"FillStroke\";\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"None\"] = 3] = \"None\";\n    /**\n     * Specifies the type of `ClipFlag`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFlag\"] = 4] = \"ClipFlag\";\n    /**\n     * Specifies the type of `ClipFill`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFill\"] = 4] = \"ClipFill\";\n    /**\n     * Specifies the type of `ClipStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipStroke\"] = 5] = \"ClipStroke\";\n    /**\n     * Specifies the type of `ClipFillStroke`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"ClipFillStroke\"] = 6] = \"ClipFillStroke\";\n    /**\n     * Specifies the type of `Clip`.\n     * @private\n     */\n    TextRenderingMode[TextRenderingMode[\"Clip\"] = 7] = \"Clip\";\n})(TextRenderingMode || (TextRenderingMode = {}));\n/**\n * public Enum for `PdfLineJoin`.\n * @private\n */\nexport var PdfLineJoin;\n(function (PdfLineJoin) {\n    /**\n     * Specifies the type of `Miter`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Miter\"] = 0] = \"Miter\";\n    /**\n     * Specifies the type of `Round`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Round\"] = 1] = \"Round\";\n    /**\n     * Specifies the type of `Bevel`.\n     * @private\n     */\n    PdfLineJoin[PdfLineJoin[\"Bevel\"] = 2] = \"Bevel\";\n})(PdfLineJoin || (PdfLineJoin = {}));\n/**\n * public Enum for `PdfLineCap`.\n * @private\n */\nexport var PdfLineCap;\n(function (PdfLineCap) {\n    /**\n     * Specifies the type of `Flat`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Flat\"] = 0] = \"Flat\";\n    /**\n     * Specifies the type of `Round`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Round\"] = 1] = \"Round\";\n    /**\n     * Specifies the type of `Square`.\n     * @private\n     */\n    PdfLineCap[PdfLineCap[\"Square\"] = 2] = \"Square\";\n})(PdfLineCap || (PdfLineCap = {}));\n/**\n * public Enum for `PdfDashStyle`.\n * @private\n */\nexport var PdfDashStyle;\n(function (PdfDashStyle) {\n    /**\n     * Specifies the type of `Solid`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Solid\"] = 0] = \"Solid\";\n    /**\n     * Specifies the type of `Dash`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Dash\"] = 1] = \"Dash\";\n    /**\n     * Specifies the type of `Dot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Dot\"] = 2] = \"Dot\";\n    /**\n     * Specifies the type of `DashDot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"DashDot\"] = 3] = \"DashDot\";\n    /**\n     * Specifies the type of `DashDotDot`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"DashDotDot\"] = 4] = \"DashDotDot\";\n    /**\n     * Specifies the type of `Custom`.\n     * @private\n     */\n    PdfDashStyle[PdfDashStyle[\"Custom\"] = 5] = \"Custom\";\n})(PdfDashStyle || (PdfDashStyle = {}));\n/**\n * public Enum for `PdfFillMode`.\n * @private\n */\nexport var PdfFillMode;\n(function (PdfFillMode) {\n    /**\n     * Specifies the type of `Winding`.\n     * @private\n     */\n    PdfFillMode[PdfFillMode[\"Winding\"] = 0] = \"Winding\";\n    /**\n     * Specifies the type of `Alternate`.\n     * @private\n     */\n    PdfFillMode[PdfFillMode[\"Alternate\"] = 1] = \"Alternate\";\n})(PdfFillMode || (PdfFillMode = {}));\n/**\n * public Enum for `PdfColorSpace`.\n * @private\n */\nexport var PdfColorSpace;\n(function (PdfColorSpace) {\n    /**\n     * Specifies the type of `Rgb`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Rgb\"] = 0] = \"Rgb\";\n    /**\n     * Specifies the type of `Cmyk`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Cmyk\"] = 1] = \"Cmyk\";\n    /**\n     * Specifies the type of `GrayScale`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"GrayScale\"] = 2] = \"GrayScale\";\n    /**\n     * Specifies the type of `Indexed`.\n     * @private\n     */\n    PdfColorSpace[PdfColorSpace[\"Indexed\"] = 3] = \"Indexed\";\n})(PdfColorSpace || (PdfColorSpace = {}));\n/**\n * public Enum for `PdfBlendMode`.\n * @private\n */\nexport var PdfBlendMode;\n(function (PdfBlendMode) {\n    /**\n     * Specifies the type of `Normal`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Normal\"] = 0] = \"Normal\";\n    /**\n     * Specifies the type of `Multiply`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Multiply\"] = 1] = \"Multiply\";\n    /**\n     * Specifies the type of `Screen`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Screen\"] = 2] = \"Screen\";\n    /**\n     * Specifies the type of `Overlay`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Overlay\"] = 3] = \"Overlay\";\n    /**\n     * Specifies the type of `Darken`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Darken\"] = 4] = \"Darken\";\n    /**\n     * Specifies the type of `Lighten`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Lighten\"] = 5] = \"Lighten\";\n    /**\n     * Specifies the type of `ColorDodge`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"ColorDodge\"] = 6] = \"ColorDodge\";\n    /**\n     * Specifies the type of `ColorBurn`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"ColorBurn\"] = 7] = \"ColorBurn\";\n    /**\n     * Specifies the type of `HardLight`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"HardLight\"] = 8] = \"HardLight\";\n    /**\n     * Specifies the type of `SoftLight`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"SoftLight\"] = 9] = \"SoftLight\";\n    /**\n     * Specifies the type of `Difference`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Difference\"] = 10] = \"Difference\";\n    /**\n     * Specifies the type of `Exclusion`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Exclusion\"] = 11] = \"Exclusion\";\n    /**\n     * Specifies the type of `Hue`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Hue\"] = 12] = \"Hue\";\n    /**\n     * Specifies the type of `Saturation`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Saturation\"] = 13] = \"Saturation\";\n    /**\n     * Specifies the type of `Color`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Color\"] = 14] = \"Color\";\n    /**\n     * Specifies the type of `Luminosity`.\n     * @private\n     */\n    PdfBlendMode[PdfBlendMode[\"Luminosity\"] = 15] = \"Luminosity\";\n})(PdfBlendMode || (PdfBlendMode = {}));\n/**\n * public Enum for `PdfGraphicsUnit`.\n * @private\n */\nexport var PdfGraphicsUnit;\n(function (PdfGraphicsUnit) {\n    /**\n     * Specifies the type of `Centimeter`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Centimeter\"] = 0] = \"Centimeter\";\n    /**\n     * Specifies the type of `Pica`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Pica\"] = 1] = \"Pica\";\n    /**\n     * Specifies the type of `Pixel`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Pixel\"] = 2] = \"Pixel\";\n    /**\n     * Specifies the type of `Point`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Point\"] = 3] = \"Point\";\n    /**\n     * Specifies the type of `Inch`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Inch\"] = 4] = \"Inch\";\n    /**\n     * Specifies the type of `Document`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Document\"] = 5] = \"Document\";\n    /**\n     * Specifies the type of `Millimeter`.\n     * @private\n     */\n    PdfGraphicsUnit[PdfGraphicsUnit[\"Millimeter\"] = 6] = \"Millimeter\";\n})(PdfGraphicsUnit || (PdfGraphicsUnit = {}));\n/**\n * public Enum for `PdfGridImagePosition`.\n * @private\n */\nexport var PdfGridImagePosition;\n(function (PdfGridImagePosition) {\n    /**\n     * Specifies the type of `Fit`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Fit\"] = 0] = \"Fit\";\n    /**\n     * Specifies the type of `Center`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Center\"] = 1] = \"Center\";\n    /**\n     * Specifies the type of `Stretch`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Stretch\"] = 2] = \"Stretch\";\n    /**\n     * Specifies the type of `Tile`.\n     * @private\n     */\n    PdfGridImagePosition[PdfGridImagePosition[\"Tile\"] = 3] = \"Tile\";\n})(PdfGridImagePosition || (PdfGridImagePosition = {}));\n/**\n * public Enum for `the text rendering direction`.\n * @private\n */\nexport var PdfTextDirection;\n(function (PdfTextDirection) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfTextDirection[PdfTextDirection[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `LeftToRight`.\n     * @private\n     */\n    PdfTextDirection[PdfTextDirection[\"LeftToRight\"] = 1] = \"LeftToRight\";\n    /**\n     * Specifies the type of `RightToLeft`.\n     * @private\n     */\n    PdfTextDirection[PdfTextDirection[\"RightToLeft\"] = 2] = \"RightToLeft\";\n})(PdfTextDirection || (PdfTextDirection = {}));\n","import { PdfColorSpace } from './enum';\nimport { Operators } from './../input-output/pdf-operators';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfArray } from './../primitives/pdf-array';\n/**\n * Implements structures and routines working with `color`.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * //\n * // set color\n * let brushColor : PdfColor = new PdfColor(0, 0, 0);\n * //\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(brushColor);\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n * @default black color\n */\nvar PdfColor = /** @class */ (function () {\n    function PdfColor(color1, color2, color3, color4) {\n        if (typeof color1 === 'undefined') {\n            if (typeof color2 !== 'undefined' && typeof color3 !== 'undefined' && typeof color4 !== 'undefined') {\n                this.assignRGB(color2, color3, color4);\n            }\n            else {\n                this.filled = false;\n            }\n        }\n        else if (color1 instanceof PdfColor) {\n            this.redColor = color1.r;\n            this.greenColor = color1.g;\n            this.blueColor = color1.b;\n            this.grayColor = color1.gray;\n            this.alpha = color1.alpha;\n            this.filled = (this.alpha !== 0);\n            /* tslint:disable-next-line:max-line-length */\n        }\n        else if (typeof color1 === 'number' && typeof color2 === 'undefined' && typeof color3 === 'undefined' && typeof color4 === 'undefined') {\n            if (color1 < 0) {\n                color1 = 0;\n            }\n            if (color1 > 1) {\n                color1 = 1;\n            }\n            this.redColor = color1 * PdfColor.maxColourChannelValue;\n            this.greenColor = color1 * PdfColor.maxColourChannelValue;\n            this.blueColor = color1 * PdfColor.maxColourChannelValue;\n            this.cyanColor = color1;\n            this.magentaColor = color1;\n            this.yellowColor = color1;\n            this.blackColor = color1;\n            this.grayColor = color1;\n            this.alpha = PdfColor.maxColourChannelValue;\n            this.filled = true;\n        }\n        else if (typeof color4 === 'undefined') {\n            this.assignRGB(color1, color2, color3);\n        }\n        else {\n            this.assignRGB(color2, color3, color4, color1);\n        }\n    }\n    /**\n     * `Assign` red, green, blue colors with alpha value..\n     * @private\n     */\n    PdfColor.prototype.assignRGB = function (r, g, b, a) {\n        if (typeof r === 'undefined' || typeof g === 'undefined' || typeof b === 'undefined') {\n            this.filled = false;\n        }\n        else {\n            this.cyanColor = 0;\n            this.magentaColor = 0;\n            this.yellowColor = 0;\n            this.blackColor = 0;\n            this.grayColor = 0;\n            this.redColor = r;\n            this.greenColor = g;\n            this.blueColor = b;\n            if (typeof a === 'undefined') {\n                this.a = PdfColor.maxColourChannelValue;\n            }\n            else {\n                this.a = a;\n                var isFractional = (a >= 0 && a <= 1);\n                var scaleFactor = isFractional ? a : a / 255;\n                var inverseScale = 1 - scaleFactor;\n                this.redColor = Math.max(0, Math.min(255, Math.round(r * scaleFactor + PdfColor.maxColourChannelValue * inverseScale)));\n                this.greenColor = Math.max(0, Math.min(255, Math.round(g * scaleFactor + PdfColor.maxColourChannelValue * inverseScale)));\n                this.blueColor = Math.max(0, Math.min(255, Math.round(b * scaleFactor + PdfColor.maxColourChannelValue * inverseScale)));\n            }\n            this.filled = true;\n            this.assignCMYK(r, g, b);\n        }\n    };\n    /**\n     * `Calculate and assign` cyan, megenta, yellow colors from rgb values..\n     * @private\n     */\n    PdfColor.prototype.assignCMYK = function (r, g, b) {\n        var red = r / PdfColor.maxColourChannelValue;\n        var green = g / PdfColor.maxColourChannelValue;\n        var blue = b / PdfColor.maxColourChannelValue;\n        var black = PdfNumber.min(1 - red, 1 - green, 1 - blue);\n        var cyan = (black === 1.0) ? 0 : (1 - red - black) / (1 - black);\n        var magenta = (black === 1.0) ? 0 : (1 - green - black) / (1 - black);\n        var yellow = (black === 1.0) ? 0 : (1 - blue - black) / (1 - black);\n        this.blackColor = black;\n        this.cyanColor = cyan;\n        this.magentaColor = magenta;\n        this.yellowColor = yellow;\n    };\n    Object.defineProperty(PdfColor.prototype, \"r\", {\n        //Properties\n        // public static get Empty():PdfColor\n        // {\n        //     return this.s_emptyColor\n        // }\n        /**\n         * Gets or sets `Red` channel value.\n         * @private\n         */\n        get: function () {\n            return this.redColor;\n        },\n        set: function (value) {\n            this.redColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"red\", {\n        /**\n         * Gets the `Red` color\n         * @private\n         */\n        get: function () {\n            return (this.r / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"b\", {\n        /**\n         * Gets or sets `Blue` channel value.\n         * @private\n         */\n        get: function () {\n            return this.blueColor;\n        },\n        set: function (value) {\n            this.blueColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"blue\", {\n        /**\n         * Gets the `blue` color.\n         * @private\n         */\n        get: function () {\n            return (this.b / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"c\", {\n        /**\n         * Gets or sets `Cyan` channel value.\n         * @private\n         */\n        get: function () {\n            return this.cyanColor;\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.cyanColor = 0;\n            }\n            else if (value > 1) {\n                this.cyanColor = 1;\n            }\n            else {\n                this.cyanColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"k\", {\n        /**\n         * Gets or sets `Black` channel value.\n         * @private\n         */\n        get: function () {\n            return this.blackColor;\n        },\n        set: function (value) {\n            if ((value < 0)) {\n                this.blackColor = 0;\n            }\n            else if ((value > 1)) {\n                this.blackColor = 1;\n            }\n            else {\n                this.blackColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"m\", {\n        /**\n         * Gets or sets `Magenta` channel value.\n         * @private\n         */\n        get: function () {\n            return this.magentaColor;\n        },\n        set: function (value) {\n            if ((value < 0)) {\n                this.magentaColor = 0;\n            }\n            else if ((value > 1)) {\n                this.magentaColor = 1;\n            }\n            else {\n                this.magentaColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"y\", {\n        /**\n         * Gets or sets `Yellow` channel value.\n         * @private\n         */\n        get: function () {\n            return this.yellowColor;\n        },\n        set: function (value) {\n            if ((value < 0)) {\n                this.yellowColor = 0;\n            }\n            else if ((value > 1)) {\n                this.yellowColor = 1;\n            }\n            else {\n                this.yellowColor = value;\n            }\n            this.assignRGB(this.cyanColor, this.magentaColor, this.yellowColor, this.blackColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"g\", {\n        /**\n         *  Gets or sets `Green` channel value.\n         * @private\n         */\n        get: function () {\n            return this.greenColor;\n        },\n        set: function (value) {\n            this.greenColor = value;\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"green\", {\n        /**\n         * Gets the `Green` color.\n         * @private\n         */\n        get: function () {\n            return (this.g / PdfColor.maxColourChannelValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"gray\", {\n        /**\n         * Gets or sets `Gray` channel value.\n         * @private\n         */\n        get: function () {\n            return ((((this.redColor + this.greenColor) + this.blueColor)) / (PdfColor.maxColourChannelValue * 3));\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.grayColor = 0;\n            }\n            else if (value > 1) {\n                this.grayColor = 1;\n            }\n            else {\n                this.grayColor = value;\n            }\n            this.r = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.g = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.b = (this.grayColor * PdfColor.maxColourChannelValue);\n            this.assignCMYK(this.redColor, this.greenColor, this.blueColor);\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"isEmpty\", {\n        /**\n         * Gets whether the PDFColor `is Empty` or not.\n         * @private\n         */\n        get: function () {\n            return !this.filled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfColor.prototype, \"a\", {\n        /**\n         * Gets or sets `Alpha` channel value.\n         * @private\n         */\n        get: function () {\n            return this.alpha;\n        },\n        set: function (value) {\n            if (value < 0) {\n                this.alpha = 0;\n            }\n            else {\n                // if (this.alpha !== value) {\n                this.alpha = value;\n                // }\n            }\n            this.filled = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public methods\n    /**\n     * Converts `PDFColor to PDF string` representation.\n     * @private\n     */\n    PdfColor.prototype.toString = function (colorSpace, stroke) {\n        if (this.isEmpty) {\n            return '';\n        }\n        var str = '';\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                str = this.rgbToString(stroke);\n                break;\n            case PdfColorSpace.GrayScale:\n                str = this.grayScaleToString(stroke);\n                break;\n            case PdfColorSpace.Cmyk:\n                str = this.cmykToString(stroke);\n                break;\n        }\n        return str;\n    };\n    /**\n     * Sets `GrayScale` color.\n     * @private\n     */\n    PdfColor.prototype.grayScaleToString = function (ifStroking) {\n        var gray = this.gray;\n        var colour = '';\n        var obj = null;\n        /* tslint:disable-next-line:max-line-length */\n        obj = (ifStroking) ? PdfColor.grayStringsSroke.containsKey(gray) ? PdfColor.grayStringsSroke.getValue(gray) : null : PdfColor.grayStringsFill.containsKey(gray) ? PdfColor.grayStringsFill.getValue(gray) : null;\n        if (obj == null) {\n            if (ifStroking) {\n                colour = gray.toString() + ' G';\n                PdfColor.grayStringsSroke.setValue(gray, colour);\n            }\n        }\n        else {\n            colour = obj.toString();\n        }\n        return colour + Operators.newLine;\n    };\n    /**\n     * Sets `RGB` color.\n     * @private\n     */\n    PdfColor.prototype.rgbToString = function (ifStroking) {\n        var r = this.r;\n        var g = this.g;\n        var b = this.b;\n        var key = (r << 16) + (g << 8) + b;\n        if (ifStroking) {\n            key += 1 << 24;\n        }\n        var colour = '';\n        var obj = null;\n        if (PdfColor.rgbStrings.containsKey(key)) {\n            obj = PdfColor.rgbStrings.getValue(key);\n        }\n        if (obj == null) {\n            var red = r / PdfColor.maxColourChannelValue;\n            var green = g / PdfColor.maxColourChannelValue;\n            var blue = b / PdfColor.maxColourChannelValue;\n            if (ifStroking) {\n                colour = red.toString() + ' ' + green.toString() + ' ' + blue.toString() + ' RG';\n            }\n            else {\n                colour = red.toString() + ' ' + green.toString() + ' ' + blue.toString() + ' rg';\n            }\n            PdfColor.rgbStrings.setValue(key, colour);\n        }\n        else {\n            colour = obj.toString();\n        }\n        return colour + Operators.newLine;\n    };\n    /***\n     * Sets `CMYK` color.\n     * @private\n     */\n    PdfColor.prototype.cmykToString = function (ifStroking) {\n        var cyan = this.c;\n        var magenta = this.m;\n        var yellow = this.y;\n        var black = this.b;\n        var colour = '';\n        colour = cyan.toString() + ' ' + magenta.toString() + ' ' + yellow.toString() + ' ' + black.toString() + ' K';\n        return colour + Operators.newLine;\n    };\n    /**\n     * Converts `colour to a PDF array`.\n     * @private\n     */\n    PdfColor.prototype.toArray = function (colorSpace) {\n        var array = new PdfArray();\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                array.add(new PdfNumber(this.red));\n                array.add(new PdfNumber(this.green));\n                array.add(new PdfNumber(this.blue));\n                break;\n        }\n        return array;\n    };\n    //Fields\n    /**\n     * Holds `RGB colors` converted into strings.\n     * @private\n     */\n    PdfColor.rgbStrings = new Dictionary();\n    /**\n     * Holds Gray scale colors converted into strings for `stroking`.\n     * @private\n     */\n    PdfColor.grayStringsSroke = new Dictionary();\n    /**\n     * Holds Gray scale colors converted into strings for `filling`.\n     * @private\n     */\n    PdfColor.grayStringsFill = new Dictionary();\n    /**\n     * `Max value` of color channel.\n     * @private\n     */\n    PdfColor.maxColourChannelValue = 255.0;\n    return PdfColor;\n}());\nexport { PdfColor };\n","/**\n * Coordinates of Position for `PointF`.\n * @private\n */\nvar PointF = /** @class */ (function () {\n    function PointF(x, y) {\n        if (typeof x === 'undefined') {\n            this.x = 0;\n            this.y = 0;\n        }\n        else {\n            if (x !== null) {\n                this.x = x;\n            }\n            else {\n                this.x = 0;\n            }\n            if (y !== null) {\n                this.y = y;\n            }\n            else {\n                this.y = 0;\n            }\n        }\n    }\n    return PointF;\n}());\nexport { PointF };\n/**\n * Width and Height as `Size`.\n * @private\n */\nvar SizeF = /** @class */ (function () {\n    function SizeF(width, height) {\n        if (typeof height === 'undefined') {\n            this.height = 0;\n            this.width = 0;\n        }\n        else {\n            if (height !== null) {\n                this.height = height;\n            }\n            else {\n                this.height = 0;\n            }\n            if (width !== null) {\n                this.width = width;\n            }\n            else {\n                this.width = 0;\n            }\n        }\n    }\n    return SizeF;\n}());\nexport { SizeF };\n/**\n * `RectangleF` with Position and size.\n * @private\n */\nvar RectangleF = /** @class */ (function () {\n    function RectangleF(arg1, arg2, arg3, arg4) {\n        if (typeof arg1 === typeof arg1 && typeof arg1 === 'undefined') {\n            this.x = 0;\n            this.y = 0;\n            this.height = 0;\n            this.width = 0;\n        }\n        else {\n            if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n                var pointf = arg1;\n                this.x = pointf.x;\n                this.y = pointf.y;\n                var sizef = arg2;\n                this.height = sizef.height;\n                this.width = sizef.width;\n            }\n            else {\n                var x = arg1;\n                var y = arg2;\n                var width = arg3;\n                var height = arg4;\n                this.x = x;\n                this.y = y;\n                this.height = height;\n                this.width = width;\n            }\n        }\n    }\n    return RectangleF;\n}());\nexport { RectangleF };\n/**\n * `Rectangle` with left, right, top and bottom.\n * @private\n */\nvar Rectangle = /** @class */ (function () {\n    /**\n     * Instance of `RectangleF` class with X, Y, Width and Height.\n     * @private\n     */\n    function Rectangle(left, top, right, bottom) {\n        this.left = left;\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n    }\n    Object.defineProperty(Rectangle.prototype, \"width\", {\n        /**\n         * Gets a value of width\n         */\n        get: function () {\n            return this.right - this.left;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"height\", {\n        /**\n         * Gets a value of height\n         */\n        get: function () {\n            return this.bottom - this.top;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"topLeft\", {\n        /**\n         * Gets a value of Top and Left\n         */\n        get: function () {\n            return new PointF(this.left, this.top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"size\", {\n        /**\n         * Gets a value of size\n         */\n        get: function () {\n            return new SizeF(this.width, this.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Rectangle.prototype.toString = function () {\n        return this.topLeft + 'x' + this.size;\n    };\n    return Rectangle;\n}());\nexport { Rectangle };\n","/**\n * `PdfBrush` class provides objects used to fill the interiors of graphical shapes such as rectangles,\n * ellipses, pies, polygons, and paths.\n * @private\n */\nvar PdfBrush = /** @class */ (function () {\n    /**\n     * Creates instanceof `PdfBrush` class.\n     * @hidden\n     * @private\n     */\n    function PdfBrush() {\n        //\n    }\n    //IClonable implementation\n    PdfBrush.prototype.clone = function () {\n        return this;\n    };\n    return PdfBrush;\n}());\nexport { PdfBrush };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfColor } from './../pdf-color';\nimport { PdfColorSpace } from './../enum';\nimport { PdfBrush } from './pdf-brush';\n/**\n * Represents a brush that fills any object with a solid color.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a pages to the document\n * let page1 : PdfPage = document.pages.add();\n * // set font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // set brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfSolidBrush = /** @class */ (function (_super) {\n    __extends(PdfSolidBrush, _super);\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfSolidBrush` class.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a pages to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // set font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // set brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10));\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param color color of the brush\n     */\n    function PdfSolidBrush(color) {\n        var _this = _super.call(this) || this;\n        _this.pdfColor = color;\n        return _this;\n    }\n    Object.defineProperty(PdfSolidBrush.prototype, \"color\", {\n        //Properties\n        /**\n         * Gets or sets the `color` of the brush.\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Monitors` the changes of the brush and modify PDF state respectively.\n     * @private\n     */\n    PdfSolidBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        if (streamWriter == null) {\n            throw new Error('ArgumentNullException:streamWriter');\n        }\n        var diff = false;\n        if (brush == null) {\n            diff = true;\n            streamWriter.setColorAndSpace(this.pdfColor, currentColorSpace, false);\n            return diff;\n        }\n        else {\n            var sBrush = brush;\n            diff = true;\n            streamWriter.setColorAndSpace(this.pdfColor, currentColorSpace, false);\n            return diff;\n        }\n    };\n    /**\n     * `Resets` the changes, which were made by the brush.\n     * @private\n     */\n    PdfSolidBrush.prototype.resetChanges = function (streamWriter) {\n        streamWriter.setColorAndSpace(new PdfColor(0, 0, 0), PdfColorSpace.Rgb, false);\n    };\n    return PdfSolidBrush;\n}(PdfBrush));\nexport { PdfSolidBrush };\n","/**\n * public Enum for `PdfFontStyle`.\n * @private\n */\nexport var PdfFontStyle;\n(function (PdfFontStyle) {\n    /**\n     * Specifies the type of `Regular`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Regular\"] = 0] = \"Regular\";\n    /**\n     * Specifies the type of `Bold`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Bold\"] = 1] = \"Bold\";\n    /**\n     * Specifies the type of `Italic`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Italic\"] = 2] = \"Italic\";\n    /**\n     * Specifies the type of `Underline`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Underline\"] = 4] = \"Underline\";\n    /**\n     * Specifies the type of `Strikeout`.\n     * @private\n     */\n    PdfFontStyle[PdfFontStyle[\"Strikeout\"] = 8] = \"Strikeout\";\n})(PdfFontStyle || (PdfFontStyle = {}));\n/**\n * Specifies the font family from the standard font.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // create new standard font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * ```\n */\nexport var PdfFontFamily;\n(function (PdfFontFamily) {\n    /**\n     * Specifies the `Helvetica` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Helvetica\"] = 0] = \"Helvetica\";\n    /**\n     * Specifies the `Courier` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Courier\"] = 1] = \"Courier\";\n    /**\n     * Specifies the `TimesRoman` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"TimesRoman\"] = 2] = \"TimesRoman\";\n    /**\n     * Specifies the `Symbol` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"Symbol\"] = 3] = \"Symbol\";\n    /**\n     * Specifies the `ZapfDingbats` font.\n     */\n    PdfFontFamily[PdfFontFamily[\"ZapfDingbats\"] = 4] = \"ZapfDingbats\";\n})(PdfFontFamily || (PdfFontFamily = {}));\n/**\n * public Enum for `PdfFontType`.\n * @private\n */\nexport var PdfFontType;\n(function (PdfFontType) {\n    /**\n     * Specifies the type of `Standard`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"Standard\"] = 0] = \"Standard\";\n    /**\n     * Specifies the type of `TrueType`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"TrueType\"] = 1] = \"TrueType\";\n    /**\n     * Specifies the type of `TrueTypeEmbedded`.\n     * @private\n     */\n    PdfFontType[PdfFontType[\"TrueTypeEmbedded\"] = 2] = \"TrueTypeEmbedded\";\n})(PdfFontType || (PdfFontType = {}));\n/**\n * public Enum for `PdfWordWrapType`.\n * @private\n */\nexport var PdfWordWrapType;\n(function (PdfWordWrapType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Word`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"Word\"] = 1] = \"Word\";\n    /**\n     * Specifies the type of `WordOnly`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"WordOnly\"] = 2] = \"WordOnly\";\n    /**\n     * Specifies the type of `Character`.\n     * @private\n     */\n    PdfWordWrapType[PdfWordWrapType[\"Character\"] = 3] = \"Character\";\n})(PdfWordWrapType || (PdfWordWrapType = {}));\n/**\n * public Enum for `PdfSubSuperScript`.\n * @private\n */\nexport var PdfSubSuperScript;\n(function (PdfSubSuperScript) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `SuperScript`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"SuperScript\"] = 1] = \"SuperScript\";\n    /**\n     * Specifies the type of `SubScript`.\n     * @private\n     */\n    PdfSubSuperScript[PdfSubSuperScript[\"SubScript\"] = 2] = \"SubScript\";\n})(PdfSubSuperScript || (PdfSubSuperScript = {}));\n/**\n * public Enum for `FontEncoding`.\n * @private\n */\nexport var FontEncoding;\n(function (FontEncoding) {\n    /**\n     * Specifies the type of `Unknown`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Specifies the type of `StandardEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"StandardEncoding\"] = 1] = \"StandardEncoding\";\n    /**\n     * Specifies the type of `MacRomanEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"MacRomanEncoding\"] = 2] = \"MacRomanEncoding\";\n    /**\n     * Specifies the type of `MacExpertEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"MacExpertEncoding\"] = 3] = \"MacExpertEncoding\";\n    /**\n     * Specifies the type of `WinAnsiEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"WinAnsiEncoding\"] = 4] = \"WinAnsiEncoding\";\n    /**\n     * Specifies the type of `PdfDocEncoding`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"PdfDocEncoding\"] = 5] = \"PdfDocEncoding\";\n    /**\n     * Specifies the type of `IdentityH`.\n     * @private\n     */\n    FontEncoding[FontEncoding[\"IdentityH\"] = 6] = \"IdentityH\";\n})(FontEncoding || (FontEncoding = {}));\n/**\n * public Enum for `TtfCmapFormat`.\n * @private\n */\nexport var TtfCmapFormat;\n(function (TtfCmapFormat) {\n    /**\n     * This is the Apple standard character to glyph index mapping table.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Apple\"] = 0] = \"Apple\";\n    /**\n     * This is the Microsoft standard character to glyph index mapping table.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Microsoft\"] = 4] = \"Microsoft\";\n    /**\n     * Format 6: Trimmed table mapping.\n     * @private\n     */\n    TtfCmapFormat[TtfCmapFormat[\"Trimmed\"] = 6] = \"Trimmed\";\n})(TtfCmapFormat || (TtfCmapFormat = {}));\n/**\n * Enumerator that implements CMAP encodings.\n * @private\n */\nexport var TtfCmapEncoding;\n(function (TtfCmapEncoding) {\n    /**\n     * Unknown encoding.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * When building a symbol font for Windows.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Symbol\"] = 1] = \"Symbol\";\n    /**\n     * When building a Unicode font for Windows.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Unicode\"] = 2] = \"Unicode\";\n    /**\n     * For font that will be used on a Macintosh.\n     * @private\n     */\n    TtfCmapEncoding[TtfCmapEncoding[\"Macintosh\"] = 3] = \"Macintosh\";\n})(TtfCmapEncoding || (TtfCmapEncoding = {}));\n/**\n * Ttf platform ID.\n * @private\n */\nexport var TtfPlatformID;\n(function (TtfPlatformID) {\n    /**\n     * Apple platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"AppleUnicode\"] = 0] = \"AppleUnicode\";\n    /**\n     * Macintosh platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Macintosh\"] = 1] = \"Macintosh\";\n    /**\n     * Iso platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Iso\"] = 2] = \"Iso\";\n    /**\n     * Microsoft platform.\n     * @private\n     */\n    TtfPlatformID[TtfPlatformID[\"Microsoft\"] = 3] = \"Microsoft\";\n})(TtfPlatformID || (TtfPlatformID = {}));\n/**\n * Microsoft encoding ID.\n * @private\n */\nexport var TtfMicrosoftEncodingID;\n(function (TtfMicrosoftEncodingID) {\n    /**\n     * Undefined encoding.\n     * @private\n     */\n    TtfMicrosoftEncodingID[TtfMicrosoftEncodingID[\"Undefined\"] = 0] = \"Undefined\";\n    /**\n     * Unicode encoding.\n     * @private\n     */\n    TtfMicrosoftEncodingID[TtfMicrosoftEncodingID[\"Unicode\"] = 1] = \"Unicode\";\n})(TtfMicrosoftEncodingID || (TtfMicrosoftEncodingID = {}));\n/**\n * Macintosh encoding ID.\n * @private\n */\nexport var TtfMacintoshEncodingID;\n(function (TtfMacintoshEncodingID) {\n    /**\n     * Roman encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Roman\"] = 0] = \"Roman\";\n    /**\n     * Japanese encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Japanese\"] = 1] = \"Japanese\";\n    /**\n     * Chinese encoding.\n     * @private\n     */\n    TtfMacintoshEncodingID[TtfMacintoshEncodingID[\"Chinese\"] = 2] = \"Chinese\";\n})(TtfMacintoshEncodingID || (TtfMacintoshEncodingID = {}));\n/**\n * Enumerator that implements font descriptor flags.\n * @private\n */\nexport var FontDescriptorFlags;\n(function (FontDescriptorFlags) {\n    /**\n     * All glyphs have the same width (as opposed to proportional or variable-pitch fonts, which have different widths).\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"FixedPitch\"] = 1] = \"FixedPitch\";\n    /**\n     * Glyphs have serifs, which are short strokes drawn at an angle on the top and\n     * bottom of glyph stems (as opposed to sans serif fonts, which do not).\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Serif\"] = 2] = \"Serif\";\n    /**\n     * Font contains glyphs outside the Adobe standard Latin character set. The\n     * flag and the nonsymbolic flag cannot both be set or both be clear.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Symbolic\"] = 4] = \"Symbolic\";\n    /**\n     * Glyphs resemble cursive handwriting.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Script\"] = 8] = \"Script\";\n    /**\n     * Font uses the Adobe standard Latin character set or a subset of it.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Nonsymbolic\"] = 32] = \"Nonsymbolic\";\n    /**\n     * Glyphs have dominant vertical strokes that are slanted.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"Italic\"] = 64] = \"Italic\";\n    /**\n     * Bold font.\n     * @private\n     */\n    FontDescriptorFlags[FontDescriptorFlags[\"ForceBold\"] = 262144] = \"ForceBold\";\n})(FontDescriptorFlags || (FontDescriptorFlags = {}));\n/**\n * true type font composite glyph flags.\n * @private\n */\nexport var TtfCompositeGlyphFlags;\n(function (TtfCompositeGlyphFlags) {\n    /**\n     * The Arg1And2AreWords.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"Arg1And2AreWords\"] = 1] = \"Arg1And2AreWords\";\n    /**\n     * The ArgsAreXyValues.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"ArgsAreXyValues\"] = 2] = \"ArgsAreXyValues\";\n    /**\n     * The RoundXyToGrid.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"RoundXyToGrid\"] = 4] = \"RoundXyToGrid\";\n    /**\n     * The WeHaveScale.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveScale\"] = 8] = \"WeHaveScale\";\n    /**\n     * The Reserved.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"Reserved\"] = 16] = \"Reserved\";\n    /**\n     * The MoreComponents.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"MoreComponents\"] = 32] = \"MoreComponents\";\n    /**\n     * The WeHaveAnXyScale.\n     * @private\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveAnXyScale\"] = 64] = \"WeHaveAnXyScale\";\n    /**\n     * The WeHaveTwoByTwo\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveTwoByTwo\"] = 128] = \"WeHaveTwoByTwo\";\n    /**\n     * The WeHaveInstructions.\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"WeHaveInstructions\"] = 256] = \"WeHaveInstructions\";\n    /**\n     * The UseMyMetrics.\n     */\n    TtfCompositeGlyphFlags[TtfCompositeGlyphFlags[\"UseMyMetrics\"] = 512] = \"UseMyMetrics\";\n})(TtfCompositeGlyphFlags || (TtfCompositeGlyphFlags = {}));\n","/**\n * PdfStringFormat.ts class for EJ2-PDF\n */\nimport { PdfVerticalAlignment } from './../../graphics/enum';\nimport { PdfSubSuperScript, PdfWordWrapType } from './../../graphics/fonts/enum';\n/**\n * `PdfStringFormat` class represents the text layout information on PDF.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a pages to the document\n * let page1 : PdfPage = document.pages.add();\n * // set font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // set brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * //\n * // set the format for string\n * let stringFormat : PdfStringFormat = new PdfStringFormat();\n * // set the text alignment\n * stringFormat.alignment = PdfTextAlignment.Center;\n * // set the vertical alignment\n * stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n * //\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStringFormat = /** @class */ (function () {\n    function PdfStringFormat(arg1, arg2) {\n        /**\n         * The `scaling factor` of the text being drawn.\n         * @private\n         */\n        this.scalingFactor = 100.0;\n        /**\n         * Indicates text `wrapping` type.\n         * @private\n         */\n        this.wordWrapType = PdfWordWrapType.Word;\n        this.internalLineLimit = true;\n        this.wordWrapType = PdfWordWrapType.Word;\n        if ((typeof arg1 !== 'undefined') && (typeof arg1 !== 'string')) {\n            this.textAlignment = arg1;\n        }\n        if (typeof arg2 !== 'undefined') {\n            this.verticalAlignment = arg2;\n        }\n    }\n    Object.defineProperty(PdfStringFormat.prototype, \"alignment\", {\n        //Properties\n        /**\n         * Gets or sets the `horizontal` text alignment\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set the text alignment\n         * stringFormat.alignment = PdfTextAlignment.Center;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.textAlignment;\n        },\n        set: function (value) {\n            this.textAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"textDirection\", {\n        get: function () {\n            return this.direction;\n        },\n        set: function (value) {\n            this.direction = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineAlignment\", {\n        /**\n         * Gets or sets the `vertical` text alignment.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set the vertical alignment\n         * stringFormat.lineAlignment = PdfVerticalAlignment.Middle;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.verticalAlignment === 'undefined' || this.verticalAlignment == null) {\n                return PdfVerticalAlignment.Top;\n            }\n            else {\n                return this.verticalAlignment;\n            }\n        },\n        set: function (value) {\n            this.verticalAlignment = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"rightToLeft\", {\n        /**\n         * Gets or sets the value that indicates text `direction` mode.\n         * @private\n         */\n        get: function () {\n            if (typeof this.isRightToLeft === 'undefined' || this.isRightToLeft == null) {\n                return false;\n            }\n            else {\n                return this.isRightToLeft;\n            }\n        },\n        set: function (value) {\n            this.isRightToLeft = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"characterSpacing\", {\n        /**\n         * Gets or sets value that indicates a `size` among the characters in the text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set character spacing\n         * stringFormat.characterSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.internalCharacterSpacing === 'undefined' || this.internalCharacterSpacing == null) {\n                return 0;\n            }\n            else {\n                return this.internalCharacterSpacing;\n            }\n        },\n        set: function (value) {\n            this.internalCharacterSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"wordSpacing\", {\n        /**\n         * Gets or sets value that indicates a `size` among the words in the text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set word spacing\n         * stringFormat.wordSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(10, 10), stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.internalWordSpacing === 'undefined' || this.internalWordSpacing == null) {\n                return 0;\n            }\n            else {\n                return this.internalWordSpacing;\n            }\n        },\n        set: function (value) {\n            this.internalWordSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineSpacing\", {\n        /**\n         * Gets or sets value that indicates the `vertical distance` between the baselines of adjacent lines of text.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // set string\n         * let text : string = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n         * incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitati';\n         * // set rectangle bounds\n         * let rectangle : RectangleF = new RectangleF({x : 0, y : 0}, {width : 300, height : 100})\n         * //\n         * // set the format for string\n         * let stringFormat : PdfStringFormat = new PdfStringFormat();\n         * // set line spacing\n         * stringFormat.lineSpacing = 10;\n         * //\n         * // draw the text\n         * page1.graphics.drawString(text, font, blackBrush, rectangle, stringFormat);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            if (typeof this.leading === 'undefined' || this.leading == null) {\n                return 0;\n            }\n            else {\n                return this.leading;\n            }\n        },\n        set: function (value) {\n            this.leading = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"clipPath\", {\n        /**\n         * Gets or sets a value indicating whether the text is `clipped` or not.\n         * @private\n         */\n        get: function () {\n            if (typeof this.clip === 'undefined' || this.clip == null) {\n                return false;\n            }\n            else {\n                return this.clip;\n            }\n        },\n        set: function (value) {\n            this.clip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"subSuperScript\", {\n        /**\n         * Gets or sets value indicating whether the text is in `subscript or superscript` mode.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfSubSuperScript === 'undefined' || this.pdfSubSuperScript == null) {\n                return PdfSubSuperScript.None;\n            }\n            else {\n                return this.pdfSubSuperScript;\n            }\n        },\n        set: function (value) {\n            this.pdfSubSuperScript = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"paragraphIndent\", {\n        /**\n         * Gets or sets the `indent` of the first line in the paragraph.\n         * @private\n         */\n        get: function () {\n            if (typeof this.internalParagraphIndent === 'undefined' || this.internalParagraphIndent == null) {\n                return 0;\n            }\n            else {\n                return this.internalParagraphIndent;\n            }\n        },\n        set: function (value) {\n            this.internalParagraphIndent = value;\n            this.firstLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"lineLimit\", {\n        /**\n         * Gets or sets a value indicating whether [`line limit`].\n         * @private\n         */\n        get: function () {\n            return this.internalLineLimit;\n        },\n        set: function (value) {\n            this.internalLineLimit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"measureTrailingSpaces\", {\n        /**\n         * Gets or sets a value indicating whether [`measure trailing spaces`].\n         * @private\n         */\n        get: function () {\n            if (typeof this.trailingSpaces === 'undefined' || this.trailingSpaces == null) {\n                return false;\n            }\n            else {\n                return this.trailingSpaces;\n            }\n        },\n        set: function (value) {\n            this.trailingSpaces = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"noClip\", {\n        /**\n         * Gets or sets a value indicating whether [`no clip`].\n         * @private\n         */\n        get: function () {\n            if (typeof this.isNoClip === 'undefined' || this.isNoClip == null) {\n                return false;\n            }\n            else {\n                return this.isNoClip;\n            }\n        },\n        set: function (value) {\n            this.isNoClip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"wordWrap\", {\n        /**\n         * Gets or sets value indicating type of the text `wrapping`.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.wrapType === 'undefined' || this.wrapType == null) {\n            //     return PdfWordWrapType.Word;\n            // } else {\n            return this.wordWrapType;\n            // }\n        },\n        set: function (value) {\n            this.wordWrapType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"horizontalScalingFactor\", {\n        /**\n         * Gets or sets the `scaling factor`.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.scalingFactor === 'undefined' || this.scalingFactor == null) {\n            //     return 100;\n            // } else {\n            return this.scalingFactor;\n            // }\n        },\n        set: function (value) {\n            if (value <= 0) {\n                throw new Error('ArgumentOutOfRangeException:The scaling factor cant be less of equal to zero, ScalingFactor');\n            }\n            this.scalingFactor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringFormat.prototype, \"firstLineIndent\", {\n        /**\n         * Gets or sets the `indent` of the first line in the text.\n         * @private\n         */\n        get: function () {\n            if (typeof this.initialLineIndent === 'undefined' || this.initialLineIndent == null) {\n                return 0;\n            }\n            else {\n                return this.initialLineIndent;\n            }\n        },\n        set: function (value) {\n            this.initialLineIndent = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Clones` the object.\n     * @private\n     */\n    //IClonable implementation\n    PdfStringFormat.prototype.clone = function () {\n        var format = this;\n        return format;\n    };\n    return PdfStringFormat;\n}());\nexport { PdfStringFormat };\n","/**\n * StringTokenizer.ts class for EJ2-PDF\n * Utility class for working with strings.\n * @private\n */\nvar StringTokenizer = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringTokenizer` class.\n     * @private\n     */\n    function StringTokenizer(textValue) {\n        /**\n         * Current `position`.\n         * @private\n         */\n        this.currentPosition = 0;\n        if (textValue == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        this.text = textValue;\n    }\n    Object.defineProperty(StringTokenizer.prototype, \"length\", {\n        // Properties\n        /**\n         * Gets text `length`.\n         * @private\n         */\n        get: function () {\n            return this.text.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StringTokenizer.prototype, \"end\", {\n        get: function () {\n            return (this.currentPosition === this.text.length);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(StringTokenizer.prototype, \"position\", {\n        /**\n         * Gets or sets the position.\n         * @private\n         */\n        get: function () {\n            return this.currentPosition;\n        },\n        set: function (value) {\n            this.currentPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StringTokenizer.getCharsCount = function (text, symbols) {\n        if (typeof symbols === 'string') {\n            if (text == null) {\n                throw new Error('ArgumentNullException:wholeText');\n            }\n            var numSymbols = 0;\n            var curIndex = 0;\n            for (;;) {\n                curIndex = text.indexOf(symbols, curIndex);\n                if (curIndex === -1) {\n                    break;\n                }\n                else {\n                    numSymbols++;\n                    curIndex++;\n                }\n            }\n            return numSymbols;\n        }\n        else {\n            if (text == null) {\n                throw new Error('ArgumentNullException:text');\n            }\n            if (symbols == null) {\n                throw new Error('ArgumentNullException:symbols');\n            }\n            var count = 0;\n            for (var i = 0, len = text.length; i < len; i++) {\n                var ch = text[i];\n                if (this.contains(symbols, ch)) {\n                    count++;\n                }\n            }\n            return count;\n        }\n    };\n    /**\n     * Reads line of the text.\n     * @private\n     */\n    StringTokenizer.prototype.readLine = function () {\n        var pos = this.currentPosition;\n        while (pos < this.length) {\n            var ch = this.text[pos];\n            switch (ch) {\n                case '\\r':\n                case '\\n': {\n                    var text = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos + 1;\n                    if (((ch === '\\r') && (this.currentPosition < this.length)) && (this.text[this.currentPosition] === '\\n')) {\n                        this.currentPosition++;\n                    }\n                    return text;\n                }\n            }\n            pos++;\n        }\n        // The remaining text.\n        if (pos > this.currentPosition) {\n            var text2 = this.text.substr(this.currentPosition, pos - this.currentPosition);\n            this.currentPosition = pos;\n            return text2;\n        }\n        return null;\n    };\n    /**\n     * Reads line of the text.\n     * @private\n     */\n    StringTokenizer.prototype.peekLine = function () {\n        var pos = this.currentPosition;\n        var line = this.readLine();\n        this.currentPosition = pos;\n        return line;\n    };\n    /**\n     * Reads a word from the text.\n     * @private\n     */\n    StringTokenizer.prototype.readWord = function () {\n        var pos = this.currentPosition;\n        while (pos < this.length) {\n            var ch = this.text[pos];\n            switch (ch) {\n                case '\\r':\n                case '\\n':\n                    var textValue = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos + 1;\n                    if (((ch === '\\r') && (this.currentPosition < this.length)) && (this.text[this.currentPosition] === '\\n')) {\n                        this.currentPosition++;\n                    }\n                    return textValue;\n                case ' ':\n                case '\\t': {\n                    if (pos === this.currentPosition) {\n                        pos++;\n                    }\n                    var text = this.text.substr(this.currentPosition, pos - this.currentPosition);\n                    this.currentPosition = pos;\n                    return text;\n                }\n            }\n            pos++;\n        }\n        // The remaining text.\n        if (pos > this.currentPosition) {\n            var text2 = this.text.substr(this.currentPosition, pos - this.currentPosition);\n            this.currentPosition = pos;\n            return text2;\n        }\n        return null;\n    };\n    /**\n     * Peeks a word from the text.\n     * @private\n     */\n    StringTokenizer.prototype.peekWord = function () {\n        var pos = this.currentPosition;\n        var word = this.readWord();\n        this.currentPosition = pos;\n        return word;\n    };\n    StringTokenizer.prototype.read = function (count) {\n        if (typeof count === 'undefined') {\n            var ch = '0';\n            if (!this.end) {\n                ch = this.text[this.currentPosition];\n                this.currentPosition++;\n            }\n            return ch;\n        }\n        else {\n            var num = 0;\n            var builder = '';\n            while (!this.end && num < count) {\n                var ch = this.read();\n                builder = builder + ch;\n                num++;\n            }\n            return builder;\n        }\n    };\n    /**\n     * Peeks char form the data.\n     * @private\n     */\n    StringTokenizer.prototype.peek = function () {\n        var ch = '0';\n        if (!this.end) {\n            ch = this.text[this.currentPosition];\n        }\n        return ch;\n    };\n    /**\n     * Closes a reader.\n     * @private\n     */\n    StringTokenizer.prototype.close = function () {\n        this.text = null;\n    };\n    StringTokenizer.prototype.readToEnd = function () {\n        var text;\n        if (this.currentPosition === 0) {\n            text = this.text;\n        }\n        else {\n            text = this.text.substr(this.currentPosition, this.length - this.currentPosition);\n        }\n        this.currentPosition = this.length;\n        return text;\n    };\n    //Implementation\n    /**\n     * Checks whether array contains a symbol.\n     * @private\n     */\n    StringTokenizer.contains = function (array, symbol) {\n        var contains = false;\n        for (var i = 0; i < array.length; i++) {\n            if (array[i] === symbol) {\n                contains = true;\n                break;\n            }\n        }\n        return contains;\n    };\n    // Constants\n    /**\n     * `Whitespace` symbol.\n     * @private\n     */\n    StringTokenizer.whiteSpace = ' ';\n    /**\n     * `tab` symbol.\n     * @private\n     */\n    StringTokenizer.tab = '\\t';\n    /**\n     * Array of `spaces`.\n     * @private\n     */\n    StringTokenizer.spaces = [StringTokenizer.whiteSpace, StringTokenizer.tab];\n    /**\n     * `Pattern` for WhiteSpace.\n     * @private\n     */\n    StringTokenizer.whiteSpacePattern = '^[ \\t]+$';\n    return StringTokenizer;\n}());\nexport { StringTokenizer };\n","import { SizeF, RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfWordWrapType } from './enum';\nimport { StringTokenizer } from './string-tokenizer';\n/**\n * Class `lay outing the text`.\n */\nvar PdfStringLayouter = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringLayouter` class.\n     * @private\n     */\n    function PdfStringLayouter() {\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isOverloadWithPosition = false;\n        //\n    }\n    PdfStringLayouter.prototype.layout = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        if (arg4 instanceof RectangleF) {\n            this.initialize(arg1, arg2, arg3, arg4, arg5);\n            this.isOverloadWithPosition = arg6;\n            this.clientSize = arg7;\n            var result = this.doLayout();\n            this.clear();\n            return result;\n        }\n        else {\n            this.initialize(arg1, arg2, arg3, arg4);\n            this.isOverloadWithPosition = arg5;\n            this.clientSize = arg6;\n            var result = this.doLayout();\n            this.clear();\n            return result;\n        }\n    };\n    PdfStringLayouter.prototype.initialize = function (text, font, format, rectSize, pageHeight) {\n        if (typeof pageHeight === 'number') {\n            if (text == null) {\n                throw new Error('ArgumentNullException:text');\n            }\n            if (font == null) {\n                throw new Error('ArgumentNullException:font');\n            }\n            this.text = text;\n            this.font = font;\n            this.format = format;\n            this.size = new SizeF(rectSize.width, rectSize.height);\n            this.rectangle = rectSize;\n            this.pageHeight = pageHeight;\n            this.reader = new StringTokenizer(text);\n        }\n        else {\n            this.initialize(text, font, format, new RectangleF(new PointF(0, 0), rectSize), 0);\n        }\n    };\n    /**\n     * `Clear` all resources.\n     * @private\n     */\n    PdfStringLayouter.prototype.clear = function () {\n        this.font = null;\n        this.format = null;\n        this.reader.close();\n        this.reader = null;\n        this.text = null;\n    };\n    /**\n     * `Layouts` the text.\n     * @private\n     */\n    PdfStringLayouter.prototype.doLayout = function () {\n        var result = new PdfStringLayoutResult();\n        var lineResult = new PdfStringLayoutResult();\n        var lines = [];\n        var line = this.reader.peekLine();\n        var lineIndent = this.getLineIndent(true);\n        while (line != null) {\n            lineResult = this.layoutLine(line, lineIndent);\n            if (lineResult !== null || typeof lineResult !== 'undefined') {\n                var numSymbolsInserted = 0;\n                /* tslint:disable */\n                var returnedValue = this.copyToResult(result, lineResult, lines, /*out*/ numSymbolsInserted);\n                /* tslint:enable */\n                var success = returnedValue.success;\n                numSymbolsInserted = returnedValue.numInserted;\n                if (!success) {\n                    this.reader.read(numSymbolsInserted);\n                    break;\n                }\n            }\n            // if (lineResult.textRemainder != null && lineResult.textRemainder.length > 0 ) {\n            //     break;\n            // }\n            this.reader.readLine();\n            line = this.reader.peekLine();\n            lineIndent = this.getLineIndent(false);\n        }\n        this.finalizeResult(result, lines);\n        return result;\n    };\n    /**\n     * Returns `line indent` for the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineIndent = function (firstLine) {\n        var lineIndent = 0;\n        if (this.format != null) {\n            lineIndent = (firstLine) ? this.format.firstLineIndent : this.format.paragraphIndent;\n            lineIndent = (this.size.width > 0) ? Math.min(this.size.width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    /**\n     * Calculates `height` of the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineHeight = function () {\n        var height = this.font.height;\n        if (this.format != null && this.format.lineSpacing !== 0) {\n            height = this.format.lineSpacing + this.font.height;\n        }\n        return height;\n    };\n    /**\n     * Calculates `width` of the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.getLineWidth = function (line) {\n        var width = this.font.getLineWidth(line, this.format);\n        return width;\n    };\n    // tslint:disable\n    /**\n     * `Layouts` line.\n     * @private\n     */\n    PdfStringLayouter.prototype.layoutLine = function (line, lineIndent) {\n        var lineResult = new PdfStringLayoutResult();\n        lineResult.layoutLineHeight = this.getLineHeight();\n        var lines = [];\n        var maxWidth = this.size.width;\n        var lineWidth = this.getLineWidth(line) + lineIndent;\n        var lineType = LineType.FirstParagraphLine;\n        var readWord = true;\n        // line is in bounds.\n        if (maxWidth <= 0 || Math.round(lineWidth) <= Math.round(maxWidth)) {\n            this.addToLineResult(lineResult, lines, line, lineWidth, LineType.NewLineBreak | lineType);\n        }\n        else {\n            var builder = '';\n            var curLine = '';\n            lineWidth = lineIndent;\n            var curIndent = lineIndent;\n            var reader = new StringTokenizer(line);\n            var word = reader.peekWord();\n            var isSingleWord = false;\n            if (word.length !== reader.length) {\n                if (word === ' ') {\n                    curLine = curLine + word;\n                    builder = builder + word;\n                    reader.position += 1;\n                    word = reader.peekWord();\n                }\n            }\n            while (word != null) {\n                curLine = curLine + word;\n                var curLineWidth = this.getLineWidth(curLine.toString()) + curIndent /*)*/;\n                if (curLine.toString() === ' ') {\n                    curLine = '';\n                    curLineWidth = 0;\n                }\n                if (curLineWidth > maxWidth) {\n                    if (this.getWrapType() === PdfWordWrapType.None) {\n                        break;\n                    }\n                    if (curLine.length === word.length) {\n                        //  Character wrap is disabled or one symbol is greater than bounds.\n                        if (this.getWrapType() === PdfWordWrapType.WordOnly) {\n                            lineResult.textRemainder = line.substring(reader.position);\n                            break;\n                        }\n                        else if (curLine.length === 1) {\n                            builder = builder + word;\n                            break;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            word = reader.peek().toString();\n                            continue;\n                        }\n                    }\n                    else {\n                        if (this.getLineWidth(word.toString()) > maxWidth) {\n                            this.format.wordWrap = PdfWordWrapType.Character;\n                        }\n                        else {\n                            if (typeof this.format !== 'undefined' && this.format !== null) {\n                                this.format.wordWrap = PdfWordWrapType.Word;\n                            }\n                        }\n                        if (this.getWrapType() !== PdfWordWrapType.Character || !readWord) {\n                            var ln = builder.toString();\n                            // if (ln.indexOf(' ') === -1) {\n                            //     isSingleWord = true;\n                            //     this.addToLineResult(lineResult, lines, curLine, lineWidth, LineType.LayoutBreak | lineType);\n                            // } else {\n                            //     this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.LayoutBreak | lineType);\n                            // }                          \n                            if (ln !== ' ') {\n                                this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.LayoutBreak | lineType);\n                            }\n                            if (this.isOverloadWithPosition) {\n                                maxWidth = this.clientSize.width;\n                            }\n                            curLine = '';\n                            builder = '';\n                            lineWidth = 0;\n                            curIndent = 0;\n                            curLineWidth = 0;\n                            lineType = LineType.None;\n                            // if (isSingleWord) {\n                            //     reader.readWord();\n                            //     readWord = false;\n                            // }\n                            word = (readWord) ? word : reader.peekWord();\n                            //isSingleWord = false;\n                            readWord = true;\n                        }\n                        else {\n                            readWord = false;\n                            curLine = '';\n                            curLine = curLine + builder.toString();\n                            word = reader.peek().toString();\n                        }\n                        continue;\n                    }\n                }\n                /*tslint:disable:max-func-body-length */\n                builder = builder + word;\n                lineWidth = curLineWidth;\n                if (readWord) {\n                    reader.readWord();\n                    word = reader.peekWord();\n                    //isSingleWord = false;\n                }\n                else {\n                    reader.read();\n                    word = reader.peek().toString();\n                }\n            }\n            if (builder.length > 0) {\n                var ln = builder.toString();\n                this.addToLineResult(lineResult, lines, ln, lineWidth, LineType.NewLineBreak | LineType.LastParagraphLine);\n            }\n            reader.close();\n        }\n        lineResult.layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            lineResult.layoutLines.push(lines[index]);\n        }\n        lines = [];\n        return lineResult;\n    };\n    /**\n     * `Adds` line to line result.\n     * @private\n     */\n    PdfStringLayouter.prototype.addToLineResult = function (lineResult, lines, line, lineWidth, breakType) {\n        var info = new LineInfo();\n        info.text = line;\n        info.width = lineWidth;\n        info.lineType = breakType;\n        lines.push(info);\n        var size = lineResult.actualSize;\n        size.height += this.getLineHeight();\n        size.width = Math.max(size.width, lineWidth);\n        lineResult.size = size;\n    };\n    /**\n     * `Copies` layout result from line result to entire result. Checks whether we can proceed lay outing or not.\n     * @private\n     */\n    PdfStringLayouter.prototype.copyToResult = function (result, lineResult, lines, \n    /*out*/ numInserted) {\n        var success = true;\n        var allowPartialLines = (this.format != null && !this.format.lineLimit);\n        var height = result.actualSize.height;\n        var maxHeight = this.size.height;\n        if ((this.pageHeight > 0) && (maxHeight + this.rectangle.y > this.pageHeight)) {\n            maxHeight = this.rectangle.y - this.pageHeight;\n            maxHeight = Math.max(maxHeight, -maxHeight);\n        }\n        numInserted = 0;\n        if (lineResult.lines != null) {\n            for (var i = 0, len = lineResult.lines.length; i < len; i++) {\n                var expHeight = height + lineResult.lineHeight;\n                if (expHeight <= maxHeight || maxHeight <= 0 || allowPartialLines) {\n                    var info = lineResult.lines[i];\n                    numInserted += info.text.length;\n                    info = this.trimLine(info, (lines.length === 0));\n                    lines.push(info);\n                    // Update width.\n                    var size = result.actualSize;\n                    size.width = Math.max(size.width, info.width);\n                    result.size = size;\n                    // The part of the line fits only and it's allowed to use partial lines.\n                    // if (expHeight >= maxHeight && maxHeight > 0 && allowPartialLines)\n                    // {\n                    //     let shouldClip : boolean = (this.format == null || !this.format.noClip);\n                    //     if (shouldClip)\n                    //     {\n                    //         let exceededHeight : number = expHeight - maxHeight;\n                    //         let fitHeight : number  = /*Utils.Round(*/ lineResult.lineHeight - exceededHeight /*)*/;\n                    //         height = /*Utils.Round(*/ height + fitHeight /*)*/;\n                    //     }\n                    //     else\n                    //     {\n                    //         height = expHeight;\n                    //     }\n                    //     success = false;\n                    //     break;\n                    // } else {\n                    height = expHeight;\n                    // }\n                }\n                else {\n                    success = false;\n                    break;\n                }\n            }\n        }\n        if (height != result.size.height) {\n            var size1 = result.actualSize;\n            size1.height = height;\n            result.size = size1;\n        }\n        return { success: success, numInserted: numInserted };\n    };\n    /**\n     * `Finalizes` final result.\n     * @private\n     */\n    PdfStringLayouter.prototype.finalizeResult = function (result, lines) {\n        result.layoutLines = [];\n        for (var index = 0; index < lines.length; index++) {\n            result.layoutLines.push(lines[index]);\n        }\n        result.layoutLineHeight = this.getLineHeight();\n        if (!this.reader.end) {\n            result.textRemainder = this.reader.readToEnd();\n        }\n        lines = [];\n    };\n    /**\n     * `Trims` whitespaces at the line.\n     * @private\n     */\n    PdfStringLayouter.prototype.trimLine = function (info, firstLine) {\n        var line = info.text;\n        var lineWidth = info.width;\n        // Trim start whitespaces if the line is not a start of the paragraph only.\n        var trimStartSpaces = ((info.lineType & LineType.FirstParagraphLine) === 0);\n        var start = (this.format == null || !this.format.rightToLeft);\n        var spaces = StringTokenizer.spaces;\n        line = (start) ? line.trim() : line.trim();\n        // Recalculate line width.\n        if (line.length !== info.text.length) {\n            lineWidth = this.getLineWidth(line);\n            if ((info.lineType & LineType.FirstParagraphLine) > 0) {\n                lineWidth += this.getLineIndent(firstLine);\n            }\n        }\n        info.text = line;\n        info.width = lineWidth;\n        return info;\n    };\n    /**\n     * Returns `wrap` type.\n     * @private\n     */\n    PdfStringLayouter.prototype.getWrapType = function () {\n        var wrapType = (this.format != null) ? this.format.wordWrap : PdfWordWrapType.Word;\n        return wrapType;\n    };\n    return PdfStringLayouter;\n}());\nexport { PdfStringLayouter };\n//Internal declaration\nvar PdfStringLayoutResult = /** @class */ (function () {\n    function PdfStringLayoutResult() {\n    }\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"remainder\", {\n        // Properties\n        /**\n         * Gets the `text` which is not lay outed.\n         * @private\n         */\n        get: function () {\n            return this.textRemainder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"actualSize\", {\n        /**\n         * Gets the actual layout text `bounds`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.size === 'undefined') {\n                this.size = new SizeF(0, 0);\n            }\n            return this.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lines\", {\n        /**\n         * Gets layout `lines` information.\n         * @private\n         */\n        get: function () {\n            return this.layoutLines;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lineHeight\", {\n        /**\n         * Gets the `height` of the line.\n         * @private\n         */\n        get: function () {\n            return this.layoutLineHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"empty\", {\n        /**\n         * Gets value that indicates whether any layout text [`empty`].\n         * @private\n         */\n        get: function () {\n            return (this.layoutLines == null || this.layoutLines.length === 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStringLayoutResult.prototype, \"lineCount\", {\n        /**\n         * Gets `number of` the layout lines.\n         * @private\n         */\n        get: function () {\n            var count = (!this.empty) ? this.layoutLines.length : 0;\n            return count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfStringLayoutResult;\n}());\nexport { PdfStringLayoutResult };\nvar LineInfo = /** @class */ (function () {\n    function LineInfo() {\n    }\n    Object.defineProperty(LineInfo.prototype, \"lineType\", {\n        //Properties\n        /**\n         * Gets the `type` of the line text.\n         * @private\n         */\n        get: function () {\n            return this.type;\n        },\n        set: function (value) {\n            this.type = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineInfo.prototype, \"text\", {\n        /**\n         * Gets the line `text`.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(LineInfo.prototype, \"width\", {\n        /**\n         * Gets `width` of the line text.\n         * @private\n         */\n        get: function () {\n            return this.lineWidth;\n        },\n        set: function (value) {\n            this.lineWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return LineInfo;\n}());\nexport { LineInfo };\n/**\n* Break type of the `line`.\n* @private\n*/\nexport var LineType;\n(function (LineType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    LineType[LineType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `NewLineBreak`.\n     * @private\n     */\n    LineType[LineType[\"NewLineBreak\"] = 1] = \"NewLineBreak\";\n    /**\n     * Specifies the type of `LayoutBreak`.\n     * @private\n     */\n    LineType[LineType[\"LayoutBreak\"] = 2] = \"LayoutBreak\";\n    /**\n     * Specifies the type of `FirstParagraphLine`.\n     * @private\n     */\n    LineType[LineType[\"FirstParagraphLine\"] = 4] = \"FirstParagraphLine\";\n    /**\n     * Specifies the type of `LastParagraphLine`.\n     * @private\n     */\n    LineType[LineType[\"LastParagraphLine\"] = 8] = \"LastParagraphLine\";\n})(LineType || (LineType = {}));\n","/**\n * PdfFont.ts class for EJ2-PDF\n */\nimport { PdfFontStyle } from './enum';\nimport { SizeF } from './../../drawing/pdf-drawing';\nimport { PdfStringFormat } from './pdf-string-format';\nimport { PdfStringLayouter } from './string-layouter';\nimport { StringTokenizer } from './string-tokenizer';\n/**\n * Defines a particular format for text, including font face, size, and style attributes.\n * @private\n */\nvar PdfFont = /** @class */ (function () {\n    function PdfFont(size, style) {\n        /**\n         * `Style` of the font.\n         * @private\n         */\n        this.fontStyle = PdfFontStyle.Regular;\n        if (typeof size === 'number' && typeof style === 'undefined') {\n            this.fontSize = size;\n        }\n        else {\n            this.fontSize = size;\n            this.setStyle(style);\n        }\n    }\n    Object.defineProperty(PdfFont.prototype, \"name\", {\n        //Properties\n        /**\n         * Gets the face name of this Font.\n         * @private\n         */\n        get: function () {\n            return this.metrics.name;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"size\", {\n        /**\n         * Gets the size of this font.\n         * @private\n         */\n        get: function () {\n            return this.fontSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"height\", {\n        /**\n         * Gets the height of the font in points.\n         * @private\n         */\n        get: function () {\n            return this.metrics.getHeight(null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"style\", {\n        /**\n         * Gets the style information for this font.\n         * @private\n         */\n        get: function () {\n            return this.fontStyle;\n        },\n        set: function (value) {\n            this.fontStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"bold\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `bold`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Bold) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"italic\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` has the `italic` style applied.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Italic) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"strikeout\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `strikeout`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Strikeout) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"underline\", {\n        /**\n         * Gets a value indicating whether this `PdfFont` is `underline`.\n         * @private\n         */\n        get: function () {\n            return ((this.style & PdfFontStyle.Underline) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"metrics\", {\n        /**\n         * Gets or sets the `metrics` for this font.\n         * @private\n         */\n        get: function () {\n            return this.fontMetrics;\n        },\n        set: function (value) {\n            this.fontMetrics = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFont.prototype, \"element\", {\n        // /**\n        //  * Gets and Sets the font `internals`.\n        //  * @private\n        //  */\n        // public get fontInternal() : IPdfPrimitive {\n        //     return this.pdfFontInternals;\n        // }\n        // public set fontInternal(value : IPdfPrimitive) {\n        //     this.pdfFontInternals = value;\n        // }\n        //IPdfWrapper Members\n        /**\n         * Gets the `element` representing the font.\n         * @private\n         */\n        get: function () {\n            return this.pdfFontInternals;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfFont.prototype.measureString = function (text, arg2, arg3, arg4, arg5) {\n        if (typeof text === 'string' && typeof arg2 === 'undefined') {\n            return this.measureString(text, null);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) && typeof arg3 === 'undefined' && typeof arg4 === 'undefined') {\n            var temparg2 = arg2;\n            var charactersFitted = 0;\n            var linesFilled = 0;\n            return this.measureString(text, temparg2, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && (arg2 instanceof PdfStringFormat || arg2 == null) && typeof arg3 === 'number' && typeof arg4 === 'number') {\n            var temparg2 = arg2;\n            return this.measureString(text, 0, temparg2, arg3, arg4);\n            // } else if (typeof text === 'string' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            //     return this.measureString(text, arg2, null);\n            // } else if (typeof text === 'string' && typeof arg2 === 'number' && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'undefined' && typeof arg5 === 'undefined') {\n            //     let temparg3 : PdfStringFormat = arg3 as PdfStringFormat;\n            //     let charactersFitted : number = 0;\n            //     let linesFilled : number = 0;\n            //     return this.measureString(text, arg2, temparg3, charactersFitted, linesFilled);\n        }\n        else if (typeof text === 'string' && typeof arg2 === 'number' && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'number' && typeof arg5 === 'number') {\n            var layoutArea = new SizeF(arg2, 0);\n            var temparg3 = arg3;\n            return this.measureString(text, layoutArea, temparg3, arg4, arg5);\n            // } else if (typeof text === 'string' && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n            //     return this.measureString(text, arg2, null);\n            // } else if (typeof text === 'string' && arg2 instanceof SizeF && (arg3 instanceof PdfStringFormat || arg3 == null) && typeof arg4 === 'undefined' && typeof arg5 === 'undefined') {\n            //     let temparg3 : PdfStringFormat = arg3 as PdfStringFormat;\n            //     let charactersFitted : number = 0;\n            //     let linesFilled : number = 0;\n            //     return this.measureString(text, arg2, temparg3, charactersFitted, linesFilled);\n        }\n        else {\n            if (text == null) {\n                throw Error(\"ArgumentNullException(\\\"text\\\")\");\n            }\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var layouter = new PdfStringLayouter();\n            var result = layouter.layout(text, this, temparg3, temparg2, false, new SizeF(0, 0));\n            // arg4 = (result.Remainder == null) ? text.length : text.length - result.Remainder.length;\n            arg4 = text.length;\n            arg5 = (result.empty) ? 0 : result.lines.length;\n            return result.actualSize;\n        }\n    };\n    /* tslint:enable */\n    //IPdfCache Members\n    /**\n     * `Checks` whether the object is similar to another object.\n     * @private\n     */\n    PdfFont.prototype.equalsTo = function (obj) {\n        var result = this.equalsToFont(obj);\n        return result;\n    };\n    /**\n     * Returns `internals` of the object.\n     * @private\n     */\n    PdfFont.prototype.getInternals = function () {\n        return this.pdfFontInternals;\n    };\n    /**\n     * Sets `internals` to the object.\n     * @private\n     */\n    PdfFont.prototype.setInternals = function (internals) {\n        if (internals == null) {\n            throw new Error('ArgumentNullException:internals');\n        }\n        this.pdfFontInternals = internals;\n    };\n    /**\n     * Sets the `style` of the font.\n     * @private\n     */\n    PdfFont.prototype.setStyle = function (style) {\n        this.fontStyle = style;\n    };\n    /**\n     * Applies `settings` to the default line width.\n     * @private\n     */\n    PdfFont.prototype.applyFormatSettings = function (line, format, width) {\n        // if (line == null) {\n        //     throw new Error(`ArgumentNullException:line`);\n        // }\n        var realWidth = width;\n        if (format != null && width > 0) {\n            // Space among characters is not default.\n            if (format.characterSpacing !== 0) {\n                realWidth += (line.length - 1) * format.characterSpacing;\n            }\n            // Space among words is not default.\n            if (format.wordSpacing !== 0) {\n                var symbols = StringTokenizer.spaces;\n                var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n                realWidth += whitespacesCount * format.wordSpacing;\n            }\n        }\n        return realWidth;\n    };\n    //Constants\n    /**\n     * `Multiplier` of the symbol width.\n     * @default 0.001\n     * @private\n     */\n    PdfFont.charSizeMultiplier = 0.001;\n    /**\n     * `Synchronization` object.\n     * @private\n     */\n    PdfFont.syncObject = new Object();\n    return PdfFont;\n}());\nexport { PdfFont };\n","/**\n * Helper class for chunk buffer.\n * @private\n */\nvar _PdfChunkBuffer = /** @class */ (function () {\n    /**\n     * Initialize an instance of `_PdfChunkBuffer` class.\n     * @private\n     */\n    function _PdfChunkBuffer(chunkSize) {\n        if (chunkSize === void 0) { chunkSize = 1048576; }\n        /**\n         * Specifies the `chunks`.\n         * @private\n         */\n        this.chunks = [];\n        /**\n         * Specifies the `offset`.\n         * @private\n         */\n        this.offset = 0;\n        /**\n         * Specifies the `committed`.\n         * @private\n         */\n        this.committed = 0;\n        this.chunkSize = chunkSize;\n        this.current = new Uint8Array(this.chunkSize);\n        this.chunks.push(this.current);\n    }\n    Object.defineProperty(_PdfChunkBuffer.prototype, \"length\", {\n        /**\n         * Gets the `length`.\n         * @private\n         */\n        get: function () {\n            return this.committed + this.offset;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Grows the buffer by allocating a new chunk.\n     * @private\n     */\n    _PdfChunkBuffer.prototype.grow = function () {\n        this.committed += this.offset;\n        this.current = new Uint8Array(this.chunkSize);\n        this.chunks.push(this.current);\n        this.offset = 0;\n    };\n    /**\n     * Writes ASCII string as bytes (each charCodeAt masked to 0..255).\n     * @private\n     */\n    _PdfChunkBuffer.prototype.writeAscii = function (str) {\n        var idx = 0;\n        while (idx < str.length) {\n            if (this.offset >= this.current.byteLength) {\n                this.grow();\n            }\n            var space = this.current.byteLength - this.offset;\n            var toWrite = Math.min(space, str.length - idx);\n            for (var i = 0; i < toWrite; i++) {\n                this.current[this.offset + i] = str.charCodeAt(idx + i) & 0xFF;\n            }\n            this.offset += toWrite;\n            idx += toWrite;\n        }\n    };\n    /**\n     * Converts to `Uint8Array`.\n     * @private\n     */\n    _PdfChunkBuffer.prototype.toUint8Array = function () {\n        var total = this.length;\n        var out = new Uint8Array(total);\n        var pos = 0;\n        var lastIdx = this.chunks.length - 1;\n        for (var i = 0; i <= lastIdx; i++) {\n            var chunk = this.chunks[i];\n            if (i === lastIdx) {\n                out.set(chunk.subarray(0, this.offset), pos);\n                pos += this.offset;\n            }\n            else {\n                out.set(chunk, pos);\n                pos += chunk.byteLength;\n            }\n        }\n        return out;\n    };\n    /**\n     * Destroys the array buffer.\n     * @private\n     */\n    _PdfChunkBuffer.prototype.destroy = function () {\n        this.chunks = [];\n        this.current = undefined;\n        this.offset = 0;\n        this.committed = 0;\n    };\n    return _PdfChunkBuffer;\n}());\nexport { _PdfChunkBuffer };\n/**\n * Used to `write a string` into output file.\n * @private\n */\nvar PdfWriter = /** @class */ (function () {\n    function PdfWriter(stream) {\n        /**\n         * Specifies the `byteCountForStreamWriter`.\n         * @private\n         */\n        this.byteCountForStreamWriter = 0;\n        this.streamWriter = stream;\n    }\n    Object.defineProperty(PdfWriter.prototype, \"document\", {\n        /**\n         * Gets and Sets the `document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"position\", {\n        /**\n         * Gets the `position`.\n         * @private\n         */\n        get: function () {\n            if (this.streamWriter instanceof PdfWriterHelper) {\n                return this.streamWriter.buffer.size;\n            }\n            // For StreamWriter, we keep an internal count based on written characters\n            return this.byteCountForStreamWriter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"length\", {\n        /**\n         * Gets  the `length` of the stream'.\n         * @private\n         */\n        get: function () {\n            return this.position;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfWriter.prototype, \"stream\", {\n        /**\n         * Gets the `stream`.\n         * @private\n         */\n        get: function () {\n            return this.streamWriter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Writes the specified data`.\n     * @private\n     */\n    PdfWriter.prototype.write = function (data) {\n        if (typeof data === 'number') {\n            data = String.fromCharCode(data);\n        }\n        if (this.streamWriter instanceof PdfWriterHelper) {\n            this.streamWriter.write(data);\n        }\n        else {\n            this.streamWriter.write(data);\n            this.byteCountForStreamWriter += data.length;\n        }\n    };\n    return PdfWriter;\n}());\nexport { PdfWriter };\n/**\n * Helper class for PDF writer.\n * @private\n */\nvar PdfWriterHelper = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfWriterHelper` class.\n     * @private\n     */\n    function PdfWriterHelper(chunkSize) {\n        if (chunkSize === void 0) { chunkSize = 1048576; }\n        this.buffer = new PdfArrayBuffer(chunkSize);\n    }\n    /**\n     * Writes the specified data.\n     * @private\n     */\n    PdfWriterHelper.prototype.write = function (data) {\n        this.buffer.write(data);\n    };\n    /**\n     * Destroy the array buffer.\n     * @private\n     */\n    PdfWriterHelper.prototype.destroy = function () {\n        if (this.buffer) {\n            this.buffer.destroy();\n            this.buffer = undefined;\n        }\n    };\n    return PdfWriterHelper;\n}());\nexport { PdfWriterHelper };\n/**\n * Helper class for PDF writer.\n * @private\n */\nvar PdfArrayBuffer = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfArrayBuffer` class.\n     * @private\n     */\n    function PdfArrayBuffer(chunkSize) {\n        if (chunkSize === void 0) { chunkSize = 1048576; }\n        this.buf = new _PdfChunkBuffer(chunkSize);\n    }\n    Object.defineProperty(PdfArrayBuffer.prototype, \"size\", {\n        /**\n         * Gets the `size`.\n         * @private\n         */\n        get: function () {\n            return this.buf.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Writes the specified data.\n     * @private\n     */\n    PdfArrayBuffer.prototype.write = function (value) {\n        this.buf.writeAscii(value);\n    };\n    /**\n     * Converts to `Uint8Array`.\n     * @private\n     */\n    PdfArrayBuffer.prototype.toUint8Array = function () {\n        return this.buf.toUint8Array();\n    };\n    /**\n     * Destroys the buffer.\n     * @private\n     */\n    PdfArrayBuffer.prototype.destroy = function () {\n        if (this.buf) {\n            this.buf.destroy();\n            this.buf = undefined;\n        }\n    };\n    return PdfArrayBuffer;\n}());\nexport { PdfArrayBuffer };\n","/**\n * public Enum for `CompositeFontType`.\n * @private\n */\nexport var ObjectStatus;\n(function (ObjectStatus) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    ObjectStatus[ObjectStatus[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Registered`.\n     * @private\n     */\n    ObjectStatus[ObjectStatus[\"Registered\"] = 1] = \"Registered\";\n})(ObjectStatus || (ObjectStatus = {}));\n","/**\n * PdfMainObjectCollection.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../collections/dictionary';\nimport { ObjectStatus } from './enum';\n/**\n * The collection of all `objects` within a PDF document.\n * @private\n */\nvar PdfMainObjectCollection = /** @class */ (function () {\n    function PdfMainObjectCollection() {\n        //Fields\n        /**\n         * The collection of the `indirect objects`.\n         * @default []\n         * @private\n         */\n        this.objectCollections = [];\n        /**\n         * The collection of the `Indirect objects`.\n         * @default new Dictionary<number, ObjectInfo>()\n         * @private\n         */\n        this.mainObjectCollection = new Dictionary();\n        /**\n         * The collection of `primitive objects`.\n         * @private\n         */\n        this.primitiveObjectCollection = new Dictionary();\n    }\n    Object.defineProperty(PdfMainObjectCollection.prototype, \"count\", {\n        //Properties\n        /**\n         * Gets the `count`.\n         * @private\n         */\n        get: function () {\n            return this.objectCollections.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the value of `ObjectInfo` from object collection.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.items = function (index) {\n        return this.objectCollections[index];\n    };\n    Object.defineProperty(PdfMainObjectCollection.prototype, \"outIsNew\", {\n        //Methods\n        /**\n         * Specifies the value of `IsNew`.\n         * @private\n         */\n        get: function () {\n            return this.isNew;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Adds` the specified element.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.add = function (element) {\n        var objInfo = new ObjectInfo(element);\n        this.objectCollections.push(objInfo);\n        if (!this.primitiveObjectCollection.containsKey(element)) {\n            this.primitiveObjectCollection.setValue(element, this.objectCollections.length - 1);\n        }\n        element.position = this.index = this.objectCollections.length - 1;\n        element.status = ObjectStatus.Registered;\n    };\n    /**\n     * `Looks` through the collection for the object specified.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.lookFor = function (obj) {\n        var index = -1;\n        if (obj.position !== -1) {\n            return obj.position;\n        }\n        if (this.primitiveObjectCollection.containsKey(obj) && this.count === this.primitiveObjectCollection.size()) {\n            index = this.primitiveObjectCollection.getValue(obj);\n        }\n        else {\n            for (var i = this.count - 1; i >= 0; i--) {\n                var oi = this.objectCollections[i];\n                if (oi.object === obj) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    };\n    /**\n     * Gets the `reference of the object`.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.getReference = function (index, isNew) {\n        this.index = this.lookFor(index);\n        var reference;\n        this.isNew = false;\n        var oi = this.objectCollections[this.index];\n        reference = oi.reference;\n        var obj = { reference: reference, wasNew: isNew };\n        return obj;\n    };\n    /**\n     * Tries to set the `reference to the object`.\n     * @private\n     */\n    PdfMainObjectCollection.prototype.trySetReference = function (obj, reference, found) {\n        var result = true;\n        found = true;\n        this.index = this.lookFor(obj);\n        var oi = this.objectCollections[this.index];\n        oi.setReference(reference);\n        return result;\n    };\n    PdfMainObjectCollection.prototype.destroy = function () {\n        for (var _i = 0, _a = this.objectCollections; _i < _a.length; _i++) {\n            var obj = _a[_i];\n            if (obj !== undefined) {\n                obj.pdfObject.position = -1;\n                obj.pdfObject.isSaving = undefined;\n                obj.pdfObject.objectCollectionIndex = undefined;\n                obj.pdfObject.position = undefined;\n            }\n        }\n        this.objectCollections = [];\n        this.mainObjectCollection = new Dictionary();\n        this.primitiveObjectCollection = new Dictionary();\n    };\n    return PdfMainObjectCollection;\n}());\nexport { PdfMainObjectCollection };\nvar ObjectInfo = /** @class */ (function () {\n    function ObjectInfo(obj, reference) {\n        this.pdfObject = obj;\n        this.pdfReference = reference;\n    }\n    Object.defineProperty(ObjectInfo.prototype, \"object\", {\n        //Properties\n        /**\n         * Gets the `object`.\n         * @private\n         */\n        get: function () {\n            return this.pdfObject;\n        },\n        set: function (value) {\n            this.pdfObject = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ObjectInfo.prototype, \"reference\", {\n        /**\n         * Gets the `reference`.\n         * @private\n         */\n        get: function () {\n            return this.pdfReference;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the `reference`.\n     * @private\n     */\n    ObjectInfo.prototype.setReference = function (reference) {\n        this.pdfReference = reference;\n    };\n    return ObjectInfo;\n}());\nexport { ObjectInfo };\n","import { Encoding, StreamWriter } from '@syncfusion/ej2-file-utils';\nimport { PdfDocument } from './pdf-document';\n/**\n * `PdfDocumentBase` class represent common properties of PdfDocument classes.\n * @private\n */\nvar PdfDocumentBase = /** @class */ (function () {\n    function PdfDocumentBase(document) {\n        /**\n         * If the stream is copied,  then it specifies true.\n         * @private\n         */\n        this.isStreamCopied = false;\n        if (document instanceof PdfDocument) {\n            this.document = document;\n        }\n    }\n    Object.defineProperty(PdfDocumentBase.prototype, \"pdfObjects\", {\n        //Prpperties\n        /**\n         * Gets the `PDF objects` collection, which stores all objects and references to it..\n         * @private\n         */\n        get: function () {\n            return this.objects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"crossTable\", {\n        /**\n         * Gets the `cross-reference` table.\n         * @private\n         */\n        get: function () {\n            return this.pdfCrossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"currentSavingObj\", {\n        /**\n         * Gets or sets the current saving `object number`.\n         * @private\n         */\n        get: function () {\n            return this.currentSavingObject;\n        },\n        set: function (value) {\n            this.currentSavingObject = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"catalog\", {\n        /**\n         * Gets the PDF document `catalog`.\n         * @private\n         */\n        get: function () {\n            return this.pdfCatalog;\n        },\n        set: function (value) {\n            this.pdfCatalog = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentBase.prototype, \"viewerPreferences\", {\n        /**\n         * Gets viewer preferences for presenting the PDF document in a viewer.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets viewer preferences\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfCatalog.viewerPreferences;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public methods\n    /**\n     * Sets the `main object collection`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setMainObjectCollection = function (mainObjectCollection) {\n        this.objects = mainObjectCollection;\n    };\n    /**\n     * Sets the `cross table`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setCrossTable = function (cTable) {\n        this.pdfCrossTable = cTable;\n    };\n    /**\n     * Sets the `catalog`.\n     * @private\n     */\n    PdfDocumentBase.prototype.setCatalog = function (catalog) {\n        this.pdfCatalog = catalog;\n    };\n    PdfDocumentBase.prototype.save = function (filename) {\n        var _this = this;\n        var encoding = new Encoding(true);\n        var SW = new StreamWriter(encoding);\n        if (typeof filename === 'undefined') {\n            var encoding_1 = new Encoding(true);\n            var SW_1 = new StreamWriter(encoding_1);\n            return new Promise(function (resolve, reject) {\n                /* tslint:disable-next-line:no-any */\n                var obj = {};\n                obj.blobData = new Blob([_this.document.docSave(SW_1, true)], { type: 'application/pdf' });\n                resolve(obj);\n            });\n        }\n        else {\n            this.document.docSave(SW, filename, true);\n        }\n    };\n    /**\n     * `Clone` of parent object - PdfDocument.\n     * @private\n     */\n    PdfDocumentBase.prototype.clone = function () {\n        return this.document;\n    };\n    /**\n     * Save PDF document.\n     * @private\n     */\n    PdfDocumentBase.prototype._save = function () {\n        return this.document._docSave();\n    };\n    return PdfDocumentBase;\n}());\nexport { PdfDocumentBase };\n","/**\n * public Enum for `ObjectType`.\n * @private\n */\nexport var ObjectType;\n(function (ObjectType) {\n    /**\n     * Specifies the type of `Free`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Free\"] = 0] = \"Free\";\n    /**\n     * Specifies the type of `Normal`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Normal\"] = 1] = \"Normal\";\n    /**\n     * Specifies the type of `Packed`.\n     * @private\n     */\n    ObjectType[ObjectType[\"Packed\"] = 2] = \"Packed\";\n})(ObjectType || (ObjectType = {}));\n","/**\n * `PdfBoolean` class is used to perform boolean related primitive operations.\n * @private\n */\nvar PdfBoolean = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfBoolean` class.\n     * @private\n     */\n    function PdfBoolean(value) {\n        /**\n         * Internal variable to store the `position`.\n         * @default -1\n         * @private\n         */\n        this.currentPosition = -1;\n        this.value = value;\n    }\n    Object.defineProperty(PdfBoolean.prototype, \"status\", {\n        //Properties\n        /**\n         * Gets or sets the `Status` of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.objectStatus;\n        },\n        set: function (value) {\n            this.objectStatus = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"isSaving\", {\n        /**\n         * Gets or sets a value indicating whether this document `is saving` or not.\n         * @private\n         */\n        get: function () {\n            return this.saving;\n        },\n        set: function (value) {\n            this.saving = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"objectCollectionIndex\", {\n        /**\n         * Gets or sets the `index` value of the specified object.\n         * @private\n         */\n        get: function () {\n            return this.index;\n        },\n        set: function (value) {\n            this.index = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"position\", {\n        /**\n         * Gets or sets the `position` of the object.\n         * @private\n         */\n        get: function () {\n            return this.currentPosition;\n        },\n        set: function (value) {\n            this.currentPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBoolean.prototype, \"clonedObject\", {\n        /**\n         * Returns `cloned object`.\n         * @private\n         */\n        get: function () {\n            var rValue = null;\n            return rValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Saves` the object using the specified writer.\n     * @private\n     */\n    PdfBoolean.prototype.save = function (writer) {\n        writer.write(this.boolToStr(this.value));\n    };\n    /**\n     * Creates a `copy of PdfBoolean`.\n     * @private\n     */\n    PdfBoolean.prototype.clone = function (crossTable) {\n        var newNumber = new PdfBoolean(this.value);\n        return newNumber;\n    };\n    // Implementation\n    /**\n     * Converts `boolean to string` - 0/1 'true'/'false'.\n     * @private\n     */\n    PdfBoolean.prototype.boolToStr = function (value) {\n        return value ? 'true' : 'false';\n    };\n    return PdfBoolean;\n}());\nexport { PdfBoolean };\n","import { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfBoolean } from './../primitives/pdf-boolean';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * Defines the way the document is to be presented on the screen or in print.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets viewer preferences\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nvar PdfViewerPreferences = /** @class */ (function () {\n    /**\n     * Initialize a new instance of `PdfViewerPreferences` class.\n     *\n     * @private\n     * ```\n    */\n    function PdfViewerPreferences(catalog) {\n        this._dictionaryProperties = new DictionaryProperties();\n        this._centerWindow = false;\n        this._fitWindow = false;\n        this._displayTitle = false;\n        this._splitWindow = false;\n        this._hideMenuBar = false;\n        this._hideToolBar = false;\n        this._hideWindowUI = false;\n        this._pageMode = PdfPageMode.UseNone;\n        this._pageLayout = PdfPageLayout.SinglePage;\n        this._dictionary = new PdfDictionary();\n        this._duplex = DuplexMode.None;\n        this._catalog = catalog;\n    }\n    Object.defineProperty(PdfViewerPreferences.prototype, \"centerWindow\", {\n        /**\n         * A flag specifying whether to position the document’s window in the center of the screen.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the center window\n         * let centerWindow : boolean = viewerPreferences.centerWindow;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._centerWindow;\n        },\n        /**\n         * A flag specifying whether to position the document’s window in the center of the screen.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the center window\n         * viewerPreferences.centerWindow = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._centerWindow = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.centerWindow, new PdfBoolean(this._centerWindow));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"displayTitle\", {\n        /**\n         * A flag specifying whether the window’s title bar should display the document title taken\n         * from the Title entry of the document information dictionary. If false, the title bar\n         * should instead display the name of the PDF file containing the document.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the display title\n         * let displayTitle : boolean = viewerPreferences.displayTitle;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._displayTitle;\n        },\n        /**\n         * A flag specifying whether the window’s title bar should display the document title taken\n         * from the Title entry of the document information dictionary. If false, the title bar\n         * should instead display the name of the PDF file containing the document.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the display title\n         * viewerPreferences.displayTitle = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._displayTitle = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.displayTitle, new PdfBoolean(this._displayTitle));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"fitWindow\", {\n        /**\n         * A flag specifying whether to resize the document’s window to fit the size of the first\n         * displayed page.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the fit window\n         * let fitWindow : boolean = viewerPreferences.fitWindow;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._fitWindow;\n        },\n        /**\n         * A flag specifying whether to resize the document’s window to fit the size of the first\n         * displayed page.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the fit window\n         * viewerPreferences.fitWindow = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._fitWindow = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.fitWindow, new PdfBoolean(this._fitWindow));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"hideMenuBar\", {\n        /**\n         * A flag specifying whether to hide the viewer application’s menu bar when the\n         * document is active.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the hide menu bar\n         * let hideMenuBar: boolean = viewerPreferences.hideMenuBar;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._hideMenuBar;\n        },\n        /**\n         * A flag specifying whether to hide the viewer application’s menu bar when the\n         * document is active.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the hide menu bar\n         * viewerPreferences.hideMenuBar = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._hideMenuBar = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.hideMenuBar, new PdfBoolean(this._hideMenuBar));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"hideToolBar\", {\n        /**\n         * A flag specifying whether to hide the viewer application’s tool bar when the\n         * document is active.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the hide tool bar\n         * let hideToolBar: boolean = viewerPreferences.hideToolBar;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._hideToolBar;\n        },\n        /**\n         * A flag specifying whether to hide the viewer application’s tool bar when the\n         * document is active.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the hide tool bar\n         * viewerPreferences.hideToolbar = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._hideToolBar = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.hideToolBar, new PdfBoolean(this._hideToolBar));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"hideWindowUI\", {\n        /**\n         * A flag specifying whether to hide user interface elements in the document’s window\n         * (such as scroll bars and navigation controls), leaving only the document’s contents displayed.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the hide window UI\n         * let hideWindowUI: boolean = viewerPreferences.hideWindowUI;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._hideWindowUI;\n        },\n        /**\n         * A flag specifying whether to hide user interface elements in the document’s window\n         * (such as scroll bars and navigation controls), leaving only the document’s contents displayed.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the hide window UI\n         * viewerPreferences.hideWindowUI = true;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._hideWindowUI = value;\n            this._dictionary.items.setValue(this._dictionaryProperties.hideWindowUI, new PdfBoolean(this._hideWindowUI));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"pageMode\", {\n        /**\n         * A name object specifying how the document should be displayed when opened.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the page mode\n         * let pageMode: PdfPageMode = viewerPreferences.pageMode;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._pageMode;\n        },\n        /**\n         * A name object specifying how the document should be displayed when opened.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the page mode\n         * viewerPreferences.pageMode = PdfPageMode.UseOutlines;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pageMode = value;\n            this._catalog.items.setValue(this._dictionaryProperties.pageMode, new PdfName(this._mapPageMode(this._pageMode)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"duplex\", {\n        /**\n         * Gets print duplex mode handling option to use when printing the file from the print dialog.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the duplex\n         * let duplex : DuplexMode = viewerPreferences.duplex;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._duplex;\n        },\n        /**\n         * Sets print duplex mode handling option to use when printing the file from the print dialog.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the duplex\n         * viewerPreferences.duplex = DuplexMode.DuplexFlipLongEdge;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._duplex = value;\n            this._catalog.items.setValue(this._dictionaryProperties.duplex, new PdfName(this._mapDuplexMode(this._duplex)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"pageLayout\", {\n        /**\n         * A name object specifying the page layout to be used when the document is opened.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the page layout\n         * let pageLayout : PdfPageLayout = viewerPreferences.pageLayout;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._pageLayout;\n        },\n        /**\n         * A name object specifying the page layout to be used when the document is opened.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the page layout\n         * viewerPreferences.pageLayout = PdfPageLayout.TwoColumnLeft;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pageLayout = value;\n            this._catalog.items.setValue(this._dictionaryProperties.pageLayout, new PdfName(this._mapPageLayout(this._pageLayout)));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"pageScaling\", {\n        /**\n         * Gets the page scaling option to be selected\n         * when a print dialog is displayed for this document.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Gets the page scaling\n         * let pageScaling : PageScalingMode = viewerPreferences.pageScaling;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this._pageScaling;\n        },\n        /**\n         * Sets the page scaling option to be selected\n         * when a print dialog is displayed for this document.\n         * ```typescript\n         * // Create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // Gets the viewer preferences of the document\n         * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n         * // Sets the page scaling\n         * viewerPreferences.pageScaling = PageScalingMode.None;\n         * // Destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this._pageScaling = value;\n            if (this._pageScaling === PageScalingMode.AppDefault && this._dictionary.items.containsKey(this._dictionaryProperties.printScaling)) {\n                this._dictionary.items.remove(this._dictionaryProperties.printScaling);\n            }\n            else if (this._pageScaling === PageScalingMode.None) {\n                this._dictionary.items.setValue(this._dictionaryProperties.printScaling, new PdfName('None'));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfViewerPreferences.prototype, \"element\", {\n        /**\n         * Primivie element\n         *\n         * @private\n         */\n        get: function () {\n            return this._dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfViewerPreferences.prototype._mapDuplexMode = function (mode) {\n        switch (mode) {\n            case DuplexMode.Simplex:\n                return 'Simplex';\n            case DuplexMode.DuplexFlipShortEdge:\n                return 'DuplexFlipShortEdge';\n            case DuplexMode.DuplexFlipLongEdge:\n                return 'DuplexFlipLongEdge';\n            case DuplexMode.None:\n                return 'None';\n        }\n    };\n    PdfViewerPreferences.prototype._mapPageMode = function (mode) {\n        switch (mode) {\n            case PdfPageMode.UseNone:\n                return 'UseNone';\n            case PdfPageMode.UseOutlines:\n                return 'UseOutlines';\n            case PdfPageMode.UseThumbs:\n                return 'UseThumbs';\n            case PdfPageMode.FullScreen:\n                return 'FullScreen';\n            case PdfPageMode.UseOC:\n                return 'UseOC';\n            case PdfPageMode.UseAttachments:\n                return 'UseAttachments';\n        }\n    };\n    PdfViewerPreferences.prototype._mapPageLayout = function (layout) {\n        switch (layout) {\n            case PdfPageLayout.SinglePage:\n                return 'SinglePage';\n            case PdfPageLayout.OneColumn:\n                return 'OneColumn';\n            case PdfPageLayout.TwoColumnLeft:\n                return 'TwoColumnLeft';\n            case PdfPageLayout.TwoColumnRight:\n                return 'TwoColumnRight';\n            case PdfPageLayout.TwoPageLeft:\n                return 'TwoPageLeft';\n            case PdfPageLayout.TwoPageRight:\n                return 'TwoPageRight';\n        }\n    };\n    return PdfViewerPreferences;\n}());\nexport { PdfViewerPreferences };\n/**\n * Represents mode of document displaying.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets the viewer preferences of the document\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Sets the page mode\n * viewerPreferences.pageMode = PdfPageMode.UseOutlines;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPageMode;\n(function (PdfPageMode) {\n    /**\n     * Default value. Neither document outline nor thumbnail images visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseNone\"] = 0] = \"UseNone\";\n    /**\n     * Document outline visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseOutlines\"] = 1] = \"UseOutlines\";\n    /**\n     * Thumbnail images visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseThumbs\"] = 2] = \"UseThumbs\";\n    /**\n     * Full-screen mode, with no menu bar, window controls, or any other window visible.\n     */\n    PdfPageMode[PdfPageMode[\"FullScreen\"] = 3] = \"FullScreen\";\n    /**\n     * Optional content group panel visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseOC\"] = 4] = \"UseOC\";\n    /**\n     * Attachments are visible.\n     */\n    PdfPageMode[PdfPageMode[\"UseAttachments\"] = 5] = \"UseAttachments\";\n})(PdfPageMode || (PdfPageMode = {}));\n/**\n * A name object specifying the page layout to be used when the document is opened.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets the viewer preferences of the document\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Sets the page layout\n * viewerPreferences.pageLayout = PdfPageLayout.TwoColumnLeft;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PdfPageLayout;\n(function (PdfPageLayout) {\n    /**\n     * Default Value. Display one page at a time.\n     */\n    PdfPageLayout[PdfPageLayout[\"SinglePage\"] = 0] = \"SinglePage\";\n    /**\n     * Display the pages in one column.\n     */\n    PdfPageLayout[PdfPageLayout[\"OneColumn\"] = 1] = \"OneColumn\";\n    /**\n     * Display the pages in two columns, with odd numbered\n     * pages on the left.\n     */\n    PdfPageLayout[PdfPageLayout[\"TwoColumnLeft\"] = 2] = \"TwoColumnLeft\";\n    /**\n     * Display the pages in two columns, with odd numbered\n     * pages on the right.\n     */\n    PdfPageLayout[PdfPageLayout[\"TwoColumnRight\"] = 3] = \"TwoColumnRight\";\n    /**\n     * Display the pages two at a time, with odd-numbered pages on the left.\n     */\n    PdfPageLayout[PdfPageLayout[\"TwoPageLeft\"] = 4] = \"TwoPageLeft\";\n    /**\n     * Display the pages two at a time, with odd-numbered pages on the right.\n     */\n    PdfPageLayout[PdfPageLayout[\"TwoPageRight\"] = 5] = \"TwoPageRight\";\n})(PdfPageLayout || (PdfPageLayout = {}));\n/**\n * The paper handling option to use when printing the file from the print dialog.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets the viewer preferences of the document\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Sets the duplex\n * viewerPreferences.duplex = DuplexMode.DuplexFlipLongEdge;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var DuplexMode;\n(function (DuplexMode) {\n    /**\n     * Print single-sided.\n     */\n    DuplexMode[DuplexMode[\"Simplex\"] = 0] = \"Simplex\";\n    /**\n     * Duplex and flip on the short edge of the sheet.\n     */\n    DuplexMode[DuplexMode[\"DuplexFlipShortEdge\"] = 1] = \"DuplexFlipShortEdge\";\n    /**\n     * Duplex and flip on the long edge of the sheet.\n     */\n    DuplexMode[DuplexMode[\"DuplexFlipLongEdge\"] = 2] = \"DuplexFlipLongEdge\";\n    /**\n     * Default value.\n     */\n    DuplexMode[DuplexMode[\"None\"] = 3] = \"None\";\n})(DuplexMode || (DuplexMode = {}));\n/**\n * Specifies the different page scaling option that shall be selected\n * when a print dialog is displayed for this document.\n * ```typescript\n * // Create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // Gets the viewer preferences of the document\n * let viewerPreferences : PdfViewerPreferences = document.viewerPreferences;\n * // Sets the page scaling\n * viewerPreferences.pageScaling = PageScalingMode.None;\n * // Destroy the document\n * document.destroy();\n * ```\n */\nexport var PageScalingMode;\n(function (PageScalingMode) {\n    /**\n     * Indicates the conforming reader’s default print scaling.\n     */\n    PageScalingMode[PageScalingMode[\"AppDefault\"] = 0] = \"AppDefault\";\n    /**\n     * Indicates no page scaling.\n     */\n    PageScalingMode[PageScalingMode[\"None\"] = 1] = \"None\";\n})(PageScalingMode || (PageScalingMode = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfCatalog.ts class for EJ2-PDF\n */\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfViewerPreferences } from './pdf-viewer-preferences';\n/**\n * `PdfCatalog` class represents internal catalog of the Pdf document.\n * @private\n */\nvar PdfCatalog = /** @class */ (function (_super) {\n    __extends(PdfCatalog, _super);\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfCatalog` class.\n     * @private\n     */\n    function PdfCatalog() {\n        var _this = _super.call(this) || this;\n        //fields\n        /**\n         * Internal variable to store collection of `sections`.\n         * @default null\n         * @private\n         */\n        _this.sections = null;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @private\n         */\n        _this.tempDictionaryProperties = new DictionaryProperties();\n        _this.items.setValue(new DictionaryProperties().type, new PdfName('Catalog'));\n        return _this;\n    }\n    Object.defineProperty(PdfCatalog.prototype, \"pages\", {\n        //Properties\n        /**\n         * Gets or sets the sections, which contain `pages`.\n         * @private\n         */\n        get: function () {\n            return this.sections;\n        },\n        set: function (value) {\n            var dictionary = value.element;\n            // if (this.sections !== value) {\n            //     this.sections = value;\n            //     this.Items.setValue(this.tempDictionaryProperties.pages, new PdfReferenceHolder(value));\n            // }\n            this.sections = value;\n            this.items.setValue(this.tempDictionaryProperties.pages, new PdfReferenceHolder(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCatalog.prototype, \"viewerPreferences\", {\n        /**\n         * Gets the viewer preferences of the PDF document.\n         * @private\n         */\n        get: function () {\n            if (this._viewerPreferences === null || typeof this._viewerPreferences === 'undefined') {\n                this._viewerPreferences = new PdfViewerPreferences(this);\n                this.items.setValue(this.tempDictionaryProperties.viewerPreferences, new PdfReferenceHolder(this._viewerPreferences.element));\n            }\n            return this._viewerPreferences;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCatalog;\n}(PdfDictionary));\nexport { PdfCatalog };\n","import { ObjectStatus } from './../input-output/enum';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './pdf-dictionary-properties';\nimport { Operators } from './pdf-operators';\nimport { Dictionary } from './../collections/dictionary';\nimport { PdfReference } from './../primitives/pdf-reference';\nimport { ObjectType } from './cross-table';\nimport { PdfStream } from './../primitives/pdf-stream';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfCatalog } from './../document/pdf-catalog';\n/**\n * `PdfCrossTable` is responsible for intermediate level parsing\n * and savingof a PDF document.\n * @private\n */\nvar PdfCrossTable = /** @class */ (function () {\n    function PdfCrossTable() {\n        /**\n         * The modified `objects` that should be saved.\n         * @private\n         */\n        this.objects = new Dictionary();\n        /**\n         * Holds `maximal generation number` or offset to object.\n         * @default 0\n         * @private\n         */\n        this.maxGenNumIndex = 0;\n        /**\n         * The `number of the objects`.\n         * @default 0\n         * @private\n         */\n        this.objectCount = 0;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @default new PdfDictionaryProperties()\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n    }\n    Object.defineProperty(PdfCrossTable.prototype, \"isMerging\", {\n        //Properties\n        /**\n         * Gets or sets if the document `is merged`.\n         * @private\n         */\n        get: function () {\n            return this.merging;\n        },\n        set: function (value) {\n            this.merging = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"trailer\", {\n        /**\n         * Gets the `trailer`.\n         * @private\n         */\n        get: function () {\n            if (this.internalTrailer == null) {\n                this.internalTrailer = new PdfStream();\n            }\n            return this.internalTrailer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"document\", {\n        /**\n         * Gets or sets the main `PdfDocument` class instance.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n            this.items = this.pdfDocument.pdfObjects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"pdfObjects\", {\n        /**\n         * Gets the catched `PDF object` main collection.\n         * @private\n         */\n        get: function () {\n            return this.items;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"objectCollection\", {\n        /**\n         * Gets the `object collection`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument.pdfObjects;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"count\", {\n        /**\n         * Gets or sets the `number of the objects` within the document.\n         * @private\n         */\n        get: function () {\n            return this.objectCount;\n        },\n        set: function (value) {\n            this.objectCount = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCrossTable.prototype, \"nextObjNumber\", {\n        /**\n         * Returns `next available object number`.\n         * @private\n         */\n        get: function () {\n            this.count = this.count + 1;\n            return this.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfCrossTable.prototype.save = function (writer, filename) {\n        this._saveProcess(writer);\n        if (typeof filename === 'undefined') {\n            return writer.stream.buffer;\n        }\n        else {\n            writer.stream.save(filename);\n        }\n    };\n    /**\n     * Saves the cross-reference table into the stream.\n     * @private\n     */\n    PdfCrossTable.prototype._saveProcess = function (writer) {\n        this.saveHead(writer);\n        this.mappedReferences = null;\n        this.objects.clear();\n        this.markTrailerReferences();\n        this.saveObjects(writer);\n        var saveCount = this.count;\n        var xrefPos = writer.position;\n        this.registerObject(0, new PdfReference(0, -1), true);\n        var prevXRef = 0;\n        writer.write(Operators.xref);\n        writer.write(Operators.newLine);\n        this.saveSections(writer);\n        this.saveTrailer(writer, this.count, prevXRef);\n        this.saveTheEndess(writer, xrefPos);\n        this.count = saveCount;\n        for (var i = 0; i < this.objectCollection.count; ++i) {\n            var oi = this.objectCollection.items(i);\n            oi.object.isSaving = false;\n        }\n    };\n    /**\n     * Saves the cross-reference table into the stream.\n     * @private\n     */\n    PdfCrossTable.prototype._save = function (writer) {\n        this._saveProcess(writer);\n        var helper = writer.stream;\n        return helper.buffer.toUint8Array();\n    };\n    /**\n     * `Saves the endess` of the file.\n     * @private\n     */\n    PdfCrossTable.prototype.saveTheEndess = function (writer, xrefPos) {\n        writer.write(Operators.newLine + Operators.startxref + Operators.newLine);\n        writer.write(xrefPos.toString() + Operators.newLine);\n        writer.write(Operators.eof + Operators.newLine);\n    };\n    /**\n     * `Saves the new trailer` dictionary.\n     * @private\n     */\n    PdfCrossTable.prototype.saveTrailer = function (writer, count, prevXRef) {\n        writer.write(Operators.trailer + Operators.newLine);\n        // Save the dictionary.\n        var trailer = this.trailer;\n        trailer.items.setValue(this.dictionaryProperties.size, new PdfNumber(this.objectCount + 1));\n        trailer = new PdfDictionary(trailer); // Make it real dictionary.\n        trailer.setEncrypt(false);\n        trailer.save(writer);\n    };\n    /**\n     * `Saves the xref section`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveSections = function (writer) {\n        var objectNum = 0;\n        var count = 0;\n        do {\n            count = this.prepareSubsection(objectNum);\n            this.saveSubsection(writer, objectNum, count);\n            objectNum += count;\n        } while (count !== 0);\n    };\n    /**\n     * `Saves a subsection`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveSubsection = function (writer, objectNum, count) {\n        if (count <= 0 || objectNum >= this.count) {\n            return;\n        }\n        var subsectionHead = '{0} {1}{2}';\n        writer.write(objectNum + ' ' + (count + 1) + Operators.newLine);\n        for (var i = objectNum; i <= objectNum + count; ++i) {\n            var obj = this.objects.getValue(i);\n            var str = '';\n            if (obj.type === ObjectType.Free) {\n                str = this.getItem(obj.offset, 65535, true);\n            }\n            else {\n                str = this.getItem(obj.offset, obj.generation, false);\n            }\n            writer.write(str);\n        }\n    };\n    /**\n     * Generates string for `xref table item`.\n     * @private\n     */\n    PdfCrossTable.prototype.getItem = function (offset, genNumber, isFree) {\n        var returnString = '';\n        var addOffsetLength = 10 - offset.toString().length;\n        if (genNumber <= 0) {\n            genNumber = 0;\n        }\n        var addGenNumberLength = (5 - genNumber.toString().length) <= 0 ? 0 : (5 - genNumber.toString().length);\n        for (var index = 0; index < addOffsetLength; index++) {\n            returnString = returnString + '0';\n        }\n        returnString = returnString + offset.toString() + ' ';\n        for (var index = 0; index < addGenNumberLength; index++) {\n            returnString = returnString + '0';\n        }\n        returnString = returnString + genNumber.toString() + ' ';\n        returnString = returnString + ((isFree) ? Operators.f : Operators.n) + Operators.newLine;\n        return returnString;\n    };\n    /**\n     * `Prepares a subsection` of the current section within the cross-reference table.\n     * @private\n     */\n    PdfCrossTable.prototype.prepareSubsection = function (objectNum) {\n        var count = 0;\n        var i;\n        var total = this.count;\n        for (var k = 0; k < this.document.pdfObjects.count; k++) {\n            var reference = this.document.pdfObjects.items(k).reference;\n            var refString = reference.toString();\n            var refArray = refString.split(' ');\n        }\n        if (objectNum >= total) {\n            return count;\n        }\n        // search for first changed indirect object.\n        for (i = objectNum; i < total; ++i) {\n            break;\n        }\n        objectNum = i;\n        // look up for all indirect objects in one subsection.\n        for (; i < total; ++i) {\n            ++count;\n        }\n        return count;\n    };\n    /**\n     * `Marks the trailer references` being saved.\n     * @private\n     */\n    PdfCrossTable.prototype.markTrailerReferences = function () {\n        var tempArray;\n        var keys = this.trailer.items.keys();\n        var values = this.trailer.items.values();\n    };\n    /**\n     * `Saves the head`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveHead = function (writer) {\n        var version = this.generateFileVersion(writer.document);\n        writer.write('%PDF-' + version);\n        writer.write(Operators.newLine);\n    };\n    /**\n     * Generates the `version` of the file.\n     * @private\n     */\n    PdfCrossTable.prototype.generateFileVersion = function (document) {\n        var iVersion = 4;\n        var version = '1.' + iVersion.toString();\n        return version;\n    };\n    PdfCrossTable.prototype.getReference = function (obj, bNew) {\n        if (typeof bNew === 'undefined') {\n            var wasNew = false;\n            return this.getReference(obj, wasNew);\n        }\n        else {\n            //code splitted for reducing lines of code exceeds 100.\n            return this.getSubReference(obj, bNew);\n        }\n    };\n    /**\n     * Retrieves the `reference` of the object given.\n     * @private\n     */\n    PdfCrossTable.prototype.getSubReference = function (obj, bNew) {\n        var isNew = false;\n        var wasNew;\n        var reference = null;\n        // if (obj.IsSaving) {\n        if (this.items.count > 0 && obj.objectCollectionIndex > 0 && this.items.count > obj.objectCollectionIndex - 1) {\n            var tempObj = this.document.pdfObjects.getReference(obj, wasNew);\n            reference = tempObj.reference;\n            wasNew = tempObj.wasNew;\n        }\n        if (reference == null) {\n            if (obj.status === ObjectStatus.Registered) {\n                wasNew = false;\n            }\n            else {\n                wasNew = true;\n            }\n        }\n        else {\n            wasNew = false;\n        }\n        // need to add mapped reference code\n        if (reference == null) {\n            var objnumber = this.nextObjNumber;\n            reference = new PdfReference(objnumber, 0);\n            var found = void 0;\n            if (wasNew) {\n                this.document.pdfObjects.add(obj);\n                this.document.pdfObjects.trySetReference(obj, reference, found);\n                var tempIndex = this.document.pdfObjects.count - 1;\n                var tempkey = this.document.pdfObjects.objectCollections[tempIndex].reference.objNumber;\n                var tempvalue = this.document.pdfObjects.objectCollections[this.document.pdfObjects.count - 1];\n                this.document.pdfObjects.mainObjectCollection.setValue(tempkey, tempvalue);\n                obj.position = -1;\n            }\n            else {\n                this.document.pdfObjects.trySetReference(obj, reference, found);\n            }\n            obj.objectCollectionIndex = reference.objNumber;\n            obj.status = ObjectStatus.None;\n            isNew = true;\n        }\n        bNew = isNew || this.bForceNew;\n        return reference;\n    };\n    /**\n     * `Saves all objects` in the collection.\n     * @private\n     */\n    PdfCrossTable.prototype.saveObjects = function (writer) {\n        var objectCollection = this.objectCollection;\n        for (var i = 0; i < objectCollection.count; ++i) {\n            var oi = objectCollection.items(i);\n            var obj = oi.object;\n            obj.isSaving = true;\n            this.saveIndirectObject(obj, writer);\n        }\n    };\n    /**\n     * `Saves indirect object`.\n     * @private\n     */\n    PdfCrossTable.prototype.saveIndirectObject = function (obj, writer) {\n        var reference = this.getReference(obj);\n        if (obj instanceof PdfCatalog) {\n            this.trailer.items.setValue(this.dictionaryProperties.root, reference);\n        }\n        // NOTE :  This is needed for correct string objects encryption.\n        this.pdfDocument.currentSavingObj = reference;\n        var tempArchive = false;\n        tempArchive = obj.getArchive();\n        var allowedType = !((obj instanceof PdfStream) || !tempArchive || (obj instanceof PdfCatalog));\n        var sigFlag = false;\n        this.registerObject(writer.position, reference);\n        this.doSaveObject(obj, reference, writer);\n    };\n    /**\n     * Performs `real saving` of the save object.\n     * @private\n     */\n    PdfCrossTable.prototype.doSaveObject = function (obj, reference, writer) {\n        writer.write(reference.objNumber.toString());\n        writer.write(Operators.whiteSpace);\n        writer.write(reference.genNumber.toString());\n        writer.write(Operators.whiteSpace);\n        writer.write(Operators.obj);\n        writer.write(Operators.newLine);\n        obj.save(writer);\n        writer.write(Operators.endObj);\n        writer.write(Operators.newLine);\n    };\n    PdfCrossTable.prototype.registerObject = function (offset, reference, free) {\n        if (typeof free === 'boolean') {\n            // Register the object by its number.\n            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference, free));\n            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);\n        }\n        else if (typeof free === 'undefined') {\n            // Register the object by its number.\n            this.objects.setValue(reference.objNumber, new RegisteredObject(offset, reference));\n            this.maxGenNumIndex = Math.max(this.maxGenNumIndex, reference.genNumber);\n        }\n    };\n    /**\n     * `Dereferences` the specified primitive object.\n     * @private\n     */\n    PdfCrossTable.dereference = function (obj) {\n        var rh = obj;\n        if (rh != null) {\n            obj = rh.object;\n        }\n        return obj;\n    };\n    return PdfCrossTable;\n}());\nexport { PdfCrossTable };\nvar RegisteredObject = /** @class */ (function () {\n    function RegisteredObject(offset, reference, free) {\n        var tempOffset = offset;\n        this.offsetNumber = tempOffset;\n        var tempReference = reference;\n        this.generation = tempReference.genNumber;\n        this.object = tempReference.objNumber;\n        if (typeof free === 'undefined') {\n            this.type = ObjectType.Normal;\n        }\n        else {\n            this.type = ObjectType.Free;\n        }\n    }\n    Object.defineProperty(RegisteredObject.prototype, \"objectNumber\", {\n        //Properties\n        /**\n         * Gets the `object number`.\n         * @private\n         */\n        get: function () {\n            return this.object;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RegisteredObject.prototype, \"offset\", {\n        /**\n         * Gets the `offset`.\n         * @private\n         */\n        get: function () {\n            var result;\n            result = this.offsetNumber;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RegisteredObject;\n}());\nexport { RegisteredObject };\n","/**\n * PdfPageSize.ts class for EJ2-PDF\n */\nimport { SizeF } from './../drawing/pdf-drawing';\n/**\n * Represents information about various predefined `page sizes`.\n */\nvar PdfPageSize = /** @class */ (function () {\n    //constructor\n    /**\n     * Initialize an instance for `PdfPageSize` class.\n     * @private\n     */\n    function PdfPageSize() {\n        // \n    }\n    /**\n     * Specifies the size of `letter`.\n     * @private\n     */\n    PdfPageSize.letter = new SizeF(612, 792);\n    /**\n     * Specifies the size of `note`.\n     * @private\n     */\n    PdfPageSize.note = new SizeF(540, 720);\n    /**\n     * Specifies the size of `legal`.\n     * @private\n     */\n    PdfPageSize.legal = new SizeF(612, 1008);\n    /**\n     * Specifies the size of `a0`.\n     * @private\n     */\n    PdfPageSize.a0 = new SizeF(2380, 3368);\n    /**\n     * Specifies the size of `a1`.\n     * @private\n     */\n    PdfPageSize.a1 = new SizeF(1684, 2380);\n    /**\n     * Specifies the size of `a2`.\n     * @private\n     */\n    PdfPageSize.a2 = new SizeF(1190, 1684);\n    /**\n     * Specifies the size of `a3`.\n     * @private\n     */\n    PdfPageSize.a3 = new SizeF(842, 1190);\n    /**\n     * Specifies the size of `a4`.\n     * @private\n     */\n    PdfPageSize.a4 = new SizeF(595, 842);\n    /**\n     * Specifies the size of `a5`.\n     * @private\n     */\n    PdfPageSize.a5 = new SizeF(421, 595);\n    /**\n     * Specifies the size of `a6`.\n     * @private\n     */\n    PdfPageSize.a6 = new SizeF(297, 421);\n    /**\n     * Specifies the size of `a7`.\n     * @private\n     */\n    PdfPageSize.a7 = new SizeF(210, 297);\n    /**\n     * Specifies the size of `a8`.\n     * @private\n     */\n    PdfPageSize.a8 = new SizeF(148, 210);\n    /**\n     * Specifies the size of `a9`.\n     * @private\n     */\n    PdfPageSize.a9 = new SizeF(105, 148);\n    /**\n     * Specifies the size of `a10`.\n     * @private\n     */\n    PdfPageSize.a10 = new SizeF(74, 105);\n    /**\n     * Specifies the size of `b0`.\n     * @private\n     */\n    PdfPageSize.b0 = new SizeF(2836, 4008);\n    /**\n     * Specifies the size of `b1`.\n     * @private\n     */\n    PdfPageSize.b1 = new SizeF(2004, 2836);\n    /**\n     * Specifies the size of `b2`.\n     * @private\n     */\n    PdfPageSize.b2 = new SizeF(1418, 2004);\n    /**\n     * Specifies the size of `b3`.\n     * @private\n     */\n    PdfPageSize.b3 = new SizeF(1002, 1418);\n    /**\n     * Specifies the size of `b4`.\n     * @private\n     */\n    PdfPageSize.b4 = new SizeF(709, 1002);\n    /**\n     * Specifies the size of `b5`.\n     * @private\n     */\n    PdfPageSize.b5 = new SizeF(501, 709);\n    /**\n     * Specifies the size of `archE`.\n     * @private\n     */\n    PdfPageSize.archE = new SizeF(2592, 3456);\n    /**\n     * Specifies the size of `archD`.\n     * @private\n     */\n    PdfPageSize.archD = new SizeF(1728, 2592);\n    /**\n     * Specifies the size of `archC`.\n     * @private\n     */\n    PdfPageSize.archC = new SizeF(1296, 1728);\n    /**\n     * Specifies the size of `archB`.\n     * @private\n     */\n    PdfPageSize.archB = new SizeF(864, 1296);\n    /**\n     * Specifies the size of `archA`.\n     * @private\n     */\n    PdfPageSize.archA = new SizeF(648, 864);\n    /**\n     * Specifies the size of `flsa`.\n     * @private\n     */\n    PdfPageSize.flsa = new SizeF(612, 936);\n    /**\n     * Specifies the size of `halfLetter`.\n     * @private\n     */\n    PdfPageSize.halfLetter = new SizeF(396, 612);\n    /**\n     * Specifies the size of `letter11x17`.\n     * @private\n     */\n    PdfPageSize.letter11x17 = new SizeF(792, 1224);\n    /**\n     * Specifies the size of `ledger`.\n     * @private\n     */\n    PdfPageSize.ledger = new SizeF(1224, 792);\n    return PdfPageSize;\n}());\nexport { PdfPageSize };\n","/**\n * public Enum for `PdfPageOrientation`.\n * @private\n */\nexport var PdfPageOrientation;\n(function (PdfPageOrientation) {\n    /**\n     * Specifies the type of `Portrait`.\n     * @private\n     */\n    PdfPageOrientation[PdfPageOrientation[\"Portrait\"] = 0] = \"Portrait\";\n    /**\n     * Specifies the type of `Landscape`.\n     * @private\n     */\n    PdfPageOrientation[PdfPageOrientation[\"Landscape\"] = 1] = \"Landscape\";\n})(PdfPageOrientation || (PdfPageOrientation = {}));\n/**\n * public Enum for `PdfPageRotateAngle`.\n * @private\n */\nexport var PdfPageRotateAngle;\n(function (PdfPageRotateAngle) {\n    /**\n     * Specifies the type of `RotateAngle0`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle0\"] = 0] = \"RotateAngle0\";\n    /**\n     * Specifies the type of `RotateAngle90`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle90\"] = 1] = \"RotateAngle90\";\n    /**\n     * Specifies the type of `RotateAngle180`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle180\"] = 2] = \"RotateAngle180\";\n    /**\n     * Specifies the type of `RotateAngle270`.\n     * @private\n     */\n    PdfPageRotateAngle[PdfPageRotateAngle[\"RotateAngle270\"] = 3] = \"RotateAngle270\";\n})(PdfPageRotateAngle || (PdfPageRotateAngle = {}));\n/**\n * public Enum for `PdfNumberStyle`.\n * @private\n */\nexport var PdfNumberStyle;\n(function (PdfNumberStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Numeric`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"Numeric\"] = 1] = \"Numeric\";\n    /**\n     * Specifies the type of `LowerLatin`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"LowerLatin\"] = 2] = \"LowerLatin\";\n    /**\n     * Specifies the type of `LowerRoman`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"LowerRoman\"] = 3] = \"LowerRoman\";\n    /**\n     * Specifies the type of `UpperLatin`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"UpperLatin\"] = 4] = \"UpperLatin\";\n    /**\n     * Specifies the type of `UpperRoman`.\n     * @private\n     */\n    PdfNumberStyle[PdfNumberStyle[\"UpperRoman\"] = 5] = \"UpperRoman\";\n})(PdfNumberStyle || (PdfNumberStyle = {}));\n/**\n * public Enum for `PdfDockStyle`.\n * @private\n */\nexport var PdfDockStyle;\n(function (PdfDockStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Bottom\"] = 1] = \"Bottom\";\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Top\"] = 2] = \"Top\";\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Left\"] = 3] = \"Left\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Right\"] = 4] = \"Right\";\n    /**\n     * Specifies the type of `Fill`.\n     * @private\n     */\n    PdfDockStyle[PdfDockStyle[\"Fill\"] = 5] = \"Fill\";\n})(PdfDockStyle || (PdfDockStyle = {}));\n/**\n * public Enum for `PdfAlignmentStyle`.\n * @private\n */\nexport var PdfAlignmentStyle;\n(function (PdfAlignmentStyle) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `TopLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopLeft\"] = 1] = \"TopLeft\";\n    /**\n     * Specifies the type of `TopCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopCenter\"] = 2] = \"TopCenter\";\n    /**\n     * Specifies the type of `TopRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"TopRight\"] = 3] = \"TopRight\";\n    /**\n     * Specifies the type of `MiddleLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleLeft\"] = 4] = \"MiddleLeft\";\n    /**\n     * Specifies the type of `MiddleCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleCenter\"] = 5] = \"MiddleCenter\";\n    /**\n     * Specifies the type of `MiddleRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"MiddleRight\"] = 6] = \"MiddleRight\";\n    /**\n     * Specifies the type of `BottomLeft`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomLeft\"] = 7] = \"BottomLeft\";\n    /**\n     * Specifies the type of `BottomCenter`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomCenter\"] = 8] = \"BottomCenter\";\n    /**\n     * Specifies the type of `BottomRight`.\n     * @private\n     */\n    PdfAlignmentStyle[PdfAlignmentStyle[\"BottomRight\"] = 9] = \"BottomRight\";\n})(PdfAlignmentStyle || (PdfAlignmentStyle = {}));\n/**\n * public Enum for `TemplateType`.\n * @private\n */\nexport var TemplateType;\n(function (TemplateType) {\n    /**\n     * Specifies the type of `None`.\n     * @private\n     */\n    TemplateType[TemplateType[\"None\"] = 0] = \"None\";\n    /**\n     * Specifies the type of `Top`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Top\"] = 1] = \"Top\";\n    /**\n     * Specifies the type of `Bottom`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Bottom\"] = 2] = \"Bottom\";\n    /**\n     * Specifies the type of `Left`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Left\"] = 3] = \"Left\";\n    /**\n     * Specifies the type of `Right`.\n     * @private\n     */\n    TemplateType[TemplateType[\"Right\"] = 4] = \"Right\";\n})(TemplateType || (TemplateType = {}));\n","/**\n * PdfMargins.ts class for EJ2-PDF\n * A class representing PDF page margins.\n */\nvar PdfMargins = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the `PdfMargins` class.\n     * @private\n     */\n    function PdfMargins() {\n        /**\n         * Represents the `Default Page Margin` value.\n         * @default 0.0\n         * @private\n         */\n        this.pdfMargin = 40.0;\n        this.setMargins(this.pdfMargin);\n    }\n    Object.defineProperty(PdfMargins.prototype, \"left\", {\n        //Properties\n        /**\n         * Gets or sets the `left margin` size.\n         * @private\n         */\n        get: function () {\n            return this.leftMargin;\n        },\n        set: function (value) {\n            this.leftMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"top\", {\n        /**\n         * Gets or sets the `top margin` size.\n         * @private\n         */\n        get: function () {\n            return this.topMargin;\n        },\n        set: function (value) {\n            this.topMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"right\", {\n        /**\n         * Gets or sets the `right margin` size.\n         * @private\n         */\n        get: function () {\n            return this.rightMargin;\n        },\n        set: function (value) {\n            this.rightMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `bottom margin` size.\n         * @private\n         */\n        get: function () {\n            return this.bottomMargin;\n        },\n        set: function (value) {\n            this.bottomMargin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfMargins.prototype, \"all\", {\n        /**\n         * Sets the `margins`.\n         * @private\n         */\n        set: function (value) {\n            this.setMargins(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfMargins.prototype.setMargins = function (margin1, margin2, margin3, margin4) {\n        if (typeof margin2 === 'undefined') {\n            this.leftMargin = this.topMargin = this.rightMargin = this.bottomMargin = margin1;\n        }\n        else {\n            if (typeof margin3 === 'undefined') {\n                this.leftMargin = this.rightMargin = margin1;\n                this.bottomMargin = this.topMargin = margin2;\n            }\n            else {\n                this.leftMargin = margin1;\n                this.topMargin = margin2;\n                this.rightMargin = margin3;\n                this.bottomMargin = margin4;\n            }\n        }\n    };\n    /**\n     * `Clones` the object.\n     * @private\n     */\n    PdfMargins.prototype.clone = function () {\n        return this;\n    };\n    return PdfMargins;\n}());\nexport { PdfMargins };\n","/**\n * PdfPageSettings.ts class for EJ2-PDF\n */\nimport { SizeF, PointF } from './../drawing/pdf-drawing';\nimport { PdfPageSize } from './pdf-page-size';\nimport { PdfPageRotateAngle, PdfPageOrientation } from './enum';\nimport { PdfMargins } from './../graphics/pdf-margins';\n/**\n * The class provides various `setting` related with PDF pages.\n */\nvar PdfPageSettings = /** @class */ (function () {\n    function PdfPageSettings(margins) {\n        //Fields\n        /**\n         * The page `margins`.\n         * @private\n         */\n        this.pageMargins = new PdfMargins();\n        /**\n         * The page `size`.\n         * @default a4\n         * @private\n         */\n        this.pageSize = PdfPageSize.a4;\n        /**\n         * The page `rotation angle`.\n         * @default PdfPageRotateAngle.RotateAngle0\n         * @private\n         */\n        this.rotateAngle = PdfPageRotateAngle.RotateAngle0;\n        /**\n         * The page `orientation`.\n         * @default PdfPageOrientation.Portrait\n         * @private\n         */\n        this.pageOrientation = PdfPageOrientation.Portrait;\n        /**\n         * The page `origin`.\n         * @default 0,0\n         * @private\n         */\n        this.pageOrigin = new PointF(0, 0);\n        /**\n         * Checks the Whether the `rotation` is applied or not.\n         * @default false\n         * @private\n         */\n        this.isRotation = false;\n        if (typeof margins === 'number') {\n            this.pageMargins.setMargins(margins);\n        }\n    }\n    Object.defineProperty(PdfPageSettings.prototype, \"size\", {\n        //Properties\n        /**\n         * Gets or sets the `size` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize;\n        },\n        set: function (value) {\n            this.setSize(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"orientation\", {\n        /**\n         * Gets or sets the page `orientation`.\n         * @private\n         */\n        get: function () {\n            return this.pageOrientation;\n        },\n        set: function (orientation) {\n            if (this.pageOrientation !== orientation) {\n                this.pageOrientation = orientation;\n                this.updateSize(orientation);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"margins\", {\n        /**\n         * Gets or sets the `margins` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageMargins;\n        },\n        set: function (value) {\n            this.pageMargins = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize.width;\n        },\n        set: function (value) {\n            this.pageSize.width = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"height\", {\n        /**\n         * Gets or sets the `height` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageSize.height;\n        },\n        set: function (value) {\n            this.pageSize.height = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"origin\", {\n        /**\n         * Gets or sets the `origin` of the page.\n         * @private\n         */\n        get: function () {\n            return this.pageOrigin;\n        },\n        set: function (value) {\n            this.pageOrigin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageSettings.prototype, \"rotate\", {\n        /**\n         * Gets or sets the number of degrees by which the page should be `rotated` clockwise when displayed or printed.\n         * @private\n         */\n        get: function () {\n            return this.rotateAngle;\n        },\n        set: function (value) {\n            this.rotateAngle = value;\n            this.isRotation = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * `Update page size` depending on orientation.\n     * @private\n     */\n    PdfPageSettings.prototype.updateSize = function (orientation) {\n        var min = Math.min(this.pageSize.width, this.pageSize.height);\n        var max = Math.max(this.pageSize.width, this.pageSize.height);\n        switch (orientation) {\n            case PdfPageOrientation.Portrait:\n                this.pageSize = new SizeF(min, max);\n                break;\n            case PdfPageOrientation.Landscape:\n                this.pageSize = new SizeF(max, min);\n                break;\n        }\n    };\n    /**\n     * Creates a `clone` of the object.\n     * @private\n     */\n    PdfPageSettings.prototype.clone = function () {\n        var settings = this;\n        settings.pageMargins = this.pageMargins.clone();\n        // if (GetTransition() != null)\n        // {\n        //     settings.Transition = (PdfPageTransition)Transition.clone();\n        // }\n        return settings;\n    };\n    /**\n     * Returns `size`, shrinked by the margins.\n     * @private\n     */\n    PdfPageSettings.prototype.getActualSize = function () {\n        var width = this.width - (this.margins.left + this.margins.right);\n        var height = this.height - (this.margins.top + this.margins.bottom);\n        var size = new SizeF(width, height);\n        return size;\n    };\n    /**\n     * Sets `size` to the page aaccording to the orientation.\n     * @private\n     */\n    PdfPageSettings.prototype.setSize = function (size) {\n        var min = Math.min(size.width, size.height);\n        var max = Math.max(size.width, size.height);\n        if (this.orientation === PdfPageOrientation.Portrait) {\n            this.pageSize = new SizeF(min, max);\n        }\n        else {\n            this.pageSize = new SizeF(max, min);\n        }\n    };\n    return PdfPageSettings;\n}());\nexport { PdfPageSettings };\n","import { Operators } from './pdf-operators';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * Helper class to `write PDF graphic streams` easily.\n * @private\n */\nvar PdfStreamWriter = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfStreamWriter` class.\n     * @private\n     */\n    function PdfStreamWriter(stream) {\n        if (stream == null) {\n            throw new Error('ArgumentNullException:stream');\n        }\n        this.stream = stream;\n    }\n    //Implementation\n    /**\n     * `Clear` the stream.\n     * @public\n     */\n    PdfStreamWriter.prototype.clear = function () {\n        this.stream.clearStream();\n    };\n    PdfStreamWriter.prototype.setGraphicsState = function (dictionaryName) {\n        if (dictionaryName instanceof PdfName) {\n            this.stream.write(dictionaryName.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setGraphicsState);\n        }\n        else {\n            this.stream.write(Operators.slash);\n            this.stream.write(dictionaryName);\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setGraphicsState);\n        }\n    };\n    /**\n     * `Executes the XObject`.\n     * @private\n     */\n    PdfStreamWriter.prototype.executeObject = function (name) {\n        this.stream.write(name.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.paintXObject);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * `Closes path object`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closePath = function () {\n        this.writeOperator(Operators.closePath);\n    };\n    /**\n     * `Clips the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.clipPath = function (useEvenOddRule) {\n        this.stream.write(Operators.clipPath);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n        }\n        this.stream.write(Operators.whiteSpace);\n        this.stream.write(Operators.endPath);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * `Closes, then fills and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillStrokePath = function (useEvenOddRule) {\n        this.stream.write(Operators.closeFillStrokePath);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Fills and strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillStrokePath = function (useEvenOddRule) {\n        this.stream.write(Operators.fillStroke);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Fills path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillPath = function (useEvenOddRule) {\n        this.stream.write(Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Ends the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endPath = function () {\n        this.writeOperator(Operators.n);\n    };\n    /**\n     * `Closes and fills the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillPath = function (useEvenOddRule) {\n        this.writeOperator(Operators.closePath);\n        this.stream.write(Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Closes and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeStrokePath = function () {\n        this.writeOperator(Operators.closeStrokePath);\n    };\n    /**\n     * `Sets the text scaling`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextScaling = function (textScaling) {\n        this.stream.write(PdfNumber.floatToString(textScaling));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setTextScaling);\n    };\n    /**\n     * `Strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.strokePath = function () {\n        this.writeOperator(Operators.stroke);\n    };\n    /**\n     * `Restores` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.restoreGraphicsState = function () {\n        this.writeOperator(Operators.restoreState);\n    };\n    /**\n     * `Saves` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.saveGraphicsState = function () {\n        this.writeOperator(Operators.saveState);\n    };\n    PdfStreamWriter.prototype.startNextLine = function (arg1, arg2) {\n        if (typeof arg1 === 'undefined') {\n            this.writeOperator(Operators.goToNextLine);\n        }\n        else if (arg1 instanceof PointF) {\n            this.writePoint(arg1);\n            this.writeOperator(Operators.setCoords);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(Operators.setCoords);\n        }\n    };\n    /**\n     * Shows the `text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.showText = function (text) {\n        this.checkTextParam(text);\n        this.writeText(text);\n        this.writeOperator(Operators.setText);\n    };\n    /**\n     * Sets `text leading`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLeading = function (leading) {\n        this.stream.write(PdfNumber.floatToString(leading));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setTextLeading);\n    };\n    /**\n     * `Begins the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginPath = function (x, y) {\n        this.writePoint(x, y);\n        this.writeOperator(Operators.beginPath);\n    };\n    /**\n     * `Begins text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginText = function () {\n        this.writeOperator(Operators.beginText);\n    };\n    /**\n     * `Ends text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endText = function () {\n        this.writeOperator(Operators.endText);\n    };\n    PdfStreamWriter.prototype.appendRectangle = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof RectangleF) {\n            this.appendRectangle(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writePoint(arg3, arg4);\n            this.writeOperator(Operators.appendRectangle);\n        }\n    };\n    PdfStreamWriter.prototype.appendLineSegment = function (arg1, arg2) {\n        if (arg1 instanceof PointF) {\n            this.appendLineSegment(arg1.x, arg1.y);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(Operators.appendLineSegment);\n        }\n    };\n    /**\n     * Sets the `text rendering mode`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextRenderingMode = function (renderingMode) {\n        this.stream.write(renderingMode.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setRenderingMode);\n    };\n    /**\n     * Sets the `character spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setCharacterSpacing = function (charSpacing) {\n        this.stream.write(PdfNumber.floatToString(charSpacing));\n        this.stream.write(Operators.whiteSpace);\n        this.stream.write(Operators.setCharacterSpace);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * Sets the `word spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setWordSpacing = function (wordSpacing) {\n        this.stream.write(PdfNumber.floatToString(wordSpacing));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setWordSpace);\n    };\n    PdfStreamWriter.prototype.showNextLineText = function (arg1, arg2) {\n        if (arg1 instanceof PdfString) {\n            this.checkTextParam(arg1);\n            this.writeText(arg1);\n            this.writeOperator(Operators.setTextOnNewLine);\n        }\n        else {\n            this.checkTextParam(arg1);\n            this.writeText(arg1, arg2);\n            this.writeOperator(Operators.setTextOnNewLine);\n        }\n    };\n    PdfStreamWriter.prototype.setColorSpace = function (arg1, arg2) {\n        if (arg1 instanceof PdfName && typeof arg2 === 'boolean') {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            // if (temparg1 == null) {\n            //     throw new Error('ArgumentNullException:name');\n            // }\n            var op = (temparg2) ? Operators.selectcolorspaceforstroking : Operators.selectcolorspacefornonstroking;\n            this.stream.write(temparg1.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.stream.write(op);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            this.setColorSpace(new PdfName(temparg1), temparg2);\n        }\n    };\n    /**\n     * Modifies current `transformation matrix`.\n     * @private\n     */\n    PdfStreamWriter.prototype.modifyCtm = function (matrix) {\n        if (matrix == null) {\n            throw new Error('ArgumentNullException:matrix');\n        }\n        this.stream.write(matrix.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.modifyCtm);\n    };\n    PdfStreamWriter.prototype.setFont = function (font, name, size) {\n        if (typeof name === 'string') {\n            this.setFont(font, new PdfName(name), size);\n        }\n        else {\n            if (font == null) {\n                throw new Error('ArgumentNullException:font');\n            }\n            this.stream.write(name.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.stream.write(PdfNumber.floatToString(size));\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setFont);\n        }\n    };\n    /**\n     * `Writes the operator`.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeOperator = function (opcode) {\n        this.stream.write(opcode);\n        this.stream.write(Operators.newLine);\n    };\n    PdfStreamWriter.prototype.checkTextParam = function (text) {\n        if (text == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        if (typeof text === 'string' && text === '') {\n            throw new Error('ArgumentException:The text can not be an empty string, text');\n        }\n    };\n    PdfStreamWriter.prototype.writeText = function (arg1, arg2) {\n        if ((arg1 instanceof PdfString) && (typeof arg2 === 'undefined')) {\n            this.stream.write(arg1.pdfEncode());\n        }\n        else {\n            var start = void 0;\n            var end = void 0;\n            if (arg2) {\n                start = PdfString.hexStringMark[0];\n                end = PdfString.hexStringMark[1];\n            }\n            else {\n                start = PdfString.stringMark[0];\n                end = PdfString.stringMark[1];\n            }\n            this.stream.write(start);\n            this.stream.write(arg1);\n            this.stream.write(end);\n        }\n    };\n    PdfStreamWriter.prototype.writePoint = function (arg1, arg2) {\n        if ((arg1 instanceof PointF) && (typeof arg2 === 'undefined')) {\n            this.writePoint(arg1.x, arg1.y);\n        }\n        else {\n            var temparg1 = arg1;\n            this.stream.write(PdfNumber.floatToString(temparg1));\n            this.stream.write(Operators.whiteSpace);\n            // NOTE: Change Y co-ordinate because we shifted co-ordinate system only.\n            arg2 = this.updateY(arg2);\n            this.stream.write(PdfNumber.floatToString(arg2));\n            this.stream.write(Operators.whiteSpace);\n        }\n    };\n    /**\n     * `Updates y` co-ordinate.\n     * @private\n     */\n    PdfStreamWriter.prototype.updateY = function (arg) {\n        return -arg;\n    };\n    /**\n     * `Writes string` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.write = function (string) {\n        var builder = '';\n        builder += string;\n        builder += Operators.newLine;\n        this.writeOperator(builder);\n    };\n    /**\n     * `Writes comment` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeComment = function (comment) {\n        if (comment != null && comment.length > 0) {\n            var builder = '';\n            builder += Operators.comment;\n            builder += Operators.whiteSpace;\n            builder += comment;\n            //builder.Append( Operators.NewLine );\n            this.writeOperator(builder);\n        }\n        else {\n            throw new Error('Invalid comment');\n        }\n    };\n    /**\n     * Sets the `color and space`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setColorAndSpace = function (color, colorSpace, forStroking) {\n        if (!color.isEmpty) {\n            // bool test = color is PdfExtendedColor;\n            this.stream.write(color.toString(colorSpace, forStroking));\n            this.stream.write(Operators.newLine);\n        }\n    };\n    // public setLineDashPattern(pattern : number[], patternOffset : number) : void\n    // {\n    //     let pat : PdfArray = new PdfArray(pattern);\n    //     let off : PdfNumber = new PdfNumber(patternOffset);\n    //     this.setLineDashPatternHelper(pat, off);\n    // }\n    // private setLineDashPatternHelper(pattern : PdfArray, patternOffset : PdfNumber) : void\n    // {\n    //     pattern.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     patternOffset.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     this.writeOperator(Operators.setDashPattern);\n    // }\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPattern = function (pattern, patternOffset) {\n        // let pat : PdfArray = new PdfArray(pattern);\n        // let off : PdfNumber = new PdfNumber(patternOffset);\n        // this.setLineDashPatternHelper(pat, off);\n        this.setLineDashPatternHelper(pattern, patternOffset);\n    };\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPatternHelper = function (pattern, patternOffset) {\n        var tempPattern = '[';\n        if (pattern.length > 1) {\n            for (var index = 0; index < pattern.length; index++) {\n                if (index === pattern.length - 1) {\n                    tempPattern += pattern[index].toString();\n                }\n                else {\n                    tempPattern += pattern[index].toString() + ' ';\n                }\n            }\n        }\n        tempPattern += '] ';\n        tempPattern += patternOffset.toString();\n        tempPattern += ' ' + Operators.setDashPattern;\n        this.stream.write(tempPattern);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * Sets the `miter limit`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setMiterLimit = function (miterLimit) {\n        this.stream.write(PdfNumber.floatToString(miterLimit));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setMiterLimit);\n    };\n    /**\n     * Sets the `width of the line`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineWidth = function (width) {\n        this.stream.write(PdfNumber.floatToString(width));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineWidth);\n    };\n    /**\n     * Sets the `line cap`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineCap = function (lineCapStyle) {\n        this.stream.write((lineCapStyle).toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineCapStyle);\n    };\n    /**\n     * Sets the `line join`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineJoin = function (lineJoinStyle) {\n        this.stream.write((lineJoinStyle).toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineJoinStyle);\n    };\n    Object.defineProperty(PdfStreamWriter.prototype, \"position\", {\n        //IPdfWriter members\n        /**\n         * Gets or sets the current `position` within the stream.\n         * @private\n         */\n        get: function () {\n            return this.stream.position;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"length\", {\n        /**\n         * Gets `stream length`.\n         * @private\n         */\n        get: function () {\n            var returnValue = 0;\n            if (this.stream.data.length !== 0 && this.stream.data.length !== -1) {\n                for (var index = 0; index < this.stream.data.length; index++) {\n                    returnValue += this.stream.data[index].length;\n                }\n            }\n            return returnValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"document\", {\n        /**\n         * Gets and Sets the `current document`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /* tslint:disable-next-line:max-line-length */\n    PdfStreamWriter.prototype.appendBezierSegment = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof PointF && arg2 instanceof PointF && arg3 instanceof PointF) {\n            this.writePoint(arg1.x, arg1.y);\n            this.writePoint(arg2.x, arg2.y);\n            this.writePoint(arg3.x, arg3.y);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writePoint(arg3, arg4);\n            this.writePoint(arg5, arg6);\n        }\n        this.writeOperator(Operators.appendbeziercurve);\n    };\n    PdfStreamWriter.prototype.setColourWithPattern = function (colours, patternName, forStroking) {\n        if ((colours != null)) {\n            var count = colours.length;\n            var i = 0;\n            for (i = 0; i < count; ++i) {\n                this.stream.write(colours[i].toString());\n                this.stream.write(Operators.whiteSpace);\n            }\n        }\n        if ((patternName != null)) {\n            this.stream.write(patternName.toString());\n            this.stream.write(Operators.whiteSpace);\n        }\n        if (forStroking) {\n            this.writeOperator(Operators.setColorAndPatternStroking);\n        }\n        else {\n            this.writeOperator(Operators.setColorAndPattern);\n        }\n    };\n    return PdfStreamWriter;\n}());\nexport { PdfStreamWriter };\n","/**\n * PdfPen.ts class for EJ2-PDF\n */\nimport { PdfColor } from './pdf-color';\nimport { PdfSolidBrush } from './brushes/pdf-solid-brush';\nimport { PdfDashStyle, PdfColorSpace } from './enum';\nimport { PdfBrush } from './brushes/pdf-brush';\n/**\n * `PdfPen` class defining settings for drawing operations, that determines the color,\n * width, and style of the drawing elements.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // create a new page\n * let page1 : PdfPage = document.pages.add();\n * // set pen\n * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n * // draw rectangle\n * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPen = /** @class */ (function () {\n    function PdfPen(arg1, arg2) {\n        //Fields\n        /**\n         * Specifies the `color of the pen`.\n         * @default new PdfColor()\n         * @private\n         */\n        this.pdfColor = new PdfColor(0, 0, 0);\n        /**\n         * Specifies the `dash offset of the pen`.\n         * @default 0\n         * @private\n         */\n        this.dashOffsetValue = 0;\n        /**\n         * Specifies the `dash pattern of the pen`.\n         * @default [0]\n         * @private\n         */\n        this.penDashPattern = [0];\n        /**\n         * Specifies the `dash style of the pen`.\n         * @default Solid\n         * @private\n         */\n        this.pdfDashStyle = PdfDashStyle.Solid;\n        /**\n         * Specifies the `line cap of the pen`.\n         * @default 0\n         * @private\n         */\n        this.pdfLineCap = 0;\n        /**\n         * Specifies the `line join of the pen`.\n         * @default 0\n         * @private\n         */\n        this.pdfLineJoin = 0;\n        /**\n         * Specifies the `width of the pen`.\n         * @default 1.0\n         * @private\n         */\n        this.penWidth = 1.0;\n        /**\n         * Specifies the `mitter limit of the pen`.\n         * @default 0.0\n         * @private\n         */\n        this.internalMiterLimit = 0.0;\n        /**\n         * Stores the `colorspace` value.\n         * @default Rgb\n         * @private\n         */\n        this.colorSpace = PdfColorSpace.Rgb;\n        if (arg1 instanceof PdfBrush) {\n            this.setBrush(arg1);\n        }\n        else if (arg1 instanceof PdfColor) {\n            this.color = arg1;\n        }\n        if (typeof arg2 === 'number') {\n            this.width = arg2;\n        }\n    }\n    Object.defineProperty(PdfPen.prototype, \"color\", {\n        //Properties\n        /**\n         * Gets or sets the `color of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashOffset\", {\n        /**\n         * Gets or sets the `dash offset of the pen`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.dashOffsetValue === 'undefined' || this.dashOffsetValue == null) {\n                return 0;\n            }\n            else {\n                return this.dashOffsetValue;\n            }\n        },\n        set: function (value) {\n            this.dashOffsetValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashPattern\", {\n        /**\n         * Gets or sets the `dash pattern of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.penDashPattern;\n        },\n        set: function (value) {\n            this.penDashPattern = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"dashStyle\", {\n        /**\n         * Gets or sets the `dash style of the pen`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create a new page\n         * let page1 : PdfPage = document.pages.add();\n         * // set pen\n         * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n         * //\n         * // set pen style\n         * pen.dashStyle = PdfDashStyle.DashDot;\n         * // get pen style\n         * let style : PdfDashStyle = pen.dashStyle;\n         * //\n         * // draw rectangle\n         * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfDashStyle;\n        },\n        set: function (value) {\n            if (this.pdfDashStyle !== value) {\n                this.pdfDashStyle = value;\n                switch (this.pdfDashStyle) {\n                    case PdfDashStyle.Custom:\n                        break;\n                    case PdfDashStyle.Dash:\n                        this.penDashPattern = [3, 1];\n                        break;\n                    case PdfDashStyle.Dot:\n                        this.penDashPattern = [1, 1];\n                        break;\n                    case PdfDashStyle.DashDot:\n                        this.penDashPattern = [3, 1, 1, 1];\n                        break;\n                    case PdfDashStyle.DashDotDot:\n                        this.penDashPattern = [3, 1, 1, 1, 1, 1];\n                        break;\n                    case PdfDashStyle.Solid:\n                        break;\n                    default:\n                        this.pdfDashStyle = PdfDashStyle.Solid;\n                        this.penDashPattern = [0];\n                        break;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"lineCap\", {\n        /**\n         * Gets or sets the `line cap of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfLineCap;\n        },\n        set: function (value) {\n            this.pdfLineCap = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"lineJoin\", {\n        /**\n         * Gets or sets the `line join style of the pen`.\n         * @private\n         */\n        get: function () {\n            return this.pdfLineJoin;\n        },\n        set: function (value) {\n            this.pdfLineJoin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"miterLimit\", {\n        /**\n         * Gets or sets the `miter limit`.\n         * @private\n         */\n        get: function () {\n            return this.internalMiterLimit;\n        },\n        set: function (value) {\n            this.internalMiterLimit = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPen.prototype, \"width\", {\n        /**\n         * Gets or sets the `width of the pen`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create a new page\n         * let page1 : PdfPage = document.pages.add();\n         * // set pen\n         * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n         * //\n         * // set pen width\n         * pen.width = 2;\n         * //\n         * // draw rectangle\n         * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.penWidth;\n        },\n        set: function (value) {\n            this.penWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Helper\n    /**\n     * `Clones` this instance of PdfPen class.\n     * @private\n     */\n    PdfPen.prototype.clone = function () {\n        var pen = this;\n        return pen;\n    };\n    /**\n     * `Sets the brush`.\n     * @private\n     */\n    PdfPen.prototype.setBrush = function (brush) {\n        var sBrush = brush;\n        if ((sBrush != null && sBrush instanceof PdfSolidBrush)) {\n            this.color = sBrush.color;\n            this.pdfBrush = sBrush;\n        }\n        this.color = sBrush.color;\n        this.pdfBrush = sBrush;\n    };\n    /**\n     * `Monitors the changes`.\n     * @private\n     */\n    PdfPen.prototype.monitorChanges = function (currentPen, streamWriter, getResources, saveState, currentColorSpace, matrix) {\n        var diff = false;\n        saveState = true;\n        if (currentPen == null) {\n            diff = true;\n        }\n        diff = this.dashControl(currentPen, saveState, streamWriter);\n        streamWriter.setLineWidth(this.width);\n        streamWriter.setLineJoin(this.lineJoin);\n        streamWriter.setLineCap(this.lineCap);\n        var miterLimit = this.miterLimit;\n        if (miterLimit > 0) {\n            streamWriter.setMiterLimit(miterLimit);\n            diff = true;\n        }\n        var brush = this.pdfBrush;\n        streamWriter.setColorAndSpace(this.color, currentColorSpace, true);\n        diff = true;\n        return diff;\n    };\n    /**\n     * `Controls the dash style` and behaviour of each line.\n     * @private\n     */\n    PdfPen.prototype.dashControl = function (pen, saveState, streamWriter) {\n        saveState = true;\n        var lineWidth = this.width;\n        var pattern = this.getPattern();\n        streamWriter.setLineDashPattern(pattern, this.dashOffset * lineWidth);\n        return saveState;\n    };\n    /**\n     * `Gets the pattern` of PdfPen.\n     * @private\n     */\n    PdfPen.prototype.getPattern = function () {\n        var pattern = this.dashPattern;\n        for (var i = 0; i < pattern.length; ++i) {\n            pattern[i] *= this.width;\n        }\n        return pattern;\n    };\n    return PdfPen;\n}());\nexport { PdfPen };\n","/**\n * PdfTransformationMatrix.ts class for EJ2-PDF\n */\nimport { PointF } from './../drawing/pdf-drawing';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\n * Class for representing Root `transformation matrix`.\n */\nvar PdfTransformationMatrix = /** @class */ (function () {\n    function PdfTransformationMatrix(value) {\n        /**\n         * Value for `angle converting`.\n         * @default 180.0 / Math.PI\n         * @private\n         */\n        this.radDegFactor = 180.0 / Math.PI;\n        if (typeof value === 'undefined') {\n            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, 1.00, 0.00, 0.00);\n        }\n        else {\n            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, -1.00, 0.00, 0.00);\n        }\n    }\n    Object.defineProperty(PdfTransformationMatrix.prototype, \"matrix\", {\n        // Properties\n        /**\n         * Gets or sets the `internal matrix object`.\n         * @private\n         */\n        get: function () {\n            return this.transformationMatrix;\n        },\n        set: function (value) {\n            this.transformationMatrix = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /**\n     * `Translates` coordinates by specified coordinates.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.translate = function (offsetX, offsetY) {\n        this.transformationMatrix.translate(offsetX, offsetY);\n    };\n    /**\n     * `Scales` coordinates by specified coordinates.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.scale = function (scaleX, scaleY) {\n        this.transformationMatrix.elements[0] = scaleX;\n        this.transformationMatrix.elements[3] = scaleY;\n    };\n    /**\n     * `Rotates` coordinate system in counterclockwise direction.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.rotate = function (angle) {\n        //Convert from degree to radian \n        angle = (angle * Math.PI) / 180;\n        //Rotation \n        this.transformationMatrix.elements[0] = Math.cos(angle);\n        this.transformationMatrix.elements[1] = Math.sin(angle);\n        this.transformationMatrix.elements[2] = -Math.sin(angle);\n        this.transformationMatrix.elements[3] = Math.cos(angle);\n    };\n    // Overrides\n    /**\n     * Gets `PDF representation`.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.toString = function () {\n        var builder = '';\n        var whitespace = ' ';\n        for (var i = 0, len = this.transformationMatrix.elements.length; i < len; i++) {\n            var temp = this.matrix.elements[i];\n            builder += PdfNumber.floatToString(this.transformationMatrix.elements[i]);\n            builder += whitespace;\n        }\n        return builder;\n    };\n    // Implementation\n    /**\n     * `Multiplies` matrices (changes coordinate system.)\n     * @private\n     */\n    PdfTransformationMatrix.prototype.multiply = function (matrix) {\n        this.transformationMatrix.multiply(matrix.matrix);\n    };\n    /**\n     * Converts `degrees to radians`.\n     * @private\n     */\n    PdfTransformationMatrix.degreesToRadians = function (degreesX) {\n        return this.degRadFactor * degreesX;\n    };\n    /**\n     * Converts `radians to degrees`.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.radiansToDegrees = function (radians) {\n        return this.radDegFactor * radians;\n    };\n    /**\n     * `Clones` this instance of PdfTransformationMatrix.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.clone = function () {\n        return this;\n    };\n    // Constants\n    /**\n     * Value for `angle converting`.\n     * @default Math.PI / 180.0\n     * @private\n     */\n    PdfTransformationMatrix.degRadFactor = Math.PI / 180.0;\n    return PdfTransformationMatrix;\n}());\nexport { PdfTransformationMatrix };\nvar Matrix = /** @class */ (function () {\n    function Matrix(arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (typeof arg1 === 'undefined') {\n            this.metrixElements = [];\n        }\n        else if (typeof arg1 === 'number') {\n            this.metrixElements = [];\n            this.metrixElements.push(arg1);\n            this.metrixElements.push(arg2);\n            this.metrixElements.push(arg3);\n            this.metrixElements.push(arg4);\n            this.metrixElements.push(arg5);\n            this.metrixElements.push(arg6);\n        }\n        else {\n            this.metrixElements = arg1;\n        }\n    }\n    Object.defineProperty(Matrix.prototype, \"elements\", {\n        // Properties\n        /**\n         * Gets the `elements`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"offsetX\", {\n        /**\n         * Gets the off set `X`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements[4];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"offsetY\", {\n        /**\n         * Gets the off set `Y`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements[5];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Translates` coordinates by specified coordinates.\n     * @private\n     */\n    Matrix.prototype.translate = function (offsetX, offsetY) {\n        this.metrixElements[4] = offsetX;\n        this.metrixElements[5] = offsetY;\n    };\n    /**\n     * `Translates` the specified offset X.\n     * @private\n     */\n    Matrix.prototype.transform = function (point) {\n        var x = point.x;\n        var y = point.y;\n        var x2 = x * this.elements[0] + y * this.elements[2] + this.offsetX;\n        var y2 = x * this.elements[1] + y * this.elements[3] + this.offsetY;\n        return new PointF(x2, y2);\n    };\n    /**\n     * `Multiplies matrices` (changes coordinate system.)\n     * @private\n     */\n    Matrix.prototype.multiply = function (matrix) {\n        var tempMatrix = [];\n        tempMatrix.push(this.elements[0] * matrix.elements[0] + this.elements[1] * matrix.elements[2]);\n        tempMatrix[1] = (this.elements[0] * matrix.elements[1] + this.elements[1] * matrix.elements[3]);\n        tempMatrix[2] = (this.elements[2] * matrix.elements[0] + this.elements[3] * matrix.elements[2]);\n        tempMatrix[3] = (this.elements[2] * matrix.elements[1] + this.elements[3] * matrix.elements[3]);\n        tempMatrix[4] = (this.offsetX * matrix.elements[0] + this.offsetY * matrix.elements[2] + matrix.offsetX);\n        tempMatrix[5] = (this.offsetX * matrix.elements[1] + this.offsetY * matrix.elements[3] + matrix.offsetY);\n        for (var i = 0; i < tempMatrix.length; i++) {\n            this.elements[i] = tempMatrix[i];\n        }\n    };\n    // IDisposable Members\n    /**\n     * `Dispose` this instance of PdfTransformationMatrix class.\n     * @private\n     */\n    Matrix.prototype.dispose = function () {\n        this.metrixElements = null;\n    };\n    // ICloneable Members\n    /**\n     * `Clones` this instance of PdfTransformationMatrix class.\n     * @private\n     */\n    Matrix.prototype.clone = function () {\n        var m = new Matrix(this.metrixElements);\n        return m;\n    };\n    return Matrix;\n}());\nexport { Matrix };\n","/**\n * `constants.ts` class for EJ2-PDF\n * @private\n */\nvar ProcedureSets = /** @class */ (function () {\n    function ProcedureSets() {\n        /**\n         * Specifies the `PDF` procedure set.\n         * @private\n         */\n        this.pdf = 'PDF';\n        /**\n         * Specifies the `Text` procedure set.\n         * @private\n         */\n        this.text = 'Text';\n        /**\n         * Specifies the `ImageB` procedure set.\n         * @private\n         */\n        this.imageB = 'ImageB';\n        /**\n         * Specifies the `ImageC` procedure set.\n         * @private\n         */\n        this.imageC = 'ImageC';\n        /**\n         * Specifies the `ImageI` procedure set.\n         * @private\n         */\n        this.imageI = 'ImageI';\n    }\n    return ProcedureSets;\n}());\nexport { ProcedureSets };\n","/**\n * Dictionary class\n * @private\n * @hidden\n */\nvar TemporaryDictionary = /** @class */ (function () {\n    function TemporaryDictionary() {\n        /**\n         * @hidden\n         * @private\n         */\n        this.mKeys = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.mValues = [];\n    }\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.size = function () {\n        return this.mKeys.length;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.add = function (key, value) {\n        if (key === undefined || key === null || value === undefined || value === null) {\n            throw new ReferenceError('Provided key or value is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            this.mKeys.push(key);\n            this.mValues.push(value);\n            return 1;\n        }\n        else {\n            throw new RangeError('An item with the same key has already been added.');\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.keys = function () {\n        return this.mKeys;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.values = function () {\n        return this.mValues;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.getValue = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            throw new RangeError('No item with the specified key has been added.');\n        }\n        else {\n            return this.mValues[index];\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.setValue = function (key, value) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            this.mKeys.push(key);\n            this.mValues.push(value);\n        }\n        else {\n            this.mValues[index] = value;\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.remove = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            throw new RangeError('No item with the specified key has been added.');\n        }\n        else {\n            this.mKeys.splice(index, 1);\n            this.mValues.splice(index, 1);\n            return true;\n        }\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.containsKey = function (key) {\n        if (key === undefined || key === null) {\n            throw new ReferenceError('Provided key is not valid.');\n        }\n        var index = this.mKeys.indexOf(key);\n        if (index < 0) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    TemporaryDictionary.prototype.clear = function () {\n        this.mKeys = [];\n        this.mValues = [];\n    };\n    return TemporaryDictionary;\n}());\nexport { TemporaryDictionary };\n","import { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * Represents a simple `transparency`.\n * @private\n */\nvar PdfTransparency = /** @class */ (function () {\n    // Properties\n    // /**\n    //  * Gets the `stroke` operation alpha value.\n    //  * @private\n    //  */\n    // public get stroke() : number {\n    //     let result : number = this.getNumber(this.dictionaryProperties.CA);\n    //     return result;\n    // }\n    // /**\n    //  * Gets the `fill` operation alpha value.\n    //  * @private\n    //  */\n    // public get fill() : number {\n    //     let result : number = this.getNumber(this.dictionaryProperties.ca);\n    //     return result;\n    // }\n    // /**\n    //  * Gets the `blend mode`.\n    //  * @private\n    //  */\n    // public get mode() : PdfBlendMode {\n    //     let result : string = this.getName(this.dictionaryProperties.ca);\n    //     return PdfBlendMode.Normal;\n    // }\n    // Constructors\n    /**\n     * Initializes a new instance of the `Transparency` class.\n     * @private\n     */\n    function PdfTransparency(stroke, fill, mode) {\n        // Fields\n        /**\n         * Internal variable to store `dictionary`.\n         * @default new PdfDictionary()\n         * @private\n         */\n        this.dictionary = new PdfDictionary();\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @default new DictionaryProperties()\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.dictionary.items.setValue(this.dictionaryProperties.CA, new PdfNumber(stroke));\n        this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(fill));\n        this.dictionary.items.setValue(this.dictionaryProperties.BM, new PdfName(mode.toString()));\n    }\n    Object.defineProperty(PdfTransparency.prototype, \"element\", {\n        // // Implementation\n        // /**\n        //  * Gets the `number value`.\n        //  * @private\n        //  */\n        // private getNumber(keyName : string) : number {\n        //     let result : number = 0.0;\n        //     let numb : PdfNumber = this.dictionary.items.getValue(keyName) as PdfNumber;\n        //     result = numb.intValue;\n        //     return result;\n        // }\n        // /**\n        //  * Gets the `name value`.\n        //  * @private\n        //  */\n        // private getName(keyName : string) : string {\n        //     let result : string = null;\n        //     let name : PdfName = this.dictionary.items.getValue(keyName) as PdfName;\n        //     result = name.value;\n        //     return result;\n        // }\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.dictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTransparency;\n}());\nexport { PdfTransparency };\n","/**\n * Represent a `collection of automatic fields information`.\n * @private\n */\nvar PdfAutomaticFieldInfoCollection = /** @class */ (function () {\n    /**\n     * Initializes a new instance of the 'PdfPageNumberFieldInfoCollection' class.\n     * @private\n     */\n    function PdfAutomaticFieldInfoCollection() {\n        /**\n         * Internal variable to store instance of `pageNumberFields` class.\n         * @private\n         */\n        this.automaticFieldsInformation = [];\n        //\n    }\n    Object.defineProperty(PdfAutomaticFieldInfoCollection.prototype, \"automaticFields\", {\n        /**\n         * Gets the `page number fields collection`.\n         * @private\n         */\n        get: function () {\n            return this.automaticFieldsInformation;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /// Adds the specified field info.\n    /**\n     * Add page number field into collection.\n     * @private\n     */\n    PdfAutomaticFieldInfoCollection.prototype.add = function (fieldInfo) {\n        return this.automaticFields.push(fieldInfo);\n    };\n    return PdfAutomaticFieldInfoCollection;\n}());\nexport { PdfAutomaticFieldInfoCollection };\n","/**\n * Represents a base class for all page graphics elements.\n */\nvar PdfGraphicsElement = /** @class */ (function () {\n    // Constructors\n    function PdfGraphicsElement() {\n        //\n    }\n    /**\n     * `Draws` the page number field.\n     * @public\n     */\n    PdfGraphicsElement.prototype.drawHelper = function (graphics, x, y) {\n        var bNeedSave = (x !== 0 || y !== 0);\n        var gState = null;\n        // Translate co-ordinates.\n        if (bNeedSave) {\n            // Save state.\n            gState = graphics.save();\n            graphics.translateTransform(x, y);\n        }\n        this.drawInternal(graphics);\n        if (bNeedSave) {\n            // Restore state.\n            graphics.restore(gState);\n        }\n    };\n    return PdfGraphicsElement;\n}());\nexport { PdfGraphicsElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfAutomaticField.ts class for EJ2-PDF\n */\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfSolidBrush } from './../../graphics/brushes/pdf-solid-brush';\nimport { PdfColor } from './../../graphics/pdf-color';\nimport { PdfDocument } from './../pdf-document';\nimport { PdfGraphicsElement } from './../../graphics/figures/base/graphics-element';\nimport { PdfAutomaticFieldInfo } from './automatic-field-info';\n/**\n * Represents a fields which is calculated before the document saves.\n */\nvar PdfAutomaticField = /** @class */ (function (_super) {\n    __extends(PdfAutomaticField, _super);\n    // Constructors\n    function PdfAutomaticField() {\n        var _this = _super.call(this) || this;\n        // Fields\n        _this.internalBounds = new RectangleF(0, 0, 0, 0);\n        _this.internalTemplateSize = new SizeF(0, 0);\n        return _this;\n    }\n    Object.defineProperty(PdfAutomaticField.prototype, \"bounds\", {\n        // Properties\n        get: function () {\n            return this.internalBounds;\n        },\n        set: function (value) {\n            this.internalBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"size\", {\n        get: function () {\n            return new SizeF(this.bounds.width, this.bounds.height);\n        },\n        set: function (value) {\n            this.bounds.width = value.width;\n            this.bounds.height = value.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"location\", {\n        get: function () {\n            return new PointF(this.bounds.x, this.bounds.y);\n        },\n        set: function (value) {\n            this.bounds.x = value.x;\n            this.bounds.y = value.y;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"font\", {\n        get: function () {\n            return this.internalFont;\n        },\n        set: function (value) {\n            this.internalFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"brush\", {\n        get: function () {\n            return this.internalBrush;\n        },\n        set: function (value) {\n            this.internalBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"pen\", {\n        get: function () {\n            return this.internalPen;\n        },\n        set: function (value) {\n            this.internalPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticField.prototype, \"stringFormat\", {\n        get: function () {\n            return this.internalStringFormat;\n        },\n        set: function (value) {\n            this.internalStringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfAutomaticField.prototype.performDrawHelper = function (graphics, location, scalingX, scalingY) {\n        if (this.bounds.height === 0 || this.bounds.width === 0) {\n            var text = this.getValue(graphics);\n            this.internalTemplateSize = this.getFont().measureString(text, this.size, this.stringFormat);\n        }\n    };\n    PdfAutomaticField.prototype.draw = function (arg1, arg2, arg3) {\n        if (typeof arg2 === 'undefined') {\n            var location_1 = new PointF(0, 0);\n            this.draw(arg1, location_1);\n        }\n        else if (arg2 instanceof PointF) {\n            this.draw(arg1, arg2.x, arg2.y);\n        }\n        else {\n            this.drawHelper(arg1, arg2, arg3);\n            var info = new PdfAutomaticFieldInfo(this, new PointF(arg2, arg3));\n            arg1.automaticFields.add(info);\n        }\n    };\n    PdfAutomaticField.prototype.getSize = function () {\n        if (this.bounds.height === 0 || this.bounds.width === 0) {\n            return this.internalTemplateSize;\n        }\n        else {\n            return this.size;\n        }\n    };\n    PdfAutomaticField.prototype.drawInternal = function (graphics) {\n        //\n    };\n    /* tslint:disable */\n    PdfAutomaticField.prototype.getBrush = function () {\n        return (typeof this.internalBrush === 'undefined' || this.internalBrush == null) ? new PdfSolidBrush(new PdfColor(0, 0, 0)) : this.internalBrush;\n    };\n    PdfAutomaticField.prototype.getFont = function () {\n        return (typeof this.internalFont === 'undefined' || this.internalFont == null) ? PdfDocument.defaultFont : this.internalFont;\n    };\n    /* tslint:enable */\n    PdfAutomaticField.prototype.getPageFromGraphics = function (graphics) {\n        if (typeof graphics.page !== 'undefined' && graphics.page !== null) {\n            var page = graphics.page;\n            return page;\n        }\n        else {\n            var page = graphics.currentPage;\n            return page;\n        }\n    };\n    return PdfAutomaticField;\n}(PdfGraphicsElement));\nexport { PdfAutomaticField };\n","/**\n * PdfAutomaticFieldInfo.ts class for EJ2-PDF\n * @private\n */\nimport { PointF } from './../../drawing/pdf-drawing';\nimport { PdfAutomaticField } from './automatic-field';\n/**\n * Represents information about the automatic field.\n * @private\n */\nvar PdfAutomaticFieldInfo = /** @class */ (function () {\n    function PdfAutomaticFieldInfo(field, location, scaleX, scaleY) {\n        // Fields\n        /**\n         * Internal variable to store location of the field.\n         * @private\n         */\n        this.pageNumberFieldLocation = new PointF();\n        /**\n         * Internal variable to store field.\n         * @private\n         */\n        this.pageNumberField = null;\n        /**\n         * Internal variable to store x scaling factor.\n         * @private\n         */\n        this.scaleX = 1;\n        /**\n         * Internal variable to store y scaling factor.\n         * @private\n         */\n        this.scaleY = 1;\n        if (typeof location === 'undefined' && field instanceof PdfAutomaticFieldInfo) {\n            this.pageNumberField = field.field;\n            this.pageNumberFieldLocation = field.location;\n            this.scaleX = field.scalingX;\n            this.scaleY = field.scalingY;\n        }\n        else if (typeof scaleX === 'undefined' && location instanceof PointF && field instanceof PdfAutomaticField) {\n            this.pageNumberField = field;\n            this.pageNumberFieldLocation = location;\n        }\n        else {\n            this.pageNumberField = field;\n            this.pageNumberFieldLocation = location;\n            this.scaleX = scaleX;\n            this.scaleY = scaleY;\n        }\n    }\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"location\", {\n        /* tslint:enable */\n        // Properties\n        /**\n         * Gets or sets the location.\n         * @private\n         */\n        get: function () {\n            return this.pageNumberFieldLocation;\n        },\n        set: function (value) {\n            this.pageNumberFieldLocation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"field\", {\n        /**\n         * Gets or sets the field.\n         * @private\n         */\n        get: function () {\n            return this.pageNumberField;\n        },\n        set: function (value) {\n            this.pageNumberField = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"scalingX\", {\n        /**\n         * Gets or sets the scaling X factor.\n         * @private\n         */\n        get: function () {\n            return this.scaleX;\n        },\n        set: function (value) {\n            this.scaleX = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAutomaticFieldInfo.prototype, \"scalingY\", {\n        /**\n         * Gets or sets the scaling Y factor.\n         * @private\n         */\n        get: function () {\n            return this.scaleY;\n        },\n        set: function (value) {\n            this.scaleY = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAutomaticFieldInfo;\n}());\nexport { PdfAutomaticFieldInfo };\n","/**\n * ByteArray class\n * Used to keep information about image stream as byte array.\n * @private\n */\nvar ByteArray = /** @class */ (function () {\n    /**\n     * Initialize the new instance for `byte-array` class\n     * @hidden\n     * @private\n     */\n    function ByteArray(length) {\n        /**\n         * Current stream `position`.\n         * @default 0\n         * @private\n         */\n        this.mPosition = 0;\n        this.buffer = new Uint8Array(length);\n        this.dataView = new DataView(this.buffer.buffer);\n    }\n    Object.defineProperty(ByteArray.prototype, \"position\", {\n        /**\n         * Gets and Sets a current `position` of byte array.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mPosition;\n        },\n        set: function (value) {\n            this.mPosition = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Read` from current stream position.\n     * @default 0\n     * @hidden\n     * @private\n     */\n    ByteArray.prototype.read = function (buffer, offset, count) {\n        for (var index = offset; index < count; index++) {\n            var position = this.position;\n            buffer.buffer[index] = this.readByte(position);\n            this.position++;\n        }\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.getBuffer = function (index) {\n        return this.buffer[index];\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.writeFromBase64String = function (base64) {\n        var arr = this.encodedString(base64);\n        this.buffer = arr;\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.encodedString = function (input) {\n        var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n        var chr1;\n        var chr2;\n        var chr3;\n        var enc1;\n        var enc2;\n        var enc3;\n        var enc4;\n        var i = 0;\n        var resultIndex = 0;\n        var dataUrlPrefix = 'data:';\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n        var totalLength = input.length * 3 / 4;\n        if (input.charAt(input.length - 1) === keyStr.charAt(64)) {\n            totalLength--;\n        }\n        var output = new Uint8Array(totalLength | 0);\n        while (i < input.length) {\n            enc1 = keyStr.indexOf(input.charAt(i++));\n            enc2 = keyStr.indexOf(input.charAt(i++));\n            enc3 = keyStr.indexOf(input.charAt(i++));\n            enc4 = keyStr.indexOf(input.charAt(i++));\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n            output[resultIndex++] = chr1;\n            output[resultIndex++] = chr2;\n            output[resultIndex++] = chr3;\n        }\n        return output;\n    };\n    /**\n     * @hidden\n     */\n    ByteArray.prototype.readByte = function (offset) {\n        return (this.buffer[offset]);\n    };\n    Object.defineProperty(ByteArray.prototype, \"internalBuffer\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ByteArray.prototype, \"count\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this.buffer.byteLength;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * 'readNextTwoBytes' stream\n     * @hidden\n     * @private\n     */\n    ByteArray.prototype.readNextTwoBytes = function (stream) {\n        var data = stream.readByte(this.position);\n        this.position++;\n        data <<= 8;\n        data |= stream.readByte(this.position);\n        this.position++;\n        return data;\n    };\n    return ByteArray;\n}());\nexport { ByteArray };\n","/**\n * ImageDecoder class\n */\nimport { ByteArray } from './byte-array';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfBoolean } from './../../primitives/pdf-boolean';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\n/**\n * Specifies the image `format`.\n * @private\n */\nexport var ImageFormat;\n(function (ImageFormat) {\n    /**\n     * Specifies the type of `Unknown`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Specifies the type of `Bmp`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Bmp\"] = 1] = \"Bmp\";\n    /**\n     * Specifies the type of `Emf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Emf\"] = 2] = \"Emf\";\n    /**\n     * Specifies the type of `Gif`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Gif\"] = 3] = \"Gif\";\n    /**\n     * Specifies the type of `Jpeg`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Jpeg\"] = 4] = \"Jpeg\";\n    /**\n     * Specifies the type of `Png`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Png\"] = 5] = \"Png\";\n    /**\n     * Specifies the type of `Wmf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Wmf\"] = 6] = \"Wmf\";\n    /**\n     * Specifies the type of `Icon`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Icon\"] = 7] = \"Icon\";\n})(ImageFormat || (ImageFormat = {}));\n/**\n * `Decode the image stream`.\n * @private\n */\nvar ImageDecoder = /** @class */ (function () {\n    /**\n     * Initialize the new instance for `image-decoder` class.\n     * @private\n     */\n    function ImageDecoder(stream) {\n        /**\n         * Start of file markers.\n         * @hidden\n         * @private\n         */\n        this.sof1Marker = 0x00C1;\n        this.sof2Marker = 0x00C2;\n        this.sof3Marker = 0x00C3;\n        this.sof5Marker = 0x00C5;\n        this.sof6Marker = 0x00C6;\n        this.sof7Marker = 0x00C7;\n        this.sof9Marker = 0x00C9;\n        this.sof10Marker = 0x00CA;\n        this.sof11Marker = 0x00CB;\n        this.sof13Marker = 0x00CD;\n        this.sof14Marker = 0x00CE;\n        this.sof15Marker = 0x00CF;\n        /**\n         * Specifies `format` of image.\n         * @hidden\n         * @private\n         */\n        this.mFormat = ImageFormat.Unknown;\n        /**\n         * `Bits per component`.\n         * @default 8\n         * @hidden\n         * @private\n         */\n        this.mbitsPerComponent = 8;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.mStream = stream;\n        this.initialize();\n    }\n    Object.defineProperty(ImageDecoder.prototype, \"height\", {\n        /**\n         * Gets the `height` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"width\", {\n        /**\n         * Gets the `width` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"bitsPerComponent\", {\n        /**\n         * Gets `bits per component`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mbitsPerComponent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"size\", {\n        /**\n         * Gets the `size` of an image data.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageData\", {\n        /**\n         * Gets the value of an `image data`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageDataAsNumberArray\", {\n        /**\n         * Gets the value of an `image data as number array`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.internalBuffer.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Initialize` image data and image stream.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.initialize = function () {\n        if (this.mFormat === ImageFormat.Unknown && this.checkIfJpeg()) {\n            this.mFormat = ImageFormat.Jpeg;\n            this.parseJpegImage();\n        }\n        else {\n            throw new TypeError('Only the JPEG format is supported');\n        }\n        this.reset();\n        this.mImageData = new ByteArray(this.mStream.count);\n        this.mStream.read(this.mImageData, 0, this.mImageData.count);\n    };\n    /**\n     * `Reset` stream position into 0.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.reset = function () {\n        this.mStream.position = 0;\n    };\n    /**\n     * `Parse` Jpeg image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.parseJpegImage = function () {\n        this.reset();\n        var imgData = new ByteArray(this.mStream.count);\n        this.mStream.read(imgData, 0, imgData.count);\n        var i = 4;\n        var isLengthExceed = false;\n        /* tslint:disable */\n        var length = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n        while (i < imgData.count) {\n            i += length;\n            if (i < imgData.count) {\n                if (imgData.getBuffer(i + 1) === 192) {\n                    this.mHeight = imgData.getBuffer(i + 5) * 256 + imgData.getBuffer(i + 6);\n                    this.mWidth = imgData.getBuffer(i + 7) * 256 + imgData.getBuffer(i + 8);\n                    return;\n                }\n                else {\n                    i += 2;\n                    length = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n                }\n            }\n            else {\n                isLengthExceed = true;\n                break;\n            }\n        }\n        if (isLengthExceed) {\n            this.mStream.position = 0;\n            this.skip(this.mStream, 2);\n            this.readExceededJPGImage(this.mStream);\n        }\n        /* tslint:enable */\n    };\n    Object.defineProperty(ImageDecoder.prototype, \"format\", {\n        /**\n         * Gets the image `format`.\n         * @private\n         * @hidden\n         */\n        get: function () {\n            return this.mFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Checks if JPG`.\n     * @private\n     * @hidden\n     */\n    ImageDecoder.prototype.checkIfJpeg = function () {\n        this.reset();\n        for (var i = 0; i < ImageDecoder.mJpegHeader.length; i++) {\n            if (ImageDecoder.mJpegHeader[i] !== this.mStream.readByte(i)) {\n                return false;\n            }\n            this.mStream.position++;\n        }\n        return true;\n    };\n    /**\n     * Return image `dictionary`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getImageDictionary = function () {\n        if (this.mFormat === ImageFormat.Jpeg) {\n            var tempArrayBuffer = this.imageData.internalBuffer.length;\n            this.imageStream = new PdfStream();\n            this.imageStream.isResource = true;\n            var tempString = '';\n            var decodedString = '';\n            for (var i = 0; i < this.imageDataAsNumberArray.byteLength; i++) {\n                tempString += String.fromCharCode(null, this.mStream.readByte(i));\n            }\n            for (var i = 0; i < tempString.length; i++) {\n                if (i % 2 !== 0) {\n                    decodedString += tempString[i];\n                }\n            }\n            this.imageStream.data = [decodedString];\n            this.imageStream.compress = false;\n            this.imageStream.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.xObject));\n            this.imageStream.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.image));\n            this.imageStream.items.setValue(this.dictionaryProperties.width, new PdfNumber(this.width));\n            this.imageStream.items.setValue(this.dictionaryProperties.height, new PdfNumber(this.height));\n            this.imageStream.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n            this.imageStream.items.setValue(this.dictionaryProperties.filter, new PdfName(this.dictionaryProperties.dctdecode));\n            this.imageStream.items.setValue(this.dictionaryProperties.colorSpace, new PdfName(this.getColorSpace()));\n            this.imageStream.items.setValue(this.dictionaryProperties.decodeParms, this.getDecodeParams());\n            return this.imageStream;\n        }\n        else {\n            return this.imageStream;\n        }\n    };\n    /**\n     * Return `colorSpace` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getColorSpace = function () {\n        return this.dictionaryProperties.deviceRgb;\n    };\n    /**\n     * Return `decode parameters` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getDecodeParams = function () {\n        var decodeParams = new PdfDictionary();\n        decodeParams.items.setValue(this.dictionaryProperties.columns, new PdfNumber(this.width));\n        decodeParams.items.setValue(this.dictionaryProperties.blackIs1, new PdfBoolean(true));\n        decodeParams.items.setValue(this.dictionaryProperties.k, new PdfNumber(-1));\n        decodeParams.items.setValue(this.dictionaryProperties.predictor, new PdfNumber(15));\n        decodeParams.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n        return decodeParams;\n    };\n    /**\n     * 'readExceededJPGImage' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.readExceededJPGImage = function (stream) {\n        this.mStream = stream;\n        var isContinueReading = true;\n        while (isContinueReading) {\n            var marker = this.getMarker(stream);\n            switch (marker) {\n                case this.sof1Marker:\n                case this.sof2Marker:\n                case this.sof3Marker:\n                case this.sof5Marker:\n                case this.sof6Marker:\n                case this.sof7Marker:\n                case this.sof9Marker:\n                case this.sof10Marker:\n                case this.sof11Marker:\n                case this.sof13Marker:\n                case this.sof14Marker:\n                case this.sof15Marker:\n                    stream.position += 3;\n                    this.mHeight = this.mStream.readNextTwoBytes(stream);\n                    this.mWidth = this.mStream.readNextTwoBytes(stream);\n                    isContinueReading = false;\n                    break;\n                default:\n                    this.skipStream(stream);\n                    break;\n            }\n        }\n    };\n    /**\n     * 'skip' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.skip = function (stream, noOfBytes) {\n        this.mStream = stream;\n        var temp = new ByteArray(noOfBytes);\n        this.mStream.read(temp, 0, temp.count);\n    };\n    /**\n     * 'getMarker' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getMarker = function (stream) {\n        var skippedByte = 0;\n        var marker = 32;\n        marker = stream.readByte(this.mStream.position);\n        stream.position++;\n        while (marker !== 255) {\n            skippedByte++;\n            marker = stream.readByte(this.mStream.position);\n            stream.position++;\n        }\n        do {\n            marker = stream.readByte(this.mStream.position);\n            stream.position++;\n        } while (marker === 255);\n        return marker;\n    };\n    /**\n     * 'skipStream' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.skipStream = function (stream) {\n        var markerLength = this.mStream.readNextTwoBytes(stream) - 2;\n        if (markerLength > 0) {\n            stream.position += markerLength;\n        }\n    };\n    /**\n     * Number array for `png header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mPngHeader = [137, 80, 78, 71, 13, 10, 26, 10];\n    /**\n     * Number Array for `jpeg header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mJpegHeader = [255, 216];\n    /**\n     * Number array for `gif header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.GIF_HEADER = 'G,I,F,8';\n    /**\n     * Number array for `bmp header.`\n     * @hidden\n     * @private\n     */\n    ImageDecoder.BMP_HEADER = 'B,M';\n    return ImageDecoder;\n}());\nexport { ImageDecoder };\n","/**\n * Used to perform `convertion between pixels and points`.\n * @private\n */\nvar PdfUnitConverter = /** @class */ (function () {\n    //constructors\n    /**\n     * Initializes a new instance of the `UnitConvertor` class with DPI value.\n     * @private\n     */\n    function PdfUnitConverter(dpi) {\n        this.updateProportionsHelper(dpi);\n    }\n    /**\n     * `Converts` the value, from one graphics unit to another graphics unit.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertUnits = function (value, from, to) {\n        return this.convertFromPixels(this.convertToPixels(value, from), to);\n    };\n    /**\n     * Converts the value `to pixel` from specified graphics unit.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertToPixels = function (value, from) {\n        var index = from;\n        var result = (value * this.proportions[index]);\n        return result;\n    };\n    /**\n     * Converts value, to specified graphics unit `from Pixel`.\n     * @private\n     */\n    PdfUnitConverter.prototype.convertFromPixels = function (value, to) {\n        var index = to;\n        var result = (value / this.proportions[index]);\n        return result;\n    };\n    /**\n     * `Update proportions` matrix according to Graphics settings.\n     * @private\n     */\n    PdfUnitConverter.prototype.updateProportionsHelper = function (pixelPerInch) {\n        this.proportions = [\n            pixelPerInch / 2.54,\n            pixelPerInch / 6.0,\n            1,\n            pixelPerInch / 72.0,\n            pixelPerInch,\n            pixelPerInch / 300.0,\n            pixelPerInch / 25.4 // Millimeter\n        ];\n    };\n    //Fields\n    /**\n     * Indicates default `horizontal resolution`.\n     * @default 96\n     * @private\n     */\n    PdfUnitConverter.horizontalResolution = 96;\n    /**\n     * Indicates default `vertical resolution`.\n     * @default 96\n     * @private\n     */\n    PdfUnitConverter.verticalResolution = 96;\n    return PdfUnitConverter;\n}());\nexport { PdfUnitConverter };\n","import { SizeF } from './../../drawing/pdf-drawing';\nimport { PdfGraphicsUnit } from './../enum';\nimport { PdfUnitConverter } from './../unit-convertor';\n/**\n * `PdfImage` class represents the base class for images and provides functionality for the 'PdfBitmap' class.\n * @private\n */\nvar PdfImage = /** @class */ (function () {\n    function PdfImage() {\n    }\n    Object.defineProperty(PdfImage.prototype, \"width\", {\n        /**\n         * Gets and Sets the `width` of an image.\n         * @private\n         */\n        get: function () {\n            return this.imageWidth;\n        },\n        set: function (value) {\n            this.imageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"height\", {\n        /**\n         * Gets and Sets the `height` of an image.\n         * @private\n         */\n        get: function () {\n            return this.imageHeight;\n        },\n        set: function (value) {\n            this.imageHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"size\", {\n        /**\n         * Gets or sets the size of the image.\n         * @private\n         */\n        set: function (value) {\n            this.width = value.width;\n            this.height = value.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"physicalDimension\", {\n        /**\n         * Gets the `physical dimension` of an image.\n         * @private\n         */\n        get: function () {\n            this.imagePhysicalDimension = this.getPointSize(this.width, this.height, this.horizontalResolution, this.verticalResolution);\n            return new SizeF(this.width, this.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfImage.prototype, \"element\", {\n        // /**\n        //  * Gets the `image stream as string`.\n        //  * @private\n        //  */\n        // public static fromString(string : string) : PdfImage {\n        //     let image : PdfImage = new PdfBitmap(string);\n        //     return image;\n        // }\n        /**\n         * Gets the `element` image stream.\n         * @private\n         */\n        get: function () {\n            return this.imageStream;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfImage.prototype.getPointSize = function (width, height, horizontalResolution, verticalResolution) {\n        if (typeof horizontalResolution === 'undefined') {\n            var dpiX = PdfUnitConverter.horizontalResolution;\n            var dpiY = PdfUnitConverter.verticalResolution;\n            var size = this.getPointSize(width, height, dpiX, dpiY);\n            return size;\n        }\n        else {\n            var ucX = new PdfUnitConverter(horizontalResolution);\n            var ucY = new PdfUnitConverter(verticalResolution);\n            var ptWidth = ucX.convertUnits(width, PdfGraphicsUnit.Pixel, PdfGraphicsUnit.Point);\n            var ptHeight = ucY.convertUnits(height, PdfGraphicsUnit.Pixel, PdfGraphicsUnit.Point);\n            var size = new SizeF(ptWidth, ptHeight);\n            return size;\n        }\n    };\n    return PdfImage;\n}());\nexport { PdfImage };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfBitmap.ts class for EJ2-PDF\n */\nimport { ImageDecoder } from './../../graphics/images/image-decoder';\nimport { ByteArray } from './../../graphics/images/byte-array';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfImage } from './pdf-image';\n/**\n * The 'PdfBitmap' contains methods and properties to handle the Bitmap images.\n * ```typescript\n * // create a new PDF document.\n * let document : PdfDocument = new PdfDocument();\n * // add a page to the document.\n * let page1 : PdfPage = document.pages.add();\n * // base64 string of an image\n * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\n * // load the image from the base64 string of original image.\n * let image : PdfBitmap = new PdfBitmap(imageString);\n * // draw the image\n * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfBitmap = /** @class */ (function (_super) {\n    __extends(PdfBitmap, _super);\n    /**\n     * Create an instance for `PdfBitmap` class.\n     * @param encodedString Base64 string of an image.\n     * ```typescript\n     * // create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // add a page to the document.\n     * let page1 : PdfPage = document.pages.add();\n     * // base64 string of an image\n     * let imageString : string = '/9j/3+2w7em7HzY/KiijFw … 1OEYRUYrQ45yc5OUtz/9k=';\n     * //\n     * // load the image from the base64 string of original image.\n     * let image : PdfBitmap = new PdfBitmap(imageString);\n     * //\n     * // draw the image\n     * page1.graphics.drawImage(image, new RectangleF({x : 10, y : 10}, {width : 200, height : 200}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    function PdfBitmap(encodedString) {\n        var _this = _super.call(this) || this;\n        //Fields\n        /**\n         * Specifies the `status` of an image.\n         * @default true.\n         * @hidden\n         * @private\n         */\n        _this.imageStatus = true;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @hidden\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        _this.loadImage(encodedString);\n        return _this;\n    }\n    /**\n     * `Load image`.\n     * @hidden\n     * @private\n     */\n    PdfBitmap.prototype.loadImage = function (encodedString) {\n        var task = this.initializeAsync(encodedString);\n    };\n    /**\n     * `Initialize` image parameters.\n     * @private\n     */\n    PdfBitmap.prototype.initializeAsync = function (encodedString) {\n        var byteArray = new ByteArray(encodedString.length);\n        byteArray.writeFromBase64String(encodedString);\n        this.decoder = new ImageDecoder(byteArray);\n        this.height = this.decoder.height;\n        this.width = this.decoder.width;\n        // FrameCount = BitmapImageDecoder.FrameCount;\n        this.bitsPerComponent = this.decoder.bitsPerComponent;\n    };\n    /**\n     * `Saves` the image into stream.\n     * @private\n     */\n    PdfBitmap.prototype.save = function () {\n        this.imageStatus = true;\n        this.imageStream = this.decoder.getImageDictionary();\n    };\n    return PdfBitmap;\n}(PdfImage));\nexport { PdfBitmap };\n","/**\n * TtfTableInfo.ts class for EJ2-PDF\n */\nvar TtfTableInfo = /** @class */ (function () {\n    function TtfTableInfo() {\n    }\n    Object.defineProperty(TtfTableInfo.prototype, \"empty\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this table is empty.\n         * @private\n         */\n        get: function () {\n            var empty = (this.offset === this.length && this.length === this.checksum && this.checksum === 0);\n            return empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TtfTableInfo;\n}());\nexport { TtfTableInfo };\n","var TtfNameTable = /** @class */ (function () {\n    function TtfNameTable() {\n    }\n    return TtfNameTable;\n}());\nexport { TtfNameTable };\n","/**\n * TtfNameRecord.ts class for EJ2-PDF\n */\nvar TtfNameRecord = /** @class */ (function () {\n    function TtfNameRecord() {\n    }\n    return TtfNameRecord;\n}());\nexport { TtfNameRecord };\n","/**\n * TtfHeadTable.ts class for EJ2-PDF\n */\nvar TtfHeadTable = /** @class */ (function () {\n    function TtfHeadTable() {\n    }\n    return TtfHeadTable;\n}());\nexport { TtfHeadTable };\n","var TtfMetrics = /** @class */ (function () {\n    function TtfMetrics() {\n    }\n    Object.defineProperty(TtfMetrics.prototype, \"isItalic\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this instance is italic.\n         */\n        get: function () {\n            return ((this.macStyle & 2) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfMetrics.prototype, \"isBold\", {\n        /**\n         * Gets a value indicating whether this instance is bold.\n         */\n        get: function () {\n            return ((this.macStyle & 1) !== 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TtfMetrics;\n}());\nexport { TtfMetrics };\n","/**\n * TtfHorizontalHeaderTable.ts class for EJ2-PDF\n */\nvar TtfHorizontalHeaderTable = /** @class */ (function () {\n    function TtfHorizontalHeaderTable() {\n    }\n    return TtfHorizontalHeaderTable;\n}());\nexport { TtfHorizontalHeaderTable };\n","/**\n * TtfOS2Table.ts class for EJ2-PDF\n * The OS/2 table consists of a set of metrics that are required by Windows and OS/2.\n */\nvar TtfOS2Table = /** @class */ (function () {\n    function TtfOS2Table() {\n    }\n    return TtfOS2Table;\n}());\nexport { TtfOS2Table };\n","/**\n * TtfPostTable.ts class for EJ2-PDF\n */\nvar TtfPostTable = /** @class */ (function () {\n    function TtfPostTable() {\n    }\n    return TtfPostTable;\n}());\nexport { TtfPostTable };\n","/**\n * TtfLongHorMetric.ts class for EJ2-PDF\n */\nvar TtfLongHorMetric = /** @class */ (function () {\n    function TtfLongHorMetric() {\n    }\n    return TtfLongHorMetric;\n}());\nexport { TtfLongHorMetric };\n","/**\n * TtfCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfCmapSubTable = /** @class */ (function () {\n    function TtfCmapSubTable() {\n    }\n    return TtfCmapSubTable;\n}());\nexport { TtfCmapSubTable };\n","/**\n * TtfCmapTable.ts class for EJ2-PDF\n */\nvar TtfCmapTable = /** @class */ (function () {\n    function TtfCmapTable() {\n    }\n    return TtfCmapTable;\n}());\nexport { TtfCmapTable };\n","/**\n * TtfGlyphInfo.ts class for EJ2-PDF\n */\nvar TtfGlyphInfo = /** @class */ (function () {\n    function TtfGlyphInfo() {\n    }\n    Object.defineProperty(TtfGlyphInfo.prototype, \"empty\", {\n        //Properties\n        /**\n         * Gets a value indicating whether this TtfGlyphInfo is empty.\n         */\n        get: function () {\n            var empty = (this.index === this.width && this.width === this.charCode && this.charCode === 0);\n            return empty;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //IComparable implementation\n    /**\n     * Compares two WidthDescriptor objects.\n     */\n    TtfGlyphInfo.prototype.compareTo = function (obj) {\n        var glyph = obj;\n        return this.index - glyph.index;\n    };\n    return TtfGlyphInfo;\n}());\nexport { TtfGlyphInfo };\n","/**\n * TtfLocaTable.ts class for EJ2-PDF\n */\nvar TtfLocaTable = /** @class */ (function () {\n    function TtfLocaTable() {\n    }\n    return TtfLocaTable;\n}());\nexport { TtfLocaTable };\n","/**\n * TtfAppleCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfAppleCmapSubTable = /** @class */ (function () {\n    function TtfAppleCmapSubTable() {\n    }\n    return TtfAppleCmapSubTable;\n}());\nexport { TtfAppleCmapSubTable };\n","/**\n * TtfMicrosoftCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfMicrosoftCmapSubTable = /** @class */ (function () {\n    function TtfMicrosoftCmapSubTable() {\n    }\n    return TtfMicrosoftCmapSubTable;\n}());\nexport { TtfMicrosoftCmapSubTable };\n","/**\n * TtfTrimmedCmapSubTable.ts class for EJ2-PDF\n */\nvar TtfTrimmedCmapSubTable = /** @class */ (function () {\n    function TtfTrimmedCmapSubTable() {\n    }\n    return TtfTrimmedCmapSubTable;\n}());\nexport { TtfTrimmedCmapSubTable };\n","/**\n * TtfLocaTable.ts class for EJ2-PDF\n */\nvar TtfGlyphHeader = /** @class */ (function () {\n    function TtfGlyphHeader() {\n    }\n    return TtfGlyphHeader;\n}());\nexport { TtfGlyphHeader };\n","/**\n * Writes data in BigEndian order.\n */\nvar BigEndianWriter = /** @class */ (function () {\n    //Constructors\n    /**\n     * Creates a new writer.\n     */\n    function BigEndianWriter(capacity) {\n        //Constants\n        /**\n         * Size of Int32 type.\n         */\n        this.int32Size = 4;\n        /**\n         * Size of Int16 type.\n         */\n        this.int16Size = 2;\n        /**\n         * Size of long type.\n         */\n        this.int64Size = 8;\n        this.bufferLength = capacity;\n        this.buffer = [];\n    }\n    Object.defineProperty(BigEndianWriter.prototype, \"data\", {\n        //Properties\n        /**\n         * Gets data written to the writer.\n         */\n        get: function () {\n            if (this.buffer.length < this.bufferLength) {\n                var length_1 = this.bufferLength - this.buffer.length;\n                for (var i = 0; i < length_1; i++) {\n                    this.buffer.push(0);\n                }\n            }\n            return this.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BigEndianWriter.prototype, \"position\", {\n        /// <summary>\n        /// Gets position of the internal buffer.\n        /// </summary>\n        get: function () {\n            if (this.internalPosition === undefined || this.internalPosition === null) {\n                this.internalPosition = 0;\n            }\n            return this.internalPosition;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Writes short value.\n     */\n    BigEndianWriter.prototype.writeShort = function (value) {\n        var bytes = [((value & 0x0000ff00) >> 8), value & 0x000000ff];\n        this.flush(bytes);\n    };\n    /**\n     * Writes int value.\n     */\n    BigEndianWriter.prototype.writeInt = function (value) {\n        var i1 = (value & 0xff000000) >> 24;\n        i1 = i1 < 0 ? 256 + i1 : i1;\n        var i2 = (value & 0x00ff0000) >> 16;\n        i2 = i2 < 0 ? 256 + i2 : i2;\n        var i3 = (value & 0x0000ff00) >> 8;\n        i3 = i3 < 0 ? 256 + i3 : i3;\n        var i4 = value & 0x000000ff;\n        i4 = i4 < 0 ? 256 + i4 : i4;\n        var bytes = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this.flush(bytes);\n    };\n    /**\n     * Writes u int value.\n     */\n    BigEndianWriter.prototype.writeUInt = function (value) {\n        var buff = [(value & 0xff000000) >> 24, (value & 0x00ff0000) >> 16, (value & 0x0000ff00) >> 8, value & 0x000000ff];\n        this.flush(buff);\n    };\n    /**\n     * Writes string value.\n     */\n    BigEndianWriter.prototype.writeString = function (value) {\n        if (value == null) {\n            throw new Error('Argument Null Exception : value');\n        }\n        var bytes = [];\n        for (var i = 0; i < value.length; i++) {\n            bytes.push(value.charCodeAt(i));\n        }\n        this.flush(bytes);\n    };\n    /**\n     * Writes byte[] value.\n     */\n    BigEndianWriter.prototype.writeBytes = function (value) {\n        this.flush(value);\n    };\n    // //Implementation\n    BigEndianWriter.prototype.flush = function (buff) {\n        if (buff === null) {\n            throw new Error('Argument Null Exception : buff');\n        }\n        var position = this.position;\n        for (var i = 0; i < buff.length; i++) {\n            this.buffer[position] = buff[i];\n            position++;\n        }\n        this.internalPosition += buff.length;\n    };\n    return BigEndianWriter;\n}());\nexport { BigEndianWriter };\n","/**\n * TtfReader.ts class for EJ2-PDF\n */\nimport { TtfTableInfo } from './ttf-table-info';\nimport { Dictionary } from './../../collections/dictionary';\nimport { TtfNameTable } from './ttf-name-table';\nimport { TtfNameRecord } from './ttf-name-record';\nimport { TtfHeadTable } from './ttf-head-table';\nimport { TtfMetrics } from './ttf-metrics';\nimport { TtfHorizontalHeaderTable } from './ttf-horizontal-header-table';\nimport { TtfOS2Table } from './ttf-OS2-Table';\nimport { TtfPostTable } from './ttf-post-table';\nimport { TtfLongHorMetric } from './ttf-long-hor-metric';\nimport { TtfCmapSubTable } from './ttf-cmap-sub-table';\nimport { TtfCmapTable } from './ttf-cmap-table';\nimport { TtfGlyphInfo } from './ttf-glyph-info';\nimport { TtfLocaTable } from './ttf-loca-table';\nimport { TtfAppleCmapSubTable } from './ttf-apple-cmap-sub-table';\nimport { TtfMicrosoftCmapSubTable } from './ttf-microsoft-cmap-sub-table';\nimport { TtfTrimmedCmapSubTable } from './ttf-trimmed-cmap-sub-table';\nimport { TtfGlyphHeader } from './ttf-glyph-header';\nimport { Rectangle } from './../../drawing/pdf-drawing';\nimport { StringTokenizer } from './string-tokenizer';\nimport { TtfCmapFormat, TtfCmapEncoding, TtfPlatformID } from './enum';\nimport { TtfMicrosoftEncodingID, TtfMacintoshEncodingID, TtfCompositeGlyphFlags } from './enum';\nimport { BigEndianWriter } from './../../input-output/big-endian-writer';\nvar TtfReader = /** @class */ (function () {\n    //Constructors\n    function TtfReader(fontData) {\n        this.int32Size = 4;\n        this.isTtcFont = false;\n        this.isMacTtf = false;\n        this.metricsName = '';\n        this.isMacTTF = false;\n        this.missedGlyphs = 0;\n        this.tableNames = ['cvt ', 'fpgm', 'glyf', 'head', 'hhea', 'hmtx', 'loca', 'maxp', 'prep'];\n        this.entrySelectors = [0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4];\n        this._isOpenTypeFont = false;\n        this.fontData = fontData;\n        this.initialize();\n    }\n    Object.defineProperty(TtfReader.prototype, \"macintosh\", {\n        //Properties\n        /**\n         * Gets glyphs for Macintosh or Symbol fonts (char - key, glyph - value).\n         */\n        get: function () {\n            if (this.macintoshDictionary === null || this.macintoshDictionary === undefined) {\n                this.macintoshDictionary = new Dictionary();\n            }\n            return this.macintoshDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"microsoft\", {\n        /**\n         * Gets glyphs for Microsoft or Symbol fonts (char - key, glyph - value).\n         */\n        get: function () {\n            if (this.microsoftDictionary === null || this.microsoftDictionary === undefined) {\n                this.microsoftDictionary = new Dictionary();\n            }\n            return this.microsoftDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"macintoshGlyphs\", {\n        /**\n         * Gets glyphs for Macintosh or Symbol fonts (glyph index - key, glyph - value).\n         */\n        get: function () {\n            if (this.internalMacintoshGlyphs === null || this.internalMacintoshGlyphs === undefined) {\n                this.internalMacintoshGlyphs = new Dictionary();\n            }\n            return this.internalMacintoshGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TtfReader.prototype, \"microsoftGlyphs\", {\n        /**\n         * Gets glyphs for Microsoft Unicode fonts (glyph index - key, glyph - value).\n         */\n        get: function () {\n            if (this.internalMicrosoftGlyphs === null || this.internalMicrosoftGlyphs === undefined) {\n                this.internalMicrosoftGlyphs = new Dictionary();\n            }\n            return this.internalMicrosoftGlyphs;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    TtfReader.prototype.initialize = function () {\n        if (this.metrics === undefined) {\n            this.metrics = new TtfMetrics();\n        }\n        this.readFontDictionary();\n        var nameTable = this.readNameTable();\n        var headTable = this.readHeadTable();\n        this.initializeFontName(nameTable);\n        this.metrics.macStyle = headTable.macStyle;\n    };\n    TtfReader.prototype.readFontDictionary = function () {\n        this.offset = 0;\n        var version = this.checkPreambula();\n        //this.offset += 4;\n        var numTables = this.readInt16(this.offset);\n        var searchRange = this.readInt16(this.offset);\n        var entrySelector = this.readInt16(this.offset);\n        var rangeShift = this.readInt16(this.offset);\n        if (this.tableDirectory === undefined) {\n            this.tableDirectory = new Dictionary();\n        }\n        for (var i = 0; i < numTables; ++i) {\n            var table = new TtfTableInfo();\n            var tableKey = this.readString(this.int32Size);\n            table.checksum = this.readInt32(this.offset);\n            table.offset = this.readInt32(this.offset);\n            table.length = this.readInt32(this.offset);\n            this.tableDirectory.setValue(tableKey, table);\n        }\n        this.lowestPosition = this.offset;\n        if (!this.isTtcFont) {\n            this.fixOffsets();\n        }\n    };\n    TtfReader.prototype.fixOffsets = function () {\n        var minOffset = Number.MAX_VALUE;\n        // Search for a smallest offset and compare it with the lowest position found.\n        var tableKeys = this.tableDirectory.keys();\n        for (var i = 0; i < tableKeys.length; i++) {\n            var value = this.tableDirectory.getValue(tableKeys[i]);\n            var offset = value.offset;\n            if (minOffset > offset) {\n                minOffset = offset;\n                if (minOffset <= this.lowestPosition) {\n                    break;\n                }\n            }\n        }\n        var shift = minOffset - this.lowestPosition;\n        if (shift !== 0) {\n            var table = new Dictionary();\n            for (var i = 0; i < tableKeys.length; i++) {\n                var value = this.tableDirectory.getValue(tableKeys[i]);\n                value.offset -= shift;\n                table.setValue(tableKeys[i], value);\n            }\n            this.tableDirectory = table;\n        }\n    };\n    TtfReader.prototype.checkPreambula = function () {\n        var version = this.readInt32(this.offset);\n        this.isMacTtf = (version === 0x74727565) ? true : false;\n        if (version !== 0x10000 && version !== 0x74727565 && version !== 0x4f54544f) {\n            this.isTtcFont = true;\n            this.offset = 0;\n            var fontTag = this.readString(4);\n            if (fontTag !== 'ttcf') {\n                throw new Error('Can not read TTF font data');\n            }\n            //skip 4\n            this.offset += 4;\n            var ttcIdentificationNumber = this.readInt32(this.offset);\n            if (ttcIdentificationNumber < 0) {\n                throw new Error('Can not read TTF font data');\n            }\n            this.offset = this.readInt32(this.offset);\n            version = this.readInt32(this.offset);\n        }\n        if (version === 0x4f54544f) {\n            this._isOpenTypeFont = true;\n        }\n        return version;\n    };\n    TtfReader.prototype.readNameTable = function () {\n        var tableInfo = this.getTable('name');\n        this.offset = tableInfo.offset;\n        var table = new TtfNameTable();\n        table.formatSelector = this.readUInt16(this.offset);\n        table.recordsCount = this.readUInt16(this.offset);\n        table.offset = this.readUInt16(this.offset);\n        table.nameRecords = [];\n        var recordSize = 12;\n        var position = this.offset;\n        for (var i = 0; i < table.recordsCount; i++) {\n            this.offset = position;\n            var record = new TtfNameRecord();\n            record.platformID = this.readUInt16(this.offset);\n            record.encodingID = this.readUInt16(this.offset);\n            record.languageID = this.readUInt16(this.offset);\n            record.nameID = this.readUInt16(this.offset);\n            record.length = this.readUInt16(this.offset);\n            record.offset = this.readUInt16(this.offset);\n            this.offset = tableInfo.offset + table.offset + record.offset;\n            var unicode = (record.platformID === 0 || record.platformID === 3);\n            record.name = this.readString(record.length, unicode);\n            table.nameRecords[i] = record;\n            position += recordSize;\n        }\n        return table;\n    };\n    TtfReader.prototype.readHeadTable = function () {\n        var tableInfo = this.getTable('head');\n        this.offset = tableInfo.offset;\n        var table = new TtfHeadTable();\n        table.version = this.readFixed(this.offset);\n        table.fontRevision = this.readFixed(this.offset);\n        table.checkSumAdjustment = this.readUInt32(this.offset);\n        table.magicNumber = this.readUInt32(this.offset);\n        table.flags = this.readUInt16(this.offset);\n        table.unitsPerEm = this.readUInt16(this.offset);\n        table.created = this.readInt64(this.offset);\n        table.modified = this.readInt64(this.offset);\n        table.xMin = this.readInt16(this.offset);\n        table.yMin = this.readInt16(this.offset);\n        table.xMax = this.readInt16(this.offset);\n        table.yMax = this.readInt16(this.offset);\n        table.macStyle = this.readUInt16(this.offset);\n        table.lowestReadableSize = this.readUInt16(this.offset);\n        table.fontDirectionHint = this.readInt16(this.offset);\n        table.indexToLocalFormat = this.readInt16(this.offset);\n        table.glyphDataFormat = this.readInt16(this.offset);\n        return table;\n    };\n    TtfReader.prototype.readHorizontalHeaderTable = function () {\n        var tableInfo = this.getTable('hhea');\n        this.offset = tableInfo.offset;\n        var table = new TtfHorizontalHeaderTable();\n        table.version = this.readFixed(this.offset);\n        table.ascender = this.readInt16(this.offset);\n        table.descender = this.readInt16(this.offset);\n        table.lineGap = this.readInt16(this.offset);\n        table.advanceWidthMax = this.readUInt16(this.offset);\n        table.minLeftSideBearing = this.readInt16(this.offset);\n        table.minRightSideBearing = this.readInt16(this.offset);\n        table.xMaxExtent = this.readInt16(this.offset);\n        table.caretSlopeRise = this.readInt16(this.offset);\n        table.caretSlopeRun = this.readInt16(this.offset);\n        //skip 2 * 5\n        this.offset += 10;\n        table.metricDataFormat = this.readInt16(this.offset);\n        table.numberOfHMetrics = this.readUInt16(this.offset);\n        return table;\n    };\n    TtfReader.prototype.readOS2Table = function () {\n        var tableInfo = this.getTable('OS/2');\n        this.offset = tableInfo.offset;\n        var table = new TtfOS2Table();\n        table.version = this.readUInt16(this.offset);\n        table.xAvgCharWidth = this.readInt16(this.offset);\n        table.usWeightClass = this.readUInt16(this.offset);\n        table.usWidthClass = this.readUInt16(this.offset);\n        table.fsType = this.readInt16(this.offset);\n        table.ySubscriptXSize = this.readInt16(this.offset);\n        table.ySubscriptYSize = this.readInt16(this.offset);\n        table.ySubscriptXOffset = this.readInt16(this.offset);\n        table.ySubscriptYOffset = this.readInt16(this.offset);\n        table.ySuperscriptXSize = this.readInt16(this.offset);\n        table.ySuperscriptYSize = this.readInt16(this.offset);\n        table.ySuperscriptXOffset = this.readInt16(this.offset);\n        table.ySuperscriptYOffset = this.readInt16(this.offset);\n        table.yStrikeoutSize = this.readInt16(this.offset);\n        table.yStrikeoutPosition = this.readInt16(this.offset);\n        table.sFamilyClass = this.readInt16(this.offset);\n        table.panose = this.readBytes(10);\n        table.ulUnicodeRange1 = this.readUInt32(this.offset);\n        table.ulUnicodeRange2 = this.readUInt32(this.offset);\n        table.ulUnicodeRange3 = this.readUInt32(this.offset);\n        table.ulUnicodeRange4 = this.readUInt32(this.offset);\n        table.vendorIdentifier = this.readBytes(4);\n        table.fsSelection = this.readUInt16(this.offset);\n        table.usFirstCharIndex = this.readUInt16(this.offset);\n        table.usLastCharIndex = this.readUInt16(this.offset);\n        table.sTypoAscender = this.readInt16(this.offset);\n        table.sTypoDescender = this.readInt16(this.offset);\n        table.sTypoLineGap = this.readInt16(this.offset);\n        table.usWinAscent = this.readUInt16(this.offset);\n        table.usWinDescent = this.readUInt16(this.offset);\n        table.ulCodePageRange1 = this.readUInt32(this.offset);\n        table.ulCodePageRange2 = this.readUInt32(this.offset);\n        if (table.version > 1) {\n            table.sxHeight = this.readInt16(this.offset);\n            table.sCapHeight = this.readInt16(this.offset);\n            table.usDefaultChar = this.readUInt16(this.offset);\n            table.usBreakChar = this.readUInt16(this.offset);\n            table.usMaxContext = this.readUInt16(this.offset);\n        }\n        else {\n            table.sxHeight = 0;\n            table.sCapHeight = 0;\n            table.usDefaultChar = 0;\n            table.usBreakChar = 0;\n            table.usMaxContext = 0;\n        }\n        return table;\n    };\n    TtfReader.prototype.readPostTable = function () {\n        var tableInfo = this.getTable('post');\n        this.offset = tableInfo.offset;\n        var table = new TtfPostTable();\n        table.formatType = this.readFixed(this.offset);\n        table.italicAngle = this.readFixed(this.offset);\n        table.underlinePosition = this.readInt16(this.offset);\n        table.underlineThickness = this.readInt16(this.offset);\n        table.isFixedPitch = this.readUInt32(this.offset);\n        table.minType42 = this.readUInt32(this.offset);\n        table.maxType42 = this.readUInt32(this.offset);\n        table.minType1 = this.readUInt32(this.offset);\n        table.maxType1 = this.readUInt32(this.offset);\n        return table;\n    };\n    /**\n     * Reads Width of the glyphs.\n     */\n    TtfReader.prototype.readWidthTable = function (glyphCount, unitsPerEm) {\n        var tableInfo = this.getTable('hmtx');\n        this.offset = tableInfo.offset;\n        var width = [];\n        for (var i = 0; i < glyphCount; i++) {\n            var glyph = new TtfLongHorMetric();\n            glyph.advanceWidth = this.readUInt16(this.offset);\n            glyph.lsb = this.readInt16(this.offset);\n            var glyphWidth = glyph.advanceWidth * 1000 / unitsPerEm;\n            width.push(Math.floor(glyphWidth));\n        }\n        return width;\n    };\n    /**\n     * Reads the cmap table.\n     */\n    TtfReader.prototype.readCmapTable = function () {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset;\n        var table = new TtfCmapTable();\n        table.version = this.readUInt16(this.offset);\n        table.tablesCount = this.readUInt16(this.offset);\n        var position = this.offset;\n        var subTables = [];\n        for (var i = 0; i < table.tablesCount; i++) {\n            this.offset = position;\n            var subTable = new TtfCmapSubTable();\n            subTable.platformID = this.readUInt16(this.offset);\n            subTable.encodingID = this.readUInt16(this.offset);\n            subTable.offset = this.readUInt32(this.offset);\n            position = this.offset;\n            this.readCmapSubTable(subTable);\n            subTables[i] = subTable;\n        }\n        return subTables;\n    };\n    /**\n     * Reads the cmap sub table.\n     */\n    TtfReader.prototype.readCmapSubTable = function (subTable) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var format = this.readUInt16(this.offset);\n        var encoding = this.getCmapEncoding(subTable.platformID, subTable.encodingID);\n        var platform = (encoding === TtfCmapEncoding.Macintosh) ? TtfPlatformID.Macintosh : TtfPlatformID.Microsoft;\n        if (encoding !== TtfCmapEncoding.Unknown) {\n            switch (format) {\n                case TtfCmapFormat.Apple:\n                    this.readAppleCmapTable(subTable, encoding);\n                    break;\n                case TtfCmapFormat.Microsoft:\n                    this.readMicrosoftCmapTable(subTable, encoding);\n                    break;\n                case TtfCmapFormat.Trimmed:\n                    this.readTrimmedCmapTable(subTable, encoding);\n                    break;\n            }\n        }\n    };\n    /**\n     * Reads Symbol cmap table.\n     */\n    TtfReader.prototype.readAppleCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var table = new TtfAppleCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        if (this.maxMacIndex === null || this.maxMacIndex === undefined) {\n            this.maxMacIndex = 0;\n        }\n        for (var i = 0; i < 256; ++i) {\n            var glyphInfo = new TtfGlyphInfo();\n            glyphInfo.index = this.readByte(this.offset);\n            glyphInfo.width = this.getWidth(glyphInfo.index);\n            glyphInfo.charCode = i;\n            this.macintosh.setValue(i, glyphInfo);\n            this.addGlyph(glyphInfo, encoding);\n            // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n            this.maxMacIndex = Math.max(i, this.maxMacIndex);\n        }\n    };\n    /**\n     * Reads Symbol cmap table.\n     */\n    TtfReader.prototype.readMicrosoftCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var collection = (encoding === TtfCmapEncoding.Unicode) ? this.microsoft : this.macintosh;\n        var table = new TtfMicrosoftCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        table.segCountX2 = this.readUInt16(this.offset);\n        table.searchRange = this.readUInt16(this.offset);\n        table.entrySelector = this.readUInt16(this.offset);\n        table.rangeShift = this.readUInt16(this.offset);\n        var segCount = table.segCountX2 / 2;\n        table.endCount = this.readUshortArray(segCount);\n        table.reservedPad = this.readUInt16(this.offset);\n        table.startCount = this.readUshortArray(segCount);\n        table.idDelta = this.readUshortArray(segCount);\n        table.idRangeOffset = this.readUshortArray(segCount);\n        var length = (table.length / 2 - 8) - (segCount * 4);\n        table.glyphID = this.readUshortArray(length);\n        // Process glyphIdArray array.\n        var codeOffset = 0;\n        var index = 0;\n        for (var j = 0; j < segCount; j++) {\n            for (var k = table.startCount[j]; k <= table.endCount[j] && k !== 65535; k++) {\n                if (table.idRangeOffset[j] === 0) {\n                    codeOffset = (k + table.idDelta[j]) & 65535;\n                }\n                else {\n                    index = j + table.idRangeOffset[j] / 2 - segCount + k - table.startCount[j];\n                    if (index >= table.glyphID.length) {\n                        continue;\n                    }\n                    codeOffset = (table.glyphID[index] + table.idDelta[j]) & 65535;\n                }\n                var glyph = new TtfGlyphInfo();\n                glyph.index = codeOffset;\n                glyph.width = this.getWidth(glyph.index);\n                var id = (encoding === TtfCmapEncoding.Symbol) ? ((k & 0xff00) === 0xf000 ? k & 0xff : k) : k;\n                glyph.charCode = id;\n                collection.setValue(id, glyph);\n                this.addGlyph(glyph, encoding);\n            }\n        }\n    };\n    /**\n     * Reads Trimed cmap table.\n     */\n    TtfReader.prototype.readTrimmedCmapTable = function (subTable, encoding) {\n        var tableInfo = this.getTable('cmap');\n        this.offset = tableInfo.offset + subTable.offset;\n        var table = new TtfTrimmedCmapSubTable();\n        table.format = this.readUInt16(this.offset);\n        table.length = this.readUInt16(this.offset);\n        table.version = this.readUInt16(this.offset);\n        table.firstCode = this.readUInt16(this.offset);\n        table.entryCount = this.readUInt16(this.offset);\n        for (var i = 0; i < table.entryCount; ++i) {\n            var glyphInfo = new TtfGlyphInfo();\n            glyphInfo.index = this.readUInt16(this.offset);\n            glyphInfo.width = this.getWidth(glyphInfo.index);\n            glyphInfo.charCode = i + table.firstCode;\n            this.macintosh.setValue(i, glyphInfo);\n            this.addGlyph(glyphInfo, encoding);\n            // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n            this.maxMacIndex = Math.max(i, this.maxMacIndex);\n        }\n    };\n    TtfReader.prototype.initializeFontName = function (nameTable) {\n        for (var i = 0; i < nameTable.recordsCount; i++) {\n            var record = nameTable.nameRecords[i];\n            if (record.nameID === 1) {\n                //font family\n                this.metrics.fontFamily = record.name;\n            }\n            else if (record.nameID === 6) {\n                //post script name\n                this.metrics.postScriptName = record.name;\n            }\n            /* tslint:disable */\n            if (this.metrics.fontFamily !== null && this.metrics.fontFamily !== undefined && this.metrics.postScriptName !== null && this.metrics.postScriptName !== undefined) {\n                break;\n            }\n            /* tslint:disable */\n        }\n    };\n    TtfReader.prototype.getTable = function (name) {\n        // if (name === null) {\n        //     throw new Error('Argument Null Exception : name');\n        // }\n        var table = new TtfTableInfo();\n        var obj;\n        if (this.tableDirectory.containsKey(name)) {\n            obj = this.tableDirectory.getValue(name);\n        }\n        if (obj !== null && obj !== undefined) {\n            table = obj;\n        }\n        return table;\n    };\n    /**\n     * Returns width of the glyph.\n     */\n    TtfReader.prototype.getWidth = function (glyphCode) {\n        glyphCode = (glyphCode < this.width.length) ? glyphCode : this.width.length - 1;\n        return this.width[glyphCode];\n    };\n    /**\n     * Gets CMAP encoding based on platform ID and encoding ID.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.getCmapEncoding = function (platformID, encodingID) {\n        var format = TtfCmapEncoding.Unknown;\n        if (platformID == TtfPlatformID.Microsoft && encodingID == TtfMicrosoftEncodingID.Undefined) {\n            // When building a symbol font for Windows,\n            // the platform ID should be 3 and the encoding ID should be 0.\n            format = TtfCmapEncoding.Symbol;\n        }\n        else if (platformID == TtfPlatformID.Microsoft && encodingID == TtfMicrosoftEncodingID.Unicode) {\n            // When building a Unicode font for Windows,\n            // the platform ID should be 3 and the encoding ID should be 1.\n            format = TtfCmapEncoding.Unicode;\n        }\n        else if (platformID == TtfPlatformID.Macintosh && encodingID == TtfMacintoshEncodingID.Roman) {\n            // When building a font that will be used on the Macintosh,\n            // the platform ID should be 1 and the encoding ID should be 0.\n            format = TtfCmapEncoding.Macintosh;\n        }\n        return format;\n    };\n    /* tslint:enable */\n    /**\n     * Adds glyph to the collection.\n     */\n    TtfReader.prototype.addGlyph = function (glyph, encoding) {\n        var collection = null;\n        switch (encoding) {\n            case TtfCmapEncoding.Unicode:\n                collection = this.microsoftGlyphs;\n                break;\n            case TtfCmapEncoding.Macintosh:\n            case TtfCmapEncoding.Symbol:\n                collection = this.macintoshGlyphs;\n                break;\n        }\n        collection.setValue(glyph.index, glyph);\n    };\n    /**\n     * Initializes metrics.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.initializeMetrics = function (nameTable, headTable, horizontalHeadTable, os2Table, postTable, cmapTables) {\n        /* tslint:enable */\n        // if (cmapTables === null) {\n        //     throw new Error('ArgumentNullException : cmapTables');\n        // }\n        this.initializeFontName(nameTable);\n        // Get font encoding.\n        var bSymbol = false;\n        for (var i = 0; i < cmapTables.length; i++) {\n            var subTable = cmapTables[i];\n            var encoding = this.getCmapEncoding(subTable.platformID, subTable.encodingID);\n            if (encoding === TtfCmapEncoding.Symbol) {\n                bSymbol = true;\n                break;\n            }\n        }\n        this.metrics.isSymbol = bSymbol;\n        this.metrics.macStyle = headTable.macStyle;\n        this.metrics.isFixedPitch = (postTable.isFixedPitch !== 0);\n        this.metrics.italicAngle = postTable.italicAngle;\n        var factor = 1000 / headTable.unitsPerEm;\n        this.metrics.winAscent = os2Table.sTypoAscender * factor;\n        this.metrics.macAscent = horizontalHeadTable.ascender * factor;\n        //m_metrics.MacAscent = os2Table.UsWinAscent * factor;\n        // NOTE: This is stange workaround. The value is good if os2Table.SCapHeight != 0, otherwise it should be properly computed.\n        this.metrics.capHeight = (os2Table.sCapHeight !== 0) ? os2Table.sCapHeight : 0.7 * headTable.unitsPerEm * factor;\n        this.metrics.winDescent = os2Table.sTypoDescender * factor;\n        this.metrics.macDescent = horizontalHeadTable.descender * factor;\n        //m_metrics.MacDescent = -os2Table.UsWinDescent * factor;\n        this.metrics.leading = (os2Table.sTypoAscender - os2Table.sTypoDescender + os2Table.sTypoLineGap) * factor;\n        this.metrics.lineGap = Math.ceil(horizontalHeadTable.lineGap * factor);\n        var left = headTable.xMin * factor;\n        var top = Math.ceil(this.metrics.macAscent + this.metrics.lineGap);\n        var right = headTable.xMax * factor;\n        var bottom = this.metrics.macDescent;\n        this.metrics.fontBox = new Rectangle(left, top, right, bottom);\n        // NOTE: Strange!\n        this.metrics.stemV = 80;\n        this.metrics.widthTable = this.updateWidth();\n        this.metrics.contains = this.tableDirectory.containsKey('CFF ');\n        this.metrics.subScriptSizeFactor = headTable.unitsPerEm / os2Table.ySubscriptYSize;\n        this.metrics.superscriptSizeFactor = headTable.unitsPerEm / os2Table.ySuperscriptYSize;\n    };\n    /**\n     * Updates chars structure which is used in the case of ansi encoding (256 bytes).\n     */\n    TtfReader.prototype.updateWidth = function () {\n        var count = 256;\n        var bytes = [];\n        if (this.metrics.isSymbol) {\n            for (var i = 0; i < count; i++) {\n                var glyphInfo = this.getGlyph(String.fromCharCode(i));\n                bytes[i] = (glyphInfo.empty) ? 0 : glyphInfo.width;\n            }\n        }\n        else {\n            var byteToProcess = [];\n            var unknown = '?';\n            var space = String.fromCharCode(32);\n            for (var i = 0; i < count; i++) {\n                byteToProcess[0] = i;\n                var text = this.getString(byteToProcess, 0, byteToProcess.length);\n                var ch = (text.length > 0) ? text[0] : unknown;\n                var glyphInfo = this.getGlyph(ch);\n                if (!glyphInfo.empty) {\n                    bytes[i] = glyphInfo.width;\n                }\n                else {\n                    glyphInfo = this.getGlyph(space);\n                    bytes[i] = (glyphInfo.empty) ? 0 : glyphInfo.width;\n                }\n            }\n        }\n        return bytes;\n    };\n    /**\n     * Returns default glyph.\n     */\n    TtfReader.prototype.getDefaultGlyph = function () {\n        var glyph = this.getGlyph(StringTokenizer.whiteSpace);\n        return glyph;\n    };\n    /**\n     * Reads unicode string from byte array.\n     */\n    TtfReader.prototype.getString = function (byteToProcess, start, length) {\n        var result = '';\n        for (var index = 0; index < length; index++) {\n            result += String.fromCharCode(byteToProcess[index + start]);\n        }\n        return result;\n    };\n    /**\n     * Reads loca table.\n     */\n    TtfReader.prototype.readLocaTable = function (bShort) {\n        var tableInfo = this.getTable('loca');\n        this.offset = tableInfo.offset;\n        var table = new TtfLocaTable();\n        var buffer = null;\n        if (bShort) {\n            var len = tableInfo.length / 2;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[i] = this.readUInt16(this.offset) * 2;\n            }\n        }\n        else {\n            var len = tableInfo.length / 4;\n            buffer = [];\n            for (var i = 0; i < len; i++) {\n                buffer[i] = this.readUInt32(this.offset);\n            }\n        }\n        table.offsets = buffer;\n        return table;\n    };\n    /**\n     * Updates hash table of used glyphs.\n     */\n    TtfReader.prototype.updateGlyphChars = function (glyphChars, locaTable) {\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        // Add zero key.\n        if (!glyphChars.containsKey(0)) {\n            glyphChars.setValue(0, 0);\n        }\n        var clone = new Dictionary();\n        var glyphCharKeys = glyphChars.keys();\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            clone.setValue(glyphCharKeys[i], glyphChars.getValue(glyphCharKeys[i]));\n        }\n        for (var i = 0; i < glyphCharKeys.length; i++) {\n            var nextKey = glyphCharKeys[i];\n            this.processCompositeGlyph(glyphChars, nextKey, locaTable);\n        }\n    };\n    /**\n     * Checks if glyph is composite or not.\n     */\n    TtfReader.prototype.processCompositeGlyph = function (glyphChars, glyph, locaTable) {\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        // Is in range.\n        if (glyph < locaTable.offsets.length - 1) {\n            var glyphOffset = locaTable.offsets[glyph];\n            if (glyphOffset !== locaTable.offsets[glyph + 1]) {\n                var tableInfo = this.getTable('glyf');\n                this.offset = tableInfo.offset + glyphOffset;\n                var glyphHeader = new TtfGlyphHeader();\n                glyphHeader.numberOfContours = this.readInt16(this.offset);\n                glyphHeader.xMin = this.readInt16(this.offset);\n                glyphHeader.yMin = this.readInt16(this.offset);\n                glyphHeader.xMax = this.readInt16(this.offset);\n                glyphHeader.yMax = this.readInt16(this.offset);\n                // Glyph is composite.\n                if (glyphHeader.numberOfContours < 0) {\n                    var skipBytes = 0;\n                    var entry = true;\n                    while (entry) {\n                        var flags = this.readUInt16(this.offset);\n                        var glyphIndex = this.readUInt16(this.offset);\n                        if (!glyphChars.containsKey(glyphIndex)) {\n                            glyphChars.setValue(glyphIndex, 0);\n                        }\n                        if ((flags & TtfCompositeGlyphFlags.MoreComponents) === 0) {\n                            break;\n                        }\n                        skipBytes = ((flags & TtfCompositeGlyphFlags.Arg1And2AreWords) !== 0) ? 4 : 2;\n                        if ((flags & TtfCompositeGlyphFlags.WeHaveScale) !== 0) {\n                            skipBytes += 2;\n                        }\n                        else if ((flags & TtfCompositeGlyphFlags.WeHaveAnXyScale) !== 0) {\n                            skipBytes += 4;\n                        }\n                        else if ((flags & TtfCompositeGlyphFlags.WeHaveTwoByTwo) !== 0) {\n                            skipBytes += 2 * 4;\n                        }\n                        this.offset += skipBytes;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Creates new glyph tables based on chars that are used for output.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.generateGlyphTable = function (glyphChars, locaTable, newLocaTable, newGlyphTable) {\n        /* tslint:enable */\n        // if (glyphChars === null) {\n        //     throw new Error('Argument Null Exception : glyphChars');\n        // }\n        newLocaTable = [];\n        // Sorting used glyphs keys.\n        var activeGlyphs = glyphChars.keys();\n        activeGlyphs.sort(function (a, b) { return a - b; });\n        var glyphSize = 0;\n        for (var i = 0; i < activeGlyphs.length; i++) {\n            var glyphIndex = activeGlyphs[i];\n            if (locaTable.offsets.length > 0) {\n                glyphSize += locaTable.offsets[glyphIndex + 1] - locaTable.offsets[glyphIndex];\n            }\n        }\n        var glyphSizeAligned = this.align(glyphSize);\n        newGlyphTable = [];\n        for (var i = 0; i < glyphSizeAligned; i++) {\n            newGlyphTable.push(0);\n        }\n        var nextGlyphOffset = 0;\n        var nextGlyphIndex = 0;\n        var table = this.getTable('glyf');\n        // Creating NewLocaTable - that would hold offsets for filtered glyphs.\n        for (var i = 0; i < locaTable.offsets.length; i++) {\n            newLocaTable.push(nextGlyphOffset);\n            if (nextGlyphIndex < activeGlyphs.length && activeGlyphs[nextGlyphIndex] === i) {\n                ++nextGlyphIndex;\n                newLocaTable[i] = nextGlyphOffset;\n                var oldGlyphOffset = locaTable.offsets[i];\n                var oldNextGlyphOffset = locaTable.offsets[i + 1] - oldGlyphOffset;\n                if (oldNextGlyphOffset > 0) {\n                    this.offset = table.offset + oldGlyphOffset;\n                    var result = this.read(newGlyphTable, nextGlyphOffset, oldNextGlyphOffset);\n                    newGlyphTable = result.buffer;\n                    nextGlyphOffset += oldNextGlyphOffset;\n                }\n            }\n        }\n        return { glyphTableSize: glyphSize, newLocaTable: newLocaTable, newGlyphTable: newGlyphTable };\n    };\n    /**\n     * Updates new Loca table.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.updateLocaTable = function (newLocaTable, bLocaIsShort, newLocaTableOut) {\n        /* tslint:enable */\n        if (newLocaTable === null) {\n            throw new Error('Argument Null Exception : newLocaTable');\n        }\n        var size = (bLocaIsShort) ? newLocaTable.length * 2 : newLocaTable.length * 4;\n        var count = this.align(size);\n        //BigEndianWiter\n        var writer = new BigEndianWriter(count);\n        for (var i = 0; i < newLocaTable.length; i++) {\n            var value = newLocaTable[i];\n            if (bLocaIsShort) {\n                value /= 2;\n                writer.writeShort(value);\n            }\n            else {\n                writer.writeInt(value);\n            }\n        }\n        return { newLocaUpdated: writer.data, newLocaSize: size };\n    };\n    /**\n     * Aligns number to be divisible on 4.\n     */\n    TtfReader.prototype.align = function (value) {\n        return (value + 3) & (~3);\n    };\n    /**\n     * Returns font program data.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.getFontProgram = function (newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        /* tslint:enable */\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        var result = this.getFontProgramLength(newLocaTableOut, newGlyphTable, 0);\n        var fontProgramLength = result.fontProgramLength;\n        var numTables = result.numTables;\n        var writer = new BigEndianWriter(fontProgramLength);\n        writer.writeInt(0x10000);\n        writer.writeShort(numTables);\n        var entrySelector = this.entrySelectors[numTables];\n        writer.writeShort((1 << (entrySelector & 31)) * 16);\n        writer.writeShort(entrySelector);\n        writer.writeShort((numTables - (1 << (entrySelector & 31))) * 16);\n        // Writing to destination buffer - checksums && sizes of used tables.\n        this.writeCheckSums(writer, numTables, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize);\n        // // Writing to destination buffer - used glyphs.\n        this.writeGlyphs(writer, newLocaTableOut, newGlyphTable);\n        return writer.data;\n    };\n    /* tslint:disable */\n    TtfReader.prototype.getFontProgramLength = function (newLocaTableOut, newGlyphTable, numTables) {\n        /* tslint:enable */\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        // glyf and loca are used by default;\n        numTables = 2;\n        var tableNames = this.tableNames;\n        var fontProgramLength = 0;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            if (tableName !== 'glyf' && tableName !== 'loca') {\n                var table = this.getTable(tableName);\n                if (!table.empty) {\n                    ++numTables;\n                    fontProgramLength += this.align(table.length);\n                }\n            }\n        }\n        fontProgramLength += newLocaTableOut.length;\n        fontProgramLength += newGlyphTable.length;\n        var usedTablesSize = numTables * 16 + (3 * 4);\n        fontProgramLength += usedTablesSize;\n        return { fontProgramLength: fontProgramLength, numTables: numTables };\n    };\n    /**\n     * Writing to destination buffer - checksums and sizes of used tables.\n     */\n    /* tslint:disable */\n    TtfReader.prototype.writeCheckSums = function (writer, numTables, newLocaTableOut, newGlyphTable, glyphTableSize, locaTableSize) {\n        /* tslint:enable */\n        if (writer === null) {\n            throw new Error('Argument Null Exception : writer');\n        }\n        if (newLocaTableOut === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        var usedTablesSize = numTables * 16 + (3 * 4);\n        var nextTableSize = 0;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            var tableInfo = this.getTable(tableName);\n            if (tableInfo.empty) {\n                continue;\n            }\n            writer.writeString(tableName);\n            if (tableName === 'glyf') {\n                var checksum = this.calculateCheckSum(newGlyphTable);\n                writer.writeInt(checksum);\n                nextTableSize = glyphTableSize;\n            }\n            else if (tableName === 'loca') {\n                var checksum = this.calculateCheckSum(newLocaTableOut);\n                writer.writeInt(checksum);\n                nextTableSize = locaTableSize;\n            }\n            else {\n                writer.writeInt(tableInfo.checksum);\n                nextTableSize = tableInfo.length;\n            }\n            writer.writeUInt(usedTablesSize);\n            writer.writeUInt(nextTableSize);\n            usedTablesSize += this.align(nextTableSize);\n        }\n    };\n    /**\n     * Gets checksum from source buffer.\n     */\n    TtfReader.prototype.calculateCheckSum = function (bytes) {\n        if (bytes === null) {\n            throw new Error('Argument Null Exception : bytes');\n        }\n        var pos = 0;\n        var byte1 = 0;\n        var byte2 = 0;\n        var byte3 = 0;\n        var byte4 = 0;\n        for (var i = 0; i < (bytes.length + 1) / 4; i++) {\n            byte4 += (bytes[pos++] & 255);\n            byte3 += (bytes[pos++] & 255);\n            byte2 += (bytes[pos++] & 255);\n            byte1 += (bytes[pos++] & 255);\n        }\n        var result = byte1;\n        result += (byte2 << 8);\n        result += (byte3 << 16);\n        result += (byte4 << 24);\n        return result;\n    };\n    /**\n     * Writing to destination buffer - used glyphs.\n     */\n    TtfReader.prototype.writeGlyphs = function (writer, newLocaTable, newGlyphTable) {\n        if (writer === null) {\n            throw new Error('Argument Null Exception : writer');\n        }\n        if (newLocaTable === null) {\n            throw new Error('Argument Null Exception : newLocaTableOut');\n        }\n        if (newGlyphTable === null) {\n            throw new Error('Argument Null Exception : newGlyphTable');\n        }\n        var tableNames = this.tableNames;\n        for (var i = 0; i < tableNames.length; i++) {\n            var tableName = tableNames[i];\n            var tableInfo = this.getTable(tableName);\n            if (tableInfo.empty) {\n                continue;\n            }\n            if (tableName === 'glyf') {\n                writer.writeBytes(newGlyphTable);\n            }\n            else if (tableName === 'loca') {\n                writer.writeBytes(newLocaTable);\n            }\n            else {\n                var count = this.align(tableInfo.length);\n                var buff = [];\n                for (var i_1 = 0; i_1 < count; i_1++) {\n                    buff.push(0);\n                }\n                this.offset = tableInfo.offset;\n                var result = this.read(buff, 0, tableInfo.length);\n                writer.writeBytes(result.buffer);\n            }\n        }\n    };\n    //public methods\n    /**\n     * Sets position value of font data.\n     */\n    TtfReader.prototype.setOffset = function (offset) {\n        this.offset = offset;\n    };\n    /**\n     * Creates font Internals\n     * @private\n     */\n    TtfReader.prototype.createInternals = function () {\n        this.metrics = new TtfMetrics();\n        var nameTable = this.readNameTable();\n        var headTable = this.readHeadTable();\n        this.bIsLocaShort = (headTable.indexToLocalFormat === 0);\n        var horizontalHeadTable = this.readHorizontalHeaderTable();\n        var os2Table = this.readOS2Table();\n        var postTable = this.readPostTable();\n        this.width = this.readWidthTable(horizontalHeadTable.numberOfHMetrics, headTable.unitsPerEm);\n        var subTables = this.readCmapTable();\n        this.initializeMetrics(nameTable, headTable, horizontalHeadTable, os2Table, postTable, subTables);\n    };\n    TtfReader.prototype.getGlyph = function (charCode) {\n        if (typeof charCode === 'number') {\n            var obj1 = null;\n            if (!this.metrics.isSymbol && this.microsoftGlyphs != null) {\n                if (this.microsoftGlyphs.containsKey(charCode)) {\n                    obj1 = this.microsoftGlyphs.getValue(charCode);\n                }\n            }\n            else if (this.metrics.isSymbol && this.macintoshGlyphs != null) {\n                if (this.macintoshGlyphs.containsKey(charCode)) {\n                    obj1 = this.macintoshGlyphs.getValue(charCode);\n                }\n            }\n            var glyph = (obj1 != null) ? obj1 : this.getDefaultGlyph();\n            return glyph;\n        }\n        else {\n            var obj = null;\n            var code = charCode.charCodeAt(0);\n            if (!this.metrics.isSymbol && this.microsoft !== null) {\n                if (this.microsoft.containsKey(code)) {\n                    obj = this.microsoft.getValue(code);\n                    if (code !== StringTokenizer.whiteSpace.charCodeAt(0)) {\n                        this.isFontPresent = true;\n                    }\n                }\n                else if (code !== StringTokenizer.whiteSpace.charCodeAt(0)) {\n                    this.isFontPresent = false;\n                }\n            }\n            else if (this.metrics.isSymbol && this.macintosh !== null || this.isMacTTF) {\n                // NOTE: this code fixes char codes that extends 0x100. However, it might corrupt something.\n                if (this.maxMacIndex !== 0) {\n                    code %= this.maxMacIndex + 1;\n                }\n                else {\n                    code = ((code & 0xff00) === 0xf000 ? code & 0xff : code);\n                }\n                if (this.macintosh.containsKey(code)) {\n                    obj = this.macintosh.getValue(code);\n                    this.isFontPresent = true;\n                }\n            }\n            // Fix for StackOverFlow exception in XPS to PDF converter\n            if (charCode === StringTokenizer.whiteSpace && obj === null) {\n                obj = new TtfGlyphInfo();\n            }\n            var glyph = (obj !== null) ? obj : this.getDefaultGlyph();\n            return glyph;\n        }\n    };\n    /**\n     * Gets hash table with chars indexed by glyph index.\n     */\n    TtfReader.prototype.getGlyphChars = function (chars) {\n        if (chars === null || chars === undefined) {\n            throw new Error('Argument Null Exception : chars');\n        }\n        var dictionary = new Dictionary();\n        var charKeys = chars.keys();\n        for (var i = 0; i < charKeys.length; i++) {\n            var ch = charKeys[i];\n            var glyph = this.getGlyph(ch);\n            if (!glyph.empty) {\n                dictionary.setValue(glyph.index, ch.charCodeAt(0));\n            }\n        }\n        return dictionary;\n    };\n    /**\n     * Gets all glyphs.\n     */\n    TtfReader.prototype.getAllGlyphs = function () {\n        var allGlyphInfo = [];\n        var info = new TtfGlyphInfo();\n        var index = 0;\n        for (var i = 0; i < this.width.length; i++) {\n            var width = this.width[i];\n            info.index = index;\n            info.width = width;\n            allGlyphInfo.push(info);\n            index++;\n        }\n        return allGlyphInfo;\n    };\n    /**\n     * Reads a font's program.\n     * @private\n     */\n    TtfReader.prototype.readFontProgram = function (chars) {\n        var glyphChars = this.getGlyphChars(chars);\n        var locaTable = this.readLocaTable(this.bIsLocaShort);\n        if (glyphChars.size() < chars.size()) {\n            this.missedGlyphs = chars.size() - glyphChars.size();\n        }\n        this.updateGlyphChars(glyphChars, locaTable);\n        /* tslint:disable */\n        var result1 = this.generateGlyphTable(glyphChars, locaTable, null, null);\n        /* tslint:enable */\n        var glyphTableSize = result1.glyphTableSize;\n        var newLocaTable = result1.newLocaTable;\n        var newGlyphTable = result1.newGlyphTable;\n        var result2 = this.updateLocaTable(newLocaTable, this.bIsLocaShort, null);\n        var newLocaSize = result2.newLocaSize;\n        var newLocaUpdated = result2.newLocaUpdated;\n        var fontProgram = this.getFontProgram(newLocaUpdated, newGlyphTable, glyphTableSize, newLocaSize);\n        return fontProgram;\n    };\n    TtfReader.prototype._readCompactFontFormatTable = function () {\n        var tableInfo = this.getTable('CFF ');\n        var length = tableInfo.length;\n        var offset = tableInfo.offset;\n        var cffData = new Array(length);\n        this.setOffset(offset);\n        var result = this.read(cffData, 0, length);\n        return result.buffer;\n    };\n    /**\n     * Reconverts string to be in proper format saved into PDF file.\n     */\n    TtfReader.prototype.convertString = function (text) {\n        if (text === null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        var glyph = '';\n        var i = 0;\n        for (var k = 0; k < text.length; k++) {\n            var ch = text[k];\n            var glyphInfo = this.getGlyph(ch);\n            if (!glyphInfo.empty) {\n                glyph += String.fromCharCode(glyphInfo.index);\n                i++;\n            }\n        }\n        return glyph;\n    };\n    /**\n     * Gets char width.\n     */\n    TtfReader.prototype.getCharWidth = function (code) {\n        var glyphInfo = this.getGlyph(code);\n        glyphInfo = (!glyphInfo.empty) ? glyphInfo : this.getDefaultGlyph();\n        var codeWidth = (!glyphInfo.empty) ? glyphInfo.width : 0;\n        return codeWidth;\n    };\n    TtfReader.prototype.readString = function (length, isUnicode) {\n        if (isUnicode === undefined) {\n            return this.readString(length, false);\n        }\n        else {\n            //let buffer : number[] = this.readBytes(length);\n            var result = '';\n            if (isUnicode) {\n                for (var i = 0; i < length; i++) {\n                    if (i % 2 !== 0) {\n                        result += String.fromCharCode(this.fontData[this.offset]);\n                    }\n                    this.offset += 1;\n                }\n            }\n            else {\n                for (var i = 0; i < length; i++) {\n                    result += String.fromCharCode(this.fontData[this.offset]);\n                    this.offset += 1;\n                }\n            }\n            return result;\n        }\n    };\n    TtfReader.prototype.readFixed = function (offset) {\n        var integer = this.readInt16(offset);\n        var sFraction = this.readInt16(offset + 2);\n        var fraction = sFraction / 16384;\n        return integer + fraction;\n    };\n    TtfReader.prototype.readInt32 = function (offset) {\n        var i1 = this.fontData[offset + 3];\n        var i2 = this.fontData[offset + 2];\n        var i3 = this.fontData[offset + 1];\n        var i4 = this.fontData[offset];\n        this.offset += 4;\n        return i1 + (i2 << 8) + (i3 << 16) + (i4 << 24);\n    };\n    TtfReader.prototype.readUInt32 = function (offset) {\n        var i1 = this.fontData[offset + 3];\n        var i2 = this.fontData[offset + 2];\n        var i3 = this.fontData[offset + 1];\n        var i4 = this.fontData[offset];\n        this.offset += 4;\n        return (i1 | i2 << 8 | i3 << 16 | i4 << 24);\n    };\n    // private readInt16(offset : number) : number {\n    //     let result : number = (this.fontData[offset] << 8) + this.fontData[offset + 1];\n    //     this.offset += 2;\n    //     return result;\n    // }\n    TtfReader.prototype.readInt16 = function (offset) {\n        var result = (this.fontData[offset] << 8) + this.fontData[offset + 1];\n        result = result & (1 << 15) ? result - 0x10000 : result;\n        this.offset += 2;\n        return result;\n    };\n    TtfReader.prototype.readInt64 = function (offset) {\n        var low = this.readInt32(offset + 4);\n        var n = this.readInt32(offset) * 4294967296.0 + low;\n        if (low < 0) {\n            n += 4294967296;\n        }\n        return n;\n    };\n    TtfReader.prototype.readUInt16 = function (offset) {\n        var result = (this.fontData[offset] << 8) | this.fontData[offset + 1];\n        this.offset += 2;\n        return result;\n    };\n    /**\n     * Reads ushort array.\n     */\n    TtfReader.prototype.readUshortArray = function (length) {\n        var buffer = [];\n        for (var i = 0; i < length; i++) {\n            buffer[i] = this.readUInt16(this.offset);\n        }\n        return buffer;\n    };\n    TtfReader.prototype.readBytes = function (length) {\n        var result = [];\n        for (var i = 0; i < length; i++) {\n            result.push(this.fontData[this.offset]);\n            this.offset += 1;\n        }\n        return result;\n    };\n    TtfReader.prototype.readByte = function (offset) {\n        var result = this.fontData[offset];\n        this.offset += 1;\n        return result;\n    };\n    /**\n     * Reads bytes to array in BigEndian order.\n     * @private\n     */\n    TtfReader.prototype.read = function (buffer, index, count) {\n        if (buffer === null) {\n            throw new Error('Argument Null Exception : buffer');\n        }\n        var written = 0;\n        var read = 0;\n        do {\n            for (var i = 0; (i < count - written) && (this.offset + i < this.fontData.length); i++) {\n                buffer[index + i] = this.fontData[this.offset + i];\n            }\n            read = count - written;\n            this.offset += read;\n            written += read;\n        } while (written < count);\n        return { buffer: buffer, written: written };\n    };\n    return TtfReader;\n}());\nexport { TtfReader };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfFont } from './pdf-font';\nimport { PdfSubSuperScript } from './enum';\nimport { PdfArray } from './../../primitives/pdf-array';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar PdfFontMetrics = /** @class */ (function () {\n    function PdfFontMetrics() {\n        /**\n         * `Line gap`.\n         * @private\n         */\n        this.lineGap = 0;\n    }\n    //  Public methods\n    /**\n     * Returns `ascent` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getAscent = function (format) {\n        var returnValue = this.ascent * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `descent` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getDescent = function (format) {\n        var returnValue = this.descent * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `Line gap` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getLineGap = function (format) {\n        var returnValue = this.lineGap * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `height` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getHeight = function (format) {\n        var height;\n        var clearTypeFonts = ['cambria', 'candara', 'constantia', 'corbel', 'cariadings'];\n        var clearTypeFontCollection = [];\n        for (var index = 0; index < clearTypeFonts.length; index++) {\n            var font = clearTypeFonts[index];\n            clearTypeFontCollection.push(font);\n        }\n        if (this.getDescent(format) < 0) {\n            // if ((clearTypeFontCollection.indexOf(this.name.toLowerCase()) !== -1) && !this.isUnicodeFont) {\n            //     height = (this.GetAscent(format) - this.GetDescent(format) - this.GetLineGap(format));\n            // } else {\n            height = (this.getAscent(format) - this.getDescent(format) + this.getLineGap(format));\n            // }\n        }\n        else {\n            height = (this.getAscent(format) + this.getDescent(format) + this.getLineGap(format));\n        }\n        return height;\n    };\n    /**\n     * Calculates `size` of the font depending on the subscript/superscript value.\n     * @private\n     */\n    PdfFontMetrics.prototype.getSize = function (format) {\n        var size = this.size;\n        if (format != null) {\n            switch (format.subSuperScript) {\n                case PdfSubSuperScript.SubScript:\n                    size /= this.subScriptSizeFactor;\n                    break;\n                case PdfSubSuperScript.SuperScript:\n                    size /= this.superscriptSizeFactor;\n                    break;\n            }\n        }\n        return size;\n    };\n    /**\n     * `Clones` the metrics.\n     * @private\n     */\n    PdfFontMetrics.prototype.clone = function () {\n        var metrics = this;\n        metrics.widthTable = WidthTable.clone();\n        return metrics;\n    };\n    Object.defineProperty(PdfFontMetrics.prototype, \"widthTable\", {\n        //  Properies\n        /**\n         * Gets or sets the `width table`.\n         * @private\n         */\n        get: function () {\n            return this.internalWidthTable;\n        },\n        set: function (value) {\n            this.internalWidthTable = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFontMetrics;\n}());\nexport { PdfFontMetrics };\nvar WidthTable = /** @class */ (function () {\n    function WidthTable() {\n    }\n    /**\n     * Static `clones` this instance of the WidthTable class.\n     * @private\n     */\n    WidthTable.clone = function () {\n        return null;\n    };\n    return WidthTable;\n}());\nexport { WidthTable };\nvar StandardWidthTable = /** @class */ (function (_super) {\n    __extends(StandardWidthTable, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `StandardWidthTable` class.\n     * @private\n     */\n    function StandardWidthTable(widths) {\n        var _this = _super.call(this) || this;\n        if (widths == null) {\n            throw new Error('ArgumentNullException:widths');\n        }\n        _this.widths = widths;\n        return _this;\n    }\n    //Properties\n    /**\n     * Gets the `32 bit number` at the specified index.\n     * @private\n     */\n    StandardWidthTable.prototype.items = function (index) {\n        if (index < 0 || index >= this.widths.length) {\n            throw new Error('ArgumentOutOfRangeException:index, The character is not supported by the font.');\n        }\n        var result = this.widths[index];\n        return result;\n    };\n    Object.defineProperty(StandardWidthTable.prototype, \"length\", {\n        /**\n         * Gets the `length` of the internal array.\n         * @private\n         */\n        get: function () {\n            return this.widths.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Overrides\n    /**\n     * `Clones` this instance of the WidthTable class.\n     * @private\n     */\n    StandardWidthTable.prototype.clone = function () {\n        var swt = this;\n        swt.widths = this.widths;\n        return swt;\n    };\n    /**\n     * Converts width table to a `PDF array`.\n     * @private\n     */\n    StandardWidthTable.prototype.toArray = function () {\n        var arr = new PdfArray(this.widths);\n        return arr;\n    };\n    return StandardWidthTable;\n}(WidthTable));\nexport { StandardWidthTable };\n","/**\n * TrueTypeFont.ts class for EJ2-PDF\n */\nimport { ByteArray } from './../../graphics/images/index';\nimport { TtfReader } from './ttf-reader';\nimport { PdfDictionary, SaveDescendantFontEventHandler, SaveFontDictionaryEventHandler } from './../../primitives/pdf-dictionary';\nimport { SaveFontProgramEventHandler, SaveCmapEventHandler } from './../../primitives/pdf-stream';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfString } from './../../primitives/pdf-string';\nimport { PdfReferenceHolder } from './../../primitives/pdf-reference';\nimport { PdfFontMetrics } from './pdf-font-metrics';\nimport { StandardWidthTable } from './pdf-font-metrics';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { Dictionary } from './../../collections/dictionary';\nimport { FontDescriptorFlags } from './enum';\nimport { RectangleF } from './../../drawing/pdf-drawing';\nimport { Operators } from './../../input-output/pdf-operators';\nvar UnicodeTrueTypeFont = /** @class */ (function () {\n    /* tslint:enable */\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfTrueTypeFont` class.\n     * @private\n     */\n    function UnicodeTrueTypeFont(base64String, size) {\n        // Fields\n        this.nameString = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Indicates whether the font program is compressed or not.\n         * @private\n         */\n        this.isCompress = false;\n        /**\n         * Indicates whether the font is embedded or not.\n         */\n        this.isEmbedFont = false;\n        /**\n         * Cmap table's start prefix.\n         */\n        /* tslint:disable */\n        this.cmapPrefix = '/CIDInit /ProcSet findresource begin\\n12 dict begin\\nbegincmap' + Operators.newLine + '/CIDSystemInfo << /Registry (Adobe)/Ordering (UCS)/Supplement 0>> def\\n/CMapName ' + '/Adobe-Identity-UCS def\\n/CMapType 2 def\\n1 begincodespacerange' + Operators.newLine;\n        /* tslint:enable */\n        /**\n         * Cmap table's start suffix.\n         */\n        this.cmapEndCodespaceRange = 'endcodespacerange' + Operators.newLine;\n        /**\n         * Cmap's begin range marker.\n         */\n        this.cmapBeginRange = 'beginbfrange' + Operators.newLine;\n        /**\n         * Cmap's end range marker.\n         */\n        this.cmapEndRange = 'endbfrange' + Operators.newLine;\n        /**\n         * Cmap table's end\n         */\n        /* tslint:disable */\n        this.cmapSuffix = 'endbfrange\\nendcmap\\nCMapName currentdict ' + '/CMap defineresource pop\\nend end' + Operators.newLine;\n        if (base64String === null || base64String === undefined) {\n            throw new Error('ArgumentNullException:base64String');\n        }\n        this.fontSize = size;\n        this.fontString = base64String;\n        this.Initialize();\n    }\n    //Implementation\n    /**\n     * Returns width of the char symbol.\n     */\n    UnicodeTrueTypeFont.prototype.getCharWidth = function (charCode) {\n        var codeWidth = this.ttfReader.getCharWidth(charCode);\n        return codeWidth;\n    };\n    /**\n     * Returns width of the text line.\n     */\n    UnicodeTrueTypeFont.prototype.getLineWidth = function (line) {\n        // if (line == null) {\n        //     throw new Error('ArgumentNullException : line');\n        // }\n        var width = 0;\n        for (var i = 0, len = line.length; i < len; i++) {\n            var ch = line[i];\n            var charWidth = this.getCharWidth(ch);\n            width += charWidth;\n        }\n        return width;\n    };\n    /**\n     * Initializes a new instance of the `PdfTrueTypeFont` class.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.Initialize = function () {\n        var byteArray = new ByteArray(this.fontString.length);\n        byteArray.writeFromBase64String(this.fontString);\n        this.fontData = byteArray.internalBuffer;\n        this.ttfReader = new TtfReader(this.fontData);\n        this.ttfMetrics = this.ttfReader.metrics;\n    };\n    UnicodeTrueTypeFont.prototype.createInternals = function () {\n        this.fontDictionary = new PdfDictionary();\n        this.fontProgram = new PdfStream();\n        this.cmap = new PdfStream();\n        this.descendantFont = new PdfDictionary();\n        this.metrics = new PdfFontMetrics();\n        this.ttfReader.createInternals();\n        this.ttfMetrics = this.ttfReader.metrics;\n        this.initializeMetrics();\n        // Create all the dictionaries of the font.\n        this.subsetName = this.getFontName();\n        this.createDescendantFont();\n        this.createCmap();\n        this.createFontDictionary();\n        this.createFontProgram();\n    };\n    UnicodeTrueTypeFont.prototype.getInternals = function () {\n        return this.fontDictionary;\n    };\n    /**\n     * Initializes metrics.\n     */\n    UnicodeTrueTypeFont.prototype.initializeMetrics = function () {\n        var ttfMetrics = this.ttfReader.metrics;\n        this.metrics.ascent = ttfMetrics.macAscent;\n        this.metrics.descent = ttfMetrics.macDescent;\n        this.metrics.height = ttfMetrics.macAscent - ttfMetrics.macDescent + ttfMetrics.lineGap;\n        this.metrics.name = ttfMetrics.fontFamily;\n        this.metrics.postScriptName = ttfMetrics.postScriptName;\n        this.metrics.size = this.fontSize;\n        this.metrics.widthTable = new StandardWidthTable(ttfMetrics.widthTable);\n        this.metrics.lineGap = ttfMetrics.lineGap;\n        this.metrics.subScriptSizeFactor = ttfMetrics.subScriptSizeFactor;\n        this.metrics.superscriptSizeFactor = ttfMetrics.superscriptSizeFactor;\n        this.metrics.isBold = ttfMetrics.isBold;\n    };\n    /**\n     * Gets random string.\n     */\n    UnicodeTrueTypeFont.prototype.getFontName = function () {\n        var builder = '';\n        var name;\n        // if (this.isEmbed === false) {\n        for (var i = 0; i < 6; i++) {\n            var index = Math.floor(Math.random() * (25 - 0 + 1)) + 0;\n            builder += this.nameString[index];\n        }\n        builder += '+';\n        // }\n        builder += this.ttfReader.metrics.postScriptName;\n        name = builder.toString();\n        // if (name === '') {\n        //     name = this.ttfReader.metrics.fontFamily;\n        // }\n        name = this.formatName(name);\n        return name;\n    };\n    /**\n     * Generates name of the font.\n     */\n    UnicodeTrueTypeFont.prototype.formatName = function (fontName) {\n        // if (fontName === null) {\n        //     throw new Error('ArgumentNullException : fontName');\n        // }\n        // if (fontName === '') {\n        //     throw new Error('ArgumentOutOfRangeException : fontName, Parameter can not be empty');\n        // }\n        var ret = fontName.replace('(', '#28');\n        ret = ret.replace(')', '#29');\n        ret = ret.replace('[', '#5B');\n        ret = ret.replace(']', '#5D');\n        ret = ret.replace('<', '#3C');\n        ret = ret.replace('>', '#3E');\n        ret = ret.replace('{', '#7B');\n        ret = ret.replace('}', '#7D');\n        ret = ret.replace('/', '#2F');\n        ret = ret.replace('%', '#25');\n        return ret.replace(' ', '#20');\n    };\n    /**\n     * Creates descendant font.\n     */\n    UnicodeTrueTypeFont.prototype.createDescendantFont = function () {\n        // Set property used to clone Font every time\n        this.descendantFont.isResource = true;\n        this.descendantFont.descendantFontBeginSave = new SaveDescendantFontEventHandler(this);\n        this.descendantFont.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        if (this.ttfReader && this.ttfReader._isOpenTypeFont) {\n            this.descendantFont.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.cIDFontType0));\n        }\n        else {\n            this.descendantFont.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.cIDFontType2));\n        }\n        this.descendantFont.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.subsetName));\n        this.descendantFont.items.setValue(this.dictionaryProperties.cIDToGIDMap, new PdfName(this.dictionaryProperties.identity));\n        this.descendantFont.items.setValue(this.dictionaryProperties.dw, new PdfNumber(1000));\n        this.fontDescriptor = this.createFontDescriptor();\n        this.descendantFont.items.setValue(this.dictionaryProperties.fontDescriptor, new PdfReferenceHolder(this.fontDescriptor));\n        var systemInfo = this.createSystemInfo();\n        this.descendantFont.items.setValue(this.dictionaryProperties.cIDSystemInfo, systemInfo);\n    };\n    /**\n     * Creates font descriptor.\n     */\n    UnicodeTrueTypeFont.prototype.createFontDescriptor = function () {\n        var descriptor = new PdfDictionary();\n        var metrics = this.ttfReader.metrics;\n        // Set property used to clone Font every time\n        descriptor.isResource = true;\n        descriptor.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.fontDescriptor));\n        descriptor.items.setValue(this.dictionaryProperties.fontName, new PdfName(this.subsetName));\n        descriptor.items.setValue(this.dictionaryProperties.flags, new PdfNumber(this.getDescriptorFlags()));\n        descriptor.items.setValue(this.dictionaryProperties.fontBBox, PdfArray.fromRectangle(this.getBoundBox()));\n        descriptor.items.setValue(this.dictionaryProperties.missingWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.stemV, new PdfNumber(metrics.stemV));\n        descriptor.items.setValue(this.dictionaryProperties.italicAngle, new PdfNumber(metrics.italicAngle));\n        descriptor.items.setValue(this.dictionaryProperties.capHeight, new PdfNumber(metrics.capHeight));\n        descriptor.items.setValue(this.dictionaryProperties.ascent, new PdfNumber(metrics.winAscent));\n        descriptor.items.setValue(this.dictionaryProperties.descent, new PdfNumber(metrics.winDescent));\n        descriptor.items.setValue(this.dictionaryProperties.leading, new PdfNumber(metrics.leading));\n        descriptor.items.setValue(this.dictionaryProperties.avgWidth, new PdfNumber(metrics.widthTable[32]));\n        if (this.ttfReader.metrics.contains) {\n            descriptor.items.setValue(this.dictionaryProperties.fontFile3, new PdfReferenceHolder(this.fontProgram));\n            this.fontProgram.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.cIDFontType0C));\n        }\n        else {\n            descriptor.items.setValue(this.dictionaryProperties.fontFile2, new PdfReferenceHolder(this.fontProgram));\n        }\n        descriptor.items.setValue(this.dictionaryProperties.maxWidth, new PdfNumber(metrics.widthTable[32]));\n        descriptor.items.setValue(this.dictionaryProperties.xHeight, new PdfNumber(0));\n        descriptor.items.setValue(this.dictionaryProperties.stemH, new PdfNumber(0));\n        return descriptor;\n    };\n    /**\n     * Generates cmap.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.createCmap = function () {\n        this.cmap.cmapBeginSave = new SaveCmapEventHandler(this);\n    };\n    /**\n     * Generates font dictionary.\n     */\n    UnicodeTrueTypeFont.prototype.createFontDictionary = function () {\n        // Set property used to clone Font every time\n        this.fontDictionary.isResource = true;\n        this.fontDictionary.fontDictionaryBeginSave = new SaveFontDictionaryEventHandler(this);\n        this.fontDictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.subsetName));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.type0));\n        this.fontDictionary.items.setValue(this.dictionaryProperties.encoding, new PdfName(this.dictionaryProperties.identityH));\n        var descFonts = new PdfArray();\n        var reference = new PdfReferenceHolder(this.descendantFont);\n        // Set property used to clone Font every time\n        descFonts.isFont = true;\n        descFonts.add(reference);\n        this.fontDictionary.items.setValue(this.dictionaryProperties.descendantFonts, descFonts);\n    };\n    /**\n     * Creates font program.\n     */\n    UnicodeTrueTypeFont.prototype.createFontProgram = function () {\n        this.fontProgram.fontProgramBeginSave = new SaveFontProgramEventHandler(this);\n    };\n    /**\n     * Creates system info dictionary for CID font.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.createSystemInfo = function () {\n        var systemInfo = new PdfDictionary();\n        systemInfo.items.setValue(this.dictionaryProperties.registry, new PdfString('Adobe'));\n        systemInfo.items.setValue(this.dictionaryProperties.ordering, new PdfString(this.dictionaryProperties.identity));\n        systemInfo.items.setValue(this.dictionaryProperties.supplement, new PdfNumber(0));\n        return systemInfo;\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    UnicodeTrueTypeFont.prototype.descendantFontBeginSave = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var width = this.getDescendantWidth();\n            if (width !== null) {\n                this.descendantFont.items.setValue(this.dictionaryProperties.w, width);\n            }\n        }\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    UnicodeTrueTypeFont.prototype.cmapBeginSave = function () {\n        this.generateCmap();\n    };\n    /**\n     * Runs before font Dictionary will be saved.\n     */\n    /* tslint:disable */\n    UnicodeTrueTypeFont.prototype.fontDictionaryBeginSave = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0 && !this.fontDictionary.containsKey(this.dictionaryProperties.toUnicode)) {\n            this.fontDictionary.items.setValue(this.dictionaryProperties.toUnicode, new PdfReferenceHolder(this.cmap));\n        }\n    };\n    /* tslint:enable */\n    /**\n     * Runs before font program stream save.\n     */\n    UnicodeTrueTypeFont.prototype.fontProgramBeginSave = function () {\n        this.isCompress = true;\n        this.generateFontProgram();\n    };\n    /**\n     * Gets width description pad array for c i d font.\n     */\n    UnicodeTrueTypeFont.prototype.getDescendantWidth = function () {\n        var array = new PdfArray();\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var glyphInfo = [];\n            // if (!this.isEmbedFont) {\n            var keys = this.usedChars.keys();\n            for (var i = 0; i < keys.length; i++) {\n                var chLen = keys[i];\n                var glyph = this.ttfReader.getGlyph(chLen);\n                if (glyph.empty) {\n                    continue;\n                }\n                glyphInfo.push(glyph);\n            }\n            // } else {\n            //     glyphInfo = this.ttfReader.getAllGlyphs();\n            // }\n            glyphInfo.sort(function (a, b) { return a.index - b.index; });\n            var firstGlyphIndex = 0;\n            var lastGlyphIndex = 0;\n            var firstGlyphIndexWasSet = false;\n            var widthDetails = new PdfArray();\n            // if (!this.isEmbedFont) {\n            for (var i = 0; i < glyphInfo.length; i++) {\n                var glyph = glyphInfo[i];\n                if (!firstGlyphIndexWasSet) {\n                    firstGlyphIndexWasSet = true;\n                    firstGlyphIndex = glyph.index;\n                    lastGlyphIndex = glyph.index - 1;\n                }\n                if ((lastGlyphIndex + 1 !== glyph.index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {\n                    // Add glyph index / width.\n                    array.add(new PdfNumber(firstGlyphIndex));\n                    if (i !== 0) {\n                        array.add(widthDetails);\n                    }\n                    firstGlyphIndex = glyph.index;\n                    widthDetails = new PdfArray();\n                }\n                widthDetails.add(new PdfNumber(glyph.width));\n                if (i + 1 === glyphInfo.length) {\n                    array.add(new PdfNumber(firstGlyphIndex));\n                    array.add(widthDetails);\n                }\n                lastGlyphIndex = glyph.index;\n            }\n            // } else {\n            //     for (let i : number = 0; i < glyphInfo.length; i++) {\n            //         let glyph : TtfGlyphInfo = glyphInfo[i];\n            //         if (!firstGlyphIndexWasSet) {\n            //             firstGlyphIndexWasSet = true;\n            //             lastGlyphIndex = glyph.index - 1;\n            //         }\n            //         firstGlyphIndex = glyph.index;\n            //         if ((lastGlyphIndex + 1 === glyph.index || (i + 1 === glyphInfo.length)) && glyphInfo.length > 1) {\n            //             // Add glyph index / width.\n            //             widthDetails.add(new PdfNumber(glyph.width));\n            //             array.add(new PdfNumber(firstGlyphIndex));\n            //             array.add(widthDetails);\n            //             widthDetails = new PdfArray();\n            //         }\n            //         lastGlyphIndex = glyph.index;\n            //     }\n            // }\n        }\n        return array;\n    };\n    /**\n     * Creates cmap.\n     */\n    UnicodeTrueTypeFont.prototype.generateCmap = function () {\n        if (this.usedChars !== null && this.usedChars !== undefined && this.usedChars.size() > 0) {\n            var glyphChars = this.ttfReader.getGlyphChars(this.usedChars);\n            if (glyphChars.size() > 0) {\n                var keys = glyphChars.keys().sort();\n                // add first and last glyph indexes\n                var first = keys[0];\n                var last = keys[keys.length - 1];\n                var middlePart = this.toHexString(first, false) + this.toHexString(last, false) + Operators.newLine;\n                var builder = '';\n                builder += this.cmapPrefix;\n                builder += middlePart;\n                builder += this.cmapEndCodespaceRange;\n                var nextRange = 0;\n                for (var i = 0; i < keys.length; i++) {\n                    if (nextRange === 0) {\n                        if (i !== 0) {\n                            builder += this.cmapEndRange;\n                        }\n                        nextRange = Math.min(100, keys.length - i);\n                        builder += nextRange;\n                        builder += Operators.whiteSpace;\n                        builder += this.cmapBeginRange;\n                    }\n                    nextRange -= 1;\n                    var key = keys[i];\n                    /* tslint:disable */\n                    builder += this.toHexString(key, true) + this.toHexString(key, true) + this.toHexString(glyphChars.getValue(key), true) + '\\n';\n                    /* tslint:enable */\n                }\n                builder += this.cmapSuffix;\n                this.cmap.clearStream();\n                this.cmap.isResource = true;\n                this.cmap.write(builder);\n            }\n        }\n    };\n    /**\n     * Generates font program.\n     */\n    UnicodeTrueTypeFont.prototype.generateFontProgram = function () {\n        this.usedChars = (this.usedChars === null || this.usedChars === undefined) ? new Dictionary() : this.usedChars;\n        this.ttfReader.setOffset(0);\n        if (this.ttfReader.metrics.contains && this.ttfReader._isOpenTypeFont) {\n            var cffData = this.ttfReader._readCompactFontFormatTable();\n            this.fontProgram.clearStream();\n            this.fontProgram.isResource = true;\n            this.fontProgram.writeBytes(cffData);\n        }\n        else {\n            var fontProgram = this.ttfReader.readFontProgram(this.usedChars);\n            this.fontProgram.clearStream();\n            this.fontProgram.isResource = true;\n            this.fontProgram.writeBytes(fontProgram);\n        }\n    };\n    /**\n     * Calculates flags for the font descriptor.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.getDescriptorFlags = function () {\n        var flags = 0;\n        var metrics = this.ttfReader.metrics;\n        if (metrics.isFixedPitch) {\n            flags |= FontDescriptorFlags.FixedPitch;\n        }\n        if (metrics.isSymbol) {\n            flags |= FontDescriptorFlags.Symbolic;\n        }\n        else {\n            flags |= FontDescriptorFlags.Nonsymbolic;\n        }\n        if (metrics.isItalic) {\n            flags |= FontDescriptorFlags.Italic;\n        }\n        if (metrics.isBold) {\n            flags |= FontDescriptorFlags.ForceBold;\n        }\n        return flags;\n    };\n    /**\n     * Calculates BoundBox of the descriptor.\n     * @private\n     */\n    UnicodeTrueTypeFont.prototype.getBoundBox = function () {\n        var rect = this.ttfReader.metrics.fontBox;\n        var width = Math.abs(rect.right - rect.left);\n        var height = Math.abs(rect.top - rect.bottom);\n        var rectangle = new RectangleF(rect.left, rect.bottom, width, height);\n        return rectangle;\n    };\n    /**\n     * Converts integer of decimal system to hex integer.\n     */\n    UnicodeTrueTypeFont.prototype.toHexString = function (n, isCaseChange) {\n        var s = n.toString(16);\n        if (isCaseChange) {\n            s = s.toUpperCase();\n        }\n        return '<0000'.substring(0, 5 - s.length) + s + '>';\n    };\n    /**\n     * Stores used symbols.\n     */\n    UnicodeTrueTypeFont.prototype.setSymbols = function (text) {\n        if (text === null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        if (this.usedChars === null || this.usedChars === undefined) {\n            this.usedChars = new Dictionary();\n        }\n        for (var i = 0; i < text.length; i++) {\n            var ch = text[i];\n            this.usedChars.setValue(ch, String.fromCharCode(0));\n        }\n        // else {\n        //     if (text === null) {\n        //         throw new Error('Argument Null Exception : glyphs');\n        //     }\n        //     if (this.usedChars === null || this.usedChars === undefined) {\n        //             this.usedChars = new Dictionary<string, string>();\n        //     }\n        //     for (let i : number = 0; i < text.length; i++) {\n        //         let glyphIndex : number = text[i];\n        //         let glyph : TtfGlyphInfo =  this.ttfReader.getGlyph(glyphIndex);\n        //         if (!glyph == null) {\n        //             let c : string = glyph.charCode.toLocaleString();\n        //             this.usedChars.setValue(c, String.fromCharCode(0));\n        //         }\n        //     }\n        // }\n        if (this.isEmbedFont === false) {\n            this.getDescendantWidth();\n        }\n    };\n    return UnicodeTrueTypeFont;\n}());\nexport { UnicodeTrueTypeFont };\n","/**\n * ArabicShapeRenderer.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../../../collections/dictionary';\nvar ArabicShapeRenderer = /** @class */ (function () {\n    //#endregion\n    //#region Constructor\n    function ArabicShapeRenderer() {\n        //#region Constants\n        this.arabicCharTable = [['\\u0621', '\\uFE80'], ['\\u0622', '\\uFE81', '\\uFE82'],\n            ['\\u0623', '\\uFE83', '\\uFE84'],\n            ['\\u0624', '\\uFE85', '\\uFE86'],\n            ['\\u0625', '\\uFE87', '\\uFE88'],\n            ['\\u0626', '\\uFE89', '\\uFE8A', '\\uFE8B', '\\uFE8C'],\n            ['\\u0627', '\\uFE8D', '\\uFE8E'],\n            ['\\u0628', '\\uFE8F', '\\uFE90', '\\uFE91', '\\uFE92'],\n            ['\\u0629', '\\uFE93', '\\uFE94'],\n            ['\\u062A', '\\uFE95', '\\uFE96', '\\uFE97', '\\uFE98'],\n            ['\\u062B', '\\uFE99', '\\uFE9A', '\\uFE9B', '\\uFE9C'],\n            ['\\u062C', '\\uFE9D', '\\uFE9E', '\\uFE9F', '\\uFEA0'],\n            ['\\u062D', '\\uFEA1', '\\uFEA2', '\\uFEA3', '\\uFEA4'],\n            ['\\u062E', '\\uFEA5', '\\uFEA6', '\\uFEA7', '\\uFEA8'],\n            ['\\u062F', '\\uFEA9', '\\uFEAA'],\n            ['\\u0630', '\\uFEAB', '\\uFEAC'],\n            ['\\u0631', '\\uFEAD', '\\uFEAE'],\n            ['\\u0632', '\\uFEAF', '\\uFEB0'],\n            ['\\u0633', '\\uFEB1', '\\uFEB2', '\\uFEB3', '\\uFEB4'],\n            ['\\u0634', '\\uFEB5', '\\uFEB6', '\\uFEB7', '\\uFEB8'],\n            ['\\u0635', '\\uFEB9', '\\uFEBA', '\\uFEBB', '\\uFEBC'],\n            ['\\u0636', '\\uFEBD', '\\uFEBE', '\\uFEBF', '\\uFEC0'],\n            ['\\u0637', '\\uFEC1', '\\uFEC2', '\\uFEC3', '\\uFEC4'],\n            ['\\u0638', '\\uFEC5', '\\uFEC6', '\\uFEC7', '\\uFEC8'],\n            ['\\u0639', '\\uFEC9', '\\uFECA', '\\uFECB', '\\uFECC'],\n            ['\\u063A', '\\uFECD', '\\uFECE', '\\uFECF', '\\uFED0'],\n            ['\\u0640', '\\u0640', '\\u0640', '\\u0640', '\\u0640'],\n            ['\\u0641', '\\uFED1', '\\uFED2', '\\uFED3', '\\uFED4'],\n            ['\\u0642', '\\uFED5', '\\uFED6', '\\uFED7', '\\uFED8'],\n            ['\\u0643', '\\uFED9', '\\uFEDA', '\\uFEDB', '\\uFEDC'],\n            ['\\u0644', '\\uFEDD', '\\uFEDE', '\\uFEDF', '\\uFEE0'],\n            ['\\u0645', '\\uFEE1', '\\uFEE2', '\\uFEE3', '\\uFEE4'],\n            ['\\u0646', '\\uFEE5', '\\uFEE6', '\\uFEE7', '\\uFEE8'],\n            ['\\u0647', '\\uFEE9', '\\uFEEA', '\\uFEEB', '\\uFEEC'],\n            ['\\u0648', '\\uFEED', '\\uFEEE'],\n            ['\\u0649', '\\uFEEF', '\\uFEF0', '\\uFBE8', '\\uFBE9'],\n            ['\\u064A', '\\uFEF1', '\\uFEF2', '\\uFEF3', '\\uFEF4'],\n            ['\\u0671', '\\uFB50', '\\uFB51'],\n            ['\\u0679', '\\uFB66', '\\uFB67', '\\uFB68', '\\uFB69'],\n            ['\\u067A', '\\uFB5E', '\\uFB5F', '\\uFB60', '\\uFB61'],\n            ['\\u067B', '\\uFB52', '\\uFB53', '\\uFB54', '\\uFB55'],\n            ['\\u067E', '\\uFB56', '\\uFB57', '\\uFB58', '\\uFB59'],\n            ['\\u067F', '\\uFB62', '\\uFB63', '\\uFB64', '\\uFB65'],\n            ['\\u0680', '\\uFB5A', '\\uFB5B', '\\uFB5C', '\\uFB5D'],\n            ['\\u0683', '\\uFB76', '\\uFB77', '\\uFB78', '\\uFB79'],\n            ['\\u0684', '\\uFB72', '\\uFB73', '\\uFB74', '\\uFB75'],\n            ['\\u0686', '\\uFB7A', '\\uFB7B', '\\uFB7C', '\\uFB7D'],\n            ['\\u0687', '\\uFB7E', '\\uFB7F', '\\uFB80', '\\uFB81'],\n            ['\\u0688', '\\uFB88', '\\uFB89'],\n            ['\\u068C', '\\uFB84', '\\uFB85'],\n            ['\\u068D', '\\uFB82', '\\uFB83'],\n            ['\\u068E', '\\uFB86', '\\uFB87'],\n            ['\\u0691', '\\uFB8C', '\\uFB8D'],\n            ['\\u0698', '\\uFB8A', '\\uFB8B'],\n            ['\\u06A4', '\\uFB6A', '\\uFB6B', '\\uFB6C', '\\uFB6D'],\n            ['\\u06A6', '\\uFB6E', '\\uFB6F', '\\uFB70', '\\uFB71'],\n            ['\\u06A9', '\\uFB8E', '\\uFB8F', '\\uFB90', '\\uFB91'],\n            ['\\u06AD', '\\uFBD3', '\\uFBD4', '\\uFBD5', '\\uFBD6'],\n            ['\\u06AF', '\\uFB92', '\\uFB93', '\\uFB94', '\\uFB95'],\n            ['\\u06B1', '\\uFB9A', '\\uFB9B', '\\uFB9C', '\\uFB9D'],\n            ['\\u06B3', '\\uFB96', '\\uFB97', '\\uFB98', '\\uFB99'],\n            ['\\u06BA', '\\uFB9E', '\\uFB9F'],\n            ['\\u06BB', '\\uFBA0', '\\uFBA1', '\\uFBA2', '\\uFBA3'],\n            ['\\u06BE', '\\uFBAA', '\\uFBAB', '\\uFBAC', '\\uFBAD'],\n            ['\\u06C0', '\\uFBA4', '\\uFBA5'],\n            ['\\u06C1', '\\uFBA6', '\\uFBA7', '\\uFBA8', '\\uFBA9'],\n            ['\\u06C5', '\\uFBE0', '\\uFBE1'],\n            ['\\u06C6', '\\uFBD9', '\\uFBDA'],\n            ['\\u06C7', '\\uFBD7', '\\uFBD8'],\n            ['\\u06C8', '\\uFBDB', '\\uFBDC'],\n            ['\\u06C9', '\\uFBE2', '\\uFBE3'],\n            ['\\u06CB', '\\uFBDE', '\\uFBDF'],\n            ['\\u06CC', '\\uFBFC', '\\uFBFD', '\\uFBFE', '\\uFBFF'],\n            ['\\u06D0', '\\uFBE4', '\\uFBE5', '\\uFBE6', '\\uFBE7'],\n            ['\\u06D2', '\\uFBAE', '\\uFBAF'],\n            ['\\u06D3', '\\uFBB0', '\\uFBB1']\n        ];\n        this.alef = '\\u0627';\n        this.alefHamza = '\\u0623';\n        this.alefHamzaBelow = '\\u0625';\n        this.alefMadda = '\\u0622';\n        this.lam = '\\u0644';\n        this.hamza = '\\u0621';\n        this.zeroWidthJoiner = '\\u200D';\n        this.hamzaAbove = '\\u0654';\n        this.hamzaBelow = '\\u0655';\n        this.wawHamza = '\\u0624';\n        this.yehHamza = '\\u0626';\n        this.waw = '\\u0648';\n        this.alefMaksura = '\\u0649';\n        this.yeh = '\\u064A';\n        this.farsiYeh = '\\u06CC';\n        this.shadda = '\\u0651';\n        this.madda = '\\u0653';\n        this.lwa = '\\uFEFB';\n        this.lwawh = '\\uFEF7';\n        this.lwawhb = '\\uFEF9';\n        this.lwawm = '\\uFEF5';\n        this.bwhb = '\\u06D3';\n        this.fathatan = '\\u064B';\n        this.superScriptalef = '\\u0670';\n        this.vowel = 0x1;\n        // #endregion\n        //#region Fields\n        this.arabicMapTable = new Dictionary();\n        for (var i = 0; i < this.arabicCharTable.length; i++) {\n            this.arabicMapTable.setValue(this.arabicCharTable[i][0], this.arabicCharTable[i]);\n        }\n    }\n    //#endregion\n    //#region implementation\n    ArabicShapeRenderer.prototype.getCharacterShape = function (input, index) {\n        if ((input >= this.hamza) && (input <= this.bwhb)) {\n            var value = [];\n            if (this.arabicMapTable.getValue(input)) {\n                value = this.arabicMapTable.getValue(input);\n                return value[index + 1];\n            }\n        }\n        else if (input >= this.lwawm && input <= this.lwa) {\n            return (input);\n        }\n        return input;\n    };\n    ArabicShapeRenderer.prototype.shape = function (text, level) {\n        var builder = '';\n        var str2 = '';\n        for (var i = 0; i < text.length; i++) {\n            var c = text[i];\n            if (c >= '؀' && c <= 'ۿ') {\n                //if(c>= 0x0600.toString() && c<= 0x06FF.toString()) {\n                str2 = str2 + c;\n            }\n            else {\n                if (str2.length > 0) {\n                    var st = this.doShape(str2.toString(), 0);\n                    builder = builder + st;\n                    str2 = '';\n                }\n                builder = builder + c;\n            }\n        }\n        if (str2.length > 0) {\n            var st = this.doShape(str2.toString(), 0);\n            builder = builder + st;\n        }\n        return builder.toString();\n    };\n    ArabicShapeRenderer.prototype.doShape = function (input, level) {\n        var str = '';\n        var ligature = 0;\n        var len = 0;\n        var i = 0;\n        var next = '';\n        var previous = new ArabicShape();\n        var present = new ArabicShape();\n        while (i < input.length) {\n            next = input[i++];\n            ligature = this.ligature(next, present);\n            if (ligature === 0) {\n                var shapeCount = this.getShapeCount(next);\n                len = (shapeCount === 1) ? 0 : 2;\n                if (previous.Shapes > 2) {\n                    len += 1;\n                }\n                len = len % (present.Shapes);\n                present.Value = this.getCharacterShape(present.Value, len);\n                str = this.append(str, previous, level);\n                previous = present;\n                present = new ArabicShape();\n                present.Value = next;\n                present.Shapes = shapeCount;\n                present.Ligature++;\n            }\n        }\n        len = (previous.Shapes > 2) ? 1 : 0;\n        len = len % (present.Shapes);\n        present.Value = this.getCharacterShape(present.Value, len);\n        str = this.append(str, previous, level);\n        str = this.append(str, present, level);\n        return str.toString();\n    };\n    ArabicShapeRenderer.prototype.append = function (builder, shape, level) {\n        if (shape.Value !== '') {\n            builder = builder + shape.Value;\n            shape.Ligature -= 1;\n            if (shape.Type !== '') {\n                if ((level & this.vowel) === 0) {\n                    builder = builder + shape.Type;\n                    shape.Ligature -= 1;\n                }\n                else {\n                    shape.Ligature -= 1;\n                }\n            }\n            if (shape.vowel !== '') {\n                if ((level & this.vowel) === 0) {\n                    builder = builder + shape.vowel;\n                    shape.Ligature -= 1;\n                }\n                else {\n                    shape.Ligature -= 1;\n                }\n            }\n        }\n        return builder;\n    };\n    ArabicShapeRenderer.prototype.ligature = function (value, shape) {\n        if (shape.Value !== '') {\n            var result = 0;\n            if ((value >= this.fathatan && value <= this.hamzaBelow) || value === this.superScriptalef) {\n                result = 1;\n                if ((shape.vowel !== '') && (value !== this.shadda)) {\n                    result = 2;\n                }\n                if (value === this.shadda) {\n                    if (shape.Type == null) {\n                        shape.Type = this.shadda;\n                    }\n                    else {\n                        return 0;\n                    }\n                }\n                else if (value === this.hamzaBelow) {\n                    if (shape.Value === this.alef) {\n                        shape.Value = this.alefHamzaBelow;\n                        result = 2;\n                    }\n                    else if (value === this.lwa) {\n                        shape.Value = this.lwawhb;\n                        result = 2;\n                    }\n                    else {\n                        shape.Type = this.hamzaBelow;\n                    }\n                }\n                else if (value === this.hamzaAbove) {\n                    if (shape.Value === this.alef) {\n                        shape.Value = this.alefHamza;\n                        result = 2;\n                    }\n                    else if (shape.Value === this.lwa) {\n                        shape.Value = this.lwawh;\n                        result = 2;\n                    }\n                    else if (shape.Value === this.waw) {\n                        shape.Value = this.wawHamza;\n                        result = 2;\n                    }\n                    else if (shape.Value === this.yeh || shape.Value === this.alefMaksura || shape.Value === this.farsiYeh) {\n                        shape.Value = this.yehHamza;\n                        result = 2;\n                    }\n                    else {\n                        shape.Type = this.hamzaAbove;\n                    }\n                }\n                else if (value === this.madda) {\n                    if (shape.Value === this.alef) {\n                        shape.Value = this.alefMadda;\n                        result = 2;\n                    }\n                }\n                else {\n                    shape.vowel = value;\n                }\n                if (result === 1) {\n                    shape.Ligature++;\n                }\n                return result;\n            }\n            if (shape.vowel !== '') {\n                return 0;\n            }\n            if (shape.Value === this.lam) {\n                if (value === this.alef) {\n                    shape.Value = this.lwa;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n                else if (value === this.alefHamza) {\n                    shape.Value = this.lwawh;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n                else if (value === this.alefHamzaBelow) {\n                    shape.Value = this.lwawhb;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n                else if (value === this.alefMadda) {\n                    shape.Value = this.lwawm;\n                    shape.Shapes = 2;\n                    result = 3;\n                }\n            }\n            // else if (shape.Value === '') {\n            //     shape.Value = value;\n            //     shape.Shapes = this.getShapeCount(value);\n            //     result = 1;\n            // }\n            return result;\n        }\n        else {\n            return 0;\n        }\n    };\n    ArabicShapeRenderer.prototype.getShapeCount = function (shape) {\n        if ((shape >= this.hamza) && (shape <= this.bwhb) && !((shape >= this.fathatan && shape <= this.hamzaBelow)\n            || shape === this.superScriptalef)) {\n            var c = [];\n            if (this.arabicMapTable.getValue(shape)) {\n                c = this.arabicMapTable.getValue(shape);\n                return c.length - 1;\n            }\n        }\n        else if (shape === this.zeroWidthJoiner) {\n            return 4;\n        }\n        return 1;\n    };\n    return ArabicShapeRenderer;\n}());\nexport { ArabicShapeRenderer };\n//#endregion\n//#region Internals\nvar ArabicShape = /** @class */ (function () {\n    function ArabicShape() {\n        //#region Fields\n        this.shapeValue = '';\n        this.shapeType = '';\n        this.shapeVowel = '';\n        this.shapeLigature = 0;\n        this.shapeShapes = 1;\n        //#endregion\n    }\n    Object.defineProperty(ArabicShape.prototype, \"Value\", {\n        //#endregion\n        //#region Properties \n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeValue;\n        },\n        set: function (value) {\n            this.shapeValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"Type\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeType;\n        },\n        set: function (value) {\n            this.shapeType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"vowel\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeVowel;\n        },\n        set: function (value) {\n            this.shapeVowel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"Ligature\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeLigature;\n        },\n        set: function (value) {\n            this.shapeLigature = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ArabicShape.prototype, \"Shapes\", {\n        /**\n         * Gets or sets the values.\n         * @private\n         */\n        get: function () {\n            return this.shapeShapes;\n        },\n        set: function (value) {\n            this.shapeShapes = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ArabicShape;\n}());\nexport { ArabicShape };\n//#endregion\n","/**\n * Bidi.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../../../collections/dictionary';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar Bidi = /** @class */ (function () {\n    //#endregion\n    //#region Constructor\n    function Bidi() {\n        //#region Fields\n        this.indexes = [];\n        this.indexLevels = [];\n        this.mirroringShapeCharacters = new Dictionary();\n        this.update();\n    }\n    //#endregion\n    //#region implementation\n    Bidi.prototype.doMirrorShaping = function (text) {\n        var result = [];\n        for (var i = 0; i < text.length; i++) {\n            if (((this.indexLevels[i] & 1) === 1) && this.mirroringShapeCharacters.containsKey(text[i].charCodeAt(0))) {\n                result[i] = String.fromCharCode(this.mirroringShapeCharacters.getValue(text[i].charCodeAt(0)));\n            }\n            else {\n                result[i] = text[i].toString();\n            }\n        }\n        var res = '';\n        for (var j = 0; j < result.length; j++) {\n            res = res + result[j];\n        }\n        return res;\n    };\n    Bidi.prototype.getLogicalToVisualString = function (inputText, isRtl) {\n        var rtlCharacters = new RtlCharacters();\n        this.indexLevels = rtlCharacters.getVisualOrder(inputText, isRtl);\n        this.setDefaultIndexLevel();\n        this.doOrder(0, this.indexLevels.length - 1);\n        var text = this.doMirrorShaping(inputText);\n        //let text : string = inputText;\n        var resultBuilder = '';\n        for (var i = 0; i < this.indexes.length; i++) {\n            var index = this.indexes[i];\n            resultBuilder += text[index];\n        }\n        return resultBuilder.toString();\n    };\n    Bidi.prototype.setDefaultIndexLevel = function () {\n        for (var i = 0; i < this.indexLevels.length; i++) {\n            this.indexes[i] = i;\n        }\n    };\n    Bidi.prototype.doOrder = function (sIndex, eIndex) {\n        var max = this.indexLevels[sIndex];\n        var min = max;\n        var odd = max;\n        var even = max;\n        for (var i = sIndex + 1; i <= eIndex; ++i) {\n            var data = this.indexLevels[i];\n            if (data > max) {\n                max = data;\n            }\n            else if (data < min) {\n                min = data;\n            }\n            odd &= data;\n            even |= data;\n        }\n        if ((even & 1) === 0) {\n            return;\n        }\n        if ((odd & 1) === 1) {\n            this.reArrange(sIndex, eIndex + 1);\n            return;\n        }\n        min |= 1;\n        while (max >= min) {\n            var pstart = sIndex;\n            /*tslint:disable:no-constant-condition */\n            while (true) {\n                while (pstart <= eIndex) {\n                    if (this.indexLevels[pstart] >= max) {\n                        break;\n                    }\n                    pstart += 1;\n                }\n                if (pstart > eIndex) {\n                    break;\n                }\n                var pend = pstart + 1;\n                while (pend <= eIndex) {\n                    if (this.indexLevels[pend] < max) {\n                        break;\n                    }\n                    pend += 1;\n                }\n                this.reArrange(pstart, pend);\n                pstart = pend + 1;\n            }\n            max -= 1;\n        }\n    };\n    Bidi.prototype.reArrange = function (i, j) {\n        var length = (i + j) / 2;\n        --j;\n        for (; i < length; ++i, --j) {\n            var temp = this.indexes[i];\n            this.indexes[i] = this.indexes[j];\n            this.indexes[j] = temp;\n        }\n    };\n    Bidi.prototype.update = function () {\n        this.mirroringShapeCharacters.setValue(40, 41);\n        this.mirroringShapeCharacters.setValue(41, 40);\n        this.mirroringShapeCharacters.setValue(60, 62);\n        this.mirroringShapeCharacters.setValue(62, 60);\n        this.mirroringShapeCharacters.setValue(91, 93);\n        this.mirroringShapeCharacters.setValue(93, 91);\n        this.mirroringShapeCharacters.setValue(123, 125);\n        this.mirroringShapeCharacters.setValue(125, 123);\n        this.mirroringShapeCharacters.setValue(171, 187);\n        this.mirroringShapeCharacters.setValue(187, 171);\n        this.mirroringShapeCharacters.setValue(8249, 8250);\n        this.mirroringShapeCharacters.setValue(8250, 8249);\n        this.mirroringShapeCharacters.setValue(8261, 8262);\n        this.mirroringShapeCharacters.setValue(8262, 8261);\n        this.mirroringShapeCharacters.setValue(8317, 8318);\n        this.mirroringShapeCharacters.setValue(8318, 8317);\n        this.mirroringShapeCharacters.setValue(8333, 8334);\n        this.mirroringShapeCharacters.setValue(8334, 8333);\n        this.mirroringShapeCharacters.setValue(8712, 8715);\n        this.mirroringShapeCharacters.setValue(8713, 8716);\n        this.mirroringShapeCharacters.setValue(8714, 8717);\n        this.mirroringShapeCharacters.setValue(8715, 8712);\n        this.mirroringShapeCharacters.setValue(8716, 8713);\n        this.mirroringShapeCharacters.setValue(8717, 8714);\n        this.mirroringShapeCharacters.setValue(8725, 10741);\n        this.mirroringShapeCharacters.setValue(8764, 8765);\n        this.mirroringShapeCharacters.setValue(8765, 8764);\n        this.mirroringShapeCharacters.setValue(8771, 8909);\n        this.mirroringShapeCharacters.setValue(8786, 8787);\n        this.mirroringShapeCharacters.setValue(8787, 8786);\n        this.mirroringShapeCharacters.setValue(8788, 8789);\n        this.mirroringShapeCharacters.setValue(8789, 8788);\n        this.mirroringShapeCharacters.setValue(8804, 8805);\n        this.mirroringShapeCharacters.setValue(8805, 8804);\n        this.mirroringShapeCharacters.setValue(8806, 8807);\n        this.mirroringShapeCharacters.setValue(8807, 8806);\n        this.mirroringShapeCharacters.setValue(8808, 8809);\n        this.mirroringShapeCharacters.setValue(8809, 8808);\n        this.mirroringShapeCharacters.setValue(8810, 8811);\n        this.mirroringShapeCharacters.setValue(8811, 8810);\n        this.mirroringShapeCharacters.setValue(8814, 8815);\n        this.mirroringShapeCharacters.setValue(8815, 8814);\n        this.mirroringShapeCharacters.setValue(8816, 8817);\n        this.mirroringShapeCharacters.setValue(8817, 8816);\n        this.mirroringShapeCharacters.setValue(8818, 8819);\n        this.mirroringShapeCharacters.setValue(8819, 8818);\n        this.mirroringShapeCharacters.setValue(8820, 8821);\n        this.mirroringShapeCharacters.setValue(8821, 8820);\n        this.mirroringShapeCharacters.setValue(8822, 8823);\n        this.mirroringShapeCharacters.setValue(8823, 8822);\n        this.mirroringShapeCharacters.setValue(8824, 8825);\n        this.mirroringShapeCharacters.setValue(8825, 8824);\n        this.mirroringShapeCharacters.setValue(8826, 8827);\n        this.mirroringShapeCharacters.setValue(8827, 8826);\n        this.mirroringShapeCharacters.setValue(8828, 8829);\n        this.mirroringShapeCharacters.setValue(8829, 8828);\n        this.mirroringShapeCharacters.setValue(8830, 8831);\n        this.mirroringShapeCharacters.setValue(8831, 8830);\n        this.mirroringShapeCharacters.setValue(8832, 8833);\n        this.mirroringShapeCharacters.setValue(8833, 8832);\n        this.mirroringShapeCharacters.setValue(8834, 8835);\n        this.mirroringShapeCharacters.setValue(8835, 8834);\n        this.mirroringShapeCharacters.setValue(8836, 8837);\n        this.mirroringShapeCharacters.setValue(8837, 8836);\n        this.mirroringShapeCharacters.setValue(8838, 8839);\n        this.mirroringShapeCharacters.setValue(8839, 8838);\n        this.mirroringShapeCharacters.setValue(8840, 8841);\n        this.mirroringShapeCharacters.setValue(8841, 8840);\n        this.mirroringShapeCharacters.setValue(8842, 8843);\n        this.mirroringShapeCharacters.setValue(8843, 8842);\n        this.mirroringShapeCharacters.setValue(8847, 8848);\n        this.mirroringShapeCharacters.setValue(8848, 8847);\n        this.mirroringShapeCharacters.setValue(8849, 8850);\n        this.mirroringShapeCharacters.setValue(8850, 8849);\n        this.mirroringShapeCharacters.setValue(8856, 10680);\n        this.mirroringShapeCharacters.setValue(8866, 8867);\n        this.mirroringShapeCharacters.setValue(8867, 8866);\n        this.mirroringShapeCharacters.setValue(8870, 10974);\n        this.mirroringShapeCharacters.setValue(8872, 10980);\n        this.mirroringShapeCharacters.setValue(8873, 10979);\n        this.mirroringShapeCharacters.setValue(8875, 10981);\n        this.mirroringShapeCharacters.setValue(8880, 8881);\n        this.mirroringShapeCharacters.setValue(8881, 8880);\n        this.mirroringShapeCharacters.setValue(8882, 8883);\n        this.mirroringShapeCharacters.setValue(8883, 8882);\n        this.mirroringShapeCharacters.setValue(8884, 8885);\n        this.mirroringShapeCharacters.setValue(8885, 8884);\n        /*tslint:disable:max-func-body-length */\n        this.mirroringShapeCharacters.setValue(8886, 8887);\n        this.mirroringShapeCharacters.setValue(8887, 8886);\n        this.mirroringShapeCharacters.setValue(8905, 8906);\n        this.mirroringShapeCharacters.setValue(8906, 8905);\n        this.mirroringShapeCharacters.setValue(8907, 8908);\n        this.mirroringShapeCharacters.setValue(8908, 8907);\n        this.mirroringShapeCharacters.setValue(8909, 8771);\n        this.mirroringShapeCharacters.setValue(8912, 8913);\n        this.mirroringShapeCharacters.setValue(8913, 8912);\n        this.mirroringShapeCharacters.setValue(8918, 8919);\n        this.mirroringShapeCharacters.setValue(8919, 8918);\n        this.mirroringShapeCharacters.setValue(8920, 8921);\n        this.mirroringShapeCharacters.setValue(8921, 8920);\n        this.mirroringShapeCharacters.setValue(8922, 8923);\n        this.mirroringShapeCharacters.setValue(8923, 8922);\n        this.mirroringShapeCharacters.setValue(8924, 8925);\n        this.mirroringShapeCharacters.setValue(8925, 8924);\n        this.mirroringShapeCharacters.setValue(8926, 8927);\n        this.mirroringShapeCharacters.setValue(8927, 8926);\n        this.mirroringShapeCharacters.setValue(8928, 8929);\n        this.mirroringShapeCharacters.setValue(8929, 8928);\n        this.mirroringShapeCharacters.setValue(8930, 8931);\n        this.mirroringShapeCharacters.setValue(8931, 8930);\n        this.mirroringShapeCharacters.setValue(8932, 8933);\n        this.mirroringShapeCharacters.setValue(8933, 8932);\n        this.mirroringShapeCharacters.setValue(8934, 8935);\n        this.mirroringShapeCharacters.setValue(8935, 8934);\n        this.mirroringShapeCharacters.setValue(8936, 8937);\n        this.mirroringShapeCharacters.setValue(8937, 8936);\n        this.mirroringShapeCharacters.setValue(8938, 8939);\n        this.mirroringShapeCharacters.setValue(8939, 8938);\n        this.mirroringShapeCharacters.setValue(8940, 8941);\n        this.mirroringShapeCharacters.setValue(8941, 8940);\n        this.mirroringShapeCharacters.setValue(8944, 8945);\n        this.mirroringShapeCharacters.setValue(8945, 8944);\n        this.mirroringShapeCharacters.setValue(8946, 8954);\n        this.mirroringShapeCharacters.setValue(8947, 8955);\n        this.mirroringShapeCharacters.setValue(8948, 8956);\n        this.mirroringShapeCharacters.setValue(8950, 8957);\n        this.mirroringShapeCharacters.setValue(8951, 8958);\n        this.mirroringShapeCharacters.setValue(8954, 8946);\n        this.mirroringShapeCharacters.setValue(8955, 8947);\n        this.mirroringShapeCharacters.setValue(8956, 8948);\n        this.mirroringShapeCharacters.setValue(8957, 8950);\n        this.mirroringShapeCharacters.setValue(8958, 8951);\n        this.mirroringShapeCharacters.setValue(8968, 8969);\n        this.mirroringShapeCharacters.setValue(8969, 8968);\n        this.mirroringShapeCharacters.setValue(8970, 8971);\n        this.mirroringShapeCharacters.setValue(8971, 8970);\n        this.mirroringShapeCharacters.setValue(9001, 9002);\n        this.mirroringShapeCharacters.setValue(9002, 9001);\n        this.mirroringShapeCharacters.setValue(10088, 10089);\n        this.mirroringShapeCharacters.setValue(10089, 10088);\n        this.mirroringShapeCharacters.setValue(10090, 10091);\n        this.mirroringShapeCharacters.setValue(10091, 10090);\n        this.mirroringShapeCharacters.setValue(10092, 10093);\n        this.mirroringShapeCharacters.setValue(10093, 10092);\n        this.mirroringShapeCharacters.setValue(10094, 10095);\n        this.mirroringShapeCharacters.setValue(10095, 10094);\n        this.mirroringShapeCharacters.setValue(10096, 10097);\n        this.mirroringShapeCharacters.setValue(10097, 10096);\n        this.mirroringShapeCharacters.setValue(10098, 10099);\n        this.mirroringShapeCharacters.setValue(10099, 10098);\n        this.mirroringShapeCharacters.setValue(10100, 10101);\n        this.mirroringShapeCharacters.setValue(10101, 10100);\n        this.mirroringShapeCharacters.setValue(10197, 10198);\n        this.mirroringShapeCharacters.setValue(10198, 10197);\n        this.mirroringShapeCharacters.setValue(10205, 10206);\n        this.mirroringShapeCharacters.setValue(10206, 10205);\n        this.mirroringShapeCharacters.setValue(10210, 10211);\n        this.mirroringShapeCharacters.setValue(10211, 10210);\n        this.mirroringShapeCharacters.setValue(10212, 10213);\n        this.mirroringShapeCharacters.setValue(10213, 10212);\n        this.mirroringShapeCharacters.setValue(10214, 10215);\n        this.mirroringShapeCharacters.setValue(10215, 10214);\n        this.mirroringShapeCharacters.setValue(10216, 10217);\n        this.mirroringShapeCharacters.setValue(10217, 10216);\n        this.mirroringShapeCharacters.setValue(10218, 10219);\n        this.mirroringShapeCharacters.setValue(10219, 10218);\n        this.mirroringShapeCharacters.setValue(10627, 10628);\n        this.mirroringShapeCharacters.setValue(10628, 10627);\n        this.mirroringShapeCharacters.setValue(10629, 10630);\n        this.mirroringShapeCharacters.setValue(10630, 10629);\n        this.mirroringShapeCharacters.setValue(10631, 10632);\n        this.mirroringShapeCharacters.setValue(10632, 10631);\n        this.mirroringShapeCharacters.setValue(10633, 10634);\n        this.mirroringShapeCharacters.setValue(10634, 10633);\n        this.mirroringShapeCharacters.setValue(10635, 10636);\n        this.mirroringShapeCharacters.setValue(10636, 10635);\n        this.mirroringShapeCharacters.setValue(10637, 10640);\n        this.mirroringShapeCharacters.setValue(10638, 10639);\n        this.mirroringShapeCharacters.setValue(10639, 10638);\n        this.mirroringShapeCharacters.setValue(10640, 10637);\n        this.mirroringShapeCharacters.setValue(10641, 10642);\n        this.mirroringShapeCharacters.setValue(10642, 10641);\n        this.mirroringShapeCharacters.setValue(10643, 10644);\n        this.mirroringShapeCharacters.setValue(10644, 10643);\n        this.mirroringShapeCharacters.setValue(10645, 10646);\n        this.mirroringShapeCharacters.setValue(10646, 10645);\n        this.mirroringShapeCharacters.setValue(10647, 10648);\n        this.mirroringShapeCharacters.setValue(10648, 10647);\n        this.mirroringShapeCharacters.setValue(10680, 8856);\n        this.mirroringShapeCharacters.setValue(10688, 10689);\n        this.mirroringShapeCharacters.setValue(10689, 10688);\n        this.mirroringShapeCharacters.setValue(10692, 10693);\n        this.mirroringShapeCharacters.setValue(10693, 10692);\n        this.mirroringShapeCharacters.setValue(10703, 10704);\n        this.mirroringShapeCharacters.setValue(10704, 10703);\n        this.mirroringShapeCharacters.setValue(10705, 10706);\n        this.mirroringShapeCharacters.setValue(10706, 10705);\n        this.mirroringShapeCharacters.setValue(10708, 10709);\n        this.mirroringShapeCharacters.setValue(10709, 10708);\n        this.mirroringShapeCharacters.setValue(10712, 10713);\n        this.mirroringShapeCharacters.setValue(10713, 10712);\n        this.mirroringShapeCharacters.setValue(10714, 10715);\n        this.mirroringShapeCharacters.setValue(10715, 10714);\n        this.mirroringShapeCharacters.setValue(10741, 8725);\n        this.mirroringShapeCharacters.setValue(10744, 10745);\n        this.mirroringShapeCharacters.setValue(10745, 10744);\n        this.mirroringShapeCharacters.setValue(10748, 10749);\n        this.mirroringShapeCharacters.setValue(10749, 10748);\n        this.mirroringShapeCharacters.setValue(10795, 10796);\n        this.mirroringShapeCharacters.setValue(10796, 10795);\n        this.mirroringShapeCharacters.setValue(10797, 10796);\n        this.mirroringShapeCharacters.setValue(10798, 10797);\n        this.mirroringShapeCharacters.setValue(10804, 10805);\n        this.mirroringShapeCharacters.setValue(10805, 10804);\n        this.mirroringShapeCharacters.setValue(10812, 10813);\n        this.mirroringShapeCharacters.setValue(10813, 10812);\n        this.mirroringShapeCharacters.setValue(10852, 10853);\n        this.mirroringShapeCharacters.setValue(10853, 10852);\n        this.mirroringShapeCharacters.setValue(10873, 10874);\n        this.mirroringShapeCharacters.setValue(10874, 10873);\n        this.mirroringShapeCharacters.setValue(10877, 10878);\n        this.mirroringShapeCharacters.setValue(10878, 10877);\n        this.mirroringShapeCharacters.setValue(10879, 10880);\n        this.mirroringShapeCharacters.setValue(10880, 10879);\n        this.mirroringShapeCharacters.setValue(10881, 10882);\n        this.mirroringShapeCharacters.setValue(10882, 10881);\n        this.mirroringShapeCharacters.setValue(10883, 10884);\n        this.mirroringShapeCharacters.setValue(10884, 10883);\n        this.mirroringShapeCharacters.setValue(10891, 10892);\n        this.mirroringShapeCharacters.setValue(10892, 10891);\n        this.mirroringShapeCharacters.setValue(10897, 10898);\n        this.mirroringShapeCharacters.setValue(10898, 10897);\n        this.mirroringShapeCharacters.setValue(10899, 10900);\n        this.mirroringShapeCharacters.setValue(10900, 10899);\n        this.mirroringShapeCharacters.setValue(10901, 10902);\n        this.mirroringShapeCharacters.setValue(10902, 10901);\n        this.mirroringShapeCharacters.setValue(10903, 10904);\n        this.mirroringShapeCharacters.setValue(10904, 10903);\n        this.mirroringShapeCharacters.setValue(10905, 10906);\n        this.mirroringShapeCharacters.setValue(10906, 10905);\n        this.mirroringShapeCharacters.setValue(10907, 10908);\n        this.mirroringShapeCharacters.setValue(10908, 10907);\n        this.mirroringShapeCharacters.setValue(10913, 10914);\n        this.mirroringShapeCharacters.setValue(10914, 10913);\n        this.mirroringShapeCharacters.setValue(10918, 10919);\n        this.mirroringShapeCharacters.setValue(10919, 10918);\n        this.mirroringShapeCharacters.setValue(10920, 10921);\n        this.mirroringShapeCharacters.setValue(10921, 10920);\n        this.mirroringShapeCharacters.setValue(10922, 10923);\n        this.mirroringShapeCharacters.setValue(10923, 10922);\n        this.mirroringShapeCharacters.setValue(10924, 10925);\n        this.mirroringShapeCharacters.setValue(10925, 10924);\n        this.mirroringShapeCharacters.setValue(10927, 10928);\n        this.mirroringShapeCharacters.setValue(10928, 10927);\n        this.mirroringShapeCharacters.setValue(10931, 10932);\n        this.mirroringShapeCharacters.setValue(10932, 10931);\n        this.mirroringShapeCharacters.setValue(10939, 10940);\n        this.mirroringShapeCharacters.setValue(10940, 10939);\n        this.mirroringShapeCharacters.setValue(10941, 10942);\n        this.mirroringShapeCharacters.setValue(10942, 10941);\n        this.mirroringShapeCharacters.setValue(10943, 10944);\n        this.mirroringShapeCharacters.setValue(10944, 10943);\n        this.mirroringShapeCharacters.setValue(10945, 10946);\n        this.mirroringShapeCharacters.setValue(10946, 10945);\n        this.mirroringShapeCharacters.setValue(10947, 10948);\n        this.mirroringShapeCharacters.setValue(10948, 10947);\n        this.mirroringShapeCharacters.setValue(10949, 10950);\n        this.mirroringShapeCharacters.setValue(10950, 10949);\n        this.mirroringShapeCharacters.setValue(10957, 10958);\n        this.mirroringShapeCharacters.setValue(10958, 10957);\n        this.mirroringShapeCharacters.setValue(10959, 10960);\n        this.mirroringShapeCharacters.setValue(10960, 10959);\n        this.mirroringShapeCharacters.setValue(10961, 10962);\n        this.mirroringShapeCharacters.setValue(10962, 10961);\n        this.mirroringShapeCharacters.setValue(10963, 10964);\n        this.mirroringShapeCharacters.setValue(10964, 10963);\n        this.mirroringShapeCharacters.setValue(10965, 10966);\n        this.mirroringShapeCharacters.setValue(10966, 10965);\n        this.mirroringShapeCharacters.setValue(10974, 8870);\n        this.mirroringShapeCharacters.setValue(10979, 8873);\n        this.mirroringShapeCharacters.setValue(10980, 8872);\n        this.mirroringShapeCharacters.setValue(10981, 8875);\n        this.mirroringShapeCharacters.setValue(10988, 10989);\n        this.mirroringShapeCharacters.setValue(10989, 10988);\n        this.mirroringShapeCharacters.setValue(10999, 11000);\n        this.mirroringShapeCharacters.setValue(11000, 10999);\n        this.mirroringShapeCharacters.setValue(11001, 11002);\n        this.mirroringShapeCharacters.setValue(11002, 11001);\n        this.mirroringShapeCharacters.setValue(12296, 12297);\n        this.mirroringShapeCharacters.setValue(12297, 12296);\n        this.mirroringShapeCharacters.setValue(12298, 12299);\n        this.mirroringShapeCharacters.setValue(12299, 12298);\n        this.mirroringShapeCharacters.setValue(12300, 12301);\n        this.mirroringShapeCharacters.setValue(12301, 12300);\n        this.mirroringShapeCharacters.setValue(12302, 12303);\n        this.mirroringShapeCharacters.setValue(12303, 12302);\n        this.mirroringShapeCharacters.setValue(12304, 12305);\n        this.mirroringShapeCharacters.setValue(12305, 12304);\n        this.mirroringShapeCharacters.setValue(12308, 12309);\n        this.mirroringShapeCharacters.setValue(12309, 12308);\n        this.mirroringShapeCharacters.setValue(12310, 12311);\n        this.mirroringShapeCharacters.setValue(12311, 12310);\n        this.mirroringShapeCharacters.setValue(12312, 12313);\n        this.mirroringShapeCharacters.setValue(12313, 12312);\n        this.mirroringShapeCharacters.setValue(12314, 12315);\n        this.mirroringShapeCharacters.setValue(12315, 12314);\n        this.mirroringShapeCharacters.setValue(65288, 65289);\n        this.mirroringShapeCharacters.setValue(65289, 65288);\n        this.mirroringShapeCharacters.setValue(65308, 65310);\n        this.mirroringShapeCharacters.setValue(65310, 65308);\n        this.mirroringShapeCharacters.setValue(65339, 65341);\n        this.mirroringShapeCharacters.setValue(65341, 65339);\n        this.mirroringShapeCharacters.setValue(65371, 65373);\n        this.mirroringShapeCharacters.setValue(65373, 65371);\n        this.mirroringShapeCharacters.setValue(65375, 65376);\n        this.mirroringShapeCharacters.setValue(65376, 65375);\n        this.mirroringShapeCharacters.setValue(65378, 65379);\n        this.mirroringShapeCharacters.setValue(65379, 65378);\n    };\n    return Bidi;\n}());\nexport { Bidi };\nvar RtlCharacters = /** @class */ (function () {\n    //#endregion\n    //#region constructors\n    function RtlCharacters() {\n        //#region fields\n        /// <summary>\n        /// Specifies the character types.\n        /// </summary>\n        this.types = [];\n        /// <summary>\n        /// Specifies the text order (RTL or LTR).\n        /// </summary>\n        this.textOrder = -1;\n        /// <summary>\n        /// Specifies the RTL character types.\n        /// </summary>\n        /* tslint:disable-next-line:prefer-array-literal */\n        this.rtlCharacterTypes = new Array(65536);\n        //#endregion\n        //#region constants\n        /// <summary>\n        /// Left-to-Right (Non-European or non-Arabic digits).\n        /// </summary>\n        this.L = 0;\n        /// <summary>\n        /// Left-to-Right Embedding\n        /// </summary>\n        this.LRE = 1;\n        /// <summary>\n        /// Left-to-Right Override\n        /// </summary>\n        this.LRO = 2;\n        /// <summary>\n        /// Right-to-Left (Hebrew alphabet, and related punctuation).\n        /// </summary>\n        this.R = 3;\n        /// <summary>\n        /// Right-to-Left Arabic \n        /// </summary>\n        this.AL = 4;\n        /// <summary>\n        /// Right-to-Left Embedding.\n        /// </summary>\n        this.RLE = 5;\n        /// <summary>\n        /// Right-to-Left Override\n        /// </summary>\n        this.RLO = 6;\n        /// <summary>\n        /// Pop Directional Format\n        /// </summary>\n        this.PDF = 7;\n        /// <summary>\n        /// European Number (European digits, Eastern Arabic-Indic digits).\n        /// </summary>\n        this.EN = 8;\n        /// <summary>\n        /// European Number Separator (Plus sign, Minus sign).\n        /// </summary>\n        this.ES = 9;\n        /// <summary>\n        /// European Number Terminator (Degree sign, currency symbols).\n        /// </summary>\n        this.ET = 10;\n        /// <summary>\n        /// Arabic Number (Arabic-Indic digits, Arabic decimal and thousands separators).\n        /// </summary>\n        this.AN = 11;\n        /// <summary>\n        /// Common Number Separator (Colon, Comma, Full Stop, No-Break Space.\n        /// </summary>\n        this.CS = 12;\n        /// <summary>\n        /// Nonspacing Mark (Characters with the General_Category values).\n        /// </summary>\n        this.NSM = 13;\n        /// <summary>\n        /// Boundary Neutral (Default ignorables, non-characters, and control characters, other than those explicitly given other types.)\n        /// </summary>\n        this.BN = 14;\n        /// <summary>\n        /// Paragraph Separator (Paragraph separator, appropriate Newline Functions, higher-level protocol paragraph determination).\n        /// </summary>\n        this.B = 15;\n        /// <summary>\n        /// \tSegment Separator (tab).\n        /// </summary>\n        this.S = 16;\n        /// <summary>\n        /// Whitespace (Space, Figure space, Line separator, Form feed, General Punctuation spaces).\n        /// </summary>\n        this.WS = 17;\n        /// <summary>\n        /// Other Neutrals (All other characters, including object replacement character).\n        /// </summary>\n        this.ON = 18;\n        /// <summary>\n        /// RTL character types.\n        /// </summary>\n        this.charTypes = [\n            this.L, this.EN, this.BN, this.ES, this.ES, this.S, this.ET, this.ET, this.B, this.AN, this.AN, this.S, this.CS, this.CS,\n            this.WS, this.NSM, this.NSM, this.B, this.BN, 27, this.BN, 28, 30, this.B, 31, 31, this.S, 32, 32, this.WS, 33, 34,\n            this.ON, 35, 37, this.ET, 38, 42, this.ON, 43, 43, this.ET, 44, 44, this.CS, 45, 45, this.ET, 46, 46, this.CS,\n            47, 47, this.CS, 48, 57, this.EN, 58, 58, this.CS, 59, 64, this.ON, 65, 90, this.L, 91, 96, this.ON, 97, 122, this.L,\n            123, 126, this.ON, 127, 132, this.BN, 133, 133, this.B, 134, 159, this.BN, 160, 160, this.CS,\n            161, 161, this.ON, 162, 165, this.ET, 166, 169, this.ON, 170, 170, this.L, 171, 175, this.ON,\n            176, 177, this.ET, 178, 179, this.EN, 180, 180, this.ON, 181, 181, this.L, 182, 184, this.ON,\n            185, 185, this.EN, 186, 186, this.L, 187, 191, this.ON, 192, 214, this.L, 215, 215, this.ON,\n            216, 246, this.L, 247, 247, this.ON, 248, 696, this.L, 697, 698, this.ON, 699, 705, this.L,\n            706, 719, this.ON, 720, 721, this.L, 722, 735, this.ON, 736, 740, this.L, 741, 749, this.ON,\n            750, 750, this.L, 751, 767, this.ON, 768, 855, this.NSM, 856, 860, this.L, 861, 879, this.NSM,\n            880, 883, this.L, 884, 885, this.ON, 886, 893, this.L, 894, 894, this.ON, 895, 899, this.L,\n            900, 901, this.ON, 902, 902, this.L, 903, 903, this.ON, 904, 1013, this.L, 1014, 1014, this.ON,\n            1015, 1154, this.L, 1155, 1158, this.NSM, 1159, 1159, this.L, 1160, 1161, this.NSM,\n            1162, 1417, this.L, 1418, 1418, this.ON, 1419, 1424, this.L, 1425, 1441, this.NSM,\n            1442, 1442, this.L, 1443, 1465, this.NSM, 1466, 1466, this.L, 1467, 1469, this.NSM,\n            1470, 1470, this.R, 1471, 1471, this.NSM, 1472, 1472, this.R, 1473, 1474, this.NSM,\n            1475, 1475, this.R, 1476, 1476, this.NSM, 1477, 1487, this.L, 1488, 1514, this.R,\n            1515, 1519, this.L, 1520, 1524, this.R, 1525, 1535, this.L, 1536, 1539, this.AL,\n            1540, 1547, this.L, 1548, 1548, this.CS, 1549, 1549, this.AL, 1550, 1551, this.ON,\n            1552, 1557, this.NSM, 1558, 1562, this.L, 1563, 1563, this.AL, 1564, 1566, this.L,\n            1567, 1567, this.AL, 1568, 1568, this.L, 1569, 1594, this.AL, 1595, 1599, this.L,\n            1600, 1610, this.AL, 1611, 1624, this.NSM, 1625, 1631, this.L, 1632, 1641, this.AN,\n            1642, 1642, this.ET, 1643, 1644, this.AN, 1645, 1647, this.AL, 1648, 1648, this.NSM,\n            1649, 1749, this.AL, 1750, 1756, this.NSM, 1757, 1757, this.AL, 1758, 1764, this.NSM,\n            1765, 1766, this.AL, 1767, 1768, this.NSM, 1769, 1769, this.ON, 1770, 1773, this.NSM,\n            1774, 1775, this.AL, 1776, 1785, this.EN, 1786, 1805, this.AL, 1806, 1806, this.L,\n            1807, 1807, this.BN, 1808, 1808, this.AL, 1809, 1809, this.NSM, 1810, 1839, this.AL,\n            1840, 1866, this.NSM, 1867, 1868, this.L, 1869, 1871, this.AL, 1872, 1919, this.L,\n            1920, 1957, this.AL, 1958, 1968, this.NSM, 1969, 1969, this.AL, 1970, 2304, this.L,\n            2305, 2306, this.NSM, 2307, 2363, this.L, 2364, 2364, this.NSM, 2365, 2368, this.L,\n            2369, 2376, this.NSM, 2377, 2380, this.L, 2381, 2381, this.NSM, 2382, 2384, this.L,\n            2385, 2388, this.NSM, 2389, 2401, this.L, 2402, 2403, this.NSM, 2404, 2432, this.L,\n            2433, 2433, this.NSM, 2434, 2491, this.L, 2492, 2492, this.NSM, 2493, 2496, this.L,\n            2497, 2500, this.NSM, 2501, 2508, this.L, 2509, 2509, this.NSM, 2510, 2529, this.L,\n            2530, 2531, this.NSM, 2532, 2545, this.L, 2546, 2547, this.ET, 2548, 2560, this.L,\n            2561, 2562, this.NSM, 2563, 2619, this.L, 2620, 2620, this.NSM, 2621, 2624, this.L,\n            2625, 2626, this.NSM, 2627, 2630, this.L, 2631, 2632, this.NSM, 2633, 2634, this.L,\n            2635, 2637, this.NSM, 2638, 2671, this.L, 2672, 2673, this.NSM, 2674, 2688, this.L,\n            2689, 2690, this.NSM, 2691, 2747, this.L, 2748, 2748, this.NSM, 2749, 2752, this.L,\n            2753, 2757, this.NSM, 2758, 2758, this.L, 2759, 2760, this.NSM, 2761, 2764, this.L,\n            2765, 2765, this.NSM, 2766, 2785, this.L, 2786, 2787, this.NSM, 2788, 2800, this.L,\n            2801, 2801, this.ET, 2802, 2816, this.L, 2817, 2817, this.NSM, 2818, 2875, this.L,\n            2876, 2876, this.NSM, 2877, 2878, this.L, 2879, 2879, this.NSM, 2880, 2880, this.L,\n            2881, 2883, this.NSM, 2884, 2892, this.L, 2893, 2893, this.NSM, 2894, 2901, this.L,\n            2902, 2902, this.NSM, 2903, 2945, this.L, 2946, 2946, this.NSM, 2947, 3007, this.L,\n            3008, 3008, this.NSM, 3009, 3020, this.L, 3021, 3021, this.NSM, 3022, 3058, this.L,\n            3059, 3064, this.ON, 3065, 3065, this.ET, 3066, 3066, this.ON, 3067, 3133, this.L,\n            3134, 3136, this.NSM, 3137, 3141, this.L, 3142, 3144, this.NSM, 3145, 3145, this.L,\n            3146, 3149, this.NSM, 3150, 3156, this.L, 3157, 3158, this.NSM, 3159, 3259, this.L,\n            3260, 3260, this.NSM, 3261, 3275, this.L, 3276, 3277, this.NSM, 3278, 3392, this.L,\n            3393, 3395, this.NSM, 3396, 3404, this.L, 3405, 3405, this.NSM, 3406, 3529, this.L,\n            3530, 3530, this.NSM, 3531, 3537, this.L, 3538, 3540, this.NSM, 3541, 3541, this.L,\n            3542, 3542, this.NSM, 3543, 3632, this.L, 3633, 3633, this.NSM, 3634, 3635, this.L,\n            3636, 3642, this.NSM, 3643, 3646, this.L, 3647, 3647, this.ET, 3648, 3654, this.L,\n            3655, 3662, this.NSM, 3663, 3760, this.L, 3761, 3761, this.NSM, 3762, 3763, this.L,\n            3764, 3769, this.NSM, 3770, 3770, this.L, 3771, 3772, this.NSM, 3773, 3783, this.L,\n            3784, 3789, this.NSM, 3790, 3863, this.L, 3864, 3865, this.NSM, 3866, 3892, this.L,\n            3893, 3893, this.NSM, 3894, 3894, this.L, 3895, 3895, this.NSM, 3896, 3896, this.L,\n            3897, 3897, this.NSM, 3898, 3901, this.ON, 3902, 3952, this.L, 3953, 3966, this.NSM,\n            3967, 3967, this.L, 3968, 3972, this.NSM, 3973, 3973, this.L, 3974, 3975, this.NSM,\n            3976, 3983, this.L, 3984, 3991, this.NSM, 3992, 3992, this.L, 3993, 4028, this.NSM,\n            4029, 4037, this.L, 4038, 4038, this.NSM, 4039, 4140, this.L, 4141, 4144, this.NSM,\n            4145, 4145, this.L, 4146, 4146, this.NSM, 4147, 4149, this.L, 4150, 4151, this.NSM,\n            4152, 4152, this.L, 4153, 4153, this.NSM, 4154, 4183, this.L, 4184, 4185, this.NSM,\n            4186, 5759, this.L, 5760, 5760, this.WS, 5761, 5786, this.L, 5787, 5788, this.ON,\n            5789, 5905, this.L, 5906, 5908, this.NSM, 5909, 5937, this.L, 5938, 5940, this.NSM,\n            5941, 5969, this.L, 5970, 5971, this.NSM, 5972, 6001, this.L, 6002, 6003, this.NSM,\n            6004, 6070, this.L, 6071, 6077, this.NSM, 6078, 6085, this.L, 6086, 6086, this.NSM,\n            6087, 6088, this.L, 6089, 6099, this.NSM, 6100, 6106, this.L, 6107, 6107, this.ET,\n            6108, 6108, this.L, 6109, 6109, this.NSM, 6110, 6127, this.L, 6128, 6137, this.ON,\n            6138, 6143, this.L, 6144, 6154, this.ON, 6155, 6157, this.NSM, 6158, 6158, this.WS,\n            6159, 6312, this.L, 6313, 6313, this.NSM, 6314, 6431, this.L, 6432, 6434, this.NSM,\n            6435, 6438, this.L, 6439, 6443, this.NSM, 6444, 6449, this.L, 6450, 6450, this.NSM,\n            6451, 6456, this.L, 6457, 6459, this.NSM, 6460, 6463, this.L, 6464, 6464, this.ON,\n            6465, 6467, this.L, 6468, 6469, this.ON, 6470, 6623, this.L, 6624, 6655, this.ON,\n            6656, 8124, this.L, 8125, 8125, this.ON, 8126, 8126, this.L, 8127, 8129, this.ON,\n            8130, 8140, this.L, 8141, 8143, this.ON, 8144, 8156, this.L, 8157, 8159, this.ON,\n            8160, 8172, this.L, 8173, 8175, this.ON, 8176, 8188, this.L, 8189, 8190, this.ON,\n            8191, 8191, this.L, 8192, 8202, this.WS, 8203, 8205, this.BN, 8206, 8206, this.L,\n            8207, 8207, this.R, 8208, 8231, this.ON, 8232, 8232, this.WS, 8233, 8233, this.B,\n            8234, 8234, this.LRE, 8235, 8235, this.RLE, 8236, 8236, this.PDF, 8237, 8237, this.LRO,\n            8238, 8238, this.RLO, 8239, 8239, this.WS, 8240, 8244, this.ET, 8245, 8276, this.ON,\n            8277, 8278, this.L, 8279, 8279, this.ON, 8280, 8286, this.L, 8287, 8287, this.WS,\n            8288, 8291, this.BN, 8292, 8297, this.L, 8298, 8303, this.BN, 8304, 8304, this.EN,\n            8305, 8307, this.L, 8308, 8313, this.EN, 8314, 8315, this.ET, 8316, 8318, this.ON,\n            8319, 8319, this.L, 8320, 8329, this.EN, 8330, 8331, this.ET, 8332, 8334, this.ON,\n            8335, 8351, this.L, 8352, 8369, this.ET, 8370, 8399, this.L, 8400, 8426, this.NSM,\n            8427, 8447, this.L, 8448, 8449, this.ON, 8450, 8450, this.L, 8451, 8454, this.ON,\n            8455, 8455, this.L, 8456, 8457, this.ON, 8458, 8467, this.L, 8468, 8468, this.ON,\n            8469, 8469, this.L, 8470, 8472, this.ON, 8473, 8477, this.L, 8478, 8483, this.ON,\n            8484, 8484, this.L, 8485, 8485, this.ON, 8486, 8486, this.L, 8487, 8487, this.ON,\n            8488, 8488, this.L, 8489, 8489, this.ON, 8490, 8493, this.L, 8494, 8494, this.ET,\n            8495, 8497, this.L, 8498, 8498, this.ON, 8499, 8505, this.L, 8506, 8507, this.ON,\n            8508, 8511, this.L, 8512, 8516, this.ON, 8517, 8521, this.L, 8522, 8523, this.ON,\n            8524, 8530, this.L, 8531, 8543, this.ON, 8544, 8591, this.L, 8592, 8721, this.ON,\n            8722, 8723, this.ET, 8724, 9013, this.ON, 9014, 9082, this.L, 9083, 9108, this.ON,\n            9109, 9109, this.L, 9110, 9168, this.ON, 9169, 9215, this.L, 9216, 9254, this.ON,\n            9255, 9279, this.L, 9280, 9290, this.ON, 9291, 9311, this.L, 9312, 9371, this.EN,\n            9372, 9449, this.L, 9450, 9450, this.EN, 9451, 9751, this.ON, 9752, 9752, this.L,\n            9753, 9853, this.ON, 9854, 9855, this.L, 9856, 9873, this.ON, 9874, 9887, this.L,\n            9888, 9889, this.ON, 9890, 9984, this.L, 9985, 9988, this.ON, 9989, 9989, this.L,\n            9990, 9993, this.ON, 9994, 9995, this.L, 9996, 10023, this.ON, 10024, 10024, this.L,\n            10025, 10059, this.ON, 10060, 10060, this.L, 10061, 10061, this.ON, 10062, 10062, this.L,\n            10063, 10066, this.ON, 10067, 10069, this.L, 10070, 10070, this.ON, 10071, 10071, this.L,\n            10072, 10078, this.ON, 10079, 10080, this.L, 10081, 10132, this.ON, 10133, 10135, this.L,\n            10136, 10159, this.ON, 10160, 10160, this.L, 10161, 10174, this.ON, 10175, 10191, this.L,\n            10192, 10219, this.ON, 10220, 10223, this.L, 10224, 11021, this.ON, 11022, 11903, this.L,\n            11904, 11929, this.ON, 11930, 11930, this.L, 11931, 12019, this.ON, 12020, 12031, this.L,\n            12032, 12245, this.ON, 12246, 12271, this.L, 12272, 12283, this.ON, 12284, 12287, this.L,\n            12288, 12288, this.WS, 12289, 12292, this.ON, 12293, 12295, this.L, 12296, 12320, this.ON,\n            12321, 12329, this.L, 12330, 12335, this.NSM, 12336, 12336, this.ON, 12337, 12341, this.L,\n            12342, 12343, this.ON, 12344, 12348, this.L, 12349, 12351, this.ON, 12352, 12440, this.L,\n            12441, 12442, this.NSM, 12443, 12444, this.ON, 12445, 12447, this.L, 12448, 12448, this.ON,\n            12449, 12538, this.L, 12539, 12539, this.ON, 12540, 12828, this.L, 12829, 12830, this.ON,\n            12831, 12879, this.L, 12880, 12895, this.ON, 12896, 12923, this.L, 12924, 12925, this.ON,\n            12926, 12976, this.L, 12977, 12991, this.ON, 12992, 13003, this.L, 13004, 13007, this.ON,\n            13008, 13174, this.L, 13175, 13178, this.ON, 13179, 13277, this.L, 13278, 13279, this.ON,\n            13280, 13310, this.L, 13311, 13311, this.ON, 13312, 19903, this.L, 19904, 19967, this.ON,\n            19968, 42127, this.L, 42128, 42182, this.ON, 42183, 64284, this.L, 64285, 64285, this.R,\n            64286, 64286, this.NSM, 64287, 64296, this.R, 64297, 64297, this.ET, 64298, 64310, this.R,\n            64311, 64311, this.L, 64312, 64316, this.R, 64317, 64317, this.L, 64318, 64318, this.R,\n            64319, 64319, this.L, 64320, 64321, this.R, 64322, 64322, this.L, 64323, 64324, this.R,\n            64325, 64325, this.L, 64326, 64335, this.R, 64336, 64433, this.AL, 64434, 64466, this.L,\n            64467, 64829, this.AL, 64830, 64831, this.ON, 64832, 64847, this.L, 64848, 64911, this.AL,\n            64912, 64913, this.L, 64914, 64967, this.AL, 64968, 65007, this.L, 65008, 65020, this.AL,\n            65021, 65021, this.ON, 65022, 65023, this.L, 65024, 65039, this.NSM, 65040, 65055, this.L,\n            65056, 65059, this.NSM, 65060, 65071, this.L, 65072, 65103, this.ON, 65104, 65104, this.CS,\n            65105, 65105, this.ON, 65106, 65106, this.CS, 65107, 65107, this.L, 65108, 65108, this.ON,\n            65109, 65109, this.CS, 65110, 65118, this.ON, 65119, 65119, this.ET, 65120, 65121, this.ON,\n            65122, 65123, this.ET, 65124, 65126, this.ON, 65127, 65127, this.L, 65128, 65128, this.ON,\n            65129, 65130, this.ET, 65131, 65131, this.ON, 65132, 65135, this.L, 65136, 65140, this.AL,\n            65141, 65141, this.L, 65142, 65276, this.AL, 65277, 65278, this.L, 65279, 65279, this.BN,\n            65280, 65280, this.L, 65281, 65282, this.ON, 65283, 65285, this.ET, 65286, 65290, this.ON,\n            65291, 65291, this.ET, 65292, 65292, this.CS, 65293, 65293, this.ET, 65294, 65294, this.CS,\n            65295, 65295, this.ES, 65296, 65305, this.EN, 65306, 65306, this.CS, 65307, 65312, this.ON,\n            65313, 65338, this.L, 65339, 65344, this.ON, 65345, 65370, this.L, 65371, 65381, this.ON,\n            65382, 65503, this.L, 65504, 65505, this.ET, 65506, 65508, this.ON, 65509, 65510, this.ET,\n            65511, 65511, this.L, 65512, 65518, this.ON, 65519, 65528, this.L, 65529, 65531, this.BN,\n            65532, 65533, this.ON, 65534, 65535, this.L\n        ];\n        for (var i = 0; i < this.charTypes.length; ++i) {\n            var start = this.charTypes[i];\n            var end = this.charTypes[++i];\n            var b = this.charTypes[++i];\n            while (start <= end) {\n                this.rtlCharacterTypes[start++] = b;\n            }\n        }\n    }\n    //#endregion\n    //#region implementation\n    RtlCharacters.prototype.getVisualOrder = function (inputText, isRtl) {\n        this.types = this.getCharacterCode(inputText);\n        this.textOrder = isRtl ? this.LRE : this.L;\n        this.doVisualOrder();\n        var result = [];\n        for (var i = 0; i < this.levels.length; i++) {\n            result[i] = this.levels[i];\n        }\n        return result;\n    };\n    RtlCharacters.prototype.getCharacterCode = function (text) {\n        var characterCodes = [];\n        for (var i = 0; i < text.length; i++) {\n            characterCodes[i] = this.rtlCharacterTypes[text[i].charCodeAt(0)];\n        }\n        return characterCodes;\n    };\n    RtlCharacters.prototype.setDefaultLevels = function () {\n        for (var i = 0; i < this.length; i++) {\n            this.levels[i] = this.textOrder;\n        }\n    };\n    RtlCharacters.prototype.setLevels = function () {\n        this.setDefaultLevels();\n        for (var n = 0; n < this.length; ++n) {\n            var level = this.levels[n];\n            if ((level & 0x80) !== 0) {\n                level &= 0x7f;\n                this.result[n] = ((level & 0x1) === 0) ? this.L : this.R;\n            }\n            this.levels[n] = level;\n        }\n    };\n    RtlCharacters.prototype.updateLevels = function (index, level, length) {\n        if ((level & 1) === 0) {\n            for (var i = index; i < length; ++i) {\n                if (this.result[i] === this.R) {\n                    this.levels[i] += 1;\n                }\n                else if (this.result[i] !== this.L) {\n                    this.levels[i] += 2;\n                }\n            }\n        }\n        else {\n            for (var i = index; i < length; ++i) {\n                if (this.result[i] !== this.R) {\n                    this.levels[i] += 1;\n                }\n            }\n        }\n    };\n    RtlCharacters.prototype.doVisualOrder = function () {\n        this.length = this.types.length;\n        this.result = this.types;\n        this.levels = [];\n        this.setLevels();\n        this.length = this.getEmbeddedCharactersLength();\n        var preview = this.textOrder;\n        var i = 0;\n        while (i < this.length) {\n            var level = this.levels[i];\n            var preType = ((Math.max(preview, level) & 0x1) === 0) ? this.L : this.R;\n            var length_1 = i + 1;\n            while (length_1 < this.length && this.levels[length_1] === level) {\n                ++length_1;\n            }\n            var success = length_1 < this.length ? this.levels[length_1] : this.textOrder;\n            var type = ((Math.max(success, level) & 0x1) === 0) ? this.L : this.R;\n            this.checkNSM(i, length_1, level, preType, type);\n            this.updateLevels(i, level, length_1);\n            preview = level;\n            i = length_1;\n        }\n        this.checkEmbeddedCharacters(this.length);\n    };\n    RtlCharacters.prototype.getEmbeddedCharactersLength = function () {\n        var index = 0;\n        for (var i = 0; i < this.length; ++i) {\n            if (!(this.types[i] === this.LRE || this.types[i] === this.RLE || this.types[i] === this.LRO ||\n                this.types[i] === this.RLO || this.types[i] === this.PDF || this.types[i] === this.BN)) {\n                this.result[index] = this.result[i];\n                this.levels[index] = this.levels[i];\n                index++;\n            }\n        }\n        return index;\n    };\n    RtlCharacters.prototype.checkEmbeddedCharacters = function (length) {\n        for (var i = this.types.length - 1; i >= 0; --i) {\n            if (this.types[i] === this.LRE || this.types[i] === this.RLE || this.types[i] === this.LRO ||\n                this.types[i] === this.RLO || this.types[i] === this.PDF || this.types[i] === this.BN) {\n                this.result[i] = this.types[i];\n                this.levels[i] = -1;\n            }\n            else {\n                length -= 1;\n                this.result[i] = this.result[length];\n                this.levels[i] = this.levels[length];\n            }\n        }\n        for (var i = 0; i < this.types.length; i++) {\n            if (this.levels[i] === -1) {\n                if (i === 0) {\n                    this.levels[i] = this.textOrder;\n                }\n                else {\n                    this.levels[i] = this.levels[i - 1];\n                }\n            }\n        }\n    };\n    RtlCharacters.prototype.checkNSM = function (index, length, level, startType, endType) {\n        var charType = startType;\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.NSM) {\n                this.result[i] = charType;\n            }\n            else {\n                charType = this.result[i];\n            }\n        }\n        this.checkEuropeanDigits(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkEuropeanDigits = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.EN) {\n                for (var j = i - 1; j >= index; --j) {\n                    if (this.result[j] === this.L || this.result[j] === this.R || this.result[j] === this.AL) {\n                        if (this.result[j] === this.AL) {\n                            this.result[i] = this.AN;\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n        this.checkArabicCharacters(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkArabicCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.AL) {\n                this.result[i] = this.R;\n            }\n        }\n        this.checkEuropeanNumberSeparator(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkEuropeanNumberSeparator = function (index, length, level, startType, endType) {\n        for (var i = index + 1; i < length - 1; ++i) {\n            if (this.result[i] === this.ES || this.result[i] === this.CS) {\n                var preview = this.result[i - 1];\n                var success = this.result[i + 1];\n                if (preview === this.EN && success === this.EN) {\n                    this.result[i] = this.EN;\n                }\n                else if (this.result[i] === this.CS && preview === this.AN && success === this.AN) {\n                    this.result[i] = this.AN;\n                }\n            }\n        }\n        this.checkEuropeanNumberTerminator(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkEuropeanNumberTerminator = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.ET) {\n                var s = i;\n                var b = [];\n                b.push(this.ET);\n                var l = this.getLength(s, length, b);\n                var data = s === index ? startType : this.result[s - 1];\n                if (data !== this.EN) {\n                    data = (l === length) ? endType : this.result[l];\n                }\n                if (data === this.EN) {\n                    for (var j = s; j < l; ++j) {\n                        this.result[j] = this.EN;\n                    }\n                }\n                i = l;\n            }\n        }\n        this.checkOtherNeutrals(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkOtherNeutrals = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.ES || this.result[i] === this.ET || this.result[i] === this.CS) {\n                this.result[i] = this.ON;\n            }\n        }\n        this.checkOtherCharacters(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.checkOtherCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.EN) {\n                var pst = startType;\n                for (var j = i - 1; j >= index; --j) {\n                    if (this.result[j] === this.L || this.result[j] === this.R) {\n                        pst = this.result[j];\n                        break;\n                    }\n                }\n                if (pst === this.L) {\n                    this.result[i] = this.L;\n                }\n            }\n        }\n        this.checkCommanCharacters(index, length, level, startType, endType);\n    };\n    RtlCharacters.prototype.getLength = function (index, length, validSet) {\n        --index;\n        while (++index < length) {\n            var t = this.result[index];\n            for (var i = 0; i < validSet.length; ++i) {\n                if (t === validSet[i]) {\n                    index = this.getLength(++index, length, validSet);\n                }\n            }\n            return index;\n        }\n        return length;\n    };\n    RtlCharacters.prototype.checkCommanCharacters = function (index, length, level, startType, endType) {\n        for (var i = index; i < length; ++i) {\n            if (this.result[i] === this.WS || this.result[i] === this.ON || this.result[i] === this.B ||\n                this.result[i] === this.S) {\n                var s = i;\n                var byte = [this.B, this.S, this.WS, this.ON];\n                var l = this.getLength(s, length, byte);\n                var lt = 0;\n                var tt = 0;\n                var rt = 0;\n                if (s === index) {\n                    lt = startType;\n                }\n                else {\n                    lt = this.result[s - 1];\n                    if (lt === this.AN) {\n                        lt = this.R;\n                    }\n                    else if (lt === this.EN) {\n                        lt = this.R;\n                    }\n                }\n                if (l === length) {\n                    tt = endType;\n                }\n                else {\n                    tt = this.result[l];\n                    if (tt === this.AN) {\n                        tt = this.R;\n                    }\n                    else if (tt === this.EN) {\n                        tt = this.R;\n                    }\n                }\n                if (lt === tt) {\n                    rt = lt;\n                }\n                else {\n                    rt = ((level & 0x1) === 0) ? this.L : this.R;\n                }\n                for (var j = s; j < l; ++j) {\n                    this.result[j] = rt;\n                }\n                i = l;\n            }\n        }\n    };\n    return RtlCharacters;\n}());\nexport { RtlCharacters };\n","import { PdfString } from './../../primitives/pdf-string';\nimport { ArabicShapeRenderer } from './rtl/rtl-text-shape';\nimport { PdfTextDirection } from './../enum';\nimport { Bidi } from './rtl/rtl-bidirectional';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar RtlRenderer = /** @class */ (function () {\n    function RtlRenderer() {\n        //region Constants\n        /// Open bracket symbol.\n        /// </summary>\n        this.openBracket = '(';\n        /// <summary>\n        /// Close bracket symbol.\n        /// </summary>\n        this.closeBracket = ')';\n        //#endregion\n    }\n    //#region Constructors\n    /// <summary>\n    /// Initializes a new instance of the <see cref=\"RtlRenderer\"/> class.\n    /// </summary>\n    // public constructor() {\n    // }\n    //#region Public Methods\n    /// <summary>\n    /// Layouts text. Changes blocks position in the RTL text.\n    /// Ligates the text if needed.\n    /// </summary>\n    /// <param name=\"line\">Line of the text.</param>\n    /// <param name=\"font\">Font to be used for string printing.</param>\n    /// <param name=\"rtl\">Font alignment.</param>\n    /// <param name=\"wordSpace\">Indicates whether Word Spacing used or not.</param>\n    /// <returns>Layout string.</returns>\n    RtlRenderer.prototype.layout = function (line, font, rtl, wordSpace, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        var result = [];\n        if (font.Unicode) {\n            result = this.customLayout(line, rtl, format, font, wordSpace);\n        }\n        else {\n            result = [];\n            result[0] = line;\n        }\n        return result;\n    };\n    /// <summary>\n    /// Layouts a string and splits it by the words and using correct lay outing.\n    /// </summary>\n    /// <param name=\"line\">Text line.</param>\n    /// <param name=\"font\">Font object.</param>\n    /// <param name=\"rtl\">Indicates whether RTL should be applied.</param>\n    /// <param name=\"wordSpace\">Indicates whether word spacing is used.</param>\n    /// <returns>Array of words if converted, null otherwise.</returns>\n    RtlRenderer.prototype.splitLayout = function (line, font, rtl, wordSpace, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        var words = [];\n        var system = false;\n        if (!system || words == null) {\n            words = this.customSplitLayout(line, font, rtl, wordSpace, format);\n        }\n        return words;\n    };\n    //#endregion\n    //#region Implementation\n    // private isEnglish( word : string) : boolean\n    // {\n    //     let c : string = (word.length > 0) ? word[0] : '';\n    //     return (c >= '0' && c < 'ÿ');\n    // }\n    // private keepOrder( words : string, startIndex : number, count: number, result : string[], resultIndex : number) : void\n    // {\n    //     for (let i : number = 0, ri = resultIndex - count + 1; i < count; ++i, ++ri) {\n    //         result[ri] = words[i + startIndex];\n    //     }\n    // }\n    /// <summary>\n    /// Uses system API to layout the text.\n    /// </summary>\n    /// <param name=\"line\">Line of the text to be layouted.</param>\n    /// <param name=\"font\">Font which is used for text printing.</param>\n    /// <param name=\"rtl\">Indicates whether we use RTL or RTL lay outing of the text container.</param>\n    /// <returns>Layout string.</returns>\n    /* tslint:disable-next-line:max-line-length */\n    RtlRenderer.prototype.getGlyphIndex = function (line, font, rtl, /*out*/ glyphs, custom) {\n        var success = true;\n        var fail = false;\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        glyphs = null;\n        if (line.length === 0) {\n            return { success: fail, glyphs: glyphs };\n        }\n        var renderer = new ArabicShapeRenderer();\n        var text = renderer.shape(line, 0);\n        var internalFont = font.fontInternal;\n        var ttfReader = internalFont.ttfReader;\n        glyphs = new Uint16Array(text.length);\n        var i = 0;\n        for (var k = 0, len = text.length; k < len; k++) {\n            var ch = text[k];\n            var glyphInfo = ttfReader.getGlyph(ch);\n            if (glyphInfo !== null && typeof glyphInfo !== 'undefined') {\n                glyphs[i++] = (glyphInfo).index;\n            }\n        }\n        return { success: success, glyphs: glyphs };\n    };\n    /* tslint:disable-next-line:max-line-length */\n    RtlRenderer.prototype.customLayout = function (line, rtl, format, font, wordSpace) {\n        if (wordSpace === null || typeof wordSpace === 'undefined') {\n            if (line == null) {\n                throw new Error('ArgumentNullException : line');\n            }\n            var result = null;\n            //bidirectional order.\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                var bidi = new Bidi();\n                result = bidi.getLogicalToVisualString(line, rtl);\n            }\n            return result;\n        }\n        else {\n            if (line == null) {\n                throw new Error('ArgumentNullException : line');\n            }\n            if (font == null) {\n                throw new Error('ArgumentNullException : font');\n            }\n            var layouted = null;\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                var renderer = new ArabicShapeRenderer();\n                var txt = renderer.shape(line, 0);\n                layouted = this.customLayout(txt, rtl, format);\n            }\n            // else {\n            //     layouted = this.customLayout(line, rtl, format);\n            // }\n            // We have unicode font, but from the file.        \n            var result = [];\n            // Split the text by words if word spacing is not default.\n            if (wordSpace) {\n                var words = layouted.split('');\n                var count = words.length;\n                for (var i = 0; i < count; i++) {\n                    words[i] = this.addChars(font, words[i]);\n                }\n                result = words;\n            }\n            else {\n                result = [];\n                result[0] = this.addChars(font, layouted);\n            }\n            return result;\n        }\n    };\n    /// <summary>\n    /// Add information about used glyphs to the font.\n    /// </summary>\n    /// <param name=\"font\">Font used for text rendering.</param>\n    /// <param name=\"glyphs\">Array of used glyphs.</param>\n    /// <returns>String in the form to be written to the file.</returns>\n    RtlRenderer.prototype.addChars = function (font, glyphs) {\n        var line = glyphs;\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        var text = line;\n        var internalFont = font.fontInternal;\n        var ttfReader = internalFont.ttfReader;\n        font.setSymbols(text);\n        // Reconvert string according to unicode standard.\n        text = ttfReader.convertString(text);\n        var bytes = PdfString.toUnicodeArray(text, false);\n        text = PdfString.byteToString(bytes);\n        return text;\n        // else {\n        //     if (font == null) {\n        //         throw new Error('ArgumentNullException : font');\n        //     }\n        //     if (glyphs == null) {\n        //         throw new Error('ArgumentNullException : glyphs');\n        //     }\n        //     // Mark the chars as used.\n        //     let text : string = '';\n        //     font.setSymbols(glyphs);\n        //     // Create string from the glyphs.\n        //     \n        //     let chars : string[] = [];\n        //     for (let i : number = 0; i < glyphs.length; i++) {\n        //         chars[i] = glyphs[i].toString();\n        //     }\n        //     for (let j : number = 0 ; j < chars.length; j++) {\n        //         text = text + chars[j];\n        //     }\n        //     let bytes : number[] = PdfString.toUnicodeArray(text, false);\n        //     text = PdfString.byteToString(bytes);\n        //     return text;\n        // }\n    };\n    /// <summary>\n    /// Layouts a string and splits it by the words by using custom lay outing.\n    /// </summary>\n    /// <param name=\"line\">Text line.</param>\n    /// <param name=\"font\">Font object.</param>\n    /// <param name=\"rtl\">Indicates whether RTL should be applied.</param>\n    /// <param name=\"wordSpace\">Indicates whether word spacing is used.</param>\n    /// <returns>Array of words if converted, null otherwise.</returns>\n    /* tslint:disable-next-line:max-line-length */\n    RtlRenderer.prototype.customSplitLayout = function (line, font, rtl, wordSpace, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException : line');\n        }\n        if (font == null) {\n            throw new Error('ArgumentNullException : font');\n        }\n        var reversedLine = this.customLayout(line, rtl, format);\n        var words = reversedLine.split('');\n        return words;\n    };\n    return RtlRenderer;\n}());\nexport { RtlRenderer };\n","/**\n * public Enum for `PdfLayoutType`.\n * @private\n */\nexport var PdfLayoutType;\n(function (PdfLayoutType) {\n    /**\n     * Specifies the type of `Paginate`.\n     * @private\n     */\n    PdfLayoutType[PdfLayoutType[\"Paginate\"] = 0] = \"Paginate\";\n    /**\n     * Specifies the type of `OnePage`.\n     * @private\n     */\n    PdfLayoutType[PdfLayoutType[\"OnePage\"] = 1] = \"OnePage\";\n})(PdfLayoutType || (PdfLayoutType = {}));\n/**\n * public Enum for `PdfLayoutBreakType`.\n * @private\n */\nexport var PdfLayoutBreakType;\n(function (PdfLayoutBreakType) {\n    /**\n     * Specifies the type of `FitPage`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitPage\"] = 0] = \"FitPage\";\n    /**\n     * Specifies the type of `FitElement`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitElement\"] = 1] = \"FitElement\";\n    /**\n     * Specifies the type of `FitColumnsToPage`.\n     * @private\n     */\n    PdfLayoutBreakType[PdfLayoutBreakType[\"FitColumnsToPage\"] = 2] = \"FitColumnsToPage\";\n})(PdfLayoutBreakType || (PdfLayoutBreakType = {}));\nexport var PathPointType;\n(function (PathPointType) {\n    /**\n     * Specifies the path point type of `Start`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Start\"] = 0] = \"Start\";\n    /**\n     * Specifies the path point type of `Line`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Line\"] = 1] = \"Line\";\n    /**\n     * Specifies the path point type of `Bezier3`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Bezier3\"] = 3] = \"Bezier3\";\n    /**\n     * Specifies the path point type of `Bezier`.\n     * @private\n     */\n    PathPointType[PathPointType[\"Bezier\"] = 3] = \"Bezier\";\n    /**\n     * Specifies the path point type of `PathTypeMask`.\n     * @private\n     */\n    PathPointType[PathPointType[\"PathTypeMask\"] = 7] = \"PathTypeMask\";\n    /**\n     * Specifies the path point type of `DashMode`.\n     * @private\n     */\n    PathPointType[PathPointType[\"DashMode\"] = 16] = \"DashMode\";\n    /**\n     * Specifies the path point type of `PathMarker`.\n     * @private\n     */\n    PathPointType[PathPointType[\"PathMarker\"] = 32] = \"PathMarker\";\n    /**\n     * Specifies the path point type of `CloseSubpath`.\n     * @private\n     */\n    PathPointType[PathPointType[\"CloseSubpath\"] = 128] = \"CloseSubpath\";\n})(PathPointType || (PathPointType = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfColorSpace } from './../enum';\nimport { PdfColor } from './../pdf-color';\nimport { PdfBrush } from './pdf-brush';\nimport { PdfDictionary } from '../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfBoolean } from './../../primitives/pdf-boolean';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfName } from '../../primitives/pdf-name';\nimport { PdfNumber } from '../../primitives/pdf-number';\nimport { PdfReferenceHolder } from '../../primitives/pdf-reference';\n/**\n * `PdfGradientBrush` class provides objects used to fill the interiors of graphical shapes such as rectangles,\n * ellipses, pies, polygons, and paths.\n * @private\n */\nvar PdfGradientBrush = /** @class */ (function (_super) {\n    __extends(PdfGradientBrush, _super);\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGradientBrush` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfGradientBrush(shading) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Local variable to store the background color.\n         * @private\n         */\n        _this.mbackground = new PdfColor(255, 255, 255);\n        /**\n         * Local variable to store the stroking color.\n         * @private\n         */\n        _this.mbStroking = false;\n        /**\n         * Local variable to store the function.\n         * @private\n         */\n        _this.mfunction = null;\n        /**\n         * Local variable to store the DictionaryProperties.\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        _this.mpatternDictionary = new PdfDictionary();\n        _this.mpatternDictionary.items.setValue(_this.dictionaryProperties.type, new PdfName(_this.dictionaryProperties.pattern));\n        _this.mpatternDictionary.items.setValue(_this.dictionaryProperties.patternType, new PdfNumber(2));\n        _this.shading = shading;\n        _this.colorSpace = PdfColorSpace.Rgb;\n        return _this;\n    }\n    Object.defineProperty(PdfGradientBrush.prototype, \"background\", {\n        //Properties\n        /**\n         * Gets or sets the background color of the brush.\n         * @public\n         */\n        get: function () {\n            return this.mbackground;\n        },\n        set: function (value) {\n            this.mbackground = value;\n            var sh = this.shading;\n            if (value.isEmpty) {\n                sh.remove(this.dictionaryProperties.background);\n            }\n            else {\n                sh.items.setValue(this.dictionaryProperties.background, value.toArray(this.colorSpace));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"antiAlias\", {\n        /**\n         * Gets or sets a value indicating whether use anti aliasing algorithm.\n         * @public\n         */\n        get: function () {\n            var sh = this.shading;\n            var aa = (sh.items.getValue(this.dictionaryProperties.antiAlias));\n            return aa.value;\n        },\n        set: function (value) {\n            var sh = this.shading;\n            var aa = (sh.items.getValue(this.dictionaryProperties.antiAlias));\n            if ((aa == null && typeof aa === 'undefined')) {\n                aa = new PdfBoolean(value);\n                sh.items.setValue(this.dictionaryProperties.antiAlias, aa);\n            }\n            else {\n                aa.value = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"function\", {\n        /**\n         * Gets or sets the function of the brush.\n         * @protected\n         */\n        get: function () {\n            return this.mfunction;\n        },\n        set: function (value) {\n            this.mfunction = value;\n            if (value != null && typeof value !== 'undefined') {\n                this.shading.items.setValue(this.dictionaryProperties.function, new PdfReferenceHolder(this.mfunction));\n            }\n            else {\n                this.shading.remove(this.dictionaryProperties.function);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"bBox\", {\n        /**\n         * Gets or sets the boundary box of the brush.\n         * @protected\n         */\n        get: function () {\n            var sh = this.shading;\n            var box = (sh.items.getValue(this.dictionaryProperties.bBox));\n            return box;\n        },\n        set: function (value) {\n            var sh = this.shading;\n            if (value == null && typeof value === 'undefined') {\n                sh.remove(this.dictionaryProperties.bBox);\n            }\n            else {\n                sh.items.setValue(this.dictionaryProperties.bBox, value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the color space of the brush.\n         * @public\n         */\n        get: function () {\n            return this.mcolorSpace;\n        },\n        set: function (value) {\n            var colorSpace = this.shading.items.getValue(this.dictionaryProperties.colorSpace);\n            if ((value !== this.mcolorSpace) || (colorSpace == null)) {\n                this.mcolorSpace = value;\n                var csValue = this.colorSpaceToDeviceName(value);\n                this.shading.items.setValue(this.dictionaryProperties.colorSpace, new PdfName(csValue));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"stroking\", {\n        /**\n         * Gets or sets a value indicating whether this PdfGradientBrush is stroking.\n         * @public\n         */\n        get: function () {\n            return this.mbStroking;\n        },\n        set: function (value) {\n            this.mbStroking = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"patternDictionary\", {\n        /**\n         * Gets the pattern dictionary.\n         * @protected\n         */\n        get: function () {\n            if (this.mpatternDictionary == null) {\n                this.mpatternDictionary = new PdfDictionary();\n            }\n            return this.mpatternDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"shading\", {\n        /**\n         * Gets or sets the shading dictionary.\n         * @protected\n         */\n        get: function () {\n            return this.mshading;\n        },\n        set: function (value) {\n            if (value == null) {\n                throw new Error('ArgumentNullException : Shading');\n            }\n            if (value !== this.mshading) {\n                this.mshading = value;\n                this.patternDictionary.items.setValue(this.dictionaryProperties.shading, new PdfReferenceHolder(this.mshading));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGradientBrush.prototype, \"matrix\", {\n        /**\n         * Gets or sets the transformation matrix.\n         * @public\n         */\n        get: function () {\n            return this.mmatrix;\n        },\n        set: function (value) {\n            if (value == null) {\n                throw new Error('ArgumentNullException : Matrix');\n            }\n            if (value !== this.mmatrix) {\n                this.mmatrix = value.clone();\n                var m = new PdfArray(this.mmatrix.matrix.elements);\n                this.mpatternDictionary.items.setValue(this.dictionaryProperties.matrix, m);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Overrides\n    /**\n     * Monitors the changes of the brush and modify PDF state respectfully.\n     * @param brush The brush.\n     * @param streamWriter The stream writer.\n     * @param getResources The get resources delegate.\n     * @param saveChanges if set to true the changes should be saved anyway.\n     * @param currentColorSpace The current color space.\n     */\n    /* tslint:disable-next-line:max-line-length */\n    PdfGradientBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        var diff = false;\n        if (brush instanceof PdfGradientBrush) {\n            if ((this.colorSpace !== currentColorSpace)) {\n                this.colorSpace = currentColorSpace;\n                this.resetFunction();\n            }\n            //  Set the /Pattern colour space.\n            streamWriter.setColorSpace('Pattern', this.mbStroking);\n            //  Set the pattern for non-stroking operations.\n            var resources = getResources.getResources();\n            var name_1 = resources.getName(this);\n            streamWriter.setColourWithPattern(null, name_1, this.mbStroking);\n            diff = true;\n        }\n        return diff;\n    };\n    /**\n     * Resets the changes, which were made by the brush.\n     * In other words resets the state to the initial one.\n     * @param streamWriter The stream writer.\n     */\n    PdfGradientBrush.prototype.resetChanges = function (streamWriter) {\n        //  Unable reset.\n    };\n    //Implementation\n    /**\n     * Converts colorspace enum to a PDF name.\n     * @param colorSpace The color space enum value.\n     */\n    PdfGradientBrush.prototype.colorSpaceToDeviceName = function (colorSpace) {\n        var result;\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                result = 'DeviceRGB';\n                break;\n        }\n        return result;\n    };\n    /**\n     * Resets the pattern dictionary.\n     * @param dictionary A new pattern dictionary.\n     */\n    PdfGradientBrush.prototype.resetPatternDictionary = function (dictionary) {\n        this.mpatternDictionary = dictionary;\n    };\n    /**\n     * Clones the anti aliasing value.\n     * @param brush The brush.\n     */\n    PdfGradientBrush.prototype.cloneAntiAliasingValue = function (brush) {\n        if ((brush == null)) {\n            throw new Error('ArgumentNullException : brush');\n        }\n        var sh = this.shading;\n        var aa = (sh.items.getValue(this.dictionaryProperties.antiAlias));\n        if ((aa != null)) {\n            brush.shading.items.setValue(this.dictionaryProperties.antiAlias, new PdfBoolean(aa.value));\n        }\n    };\n    /**\n     * Clones the background value.\n     * @param brush The brush.\n     */\n    PdfGradientBrush.prototype.cloneBackgroundValue = function (brush) {\n        var background = this.background;\n        if (!background.isEmpty) {\n            brush.background = background;\n        }\n    };\n    Object.defineProperty(PdfGradientBrush.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.patternDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGradientBrush;\n}(PdfBrush));\nexport { PdfGradientBrush };\n","/**\n * PdfTemplate.ts class for EJ2-PDF\n */\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfGraphics } from './../pdf-graphics';\nimport { PdfResources } from './../pdf-resources';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PointF, SizeF, RectangleF } from './../../drawing/pdf-drawing';\nimport { GetResourceEventHandler } from './../pdf-graphics';\n/**\n * Represents `Pdf Template` object.\n * @private\n */\nvar PdfTemplate = /** @class */ (function () {\n    function PdfTemplate(arg1, arg2) {\n        /**\n         * Initialize an instance for `DictionaryProperties` class.\n         * @private\n         * @hidden\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Checks whether the transformation 'is performed'.\n         * @default true\n         * @private\n         */\n        this.writeTransformation = true;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n            this.content = new PdfStream();\n            var tempSize = new SizeF(arg1.width, arg1.height);\n            this.setSize(tempSize);\n            this.initialize();\n        }\n        else {\n            this.content = new PdfStream();\n            this.setSize(new SizeF(arg1, arg2));\n            this.initialize();\n        }\n    }\n    Object.defineProperty(PdfTemplate.prototype, \"size\", {\n        //Properties\n        /**\n         * Gets the size of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.templateSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"width\", {\n        /**\n         * Gets the width of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.size.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"height\", {\n        /**\n         * Gets the height of the 'PdfTemplate'.\n         */\n        get: function () {\n            return this.size.height;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplate.prototype, \"graphics\", {\n        /**\n         * Gets the `graphics` of the 'PdfTemplate'.\n         */\n        get: function () {\n            if (this.pdfGraphics == null || typeof this.pdfGraphics === 'undefined') {\n                var gr = new GetResourceEventHandler(this);\n                var g = new PdfGraphics(this.size, gr, this.content);\n                this.pdfGraphics = g;\n                // if(this.writeTransformation) {\n                // Transform co-ordinates to Top/Left.\n                this.pdfGraphics.initializeCoordinates();\n                // }\n            }\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the resources and modifies the template dictionary.\n     * @private\n     */\n    PdfTemplate.prototype.getResources = function () {\n        if (this.resources == null) {\n            this.resources = new PdfResources();\n            this.content.items.setValue(this.dictionaryProperties.resources, this.resources);\n        }\n        return this.resources;\n    };\n    // Public methods\n    /**\n     * `Initialize` the type and subtype of the template.\n     * @private\n     */\n    PdfTemplate.prototype.initialize = function () {\n        this.addType();\n        this.addSubType();\n    };\n    /**\n     * `Adds type key`.\n     * @private\n     */\n    PdfTemplate.prototype.addType = function () {\n        var value = new PdfName(this.dictionaryProperties.xObject);\n        this.content.items.setValue(this.dictionaryProperties.type, value);\n    };\n    /**\n     * `Adds SubType key`.\n     * @private\n     */\n    PdfTemplate.prototype.addSubType = function () {\n        var value = new PdfName(this.dictionaryProperties.form);\n        this.content.items.setValue(this.dictionaryProperties.subtype, value);\n    };\n    PdfTemplate.prototype.reset = function (size) {\n        if (typeof size === 'undefined') {\n            if (this.resources != null) {\n                this.resources = null;\n                this.content.remove(this.dictionaryProperties.resources);\n            }\n            if (this.graphics != null) {\n                this.graphics.reset(this.size);\n            }\n        }\n        else {\n            this.setSize(size);\n            this.reset();\n        }\n    };\n    /**\n     * `Set the size` of the 'PdfTemplate'.\n     * @private\n     */\n    PdfTemplate.prototype.setSize = function (size) {\n        var rect = new RectangleF(new PointF(0, 0), size);\n        var val = PdfArray.fromRectangle(rect);\n        this.content.items.setValue(this.dictionaryProperties.bBox, val);\n        this.templateSize = size;\n    };\n    Object.defineProperty(PdfTemplate.prototype, \"element\", {\n        // /**\n        //  * Returns the value of current graphics.\n        //  * @private\n        //  */\n        // public GetGraphics(g : PdfGraphics) : PdfGraphics {\n        //     if (this.graphics == null || typeof this.graphics === 'undefined') {\n        //         this.graphics = g;\n        //         this.graphics.Size = this.Size;\n        //         this.graphics.StreamWriter = new PdfStreamWriter(this.content)\n        //         this.graphics.Initialize();\n        //         if(this.writeTransformation) {\n        //             this.graphics.InitializeCoordinates();\n        //         }\n        //     }\n        //     return this.graphics;\n        // }\n        // IPdfWrapper Members\n        /**\n         * Gets the `content stream` of 'PdfTemplate' class.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTemplate;\n}());\nexport { PdfTemplate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfResources.ts class for EJ2-PDF\n */\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { TemporaryDictionary } from './../collections/object-object-pair/dictionary';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfCrossTable } from './../input-output/pdf-cross-table';\nimport { PdfFont } from './fonts/pdf-font';\nimport { PdfTemplate } from './figures/pdf-template';\nimport { PdfBrush } from './brushes/pdf-brush';\nimport { PdfTransparency } from './pdf-transparency';\nimport { PdfBitmap } from './../graphics/images/pdf-bitmap';\nimport { PdfImage } from './../graphics/images/pdf-image';\nimport { PdfGradientBrush } from './brushes/pdf-gradient-brush';\nimport { PdfTilingBrush } from './brushes/pdf-tiling-brush';\n/**\n * `PdfResources` class used to set resource contents like font, image.\n * @private\n */\nvar PdfResources = /** @class */ (function (_super) {\n    __extends(PdfResources, _super);\n    function PdfResources(baseDictionary) {\n        var _this = _super.call(this, baseDictionary) || this;\n        /**\n         * Dictionary for the `properties names`.\n         * @private\n         */\n        _this.properties = new PdfDictionary();\n        return _this;\n    }\n    Object.defineProperty(PdfResources.prototype, \"names\", {\n        //Properties\n        /**\n         * Gets the `font names`.\n         * @private\n         */\n        get: function () {\n            return this.getNames();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfResources.prototype, \"document\", {\n        /**\n         * Get or set the `page document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        set: function (value) {\n            this.pdfDocument = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Public Methods\n    /**\n     * `Generates name` for the object and adds to the resource if the object is new.\n     * @private\n     */\n    PdfResources.prototype.getName = function (obj) {\n        var primitive = obj.element;\n        var name = null;\n        if (this.names.containsKey(primitive)) {\n            name = this.names.getValue(primitive);\n        }\n        // Object is new.\n        if (name == null) {\n            var sName = this.generateName();\n            name = new PdfName(sName);\n            this.names.setValue(primitive, name);\n            if (obj instanceof PdfFont) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfTemplate) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfGradientBrush || obj instanceof PdfTilingBrush) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfTransparency) {\n                this.add(obj, name);\n            }\n            else if (obj instanceof PdfImage || obj instanceof PdfBitmap) {\n                this.add(obj, name);\n            }\n        }\n        return name;\n    };\n    /**\n     * Gets `resource names` to font dictionaries.\n     * @private\n     */\n    PdfResources.prototype.getNames = function () {\n        if (this.pdfNames == null) {\n            this.pdfNames = new TemporaryDictionary();\n        }\n        var fonts = this.items.getValue(this.dictionaryProperties.font);\n        if (fonts != null) {\n            var reference = fonts;\n            var dictionary = fonts;\n            dictionary = PdfCrossTable.dereference(fonts);\n        }\n        return this.pdfNames;\n    };\n    /**\n     * Add `RequireProcedureSet` into procset array.\n     * @private\n     */\n    PdfResources.prototype.requireProcedureSet = function (procedureSetName) {\n        if (procedureSetName == null) {\n            throw new Error('ArgumentNullException:procedureSetName');\n        }\n        var procSets = this.items.getValue(this.dictionaryProperties.procset);\n        if (procSets == null) {\n            procSets = new PdfArray();\n            this.items.setValue(this.dictionaryProperties.procset, procSets);\n        }\n        var name = new PdfName(procedureSetName);\n        if (!procSets.contains(name)) {\n            procSets.add(name);\n        }\n    };\n    //Helper Methods\n    /**\n     * `Remove font` from array.\n     * @private\n     */\n    PdfResources.prototype.removeFont = function (name) {\n        var key = null;\n        var keys = this.pdfNames.keys();\n        for (var index = 0; index < this.pdfNames.size(); index++) {\n            if (this.pdfNames.getValue(keys[index]) === new PdfName(name)) {\n                key = keys[index];\n                break;\n            }\n        }\n        if (key != null) {\n            this.pdfNames.remove(key);\n        }\n    };\n    /**\n     * Generates `Unique string name`.\n     * @private\n     */\n    PdfResources.prototype.generateName = function () {\n        var name = Guid.getNewGuidString();\n        return name;\n    };\n    PdfResources.prototype.add = function (arg1, arg2) {\n        if (arg1 instanceof PdfFont) {\n            var dictionary = null;\n            var fonts = this.items.getValue(this.dictionaryProperties.font);\n            if (fonts != null) {\n                var reference = fonts;\n                dictionary = fonts;\n                dictionary = fonts;\n            }\n            else {\n                dictionary = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.font, dictionary);\n            }\n            dictionary.items.setValue(arg2.value, new PdfReferenceHolder(arg1.element));\n        }\n        else if (arg1 instanceof PdfTemplate) {\n            var xobjects = void 0;\n            xobjects = this.items.getValue(this.dictionaryProperties.xObject);\n            // Create fonts dictionary.\n            if (xobjects == null) {\n                xobjects = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.xObject, xobjects);\n            }\n            xobjects.items.setValue(arg2.value, new PdfReferenceHolder(arg1.element));\n        }\n        else if (arg1 instanceof PdfBrush) {\n            if (arg1 instanceof PdfGradientBrush || arg1 instanceof PdfTilingBrush) {\n                var savable = arg1.element;\n                if (savable != null) {\n                    var pattern = this.items.getValue(this.dictionaryProperties.pattern);\n                    // Create a new pattern dictionary.\n                    if (pattern == null) {\n                        pattern = new PdfDictionary();\n                        this.items.setValue(this.dictionaryProperties.pattern, pattern);\n                    }\n                    pattern.items.setValue(arg2.value, new PdfReferenceHolder(savable));\n                }\n            }\n        }\n        else if (arg1 instanceof PdfTransparency) {\n            var savable = arg1.element;\n            var transDic = null;\n            transDic = this.items.getValue(this.dictionaryProperties.extGState);\n            // Create a new pattern dictionary.\n            if (transDic == null) {\n                transDic = new PdfDictionary();\n                this.items.setValue(this.dictionaryProperties.extGState, transDic);\n            }\n            transDic.items.setValue(arg2.value, new PdfReferenceHolder(savable));\n        }\n        else {\n            /* tslint:disable */\n            var xobjects = this.Dictionary.items.getValue(this.dictionaryProperties.xObject);\n            var parentXObjects = void 0;\n            if (typeof this.pdfDocument !== 'undefined') {\n                parentXObjects = this.pdfDocument.sections.element.items.getValue(this.dictionaryProperties.resources).items.getValue(this.dictionaryProperties.xObject);\n            }\n            var values = this.Dictionary.items.values();\n            var hasSameImageStream = false;\n            var oldReference = void 0;\n            if (typeof this.pdfDocument !== 'undefined' && (typeof parentXObjects === undefined || parentXObjects == null)) {\n                parentXObjects = new PdfDictionary();\n                this.pdfDocument.sections.element.items.getValue(this.dictionaryProperties.resources).items.setValue(this.dictionaryProperties.xObject, parentXObjects);\n            }\n            else if (typeof this.pdfDocument !== 'undefined') {\n                var values_1 = parentXObjects.items.values();\n                for (var i = 0; i < values_1.length; i++) {\n                    if (typeof values_1[i] !== 'undefined' && typeof values_1[i].element !== 'undefined') {\n                        if (values_1[i].element.data[0] === arg1.element.data[0]) {\n                            oldReference = values_1[i];\n                            hasSameImageStream = true;\n                        }\n                    }\n                }\n            }\n            if (xobjects == null) {\n                xobjects = new PdfDictionary();\n                this.Dictionary.items.setValue(this.dictionaryProperties.xObject, xobjects);\n            }\n            if (hasSameImageStream && typeof oldReference !== 'undefined') {\n                xobjects.items.setValue(arg2.value, oldReference);\n            }\n            else {\n                var reference = new PdfReferenceHolder(arg1.element);\n                xobjects.items.setValue(arg2.value, reference);\n                if (typeof this.pdfDocument !== 'undefined') {\n                    parentXObjects.items.setValue(arg2.value, reference);\n                }\n            }\n            /* tslint:enable */\n        }\n    };\n    return PdfResources;\n}(PdfDictionary));\nexport { PdfResources };\n/* tslint:disable */\n/**\n * Used to create new guid for resources.\n * @private\n */\nvar Guid = /** @class */ (function () {\n    function Guid() {\n    }\n    /**\n     * Generate `new GUID`.\n     * @private\n     */\n    Guid.getNewGuidString = function () {\n        return 'aaaaaaaa-aaaa-4aaa-baaa-aaaaaaaaaaaa'.replace(/[ab]/g, function (c) {\n            var random = Math.random() * 16 | 0;\n            var result = c === 'a' ? random : (random & 0x3 | 0x8);\n            return result.toString(16);\n        });\n    };\n    return Guid;\n}());\nexport { Guid };\n/* tslint:enable */ \n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { GetResourceEventHandler } from './../pdf-graphics';\nimport { PdfBrush } from './pdf-brush';\nimport { PointF, SizeF, RectangleF, Rectangle } from './../../drawing/pdf-drawing';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfGraphics } from './../pdf-graphics';\nimport { PdfResources } from './../pdf-resources';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfPage } from './../../pages/pdf-page';\n/**\n * `PdfTilingBrush` Implements a colored tiling brush.\n */\nvar PdfTilingBrush = /** @class */ (function (_super) {\n    __extends(PdfTilingBrush, _super);\n    /**\n     * Initializes a new instance of the `PdfTilingBrush` class.\n     * @public\n     */\n    function PdfTilingBrush(arg1, arg2) {\n        var _this = _super.call(this) || this;\n        /**\n         * Local variable to store Stroking.\n         * @private\n         */\n        _this.mStroking = false;\n        /**\n         * Local variable to store the tile start location.\n         * @private\n         */\n        _this.mLocation = new PointF(0, 0);\n        /**\n         * Local variable to store the dictionary properties.\n         * @private\n         */\n        _this.mDictionaryProperties = new DictionaryProperties();\n        var rect = null;\n        if (arg1 instanceof Rectangle) {\n            rect = arg1;\n        }\n        else if (arg1 instanceof SizeF) {\n            rect = new Rectangle(0, 0, arg1.width, arg1.height);\n        }\n        if (arg2 !== null && arg2 instanceof PdfPage) {\n            _this.mPage = arg2;\n        }\n        _this.brushStream = new PdfStream();\n        _this.mResources = new PdfResources();\n        _this.brushStream.items.setValue(_this.mDictionaryProperties.resources, _this.mResources);\n        _this.setBox(rect);\n        _this.setObligatoryFields();\n        if (arg2 !== null && arg2 instanceof PdfPage) {\n            _this.mPage = arg2;\n            _this.graphics.colorSpace = arg2.document.colorSpace;\n        }\n        return _this;\n    }\n    /**\n     * Initializes a new instance of the `PdfTilingBrush` class.\n     * @private\n     * @param rectangle The size of the smallest brush cell.\n     * @param page The Current Page Object.\n     * @param location The Tile start location.\n     * @param matrix The matrix.\n     */\n    PdfTilingBrush.prototype.initialize = function (rectangle, page, location, matrix) {\n        this.mPage = page;\n        this.mLocation = location;\n        this.mTransformationMatrix = matrix;\n        this.tempBrushStream = this.brushStream;\n        this.brushStream = new PdfStream();\n        var tempResource = new PdfResources();\n        this.brushStream.items.setValue(this.mDictionaryProperties.resources, tempResource);\n        this.setBox(rectangle);\n        this.setObligatoryFields();\n        return this;\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"location\", {\n        //Properties\n        /**\n         * Location representing the start position of the tiles.\n         * @public\n         */\n        get: function () {\n            return this.mLocation;\n        },\n        set: function (value) {\n            this.mLocation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the obligatory fields.\n     * @private\n     */\n    PdfTilingBrush.prototype.setObligatoryFields = function () {\n        this.brushStream.items.setValue(this.mDictionaryProperties.patternType, new PdfNumber(1));\n        //  Tiling brush.\n        this.brushStream.items.setValue(this.mDictionaryProperties.paintType, new PdfNumber(1));\n        //  Coloured.\n        this.brushStream.items.setValue(this.mDictionaryProperties.tilingType, new PdfNumber(1));\n        //  Constant spacing.\n        this.brushStream.items.setValue(this.mDictionaryProperties.xStep, new PdfNumber((this.mBox.right - this.mBox.left)));\n        this.brushStream.items.setValue(this.mDictionaryProperties.yStep, new PdfNumber((this.mBox.bottom - this.mBox.top)));\n        if ((this.mPage != null) && (this.mLocation != null)) {\n            if ((this.mTransformationMatrix == null && typeof this.mTransformationMatrix === 'undefined')) {\n                // Transform the tile origin to fit the location\n                var tileTransform = (this.mPage.size.height % this.rectangle.size.height) - (this.mLocation.y);\n                /* tslint:disable-next-line:max-line-length */\n                this.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray([1, 0, 0, 1, this.mLocation.x, tileTransform]));\n            }\n            else {\n                var tileTransform = 0;\n                // Transform the tile origin to fit the location\n                var elements = this.mTransformationMatrix.matrix.elements;\n                if ((this.mPage.size.height > this.rectangle.size.height)) {\n                    tileTransform = (this.mTransformationMatrix.matrix.offsetY\n                        - (this.mPage.size.height % this.rectangle.size.height));\n                }\n                else {\n                    tileTransform = ((this.mPage.size.height % this.rectangle.size.height) + this.mTransformationMatrix.matrix.offsetY);\n                }\n                this.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray([\n                    elements[0], elements[1], elements[2], elements[3], elements[4], tileTransform\n                ]));\n            }\n        }\n    };\n    /**\n     * Sets the BBox coordinates.\n     * @private\n     */\n    PdfTilingBrush.prototype.setBox = function (box) {\n        this.mBox = box;\n        var rect = new RectangleF(this.mBox.left, this.mBox.top, this.mBox.right, this.mBox.bottom);\n        this.brushStream.items.setValue(this.mDictionaryProperties.bBox, PdfArray.fromRectangle(rect));\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"rectangle\", {\n        //Properties\n        /**\n         * Gets the boundary box of the smallest brush cell.\n         * @public\n         */\n        get: function () {\n            return this.mBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTilingBrush.prototype, \"size\", {\n        /**\n         * Gets the size of the smallest brush cell.\n         * @public\n         */\n        get: function () {\n            return this.mBox.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTilingBrush.prototype, \"graphics\", {\n        /**\n         * Gets Graphics context of the brush.\n         */\n        get: function () {\n            if ((this.mGraphics == null && typeof this.mGraphics === 'undefined')) {\n                var gr = new GetResourceEventHandler(this);\n                var g = new PdfGraphics(this.size, gr, this.brushStream);\n                this.mGraphics = g;\n                this.mResources = this.getResources();\n                this.mGraphics.initializeCoordinates();\n            }\n            return this.mGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the resources and modifies the template dictionary.\n     * @public\n     */\n    PdfTilingBrush.prototype.getResources = function () {\n        return this.mResources;\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"stroking\", {\n        /**\n         * Gets or sets a value indicating whether this PdfTilingBrush\n         * is used for stroking operations.\n         */\n        get: function () {\n            return this.mStroking;\n        },\n        set: function (value) {\n            this.mStroking = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //PdfBrush methods\n    /**\n     * Creates a new copy of a brush.\n     * @public\n     */\n    PdfTilingBrush.prototype.clone = function () {\n        var brush = this.initialize(this.rectangle, this.mPage, this.location, this.mTransformationMatrix);\n        if ((this.mTransformationMatrix != null) && (this.mTransformationMatrix.matrix != null)) {\n            /* tslint:disable-next-line:max-line-length */\n            brush.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray(this.mTransformationMatrix.matrix.elements));\n        }\n        brush.brushStream.data = this.tempBrushStream.data;\n        brush.mResources = new PdfResources(this.mResources);\n        brush.brushStream.items.setValue(this.mDictionaryProperties.resources, brush.mResources);\n        return brush;\n    };\n    /**\n     * Monitors the changes of the brush and modify PDF state respectfully.\n     * @param brush The brush\n     * @param streamWriter The stream writer\n     * @param getResources The get resources delegate.\n     * @param saveChanges if set to true the changes should be saved anyway.\n     * @param currentColorSpace The current color space.\n     */\n    /* tslint:disable-next-line:max-line-length */\n    PdfTilingBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        var diff = false;\n        if (brush !== this) {\n            //  Set the Pattern colour space.\n            streamWriter.setColorSpace('Pattern', this.mStroking);\n            //  Set the pattern for non-stroking operations.\n            var resources1 = getResources.getResources();\n            var name1 = resources1.getName(this);\n            streamWriter.setColourWithPattern(null, name1, this.mStroking);\n            diff = true;\n        }\n        else if (brush instanceof PdfTilingBrush) {\n            //  Set the /Pattern colour space.\n            streamWriter.setColorSpace('Pattern', this.mStroking);\n            //  Set the pattern for non-stroking operations.\n            var resources = getResources.getResources();\n            var name_1 = resources.getName(this);\n            streamWriter.setColourWithPattern(null, name_1, this.mStroking);\n            diff = true;\n        }\n        return diff;\n    };\n    /**\n     * Resets the changes, which were made by the brush.\n     * In other words resets the state to the initial one.\n     * @param streamWriter The stream writer.\n     */\n    PdfTilingBrush.prototype.resetChanges = function (streamWriter) {\n        //  We shouldn't do anything to reset changes.\n        //  All changes will be reset automatically by setting a new colour space.\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @public\n         */\n        get: function () {\n            return this.brushStream;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTilingBrush;\n}(PdfBrush));\nexport { PdfTilingBrush };\n","/**\n * PdfGraphics.ts class for EJ2-PDF\n */\nimport { PdfColorSpace, TextRenderingMode, PdfFillMode, PdfTextAlignment } from './enum';\nimport { PdfVerticalAlignment, PdfBlendMode } from './enum';\nimport { PdfSubSuperScript, PdfWordWrapType } from './fonts/enum';\nimport { PdfStreamWriter } from './../input-output/pdf-stream-writer';\nimport { PdfPen } from './pdf-pen';\nimport { PdfBrush } from './brushes/pdf-brush';\nimport { PdfSolidBrush } from './brushes/pdf-solid-brush';\nimport { PdfFont } from './fonts/pdf-font';\nimport { PdfTransformationMatrix, Matrix } from './pdf-transformation-matrix';\nimport { PointF, SizeF, RectangleF } from './../drawing/pdf-drawing';\nimport { ProcedureSets } from './constants';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfStringFormat } from './fonts/pdf-string-format';\nimport { TemporaryDictionary } from './../collections/object-object-pair/dictionary';\nimport { PdfTransparency } from './pdf-transparency';\nimport { PdfStringLayouter, LineType } from './fonts/string-layouter';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { StringTokenizer } from './fonts/string-tokenizer';\nimport { PdfAutomaticFieldInfoCollection } from './../document/automatic-fields/automatic-field-info-collection';\nimport { PdfAutomaticFieldInfo } from './../document/automatic-fields/automatic-field-info';\nimport { Operators } from './../input-output/pdf-operators';\nimport { UnicodeTrueTypeFont } from './fonts/unicode-true-type-font';\nimport { InternalEnum } from './../primitives/pdf-string';\nimport { RtlRenderer } from './fonts/rtl-renderer';\nimport { PdfTextDirection } from './enum';\nimport { PathPointType } from './figures/enum';\nimport { PdfGradientBrush } from './../../implementation/graphics/brushes/pdf-gradient-brush';\nimport { PdfTilingBrush } from './brushes/pdf-tiling-brush';\n/**\n * `PdfGraphics` class represents a graphics context of the objects.\n * It's used for performing all the graphics operations.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * //\n * //graphics of the page\n * let page1Graphics : PdfGraphics = page1.graphics;\n * // draw the text on the page1 graphics\n * page1Graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * //\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfGraphics = /** @class */ (function () {\n    function PdfGraphics(arg1, arg2, arg3) {\n        /**\n         * Represents the `Current color space`.\n         * @private\n         */\n        this.currentColorSpace = PdfColorSpace.Rgb;\n        /**\n         * Stores `previous rendering mode`.\n         * @private\n         */\n        this.previousTextRenderingMode = TextRenderingMode.Fill;\n        /**\n         * Previous `character spacing` value or 0.\n         * @private\n         */\n        this.previousCharacterSpacing = 0.0;\n        /**\n         * Previous `word spacing` value or 0.\n         * @private\n         */\n        this.previousWordSpacing = 0.0;\n        /**\n         * The `previously used text scaling` value.\n         * @private\n         */\n        this.previousTextScaling = 100.0;\n        /**\n         * Instance of `ProcedureSets` class.\n         * @private\n         */\n        this.procedureSets = new ProcedureSets();\n        /**\n         * To check wihether it is a `direct text rendering`.\n         * @default true\n         * @private\n         */\n        this.isNormalRender = true;\n        /**\n         * check whether to `use font size` to calculate the shift.\n         * @default false\n         * @private\n         */\n        this.isUseFontSize = false;\n        /**\n         * check whether the font is in `italic type`.\n         * @default false\n         * @private\n         */\n        this.isItalic = false;\n        /**\n         * Check whether it is an `emf Text Matrix`.\n         * @default false\n         * @private\n         */\n        this.isEmfTextScaled = false;\n        /**\n         * Check whether it is an `emf` call.\n         * @default false\n         * @private\n         */\n        this.isEmf = false;\n        /**\n         * Check whether it is an `emf plus` call.\n         * @default false\n         * @private\n         */\n        this.isEmfPlus = false;\n        /**\n         * Check whether it is in `base line format`.\n         * @default true\n         * @private\n         */\n        this.isBaselineFormat = true;\n        /**\n         * Emf Text `Scaling Factor`.\n         * @private\n         */\n        this.emfScalingFactor = new SizeF(0, 0);\n        /**\n         * To check whether the `last color space` of document and garphics is saved.\n         * @private\n         */\n        this.colorSpaceChanged = false;\n        /**\n         * Stores an instance of `DictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isOverloadWithPosition = false;\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        this.isPointOverload = false;\n        /**\n         * Current colorspaces.\n         * @hidden\n         * @private\n         */\n        this.currentColorSpaces = ['RGB', 'CMYK', 'GrayScale', 'Indexed'];\n        /**\n         * Checks the current image `is optimized` or not.\n         * @default false.\n         * @private\n         */\n        this.isImageOptimized = false;\n        /**\n         * Stores the `graphics states`.\n         * @private\n         */\n        this.graphicsState = [];\n        /**\n         * Indicates whether the object `had trasparency`.\n         * @default false\n         * @private\n         */\n        this.istransparencySet = false;\n        /**\n         * Stores the instance of `PdfAutomaticFieldInfoCollection` class .\n         * @default null\n         * @private\n         */\n        this.internalAutomaticFields = null;\n        /**\n         * Stores the index of the start line that should draw with in the next page.\n         * @private\n         */\n        this.startCutIndex = -1;\n        this.getResources = arg2;\n        this.canvasSize = arg1;\n        if (arg3 instanceof PdfStreamWriter) {\n            this.pdfStreamWriter = arg3;\n        }\n        else {\n            this.pdfStreamWriter = new PdfStreamWriter(arg3);\n        }\n        this.initialize();\n    }\n    Object.defineProperty(PdfGraphics.prototype, \"stringLayoutResult\", {\n        //  Properties\n        /**\n         * Returns the `result` after drawing string.\n         * @private\n         */\n        get: function () {\n            return this.pdfStringLayoutResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"size\", {\n        /**\n         * Gets the `size` of the canvas.\n         * @private\n         */\n        get: function () {\n            return this.canvasSize;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"mediaBoxUpperRightBound\", {\n        /**\n         * Gets and Sets the value of `MediaBox upper right bound`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.internalMediaBoxUpperRightBound === 'undefined') {\n                this.internalMediaBoxUpperRightBound = 0;\n            }\n            return this.internalMediaBoxUpperRightBound;\n        },\n        set: function (value) {\n            this.internalMediaBoxUpperRightBound = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"clientSize\", {\n        /**\n         * Gets the `size` of the canvas reduced by margins and page templates.\n         * @private\n         */\n        get: function () {\n            return new SizeF(this.clipBounds.width, this.clipBounds.height);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the current `color space` of the document\n         * @private\n         */\n        get: function () {\n            return this.currentColorSpace;\n        },\n        set: function (value) {\n            this.currentColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"streamWriter\", {\n        /**\n         * Gets the `stream writer`.\n         * @private\n         */\n        get: function () {\n            return this.pdfStreamWriter;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"matrix\", {\n        /**\n         * Gets the `transformation matrix` reflecting current transformation.\n         * @private\n         */\n        get: function () {\n            if (this.transformationMatrix == null) {\n                this.transformationMatrix = new PdfTransformationMatrix();\n            }\n            return this.transformationMatrix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"layer\", {\n        /**\n         * Gets the `layer` for the graphics, if exists.\n         * @private\n         */\n        get: function () {\n            return this.pageLayer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"page\", {\n        /**\n         * Gets the `page` for this graphics, if exists.\n         * @private\n         */\n        get: function () {\n            return this.pageLayer.page;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphics.prototype, \"automaticFields\", {\n        get: function () {\n            if (this.internalAutomaticFields == null || typeof this.internalAutomaticFields === 'undefined') {\n                this.internalAutomaticFields = new PdfAutomaticFieldInfoCollection();\n            }\n            return this.internalAutomaticFields;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Initializes` this instance.\n     * @private\n     */\n    PdfGraphics.prototype.initialize = function () {\n        this.bStateSaved = false;\n        this.currentPen = null;\n        this.currentBrush = null;\n        this.currentFont = null;\n        this.currentColorSpace = PdfColorSpace.Rgb;\n        this.bCSInitialized = false;\n        this.transformationMatrix = null;\n        this.previousTextRenderingMode = (-1); //.Fill;\n        this.previousCharacterSpacing = -1.0;\n        this.previousWordSpacing = -1.0;\n        this.previousTextScaling = -100.0;\n        // this.m_trasparencies = null;\n        this.currentStringFormat = null;\n        this.clipBounds = new RectangleF(new PointF(0, 0), this.size);\n        this.getResources.getResources().requireProcedureSet(this.procedureSets.pdf);\n    };\n    PdfGraphics.prototype.drawPdfTemplate = function (template, location, size) {\n        if (typeof size === 'undefined') {\n            if (template == null) {\n                throw Error('ArgumentNullException-template');\n            }\n            this.drawPdfTemplate(template, location, template.size);\n        }\n        else {\n            // let crossTable : PdfCrossTable = null;\n            // if (this.pageLayer != null) {\n            //     crossTable = (this.page as PdfPage).section.parentDocument.crossTable;\n            // }\n            if (template == null) {\n                throw Error('ArgumentNullException-template');\n            }\n            var scaleX = (template.width > 0) ? size.width / template.width : 1;\n            var scaleY = (template.height > 0) ? size.height / template.height : 1;\n            var bNeedScale = !(scaleX === 1 && scaleY === 1);\n            // Save state.\n            var state = this.save();\n            // Take into consideration that rect location is bottom/left.\n            var matrix = new PdfTransformationMatrix();\n            if (this.pageLayer != null) {\n                this.getTranslateTransform(location.x, location.y + size.height, matrix);\n            }\n            if (bNeedScale) {\n                this.getScaleTransform(scaleX, scaleY, matrix);\n            }\n            this.pdfStreamWriter.modifyCtm(matrix);\n            // Output template.\n            var resources = this.getResources.getResources();\n            var name_1 = resources.getName(template);\n            this.pdfStreamWriter.executeObject(name_1);\n            // Restore state.\n            this.restore(state);\n            //Transfer automatic fields from template.\n            var g = template.graphics;\n            if (g != null) {\n                for (var index = 0; index < g.automaticFields.automaticFields.length; index++) {\n                    var fieldInfo = g.automaticFields.automaticFields[index];\n                    var newLocation = new PointF(fieldInfo.location.x + location.x, fieldInfo.location.y + location.y);\n                    var scalingX = template.size.width == 0 ? 0 : size.width / template.size.width;\n                    var scalingY = template.size.height == 0 ? 0 : size.height / template.size.height;\n                    this.automaticFields.add(new PdfAutomaticFieldInfo(fieldInfo.field, newLocation, scalingX, scalingY));\n                    this.page.dictionary.modify();\n                }\n            }\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageB);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageC);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.imageI);\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n        }\n    };\n    /**\n     * @public\n     */\n    PdfGraphics.prototype.drawString = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9) {\n        if (typeof arg1 === 'string' && arg2 instanceof PdfFont && (arg3 instanceof PdfPen || arg3 === null) && (arg4 instanceof PdfBrush || arg4 === null) && typeof arg5 === 'number' && typeof arg6 === 'number' && (arg7 instanceof PdfStringFormat || arg7 === null) && typeof arg8 === 'undefined') {\n            this.isOverloadWithPosition = true;\n            this.drawString(arg1, arg2, arg3, arg4, arg5, arg6, (this.clientSize.width - arg5), 0, arg7);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            var temparg6 = arg6;\n            var temparg7 = arg7;\n            var temparg8 = arg8;\n            var temparg9 = arg9;\n            var layouter = new PdfStringLayouter();\n            var result = layouter.layout(arg1, arg2, temparg9, new SizeF(temparg7, temparg8), this.isOverloadWithPosition, this.clientSize);\n            if (!result.empty) {\n                var rect = this.checkCorrectLayoutRectangle(result.actualSize, temparg5, temparg6, temparg9);\n                if (temparg7 <= 0) {\n                    temparg5 = rect.x;\n                    temparg7 = rect.width;\n                }\n                if (temparg8 <= 0) {\n                    temparg6 = rect.y;\n                    temparg8 = rect.height;\n                }\n                this.drawStringLayoutResult(result, arg2, temparg3, temparg4, new RectangleF(temparg5, temparg6, temparg7, temparg8), temparg9);\n                this.isEmfTextScaled = false;\n                this.emfScalingFactor = new SizeF(0, 0);\n            }\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n            this.isNormalRender = true;\n            this.pdfStringLayoutResult = result;\n            this.isUseFontSize = false;\n        }\n    };\n    PdfGraphics.prototype.drawLine = function (arg1, arg2, arg3, arg4, arg5) {\n        if (arg2 instanceof PointF) {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            this.drawLine(arg1, temparg2.x, temparg2.y, temparg3.x, temparg3.y);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            this.stateControl(arg1, null, null);\n            var sw = this.streamWriter;\n            sw.beginPath(temparg2, temparg3);\n            sw.appendLineSegment(temparg4, temparg5);\n            sw.strokePath();\n            this.getResources.getResources().requireProcedureSet(this.procedureSets.pdf);\n        }\n    };\n    PdfGraphics.prototype.drawRectangle = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof PdfPen && typeof arg2 === 'number') {\n            var temparg3 = arg3;\n            this.drawRectangle(arg1, null, arg2, temparg3, arg4, arg5);\n        }\n        else if (arg1 instanceof PdfBrush && typeof arg2 === 'number') {\n            var temparg3 = arg3;\n            this.drawRectangle(null, arg1, arg2, temparg3, arg4, arg5);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            var temparg6 = arg6;\n            if ((arg2 instanceof PdfTilingBrush)) {\n                this.bCSInitialized = false;\n                var xOffset = (this.matrix.matrix.offsetX + temparg3);\n                var yOffset = void 0;\n                if (((this.layer != null) && (this.layer.page != null))) {\n                    yOffset = ((this.layer.page.size.height - this.matrix.matrix.offsetY) + temparg4);\n                }\n                else {\n                    yOffset = ((this.clientSize.height - this.matrix.matrix.offsetY) + temparg4);\n                }\n                (arg2).location = new PointF(xOffset, yOffset);\n                (arg2).graphics.colorSpace = this.colorSpace;\n            }\n            else if ((arg2 instanceof PdfGradientBrush)) {\n                arg2.colorSpace = this.colorSpace;\n            }\n            if (arg2 instanceof PdfSolidBrush && arg2.color.isEmpty) {\n                arg2 = null;\n            }\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            this.stateControl(temparg1, temparg2, null);\n            this.streamWriter.appendRectangle(temparg3, temparg4, temparg5, temparg6);\n            this.drawPathHelper(temparg1, temparg2, false);\n        }\n    };\n    /**\n     * Draw rounded rectangle specified by a brush, pen, coordinate pair, a width, a height and a radius.\n     * ```typescript\n     * // Create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // Create a new page\n     * let page : PdfPage = document.pages.add();\n     * // Create brush for draw rectangle\n     * let brush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(238, 130, 238));\n     * // Create a new PDF pen\n     * let pen: PdfPen = new PdfPen(new PdfColor(255, 0, 0), 1);\n     * // Draw rounded rectangle\n     * page.graphics.drawRoundedRectangle(pen, brush, 20, 20, 100, 50, 5);\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param pen Stoke color of the rectangle.\n     * @param brush Fill color of the rectangle.\n     * @param x The x-coordinate of the upper-left corner of the rectangle to draw.\n     * @param y The y-coordinate of the upper-left corner of the rectangle to draw.\n     * @param width Width of the rectangle to draw.\n     * @param height Height of the rectangle to draw.\n     * @param radius Radius of the arcs to draw.\n     */\n    PdfGraphics.prototype.drawRoundedRectangle = function (pen, brush, x, y, width, height, radius) {\n        if (pen === null) {\n            throw new Error('pen');\n        }\n        if (brush === null) {\n            throw new Error('brush');\n        }\n        if (radius === 0) {\n            this.drawRectangle(pen, brush, x, y, width, height);\n        }\n        else {\n            var bounds = [x, y, width, height];\n            var diameter = radius * 2;\n            var size = [diameter, diameter];\n            var arc = [bounds[0], bounds[1], size[0], size[1]];\n            this._pathPoints = [];\n            this._pathTypes = [];\n            var startFigure = true;\n            startFigure = this._addArc(arc[0], arc[1], arc[2], arc[3], 180, 90, startFigure);\n            arc[0] = (bounds[0] + bounds[2]) - diameter;\n            startFigure = this._addArc(arc[0], arc[1], arc[2], arc[3], 270, 90, startFigure);\n            arc[1] = (bounds[1] + bounds[3]) - diameter;\n            startFigure = this._addArc(arc[0], arc[1], arc[2], arc[3], 0, 90, startFigure);\n            arc[0] = bounds[0];\n            startFigure = this._addArc(arc[0], arc[1], arc[2], arc[3], 90, 90, startFigure);\n            var index = this._pathPoints.length - 1;\n            var type = ((this._pathTypes[index]));\n            type = (type | PathPointType.CloseSubpath);\n            this._pathTypes[index] = (type);\n            this._drawPath(pen, brush, this._pathPoints, this._pathTypes, PdfFillMode.Alternate);\n            this._pathPoints = [];\n            this._pathTypes = [];\n        }\n    };\n    PdfGraphics.prototype._addArc = function (x, y, width, height, startAngle, sweepAngle, startFigure) {\n        var points = this._getBezierArcPoints(x, y, (x + width), (y + height), startAngle, sweepAngle);\n        for (var i = 0; i < points.length; i = i + 8) {\n            var point = [points[i], points[i + 1], points[i + 2], points[i + 3], points[i + 4], points[i + 5], points[i + 6], points[i + 7]];\n            startFigure = this._addArcPoints(point, PathPointType.Bezier3, startFigure);\n        }\n        return startFigure;\n    };\n    PdfGraphics.prototype._addArcPoints = function (points, pointType, startFigure) {\n        for (var i = 0; i < points.length; i++) {\n            var point = new PointF(points[i], points[(i + 1)]);\n            if (i === 0) {\n                if (this._pathPoints.length === 0 || startFigure) {\n                    this._addPoint(point, PathPointType.Start);\n                    startFigure = false;\n                }\n                else if (point.x !== this._getLastPoint().x || point.y !== this._getLastPoint().y) {\n                    this._addPoint(point, PathPointType.Line);\n                }\n            }\n            else {\n                this._addPoint(point, pointType);\n            }\n            i++;\n        }\n        return startFigure;\n    };\n    PdfGraphics.prototype._getLastPoint = function () {\n        var lastPoint = new PointF(0, 0);\n        var count = this._pathPoints.length;\n        if (count > 0) {\n            lastPoint.x = this._pathPoints[(count - 1)].x;\n            lastPoint.y = this._pathPoints[(count - 1)].y;\n        }\n        return lastPoint;\n    };\n    PdfGraphics.prototype._addPoint = function (point, type) {\n        this._pathPoints.push(point);\n        this._pathTypes.push(type);\n    };\n    PdfGraphics.prototype._getBezierArcPoints = function (x1, y1, x2, y2, s1, e1) {\n        if ((x1 > x2)) {\n            var tmp = void 0;\n            tmp = x1;\n            x1 = x2;\n            x2 = tmp;\n        }\n        if ((y2 > y1)) {\n            var tmp = void 0;\n            tmp = y1;\n            y1 = y2;\n            y2 = tmp;\n        }\n        var fragAngle;\n        var numFragments;\n        if ((Math.abs(e1) <= 90)) {\n            fragAngle = e1;\n            numFragments = 1;\n        }\n        else {\n            numFragments = (Math.ceil((Math.abs(e1) / 90)));\n            fragAngle = (e1 / numFragments);\n        }\n        var xcen = ((x1 + x2) / 2);\n        var ycen = ((y1 + y2) / 2);\n        var rx = ((x2 - x1) / 2);\n        var ry = ((y2 - y1) / 2);\n        var halfAng = ((fragAngle * (Math.PI / 360)));\n        var kappa = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(halfAng)) / Math.sin(halfAng)));\n        var pointList = [];\n        for (var i = 0; (i < numFragments); i++) {\n            var theta0 = (((s1 + (i * fragAngle)) * (Math.PI / 180)));\n            var theta1 = (((s1 + ((i + 1) * fragAngle)) * (Math.PI / 180)));\n            var cos0 = (Math.cos(theta0));\n            var cos1 = (Math.cos(theta1));\n            var sin0 = (Math.sin(theta0));\n            var sin1 = (Math.sin(theta1));\n            if ((fragAngle > 0)) {\n                pointList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 - (kappa * sin0)))), (ycen - (ry * (sin0 + (kappa * cos0)))), (xcen + (rx * (cos1 + (kappa * sin1)))), (ycen - (ry * (sin1 - (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n            else {\n                pointList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 + (kappa * sin0)))), (ycen - (ry * (sin0 - (kappa * cos0)))), (xcen + (rx * (cos1 - (kappa * sin1)))), (ycen - (ry * (sin1 + (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n        }\n        return pointList;\n    };\n    PdfGraphics.prototype.drawPathHelper = function (arg1, arg2, arg3, arg4) {\n        if (typeof arg3 === 'boolean') {\n            var temparg3 = arg3;\n            this.drawPathHelper(arg1, arg2, PdfFillMode.Winding, temparg3);\n        }\n        else {\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var isPen = arg1 != null;\n            var isBrush = arg2 != null;\n            var isEvenOdd = (temparg3 === PdfFillMode.Alternate);\n            if (isPen && isBrush) {\n                this.streamWriter.fillStrokePath(isEvenOdd);\n            }\n            else if (!isPen && !isBrush) {\n                this.streamWriter.endPath();\n            }\n            else if (isPen) {\n                this.streamWriter.strokePath();\n            }\n            else {\n                this.streamWriter.fillPath(isEvenOdd);\n            }\n        }\n    };\n    PdfGraphics.prototype.drawImage = function (arg1, arg2, arg3, arg4, arg5) {\n        if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            var size = arg1.physicalDimension;\n            this.drawImage(arg1, arg2, arg3, size.width, size.height);\n        }\n        else {\n            var temparg2 = arg2;\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            var temparg5 = arg5;\n            arg1.save();\n            var matrix = new PdfTransformationMatrix();\n            this.getTranslateTransform(temparg2, (temparg3 + temparg5), matrix);\n            this.getScaleTransform(arg4, arg5, matrix);\n            this.pdfStreamWriter.write('q');\n            this.pdfStreamWriter.modifyCtm(matrix);\n            // Output template.\n            var resources = this.getResources.getResources();\n            if (typeof this.pageLayer !== 'undefined' && this.page != null) {\n                resources.document = this.page.document;\n            }\n            var name_2 = resources.getName(arg1);\n            if (typeof this.pageLayer !== 'undefined') {\n                this.page.setResources(resources);\n            }\n            this.pdfStreamWriter.executeObject(name_2);\n            this.pdfStreamWriter.write(Operators.restoreState);\n            this.pdfStreamWriter.write(Operators.newLine);\n            var resource = this.getResources.getResources();\n            resource.requireProcedureSet(this.procedureSets.imageB);\n            resource.requireProcedureSet(this.procedureSets.imageC);\n            resource.requireProcedureSet(this.procedureSets.imageI);\n            resource.requireProcedureSet(this.procedureSets.text);\n        }\n    };\n    //Implementation\n    /**\n     * Returns `bounds` of the line info.\n     * @private\n     */\n    PdfGraphics.prototype.getLineBounds = function (lineIndex, result, font, layoutRectangle, format) {\n        var bounds;\n        if (!result.empty && lineIndex < result.lineCount && lineIndex >= 0) {\n            var line = result.lines[lineIndex];\n            var vShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n            var y = vShift + layoutRectangle.y + (result.lineHeight * lineIndex);\n            var lineWidth = line.width;\n            var hShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n            var lineIndent = this.getLineIndent(line, format, layoutRectangle, (lineIndex === 0));\n            hShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n            var x = layoutRectangle.x + hShift;\n            var width = (!this.shouldJustify(line, layoutRectangle.width, format)) ? lineWidth - lineIndent : layoutRectangle.width - lineIndent;\n            var height = result.lineHeight;\n            bounds = new RectangleF(x, y, width, height);\n        }\n        else {\n            bounds = new RectangleF(0, 0, 0, 0);\n        }\n        return bounds;\n    };\n    /**\n     * Creates `lay outed rectangle` depending on the text settings.\n     * @private\n     */\n    PdfGraphics.prototype.checkCorrectLayoutRectangle = function (textSize, x, y, format) {\n        var layoutedRectangle = new RectangleF(x, y, textSize.width, textSize.width);\n        if (format != null) {\n            switch (format.alignment) {\n                case PdfTextAlignment.Center:\n                    layoutedRectangle.x -= layoutedRectangle.width / 2;\n                    break;\n                case PdfTextAlignment.Right:\n                    layoutedRectangle.x -= layoutedRectangle.width;\n                    break;\n            }\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.Middle:\n                    layoutedRectangle.y -= layoutedRectangle.height / 2;\n                    break;\n                case PdfVerticalAlignment.Bottom:\n                    layoutedRectangle.y -= layoutedRectangle.height;\n                    break;\n            }\n        }\n        return layoutedRectangle;\n    };\n    /**\n     * Sets the `layer` for the graphics.\n     * @private\n     */\n    PdfGraphics.prototype.setLayer = function (layer) {\n        this.pageLayer = layer;\n        var page = layer.page;\n        if (page != null && typeof page !== 'undefined') {\n            page.beginSave = this.pageSave;\n        }\n    };\n    /**\n     * Adding page number field before page saving.\n     * @private\n     */\n    PdfGraphics.prototype.pageSave = function (page) {\n        if (page.graphics.automaticFields != null) {\n            for (var i = 0; i < page.graphics.automaticFields.automaticFields.length; i++) {\n                var fieldInfo = page.graphics.automaticFields.automaticFields[i];\n                fieldInfo.field.performDraw(page.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);\n            }\n        }\n    };\n    /**\n     * `Draws a layout result`.\n     * @private\n     */\n    PdfGraphics.prototype.drawStringLayoutResult = function (result, font, pen, brush, layoutRectangle, format) {\n        if (!result.empty) {\n            this.applyStringSettings(font, pen, brush, format, layoutRectangle);\n            // Set text scaling\n            var textScaling = (format != null) ? format.horizontalScalingFactor : 100.0;\n            if (textScaling !== this.previousTextScaling && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.setTextScaling(textScaling);\n                this.previousTextScaling = textScaling;\n            }\n            var height = (format == null || format.lineSpacing === 0) ? font.height : format.lineSpacing + font.height;\n            var subScript = (format != null && format.subSuperScript === PdfSubSuperScript.SubScript);\n            var shift = 0;\n            shift = (subScript) ? height - (font.height + font.metrics.getDescent(format)) : (height - font.metrics.getAscent(format));\n            this.shift = shift;\n            this.pdfStreamWriter.startNextLine(layoutRectangle.x, layoutRectangle.y - shift);\n            this.pdfStreamWriter.setLeading(+height);\n            var resultHeight = 0;\n            var remainingString = '';\n            for (var i = 0; i < result.lines.length; i++) {\n                resultHeight += result.lineHeight;\n                if ((layoutRectangle.y + resultHeight) > this.clientSize.height) {\n                    this.startCutIndex = i;\n                    break;\n                }\n            }\n            for (var j = this.startCutIndex; (j < result.lines.length && j >= 0); j++) {\n                remainingString += result.lines[j].text;\n            }\n            var bounds = new RectangleF(layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height);\n            this.drawLayoutResult(result, font, format, layoutRectangle);\n            this.underlineStrikeoutText(pen, brush, result, font, bounds, format);\n            this.isEmfPlus = false;\n            this.isUseFontSize = false;\n            if (this.startCutIndex !== -1) {\n                var page = this.getNextPage();\n                page.graphics.drawString(remainingString, font, pen, brush, layoutRectangle.x, 0, layoutRectangle.width, 0, format);\n            }\n        }\n        else {\n            throw new Error('ArgumentNullException:result');\n        }\n    };\n    /**\n     * Gets the `next page`.\n     * @private\n     */\n    PdfGraphics.prototype.getNextPage = function () {\n        var section = this.currentPage.section;\n        var nextPage = null;\n        var index = section.indexOf(this.currentPage);\n        if (index === section.count - 1) {\n            nextPage = section.add();\n        }\n        else {\n            nextPage = section.getPages()[index + 1];\n        }\n        return nextPage;\n    };\n    PdfGraphics.prototype.setClip = function (rectangle, mode) {\n        if (typeof mode === 'undefined') {\n            this.setClip(rectangle, PdfFillMode.Winding);\n        }\n        else {\n            this.pdfStreamWriter.appendRectangle(rectangle);\n            this.pdfStreamWriter.clipPath((mode === PdfFillMode.Alternate));\n        }\n    };\n    /**\n     * Applies all the `text settings`.\n     * @private\n     */\n    PdfGraphics.prototype.applyStringSettings = function (font, pen, brush, format, bounds) {\n        if (brush instanceof PdfTilingBrush) {\n            this.bCSInitialized = false;\n            brush.graphics.colorSpace = this.colorSpace;\n        }\n        else if ((brush instanceof PdfGradientBrush)) {\n            this.bCSInitialized = false;\n            brush.colorSpace = this.colorSpace;\n        }\n        var setLineWidth = false;\n        var tm = this.getTextRenderingMode(pen, brush, format);\n        this.stateControl(pen, brush, font, format);\n        this.pdfStreamWriter.beginText();\n        if ((tm) !== this.previousTextRenderingMode) {\n            this.pdfStreamWriter.setTextRenderingMode(tm);\n            this.previousTextRenderingMode = tm;\n        }\n        // Set character spacing.\n        var cs = (format != null) ? format.characterSpacing : 0;\n        if (cs !== this.previousCharacterSpacing && !this.isEmfTextScaled) {\n            this.pdfStreamWriter.setCharacterSpacing(cs);\n            this.previousCharacterSpacing = cs;\n        }\n        // Set word spacing.\n        // NOTE: it works only if the space code is equal to 32 (0x20).\n        var ws = (format != null) ? format.wordSpacing : 0;\n        if (ws !== this.previousWordSpacing) {\n            this.pdfStreamWriter.setWordSpacing(ws);\n            this.previousWordSpacing = ws;\n        }\n    };\n    /**\n     * Calculates `shift value` if the text is vertically aligned.\n     * @private\n     */\n    PdfGraphics.prototype.getTextVerticalAlignShift = function (textHeight, boundsHeight, format) {\n        var shift = 0;\n        if (boundsHeight >= 0 && format != null && format.lineAlignment !== PdfVerticalAlignment.Top) {\n            switch (format.lineAlignment) {\n                case PdfVerticalAlignment.Middle:\n                    shift = (boundsHeight - textHeight) / 2;\n                    break;\n                case PdfVerticalAlignment.Bottom:\n                    shift = boundsHeight - textHeight;\n                    break;\n            }\n        }\n        return shift;\n    };\n    /**\n     * `Draws layout result`.\n     * @private\n     */\n    PdfGraphics.prototype.drawLayoutResult = function (result, font, format, layoutRectangle) {\n        var vAlignShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n        if (vAlignShift !== 0) {\n            this.pdfStreamWriter.startNextLine(0, vAlignShift);\n        }\n        var ttfFont = font;\n        var unicode = (ttfFont != null && ttfFont.isUnicode);\n        var embed = (ttfFont != null && ttfFont.isEmbedFont);\n        var lines = result.lines;\n        for (var i = 0, len = lines.length; (i < len && i !== this.startCutIndex); i++) {\n            var lineInfo = lines[i];\n            var line = lineInfo.text;\n            var lineWidth = lineInfo.width;\n            var hAlignShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n            var lineIndent = this.getLineIndent(lineInfo, format, layoutRectangle, (i === 0));\n            hAlignShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n            if (hAlignShift !== 0 && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.startNextLine(hAlignShift, 0);\n            }\n            if (unicode) {\n                this.drawUnicodeLine(lineInfo, layoutRectangle, font, format);\n            }\n            else {\n                this.drawAsciiLine(lineInfo, layoutRectangle, font, format);\n            }\n            if (hAlignShift !== 0 && !this.isEmfTextScaled) {\n                this.pdfStreamWriter.startNextLine(-hAlignShift, 0);\n            }\n            if (this.isOverloadWithPosition && lines.length > 1) {\n                this.pdfStreamWriter.startNextLine(-(layoutRectangle.x), 0);\n                layoutRectangle.x = 0;\n                layoutRectangle.width = this.clientSize.width;\n                this.isOverloadWithPosition = false;\n                this.isPointOverload = true;\n            }\n            else if (this.isOverloadWithPosition) {\n                this.isOverloadWithPosition = false;\n            }\n        }\n        this.getResources.getResources().requireProcedureSet(this.procedureSets.text);\n        if (vAlignShift !== 0) {\n            this.pdfStreamWriter.startNextLine(0, -(vAlignShift - result.lineHeight));\n        }\n        this.pdfStreamWriter.endText();\n    };\n    /**\n     * `Draws Ascii line`.\n     * @private\n     */\n    PdfGraphics.prototype.drawAsciiLine = function (lineInfo, layoutRectangle, font, format) {\n        this.justifyLine(lineInfo, layoutRectangle.width, format);\n        var value = '';\n        if (lineInfo.text.indexOf('(') !== -1 || lineInfo.text.indexOf(')') !== -1) {\n            for (var i = 0; i < lineInfo.text.length; i++) {\n                if (lineInfo.text[i] === '(') {\n                    value += '\\\\\\(';\n                }\n                else if (lineInfo.text[i] === ')') {\n                    value += '\\\\\\)';\n                }\n                else {\n                    value += lineInfo.text[i];\n                }\n            }\n        }\n        if (value === '') {\n            value = lineInfo.text;\n        }\n        var line = '(' + value + ')';\n        this.pdfStreamWriter.showNextLineText(new PdfString(line));\n    };\n    /**\n     * Draws unicode line.\n     * @private\n     */\n    PdfGraphics.prototype.drawUnicodeLine = function (lineInfo, layoutRectangle, font, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var rtl = (format !== null && typeof format !== 'undefined' && format.rightToLeft);\n        var useWordSpace = (format !== null && typeof format !== 'undefined' && (format.wordSpacing !== 0 || format.alignment === PdfTextAlignment.Justify));\n        var ttfFont = font;\n        var wordSpacing = this.justifyLine(lineInfo, layoutRectangle.width, format);\n        var rtlRender = new RtlRenderer();\n        if (rtl || (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None)) {\n            var blocks = null;\n            var rightAlign = (format !== null && typeof format !== 'undefined' && format.alignment === PdfTextAlignment.Right);\n            if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                /* tslint:disable-next-line:max-line-length */\n                blocks = rtlRender.layout(line, ttfFont, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, useWordSpace, format);\n            }\n            else {\n                blocks = rtlRender.layout(line, ttfFont, rightAlign, useWordSpace, format);\n            }\n            var words = null;\n            if (blocks.length > 1) {\n                if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n                    /* tslint:disable-next-line:max-line-length */\n                    words = rtlRender.splitLayout(line, ttfFont, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, useWordSpace, format);\n                }\n                else {\n                    words = rtlRender.splitLayout(line, ttfFont, rightAlign, useWordSpace, format);\n                }\n            }\n            else {\n                words = [line];\n            }\n            this.drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n        }\n        else {\n            if (useWordSpace) {\n                var result = this.breakUnicodeLine(line, ttfFont, null);\n                var blocks = result.tokens;\n                var words = result.words;\n                this.drawUnicodeBlocks(blocks, words, ttfFont, format, wordSpacing);\n            }\n            else {\n                var token = this.convertToUnicode(line, ttfFont);\n                var value = this.getUnicodeString(token);\n                this.streamWriter.showNextLineText(value);\n            }\n        }\n    };\n    /**\n     * Draws array of unicode tokens.\n     */\n    PdfGraphics.prototype.drawUnicodeBlocks = function (blocks, words, font, format, wordSpacing) {\n        if (blocks == null) {\n            throw new Error('Argument Null Exception : blocks');\n        }\n        if (words == null) {\n            throw new Error('Argument Null Exception : words');\n        }\n        if (font == null) {\n            throw new Error('Argument Null Exception : font');\n        }\n        this.streamWriter.startNextLine();\n        var x = 0;\n        var xShift = 0;\n        var firstLineIndent = 0;\n        var paragraphIndent = 0;\n        try {\n            if (format !== null && typeof format !== 'undefined') {\n                firstLineIndent = format.firstLineIndent;\n                paragraphIndent = format.paragraphIndent;\n                format.firstLineIndent = 0;\n                format.paragraphIndent = 0;\n            }\n            var spaceWidth = font.getCharWidth(StringTokenizer.whiteSpace, format) + wordSpacing;\n            var characterSpacing = (format != null) ? format.characterSpacing : 0;\n            var wordSpace = (format !== null && typeof format !== 'undefined' && wordSpacing === 0) ? format.wordSpacing : 0;\n            spaceWidth += characterSpacing + wordSpace;\n            for (var i = 0; i < blocks.length; i++) {\n                var token = blocks[i];\n                var word = words[i];\n                var tokenWidth = 0;\n                if (x !== 0) {\n                    this.streamWriter.startNextLine(x, 0);\n                }\n                if (word.length > 0) {\n                    tokenWidth += /*Utils.Round(*/ font.measureString(word, format).width /*)*/;\n                    tokenWidth += characterSpacing;\n                    var val = this.getUnicodeString(token);\n                    this.streamWriter.showText(val);\n                }\n                if (i !== blocks.length - 1) {\n                    x = tokenWidth + spaceWidth;\n                    xShift += x;\n                }\n            }\n            // Rolback current line position.\n            if (xShift > 0) {\n                this.streamWriter.startNextLine(-xShift, 0);\n            }\n        }\n        finally {\n            if (format !== null && typeof format !== 'undefined') {\n                format.firstLineIndent = firstLineIndent;\n                format.paragraphIndent = paragraphIndent;\n            }\n        }\n    };\n    /**\n     * Breakes the unicode line to the words and converts symbols to glyphs.\n     */\n    PdfGraphics.prototype.breakUnicodeLine = function (line, ttfFont, words) {\n        if (line === null) {\n            throw new Error('Argument Null Exception : line');\n        }\n        words = line.split(null);\n        var tokens = [];\n        for (var i = 0; i < words.length; i++) {\n            // Reconvert string according to unicode standard.\n            var word = words[i];\n            var token = this.convertToUnicode(word, ttfFont);\n            tokens[i] = token;\n        }\n        return { tokens: tokens, words: words };\n    };\n    /**\n     * Creates PdfString from the unicode text.\n     */\n    PdfGraphics.prototype.getUnicodeString = function (token) {\n        if (token === null) {\n            throw new Error('Argument Null Exception : token');\n        }\n        var val = new PdfString(token);\n        val.converted = true;\n        val.encode = InternalEnum.ForceEncoding.Ascii;\n        return val;\n    };\n    /**\n     * Converts to unicode format.\n     */\n    PdfGraphics.prototype.convertToUnicode = function (text, ttfFont) {\n        var token = null;\n        if (text == null) {\n            throw new Error('Argument Null Exception : text');\n        }\n        if (ttfFont == null) {\n            throw new Error('Argument Null Exception : ttfFont');\n        }\n        if (ttfFont.fontInternal instanceof UnicodeTrueTypeFont) {\n            var ttfReader = ttfFont.fontInternal.ttfReader;\n            ttfFont.setSymbols(text);\n            token = ttfReader.convertString(text);\n            var bytes = PdfString.toUnicodeArray(token, false);\n            token = PdfString.byteToString(bytes);\n        }\n        return token;\n    };\n    /**\n     * `Justifies` the line if needed.\n     * @private\n     */\n    PdfGraphics.prototype.justifyLine = function (lineInfo, boundsWidth, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var shouldJustify = this.shouldJustify(lineInfo, boundsWidth, format);\n        var hasWordSpacing = (format != null && format.wordSpacing !== 0);\n        var symbols = StringTokenizer.spaces;\n        var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n        var wordSpace = 0;\n        if (shouldJustify) {\n            // Correct line width.\n            if (hasWordSpacing) {\n                lineWidth -= (whitespacesCount * format.wordSpacing);\n            }\n            var difference = boundsWidth - lineWidth;\n            wordSpace = difference / whitespacesCount;\n            this.pdfStreamWriter.setWordSpacing(wordSpace);\n        }\n        else {\n            // If there is justifying, but the line shouldn't be justified, restore default word spacing.\n            if (hasWordSpacing) {\n                this.pdfStreamWriter.setWordSpacing(format.wordSpacing);\n            }\n            else {\n                this.pdfStreamWriter.setWordSpacing(0);\n            }\n        }\n        return wordSpace;\n    };\n    /**\n     * `Reset` or reinitialize the current graphic value.\n     * @private\n     */\n    PdfGraphics.prototype.reset = function (size) {\n        this.canvasSize = size;\n        this.streamWriter.clear();\n        this.initialize();\n        this.initializeCoordinates();\n    };\n    /**\n     * Checks whether the line should be `justified`.\n     * @private\n     */\n    PdfGraphics.prototype.shouldJustify = function (lineInfo, boundsWidth, format) {\n        var line = lineInfo.text;\n        var lineWidth = lineInfo.width;\n        var justifyStyle = (format != null && format.alignment === PdfTextAlignment.Justify);\n        var goodWidth = (boundsWidth >= 0 && lineWidth < boundsWidth);\n        var symbols = StringTokenizer.spaces;\n        var whitespacesCount = StringTokenizer.getCharsCount(line, symbols);\n        var hasSpaces = (whitespacesCount > 0 && line[0] !== StringTokenizer.whiteSpace);\n        var goodLineBreakStyle = ((lineInfo.lineType & LineType.LayoutBreak) > 0) || (format && format.wordWrap === PdfWordWrapType.None);\n        var shouldJustify = (justifyStyle && goodWidth && hasSpaces && goodLineBreakStyle);\n        return shouldJustify;\n    };\n    /**\n     * Emulates `Underline, Strikeout` of the text if needed.\n     * @private\n     */\n    PdfGraphics.prototype.underlineStrikeoutText = function (pen, brush, result, font, layoutRectangle, format) {\n        if (font.underline || font.strikeout) {\n            // Calculate line width.\n            var linePen = this.createUnderlineStikeoutPen(pen, brush, font, format);\n            if (linePen != null) {\n                // Approximate line positions.\n                var vShift = this.getTextVerticalAlignShift(result.actualSize.height, layoutRectangle.height, format);\n                var underlineYOffset = 0;\n                underlineYOffset = layoutRectangle.y + vShift + font.metrics.getAscent(format) + 1.5 * linePen.width;\n                var strikeoutYOffset = layoutRectangle.y + vShift + font.metrics.getHeight(format) / 2 + 1.5 * linePen.width;\n                var lines = result.lines;\n                // Run through the text and draw lines.\n                for (var i = 0, len = result.lineCount; i < len; i++) {\n                    var lineInfo = lines[i];\n                    var line = lineInfo.text;\n                    var lineWidth = lineInfo.width;\n                    var hShift = this.getHorizontalAlignShift(lineWidth, layoutRectangle.width, format);\n                    var lineIndent = this.getLineIndent(lineInfo, format, layoutRectangle, (i === 0));\n                    hShift += (!this.rightToLeft(format)) ? lineIndent : 0;\n                    var x1 = layoutRectangle.x + hShift;\n                    var x2 = (!this.shouldJustify(lineInfo, layoutRectangle.width, format)) ? x1 + lineWidth - lineIndent : x1 + layoutRectangle.width - lineIndent;\n                    if (font.underline) {\n                        var y = underlineYOffset;\n                        this.drawLine(linePen, x1, y, x2, y);\n                        underlineYOffset += result.lineHeight;\n                    }\n                    if (font.strikeout) {\n                        var y = strikeoutYOffset;\n                        this.drawLine(linePen, x1, y, x2, y);\n                        strikeoutYOffset += result.lineHeight;\n                    }\n                    if (this.isPointOverload && lines.length > 1) {\n                        layoutRectangle.x = 0;\n                        layoutRectangle.width = this.clientSize.width;\n                    }\n                }\n                this.isPointOverload = false;\n            }\n        }\n    };\n    /**\n     * `Creates a pen` for drawing lines in the text.\n     * @private\n     */\n    PdfGraphics.prototype.createUnderlineStikeoutPen = function (pen, brush, font, format) {\n        // Calculate line width.\n        var lineWidth = font.metrics.getSize(format) / 20;\n        var linePen = null;\n        // Create a pen fo the lines.\n        if (pen != null) {\n            linePen = new PdfPen(pen.color, lineWidth);\n        }\n        else if (brush != null) {\n            linePen = new PdfPen(brush, lineWidth);\n        }\n        return linePen;\n    };\n    /**\n     * Return `text rendering mode`.\n     * @private\n     */\n    PdfGraphics.prototype.getTextRenderingMode = function (pen, brush, format) {\n        var tm = TextRenderingMode.None;\n        if (pen != null && brush != null) {\n            tm = TextRenderingMode.FillStroke;\n        }\n        else if (pen != null) {\n            tm = TextRenderingMode.Stroke;\n        }\n        else {\n            tm = TextRenderingMode.Fill;\n        }\n        if (format != null && format.clipPath) {\n            tm |= TextRenderingMode.ClipFlag;\n        }\n        return tm;\n    };\n    /**\n     * Returns `line indent` for the line.\n     * @private\n     */\n    PdfGraphics.prototype.getLineIndent = function (lineInfo, format, layoutBounds, firstLine) {\n        var lineIndent = 0;\n        var firstParagraphLine = ((lineInfo.lineType & LineType.FirstParagraphLine) > 0);\n        if (format != null && firstParagraphLine) {\n            lineIndent = (firstLine) ? format.firstLineIndent : format.paragraphIndent;\n            lineIndent = (layoutBounds.width > 0) ? Math.min(layoutBounds.width, lineIndent) : lineIndent;\n        }\n        return lineIndent;\n    };\n    /**\n     * Calculates shift value if the line is `horizontaly aligned`.\n     * @private\n     */\n    PdfGraphics.prototype.getHorizontalAlignShift = function (lineWidth, boundsWidth, format) {\n        var shift = 0;\n        if (boundsWidth >= 0 && format != null && format.alignment !== PdfTextAlignment.Left) {\n            switch (format.alignment) {\n                case PdfTextAlignment.Center:\n                    shift = (boundsWidth - lineWidth) / 2;\n                    break;\n                case PdfTextAlignment.Right:\n                    shift = boundsWidth - lineWidth;\n                    break;\n            }\n        }\n        return shift;\n    };\n    /**\n     * Gets or sets the value that indicates `text direction` mode.\n     * @private\n     */\n    PdfGraphics.prototype.rightToLeft = function (format) {\n        var rtl = (format !== null && typeof format !== 'undefined' && format.rightToLeft);\n        if (format !== null && typeof format !== 'undefined') {\n            if (format.textDirection !== PdfTextDirection.None && typeof format.textDirection !== 'undefined') {\n                rtl = true;\n            }\n        }\n        return rtl;\n    };\n    PdfGraphics.prototype.stateControl = function (pen, brush, font, format) {\n        if (typeof format === 'undefined') {\n            this.stateControl(pen, brush, font, null);\n        }\n        else {\n            if (brush instanceof PdfGradientBrush) {\n                this.bCSInitialized = false;\n                brush.colorSpace = this.colorSpace;\n            }\n            if (brush instanceof PdfTilingBrush) {\n                this.bCSInitialized = false;\n                brush.graphics.colorSpace = this.colorSpace;\n            }\n            var saveState = false;\n            if (brush !== null) {\n                var solidBrush = brush;\n                if (typeof this.pageLayer !== 'undefined' && this.pageLayer != null) {\n                    if (this.colorSpaceChanged === false) {\n                        this.lastDocumentCS = this.pageLayer.page.document.colorSpace;\n                        this.lastGraphicsCS = this.pageLayer.page.graphics.colorSpace;\n                        this.colorSpace = this.pageLayer.page.document.colorSpace;\n                        this.currentColorSpace = this.pageLayer.page.document.colorSpace;\n                        this.colorSpaceChanged = true;\n                    }\n                }\n                this.initCurrentColorSpace(this.currentColorSpace);\n            }\n            else if (pen != null) {\n                var pdfPen = pen;\n                if (typeof this.pageLayer !== 'undefined' && this.pageLayer != null) {\n                    this.colorSpace = this.pageLayer.page.document.colorSpace;\n                    this.currentColorSpace = this.pageLayer.page.document.colorSpace;\n                }\n                this.initCurrentColorSpace(this.currentColorSpace);\n            }\n            this.penControl(pen, saveState);\n            this.brushControl(brush, saveState);\n            this.fontControl(font, format, saveState);\n        }\n    };\n    /**\n     * Initializes the `current color space`.\n     * @private\n     */\n    PdfGraphics.prototype.initCurrentColorSpace = function (colorspace) {\n        var re = this.getResources.getResources();\n        if (!this.bCSInitialized) {\n            if (this.currentColorSpace != PdfColorSpace.GrayScale) {\n                this.pdfStreamWriter.setColorSpace('Device' + this.currentColorSpaces[this.currentColorSpace], true);\n                this.pdfStreamWriter.setColorSpace('Device' + this.currentColorSpaces[this.currentColorSpace], false);\n                this.bCSInitialized = true;\n            }\n            else {\n                this.pdfStreamWriter.setColorSpace('DeviceGray', true);\n                this.pdfStreamWriter.setColorSpace('DeviceGray', false);\n                this.bCSInitialized = true;\n            }\n        }\n    };\n    /**\n     * Controls the `pen state`.\n     * @private\n     */\n    PdfGraphics.prototype.penControl = function (pen, saveState) {\n        if (pen != null) {\n            this.currentPen = pen;\n            pen.monitorChanges(this.currentPen, this.pdfStreamWriter, this.getResources, saveState, this.colorSpace, this.matrix.clone());\n            this.currentPen = pen.clone();\n        }\n    };\n    /**\n     * Controls the `brush state`.\n     * @private\n     */\n    PdfGraphics.prototype.brushControl = function (brush, saveState) {\n        if (brush != null && typeof brush !== 'undefined') {\n            var b = brush.clone();\n            var lgb = b;\n            if (lgb !== null && typeof lgb !== 'undefined' && !(brush instanceof PdfSolidBrush) && !(brush instanceof PdfTilingBrush)) {\n                var m = lgb.matrix;\n                var matrix = this.matrix.clone();\n                if ((m != null)) {\n                    m.multiply(matrix);\n                    matrix = m;\n                }\n                lgb.matrix = matrix;\n            }\n            this.currentBrush = lgb;\n            var br = (brush);\n            b.monitorChanges(this.currentBrush, this.pdfStreamWriter, this.getResources, saveState, this.colorSpace);\n            this.currentBrush = brush;\n            brush = null;\n        }\n    };\n    /**\n     * Saves the font and other `font settings`.\n     * @private\n     */\n    PdfGraphics.prototype.fontControl = function (font, format, saveState) {\n        if (font != null) {\n            var curSubSuper = (format != null) ? format.subSuperScript : PdfSubSuperScript.None;\n            var prevSubSuper = (this.currentStringFormat != null) ? this.currentStringFormat.subSuperScript : PdfSubSuperScript.None;\n            if (saveState || font !== this.currentFont || curSubSuper !== prevSubSuper) {\n                var resources = this.getResources.getResources();\n                this.currentFont = font;\n                this.currentStringFormat = format;\n                var size = font.metrics.getSize(format);\n                this.isEmfTextScaled = false;\n                var fontName = resources.getName(font);\n                this.pdfStreamWriter.setFont(font, fontName, size);\n            }\n        }\n    };\n    PdfGraphics.prototype.setTransparency = function (arg1, arg2, arg3) {\n        if (typeof arg2 === 'undefined') {\n            this.istransparencySet = true;\n            this.setTransparency(arg1, arg1, PdfBlendMode.Normal);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            this.setTransparency(arg1, arg2, PdfBlendMode.Normal);\n        }\n        else {\n            if (this.trasparencies == null) {\n                this.trasparencies = new TemporaryDictionary();\n            }\n            var transp = null;\n            var td = new TransparencyData(arg1, arg2, arg3);\n            if (this.trasparencies.containsKey(td)) {\n                transp = this.trasparencies.getValue(td);\n            }\n            if (transp == null) {\n                transp = new PdfTransparency(arg1, arg2, arg3);\n                this.trasparencies.setValue(td, transp);\n            }\n            var resources = this.getResources.getResources();\n            var name_3 = resources.getName(transp);\n            var sw = this.streamWriter;\n            sw.setGraphicsState(name_3);\n        }\n    };\n    PdfGraphics.prototype.clipTranslateMargins = function (x, y, left, top, right, bottom) {\n        if (x instanceof RectangleF && typeof y === 'undefined') {\n            this.clipBounds = x;\n            this.pdfStreamWriter.writeComment('Clip margins.');\n            this.pdfStreamWriter.appendRectangle(x);\n            this.pdfStreamWriter.closePath();\n            this.pdfStreamWriter.clipPath(false);\n            this.pdfStreamWriter.writeComment('Translate co-ordinate system.');\n            this.translateTransform(x.x, x.y);\n        }\n        else if (typeof x === 'number') {\n            var clipArea = new RectangleF(left, top, this.size.width - left - right, this.size.height - top - bottom);\n            this.clipBounds = clipArea;\n            this.pdfStreamWriter.writeComment(\"Clip margins.\");\n            this.pdfStreamWriter.appendRectangle(clipArea);\n            this.pdfStreamWriter.closePath();\n            this.pdfStreamWriter.clipPath(false);\n            this.pdfStreamWriter.writeComment(\"Translate co-ordinate system.\");\n            this.translateTransform(x, y);\n        }\n    };\n    /**\n     * `Updates y` co-ordinate.\n     * @private\n     */\n    PdfGraphics.prototype.updateY = function (y) {\n        return -y;\n    };\n    /**\n     * Used to `translate the transformation`.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // set pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // set translate transform\n     * page1.graphics.translateTransform(100, 100);\n     * //\n     * // draw the rectangle after applying translate transform\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 0, y : 0}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param offsetX The x-coordinate of the translation.\n     * @param offsetY The y-coordinate of the translation.\n     */\n    PdfGraphics.prototype.translateTransform = function (offsetX, offsetY) {\n        var matrix = new PdfTransformationMatrix();\n        this.getTranslateTransform(offsetX, offsetY, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Translates` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getTranslateTransform = function (x, y, input) {\n        input.translate(x, this.updateY(y));\n        return input;\n    };\n    /**\n     * Applies the specified `scaling operation` to the transformation matrix of this Graphics by prepending it to the object's transformation matrix.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // apply scaling trasformation\n     * page1.graphics.scaleTransform(1.5, 2);\n     * //\n     * // draw the rectangle after applying scaling transform\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param scaleX Scale factor in the x direction.\n     * @param scaleY Scale factor in the y direction.\n     */\n    PdfGraphics.prototype.scaleTransform = function (scaleX, scaleY) {\n        var matrix = new PdfTransformationMatrix();\n        this.getScaleTransform(scaleX, scaleY, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Scales` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getScaleTransform = function (x, y, input) {\n        if (input == null) {\n            input = new PdfTransformationMatrix();\n        }\n        input.scale(x, y);\n        return input;\n    };\n    /**\n     * Applies the specified `rotation` to the transformation matrix of this Graphics.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // set RotateTransform with 25 degree of angle\n     * page1.graphics.rotateTransform(25);\n     * //\n     * // draw the rectangle after RotateTransformation\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param angle Angle of rotation in degrees.\n     */\n    PdfGraphics.prototype.rotateTransform = function (angle) {\n        var matrix = new PdfTransformationMatrix();\n        this.getRotateTransform(angle, matrix);\n        this.pdfStreamWriter.modifyCtm(matrix);\n        this.matrix.multiply(matrix);\n    };\n    /**\n     * `Initializes coordinate system`.\n     * @private\n     */\n    PdfGraphics.prototype.initializeCoordinates = function () {\n        // Matrix equation: TM(T-1)=M', where T=[1 0 0 -1 0 h]\n        this.pdfStreamWriter.writeComment('Change co-ordinate system to left/top.');\n        // Translate co-ordinates only, don't flip.\n        if (this.mediaBoxUpperRightBound !== -(this.size.height)) {\n            if (this.cropBox == null) {\n                if (this.mediaBoxUpperRightBound === this.size.height || this.mediaBoxUpperRightBound === 0) {\n                    this.translateTransform(0, this.updateY(this.size.height));\n                }\n                else {\n                    this.translateTransform(0, this.updateY(this.mediaBoxUpperRightBound));\n                }\n            }\n        }\n    };\n    /**\n     * `Rotates` coordinates of the input matrix.\n     * @private\n     */\n    PdfGraphics.prototype.getRotateTransform = function (angle, input) {\n        if (input == null || typeof input === 'undefined') {\n            input = new PdfTransformationMatrix();\n        }\n        input.rotate(this.updateY(angle));\n        return input;\n    };\n    /**\n     * `Saves` the current state of this Graphics and identifies the saved state with a GraphicsState.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // create a new page\n     * let page1 : PdfPage = document.pages.add();\n     * // create pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(0, 0, 0));\n     * //\n     * // save the graphics state\n     * let state1 : PdfGraphicsState = page1.graphics.save();\n     * //\n     * page1.graphics.scaleTransform(1.5, 2);\n     * // draw the rectangle\n     * page1.graphics.drawRectangle(pen, new RectangleF({x : 100, y : 100}, {width : 100, height : 50}));\n     * // restore the graphics state\n     * page1.graphics.restore(state1);\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfGraphics.prototype.save = function () {\n        var state = new PdfGraphicsState(this, this.matrix.clone());\n        state.brush = this.currentBrush;\n        state.pen = this.currentPen;\n        state.font = this.currentFont;\n        state.colorSpace = this.currentColorSpace;\n        state.characterSpacing = this.previousCharacterSpacing;\n        state.wordSpacing = this.previousWordSpacing;\n        state.textScaling = this.previousTextScaling;\n        state.textRenderingMode = this.previousTextRenderingMode;\n        this.graphicsState.push(state);\n        this.pdfStreamWriter.saveGraphicsState();\n        return state;\n    };\n    PdfGraphics.prototype.restore = function (state) {\n        if (typeof state === 'undefined') {\n            if (this.graphicsState.length > 0) {\n                this.doRestoreState();\n            }\n        }\n        else {\n            if (this.graphicsState.indexOf(state) !== -1) {\n                for (;;) {\n                    if (this.graphicsState.length === 0) {\n                        break;\n                    }\n                    var popState = this.doRestoreState();\n                    if (popState === state) {\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * `Restores graphics state`.\n     * @private\n     */\n    PdfGraphics.prototype.doRestoreState = function () {\n        var state = this.graphicsState.pop();\n        this.transformationMatrix = state.matrix;\n        this.currentBrush = state.brush;\n        this.currentPen = state.pen;\n        this.currentFont = state.font;\n        this.currentColorSpace = state.colorSpace;\n        this.previousCharacterSpacing = state.characterSpacing;\n        this.previousWordSpacing = state.wordSpacing;\n        this.previousTextScaling = state.textScaling;\n        this.previousTextRenderingMode = state.textRenderingMode;\n        this.pdfStreamWriter.restoreGraphicsState();\n        return state;\n    };\n    /**\n     * `Draws the specified path`, using its original physical size, at the location specified by a coordinate pair.\n     * ```typescript\n     * // create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // add a page to the document.\n     * let page1 : PdfPage = document.pages.add();\n     * //Create new PDF path.\n     * let path : PdfPath = new PdfPath();\n     * //Add line path points.\n     * path.addLine(new PointF(10, 100), new PointF(10, 200));\n     * path.addLine(new PointF(100, 100), new PointF(100, 200));\n     * path.addLine(new PointF(100, 200), new PointF(55, 150));\n     * // set pen\n     * let pen : PdfPen = new PdfPen(new PdfColor(255, 0, 0));\n     * // set brush\n     * let brush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the path\n     * page1.graphics.drawPath(pen, brush, path);\n     * //\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     * @param pen Color of the text.\n     * @param brush Color of the text.\n     * @param path Draw path.\n     */\n    PdfGraphics.prototype.drawPath = function (pen, brush, path) {\n        this._drawPath(pen, brush, path.pathPoints, path.pathTypes, path.fillMode);\n    };\n    PdfGraphics.prototype._drawPath = function (pen, brush, pathPoints, pathTypes, fillMode) {\n        if (brush instanceof PdfTilingBrush) {\n            this.bCSInitialized = false;\n            brush.graphics.colorSpace = this.colorSpace;\n        }\n        else if (brush instanceof PdfGradientBrush) {\n            this.bCSInitialized = false;\n            brush.colorSpace = this.colorSpace;\n        }\n        this.stateControl(pen, brush, null);\n        this.buildUpPath(pathPoints, pathTypes);\n        this.drawPathHelper(pen, brush, fillMode, false);\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PdfGraphics.prototype.drawArc = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        if (arg2 instanceof RectangleF) {\n            this.drawArc(arg1, arg2.x, arg2.y, arg2.width, arg2.height, arg3, arg4);\n        }\n        else {\n            if ((arg7 !== 0)) {\n                this.stateControl(arg1, null, null);\n                this.constructArcPath(arg2, arg3, (arg2 + arg4), (arg3 + arg5), arg6, arg7);\n                this.drawPathHelper(arg1, null, false);\n            }\n        }\n    };\n    /**\n     * Builds up the path.\n     * @private\n     */\n    PdfGraphics.prototype.buildUpPath = function (arg1, arg2) {\n        var cnt = arg1.length;\n        for (var i = 0; i < cnt; ++i) {\n            var typeValue = 0;\n            var point = arg1[i];\n            switch (((arg2[i] & (PdfGraphics.pathTypesValuesMask)))) {\n                case PathPointType.Start:\n                    this.pdfStreamWriter.beginPath(point.x, point.y);\n                    break;\n                case PathPointType.Bezier3:\n                    var p2 = new PointF(0, 0);\n                    var p3 = new PointF(0, 0);\n                    var result1 = this.getBezierPoints(arg1, arg2, i, p2, p3);\n                    this.pdfStreamWriter.appendBezierSegment(point, result1.p2, result1.p3);\n                    i = result1.i;\n                    break;\n                case PathPointType.Line:\n                    this.pdfStreamWriter.appendLineSegment(point);\n                    break;\n                default:\n                    throw new Error('ArithmeticException - Incorrect path formation.');\n            }\n            typeValue = arg2[i];\n            this.checkFlags(typeValue);\n        }\n    };\n    /**\n     * Gets the bezier points from respective arrays.\n     * @private\n     */\n    /* tslint:disable-next-line:max-line-length */\n    PdfGraphics.prototype.getBezierPoints = function (points, types, i, p2, p3) {\n        var errorMsg = 'Malforming path.';\n        ++i;\n        if ((((types[i] & PdfGraphics.pathTypesValuesMask)) === PathPointType.Bezier3)) {\n            p2 = points[i];\n            ++i;\n            if ((((types[i] & PdfGraphics.pathTypesValuesMask)) === PathPointType.Bezier3)) {\n                p3 = points[i];\n            }\n            else {\n                throw new Error('ArgumentException : errorMsg');\n            }\n        }\n        else {\n            throw new Error('ArgumentException : errorMsg');\n        }\n        return { i: i, p2: p2, p3: p3 };\n    };\n    /**\n     * Checks path point type flags.\n     * @private\n     */\n    PdfGraphics.prototype.checkFlags = function (type) {\n        if ((((type & (PathPointType.CloseSubpath))) === PathPointType.CloseSubpath)) {\n            this.pdfStreamWriter.closePath();\n        }\n    };\n    /**\n     * Constructs the arc path using Bezier curves.\n     * @private\n     */\n    PdfGraphics.prototype.constructArcPath = function (x1, y1, x2, y2, startAng, sweepAngle) {\n        var points = this.getBezierArc(x1, y1, x2, y2, startAng, sweepAngle);\n        if ((points.length === 0)) {\n            return;\n        }\n        var pt = [points[0], points[1], points[2], points[3], points[4], points[5], points[6], points[7]];\n        this.pdfStreamWriter.beginPath(pt[0], pt[1]);\n        var i = 0;\n        for (i = 0; i < points.length; i = i + 8) {\n            pt = [points[i], points[i + 1], points[i + 2], points[i + 3], points[i + 4], points[i + 5], points[i + 6], points[i + 7]];\n            this.pdfStreamWriter.appendBezierSegment(pt[2], pt[3], pt[4], pt[5], pt[6], pt[7]);\n        }\n    };\n    /**\n     * Gets the bezier points for arc constructing.\n     * @private\n     */\n    PdfGraphics.prototype.getBezierArc = function (numX1, numY1, numX2, numY2, s1, e1) {\n        if ((numX1 > numX2)) {\n            var tmp = void 0;\n            tmp = numX1;\n            numX1 = numX2;\n            numX2 = tmp;\n        }\n        if ((numY2 > numY1)) {\n            var tmp = void 0;\n            tmp = numY1;\n            numY1 = numY2;\n            numY2 = tmp;\n        }\n        var fragAngle1;\n        var numFragments;\n        if ((Math.abs(e1) <= 90)) {\n            fragAngle1 = e1;\n            numFragments = 1;\n        }\n        else {\n            numFragments = (Math.ceil((Math.abs(e1) / 90)));\n            fragAngle1 = (e1 / numFragments);\n        }\n        var xcen = ((numX1 + numX2) / 2);\n        var ycen = ((numY1 + numY2) / 2);\n        var rx = ((numX2 - numX1) / 2);\n        var ry = ((numY2 - numY1) / 2);\n        var halfAng = ((fragAngle1 * (Math.PI / 360)));\n        var kappa = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(halfAng)) / Math.sin(halfAng)));\n        var pointsList = [];\n        for (var i = 0; (i < numFragments); i++) {\n            var thetaValue0 = (((s1 + (i * fragAngle1)) * (Math.PI / 180)));\n            var thetaValue1 = (((s1 + ((i + 1) * fragAngle1)) * (Math.PI / 180)));\n            var cos0 = (Math.cos(thetaValue0));\n            var cos1 = (Math.cos(thetaValue1));\n            var sin0 = (Math.sin(thetaValue0));\n            var sin1 = (Math.sin(thetaValue1));\n            if ((fragAngle1 > 0)) {\n                /* tslint:disable-next-line:max-line-length */\n                pointsList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 - (kappa * sin0)))), (ycen - (ry * (sin0 + (kappa * cos0)))), (xcen + (rx * (cos1 + (kappa * sin1)))), (ycen - (ry * (sin1 - (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n            else {\n                /* tslint:disable-next-line:max-line-length */\n                pointsList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 + (kappa * sin0)))), (ycen - (ry * (sin0 - (kappa * cos0)))), (xcen + (rx * (cos1 - (kappa * sin1)))), (ycen - (ry * (sin1 + (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n        }\n        return pointsList;\n    };\n    /* tslint:disable */\n    // Constants\n    /**\n     * Specifies the mask of `path type values`.\n     * @private\n     */\n    PdfGraphics.pathTypesValuesMask = 0xf;\n    /**\n     * Checks whether the object is `transparencyObject`.\n     * @hidden\n     * @private\n     */\n    PdfGraphics.transparencyObject = false;\n    return PdfGraphics;\n}());\nexport { PdfGraphics };\n/**\n * `GetResourceEventHandler` class is alternate for event handlers and delegates.\n * @private\n * @hidden\n */\nvar GetResourceEventHandler = /** @class */ (function () {\n    /**\n     * Initialize instance of `GetResourceEventHandler` class.\n     * Alternate for event handlers and delegates.\n     * @private\n     */\n    function GetResourceEventHandler(sender) {\n        this.sender = sender;\n    }\n    /**\n     * Return the instance of `PdfResources` class.\n     * @private\n     */\n    GetResourceEventHandler.prototype.getResources = function () {\n        return this.sender.getResources();\n    };\n    return GetResourceEventHandler;\n}());\nexport { GetResourceEventHandler };\nvar PdfGraphicsState = /** @class */ (function () {\n    function PdfGraphicsState(graphics, matrix) {\n        /**\n         * Stores `previous rendering mode`.\n         * @default TextRenderingMode.Fill\n         * @private\n         */\n        this.internalTextRenderingMode = TextRenderingMode.Fill;\n        /**\n         * `Previous character spacing` value or 0.\n         * @default 0.0\n         * @private\n         */\n        this.internalCharacterSpacing = 0.0;\n        /**\n         * `Previous word spacing` value or 0.\n         * @default 0.0\n         * @private\n         */\n        this.internalWordSpacing = 0.0;\n        /**\n         * The previously used `text scaling value`.\n         * @default 100.0\n         * @private\n         */\n        this.internalTextScaling = 100.0;\n        /**\n         * `Current color space`.\n         * @default PdfColorSpace.Rgb\n         * @private\n         */\n        this.pdfColorSpace = PdfColorSpace.Rgb;\n        if (typeof graphics !== 'undefined') {\n            this.pdfGraphics = graphics;\n            var elements_1 = [];\n            graphics.matrix.matrix.elements.forEach(function (element) {\n                elements_1.push(element);\n            });\n            this.transformationMatrix = new PdfTransformationMatrix();\n            this.transformationMatrix.matrix = new Matrix(elements_1);\n        }\n    }\n    Object.defineProperty(PdfGraphicsState.prototype, \"graphics\", {\n        // Properties\n        /**\n         * Gets the parent `graphics object`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"matrix\", {\n        /**\n         * Gets the `current matrix`.\n         * @private\n         */\n        get: function () {\n            return this.transformationMatrix;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"characterSpacing\", {\n        /**\n         * Gets or sets the `current character spacing`.\n         * @private\n         */\n        get: function () {\n            return this.internalCharacterSpacing;\n        },\n        set: function (value) {\n            this.internalCharacterSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"wordSpacing\", {\n        /**\n         * Gets or sets the `word spacing` value.\n         * @private\n         */\n        get: function () {\n            return this.internalWordSpacing;\n        },\n        set: function (value) {\n            this.internalWordSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"textScaling\", {\n        /**\n         * Gets or sets the `text scaling` value.\n         * @private\n         */\n        get: function () {\n            return this.internalTextScaling;\n        },\n        set: function (value) {\n            this.internalTextScaling = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"pen\", {\n        /**\n         * Gets or sets the `current pen` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfPen;\n        },\n        set: function (value) {\n            this.pdfPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"brush\", {\n        /**\n         * Gets or sets the `brush`.\n         * @private\n         */\n        get: function () {\n            return this.pdfBrush;\n        },\n        set: function (value) {\n            this.pdfBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"font\", {\n        /**\n         * Gets or sets the `current font` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfFont;\n        },\n        set: function (value) {\n            this.pdfFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"colorSpace\", {\n        /**\n         * Gets or sets the `current color space` value.\n         * @private\n         */\n        get: function () {\n            return this.pdfColorSpace;\n        },\n        set: function (value) {\n            this.pdfColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGraphicsState.prototype, \"textRenderingMode\", {\n        /**\n         * Gets or sets the `text rendering mode`.\n         * @private\n         */\n        get: function () {\n            return this.internalTextRenderingMode;\n        },\n        set: function (value) {\n            this.internalTextRenderingMode = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGraphicsState;\n}());\nexport { PdfGraphicsState };\nvar TransparencyData = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `TransparencyData` class.\n     * @private\n     */\n    function TransparencyData(alphaPen, alphaBrush, blendMode) {\n        this.alphaPen = alphaPen;\n        this.alphaBrush = alphaBrush;\n        this.blendMode = blendMode;\n    }\n    return TransparencyData;\n}());\n/* tslint:enable */\n","import { PdfStream } from './../primitives/pdf-stream';\nimport { PdfGraphics, GetResourceEventHandler } from './../graphics/pdf-graphics';\nimport { PdfPageLayerCollection } from './pdf-page-layer-collection';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\n * The `PdfPageLayer` used to create layers in PDF document.\n * @private\n */\nvar PdfPageLayer = /** @class */ (function () {\n    function PdfPageLayer(page, streamClipPageTemplates) {\n        // private bSaved : boolean;\n        /**\n         * Local Variable to store the `color space` of the document.\n         * @private\n         */\n        this.pdfColorSpace = PdfColorSpace.Rgb;\n        /**\n         * Local Variable to set `visibility`.\n         * @default true\n         * @private\n         */\n        this.isVisible = true;\n        /**\n         * Indicates if `Sublayer` is present.\n         * @default false\n         * @private\n         */\n        this.sublayer = false;\n        /**\n         * Local variable to store `length` of the graphics.\n         * @default 0\n         * @private\n         */\n        this.contentLength = 0;\n        /**\n         * Instance for `PdfDictionaryProperties` Class.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        if (page === null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        this.pdfPage = page;\n        this.clipPageTemplates = true;\n        if (typeof streamClipPageTemplates === 'undefined') {\n            this.content = new PdfStream();\n        }\n        else if (streamClipPageTemplates instanceof PdfStream || streamClipPageTemplates === null) {\n            if (streamClipPageTemplates === null) {\n                throw new Error('ArgumentNullException:stream');\n            }\n            this.content = streamClipPageTemplates;\n        }\n        else {\n            this.content = new PdfStream();\n            this.clipPageTemplates = streamClipPageTemplates;\n        }\n    }\n    Object.defineProperty(PdfPageLayer.prototype, \"colorSpace\", {\n        // Properties\n        /**\n         * Get or set the `color space`.\n         * @private\n         */\n        get: function () {\n            return this.pdfColorSpace;\n        },\n        set: function (value) {\n            this.pdfColorSpace = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"page\", {\n        /**\n         * Gets parent `page` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"layerId\", {\n        /**\n         * Gets and Sets the `id of the layer`.\n         * @private\n         */\n        get: function () {\n            return this.layerid;\n        },\n        set: function (value) {\n            this.layerid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"name\", {\n        /**\n         * Gets or sets the `name` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.layerName;\n        },\n        set: function (value) {\n            this.layerName = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"visible\", {\n        /**\n         * Gets or sets the `visibility` of the layer.\n         * @private\n         */\n        get: function () {\n            return this.isVisible;\n        },\n        set: function (value) {\n            this.isVisible = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"graphics\", {\n        /**\n         * Gets `Graphics` context of the layer, used to draw various graphical content on layer.\n         * @private\n         */\n        get: function () {\n            if ((this.pdfGraphics == null)) {\n                this.initializeGraphics(this.page);\n            }\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageLayer.prototype, \"layers\", {\n        /**\n         * Gets the collection of `PdfPageLayer`, this collection handle by the class 'PdfPageLayerCollection'.\n         * @private\n         */\n        get: function () {\n            if (this.layer == null) {\n                this.layer = new PdfPageLayerCollection(this.page);\n                this.layer.sublayer = true;\n                return this.layer;\n            }\n            else {\n                return this.layer;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Adds` a new PDF Page layer.\n     * @private\n     */\n    PdfPageLayer.prototype.add = function () {\n        var layer = new PdfPageLayer(this.pdfPage);\n        layer.name = '';\n        return layer;\n    };\n    /**\n     * Returns a value indicating the `sign` of a single-precision floating-point number.\n     * @private\n     */\n    PdfPageLayer.prototype.sign = function (number) {\n        if (number === 0) {\n            return 0;\n        }\n        else if (number > 0) {\n            return 1;\n        }\n        else {\n            return -1;\n        }\n    };\n    /**\n     * `Initializes Graphics context` of the layer.\n     * @private\n     */\n    PdfPageLayer.prototype.initializeGraphics = function (page) {\n        var oPage = page;\n        var gr = new GetResourceEventHandler(this.page);\n        var cropBox = null;\n        this.pdfGraphics = new PdfGraphics(page.size, gr, this.content);\n        this.pdfGraphics.mediaBoxUpperRightBound = 0;\n        if (oPage != null) {\n            var sc = oPage.section.parent;\n            if (sc != null) {\n                this.pdfGraphics.colorSpace = sc.document.colorSpace;\n                this.colorSpace = sc.document.colorSpace;\n            }\n        }\n        // Transform coordinates to the left/top and activate margins.\n        var isSame = (this.sign(page.origin.y) === this.sign(page.origin.x));\n        // if (page != null) {\n        if (page.origin.x >= 0 && page.origin.y >= 0 || !(isSame)) {\n            this.pdfGraphics.initializeCoordinates();\n        }\n        else {\n            // this.m_graphics.InitializeCoordinates(page);\n        }\n        var clipRect = oPage.section.getActualBounds(oPage, true);\n        var margins = oPage.section.pageSettings.margins;\n        if (this.clipPageTemplates) {\n            if (page.origin.x >= 0 && page.origin.y >= 0) {\n                this.pdfGraphics.clipTranslateMargins(clipRect);\n            }\n        }\n        else {\n            this.graphics.clipTranslateMargins(clipRect.x, clipRect.y, margins.left, margins.top, margins.right, margins.bottom);\n        }\n        this.pdfGraphics.setLayer(this);\n        // this.bSaved = false;\n    };\n    Object.defineProperty(PdfPageLayer.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPageLayer;\n}());\nexport { PdfPageLayer };\n","/**\n * PdfCollection.ts class for EJ2-PDF\n * The class used to handle the collection of PdF objects.\n */\nvar PdfCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `Collection` class.\n     * @private\n     */\n    function PdfCollection() {\n        //\n    }\n    Object.defineProperty(PdfCollection.prototype, \"count\", {\n        // Properties\n        /**\n         * Gets the `Count` of stored objects.\n         * @private\n         */\n        get: function () {\n            if (typeof this.collection === 'undefined') {\n                this.collection = [];\n            }\n            return this.collection.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCollection.prototype, \"list\", {\n        /**\n         * Gets the `list` of stored objects.\n         * @private\n         */\n        get: function () {\n            if (typeof this.collection === 'undefined') {\n                this.collection = [];\n            }\n            return this.collection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCollection;\n}());\nexport { PdfCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfPageLayerCollection.ts class for EJ2-PDF\n */\nimport { PdfPageBase } from './pdf-page-base';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { PdfPageLayer } from './pdf-page-layer';\nimport { PdfCollection } from './../general/pdf-collection';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfStream } from './../primitives/pdf-stream';\n/**\n * The class provides methods and properties to handle the collections of `PdfPageLayer`.\n */\nvar PdfPageLayerCollection = /** @class */ (function (_super) {\n    __extends(PdfPageLayerCollection, _super);\n    function PdfPageLayerCollection(page) {\n        var _this = _super.call(this) || this;\n        /**\n         * Stores the `number of first level layers` in the document.\n         * @default 0\n         * @private\n         */\n        _this.parentLayerCount = 0;\n        /**\n         * Indicates if `Sublayer` is present.\n         * @default false\n         * @private\n         */\n        _this.sublayer = false;\n        /**\n         * Stores the `optional content dictionary`.\n         * @private\n         */\n        _this.optionalContent = new PdfDictionary();\n        if (page instanceof PdfPageBase) {\n            // if (page == null) {\n            //     throw new Error('ArgumentNullException:page');\n            // }\n            _this.page = page;\n            var lPage = page;\n            // if (lPage != null) {\n            _this.parseLayers(lPage);\n            // }\n        }\n        return _this;\n    }\n    PdfPageLayerCollection.prototype.items = function (index, value) {\n        if (typeof index === 'number' && typeof value === 'undefined') {\n            var obj = this.list[index];\n            return obj;\n        }\n        else {\n            if (value == null) {\n                throw new Error('ArgumentNullException: layer');\n            }\n            if (value.page !== this.page) {\n                throw new Error('ArgumentException: The layer belongs to another page');\n            }\n            // // Add/remove the layer.\n            // let layer : PdfPageLayer = this.items(index);\n            // if (layer != null) {\n            //     this.RemoveLayer(layer);\n            // }\n            // this.List[index] = value;\n            // this.InsertLayer(index, value);\n        }\n    };\n    PdfPageLayerCollection.prototype.add = function (firstArgument, secondArgument) {\n        if (typeof firstArgument === 'undefined') {\n            var layer = new PdfPageLayer(this.page);\n            layer.name = '';\n            this.add(layer);\n            return layer;\n        }\n        else if (firstArgument instanceof PdfPageLayer) {\n            // if (layer == null)\n            //     throw new ArgumentNullException(\"layer\");\n            // if (layer.Page != m_page)\n            //     throw new ArgumentException(\"The layer belongs to another page\");\n            var index = this.list.push(firstArgument);\n            // Register layer.\n            this.addLayer(index, firstArgument);\n            return index;\n        }\n        else {\n            return 0;\n        }\n    };\n    /**\n     * Registers `layer` at the page.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.addLayer = function (index, layer) {\n        var reference = new PdfReferenceHolder(layer);\n        this.page.contents.add(reference);\n    };\n    // private RemoveLayer(layer : PdfPageLayer) : void {\n    //     if (layer == null) {\n    //         throw new Error('ArgumentNullException:layer');\n    //     }\n    //     let reference : PdfReferenceHolder = new PdfReferenceHolder(layer);\n    //     if (this.page != null) {\n    //         this.page.Contents.Remove(reference);\n    //     }\n    // }\n    /**\n     * Inserts `PdfPageLayer` into the collection at specified index.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.insert = function (index, layer) {\n        // if (index < 0)\n        //     throw new ArgumentOutOfRangeException(\"index\", \"Value can not be less 0\");\n        // if (layer == null)\n        //     throw new ArgumentNullException(\"layer\");\n        // if (layer.Page != m_page)\n        //     throw new ArgumentException(\"The layer belongs to another page\");\n        var list = [];\n        var length = this.list.length;\n        for (var i = index; i < length; i++) {\n            list.push(this.list.pop());\n        }\n        this.list.push(layer);\n        for (var i = 0; i < list.length; i++) {\n            this.list.push(list[i]);\n        }\n        // Register layer.\n        this.insertLayer(index, layer);\n    };\n    /**\n     * Registers layer at the page.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.insertLayer = function (index, layer) {\n        if (layer == null) {\n            throw new Error('ArgumentNullException:layer');\n        }\n        var reference = new PdfReferenceHolder(layer);\n        this.page.contents.insert(index, reference);\n    };\n    // tslint:disable\n    /**\n     * `Parses the layers`.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.parseLayers = function (loadedPage) {\n        // if (loadedPage == null) {\n        //     throw new Error('ArgumentNullException:loadedPage');\n        // }\n        var contents = this.page.contents;\n        var resource = this.page.getResources();\n        var crossTable = null;\n        var ocproperties = null;\n        var propertie = null;\n        var isLayerAdded = false;\n        // if (loadedPage instanceof PdfPage) {\n        crossTable = loadedPage.crossTable;\n        // } else {\n        //     crossTable = (loadedPage as PdfLoadedPage).CrossTable;\n        //     Propertie = PdfCrossTable.Dereference(Resource[DictionaryProperties.Properties]) as PdfDictionary;\n        //     ocproperties = PdfCrossTable.Dereference((loadedPage as PdfLoadedPage).\n        //     Document.Catalog[DictionaryProperties.OCProperties]) as PdfDictionary;\n        // }\n        var saveStream = new PdfStream();\n        var restoreStream = new PdfStream();\n        var saveState = 'q';\n        var newLine = '\\n';\n        var restoreState = 'Q';\n        // for (let index : number = 0; index < contents.Items.length; index++) {\n        //     let obj : IPdfPrimitive = contents[index];\n        //     let stream : PdfStream = crossTable.GetObject(obj) as PdfStream;\n        //     if (stream == null)\n        //         throw new PdfDocumentException(\"Invalid contents array.\");\n        //     // if (stream.Compress)\n        //     {\n        //         if (!loadedPage.Imported)\n        //             stream.Decompress();\n        //     }\n        //     byte[] contentId = stream.Data;\n        //     string str = PdfString.ByteToString(contentId);\n        //     if (!loadedPage.Imported && (contents.Count == 1) && ((stream.Data[stream.Data.Length - 2] ==\n        //     RestoreState) || (stream.Data[stream.Data.Length - 1] == RestoreState)))\n        //     {\n        //         byte[] content = stream.Data;\n        //         byte[] data = new byte[content.Length + 4];\n        //         data[0] = SaveState;\n        //         data[1] = NewLine;\n        //         content.CopyTo(data, 2);\n        //         data[data.Length - 2] = NewLine;\n        //         data[data.Length - 1] = RestoreState;\n        //         stream.Data = data;\n        //     }\n        //     if (ocproperties != null)\n        //     {\n        //         if (Propertie != null)\n        //         {\n        //             foreach (KeyValuePair<PdfName, IPdfPrimitive> prop in Propertie.Items)\n        //             {\n        //                 String Key = prop.Key.ToString();\n        //                 PdfReferenceHolder refh = prop.Value as PdfReferenceHolder;\n        //                 PdfDictionary Dict = null;\n        //                 if (refh != null)\n        //                 {\n        //                     Dict = refh.Object as PdfDictionary;\n        //                 }\n        //                 else\n        //                 {\n        //                     Dict = prop.Value as PdfDictionary;\n        //                 }\n        //                 PdfDictionary m_usage = PdfCrossTable.Dereference(Dict[DictionaryProperties.Usage]) as PdfDictionary;\n        //                 if (m_usage != null)\n        //                 {\n        //                     if (str.Contains(Key))\n        //                     {\n        //                         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //                         PdfDictionary printoption = PdfCrossTable.Dereference(m_usage[DictionaryProperties.Print])\n        //                         as PdfDictionary;\n        //                         if (printoption != null)\n        //                         {\n        //                             layer.m_printOption = printoption;\n        //                             foreach (KeyValuePair<PdfName, IPdfPrimitive> value in printoption.Items)\n        //                             {\n        //                                 if (value.Key.Value.Equals(DictionaryProperties.PrintState))\n        //                                 {\n        //                                     string printState = (value.Value as PdfName).Value;\n        //                                     if (printState.Equals(DictionaryProperties.OCGON))\n        //                                     {\n        //                                         layer.PrintState = PdfPrintState.AlwaysPrint;\n        //                                         break;\n        //                                     }\n        //                                     else\n        //                                     {\n        //                                         layer.PrintState = PdfPrintState.NeverPrint;\n        //                                         break;\n        //                                     }\n        //                                 }\n        //                             }\n        //                         }\n        //                         PdfString layerName = PdfCrossTable.Dereference(Dict[DictionaryProperties.Name]) as PdfString;\n        //                         layer.Name = layerName.Value;\n        //                         List.add(layer);\n        //                         isLayerAdded = true;\n        //                         if(!str.Contains(\"EMC\"))\n        //                         break;\n        //                     }\n        //                 }\n        //                 else\n        //                 {\n        //                     if (str.Contains(Key))\n        //                     {\n        //                         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //                         List.add(layer);\n        //                         if(Dict.ContainsKey(DictionaryProperties.Name))\n        //                         {\n        //                         PdfString layerName = PdfCrossTable.Dereference(Dict[DictionaryProperties.Name]) as PdfString;\n        //                         layer.Name = layerName.Value;\n        //                         }\n        //                         isLayerAdded = true;\n        //                         break;\n        //                     }\n        //                 }\n        //             }\n        //         }\n        //     }\n        //     if (!isLayerAdded)\n        //     {\n        //         PdfPageLayer layer = new PdfPageLayer(loadedPage, stream);\n        //         List.add(layer);\n        //     }\n        //     else\n        //         isLayerAdded = false;\n        // }\n        var saveData = [];\n        saveData.push(saveState);\n        saveStream.data = saveData;\n        contents.insert(0, new PdfReferenceHolder(saveStream));\n        saveData = [];\n        saveData.push(restoreState);\n        restoreStream.data = saveData;\n        contents.insert(contents.count, new PdfReferenceHolder(restoreStream));\n    };\n    /**\n     * Returns `index of` the `PdfPageLayer` in the collection if exists, -1 otherwise.\n     * @private\n     */\n    PdfPageLayerCollection.prototype.indexOf = function (layer) {\n        if (layer == null) {\n            throw new Error('ArgumentNullException: layer');\n        }\n        var index = this.list.indexOf(layer);\n        return index;\n    };\n    return PdfPageLayerCollection;\n}(PdfCollection));\nexport { PdfPageLayerCollection };\n","import { PdfArray } from './../primitives/pdf-array';\nimport { PdfPageLayerCollection } from './pdf-page-layer-collection';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfResources } from './../graphics/pdf-resources';\n/**\n * The abstract base class for all pages,\n * `PdfPageBase` class provides methods and properties to create PDF pages and its elements.\n * @private\n */\nvar PdfPageBase = /** @class */ (function () {\n    //constructors\n    /**\n     * Initializes a new instance of the `PdfPageBase` class.\n     * @private\n     */\n    function PdfPageBase(dictionary) {\n        /**\n         * `Index` of the default layer.\n         * @default -1.\n         * @private\n         */\n        this.defLayerIndex = -1;\n        /**\n         * Local variable to store if page `updated`.\n         * @default false.\n         * @private\n         */\n        this.modified = false;\n        /**\n         * Instance of `DictionaryProperties` class.\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.pageDictionary = dictionary;\n    }\n    Object.defineProperty(PdfPageBase.prototype, \"section\", {\n        //Properties\n        /**\n         * Gets the `section` of a page.\n         * @private\n         */\n        get: function () {\n            // if (this.pdfSection === null) {\n            //     throw new Error('PdfException : Page must be added to some section before using.');\n            // }\n            return this.pdfSection;\n        },\n        set: function (value) {\n            this.pdfSection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"dictionary\", {\n        /**\n         * Gets the page `dictionary`.\n         * @private\n         */\n        get: function () {\n            return this.pageDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.pageDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"defaultLayer\", {\n        /**\n         * Gets the `default layer` of the page (Read only).\n         * @private\n         */\n        get: function () {\n            var layer = this.layers;\n            var index = this.defaultLayerIndex;\n            var returnlayer = layer.items(index);\n            return returnlayer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"defaultLayerIndex\", {\n        /**\n         * Gets or sets `index of the default layer`.\n         * @private\n         */\n        get: function () {\n            if (this.layerCollection.count === 0 || this.defLayerIndex === -1) {\n                var layer = this.layerCollection.add();\n                this.defLayerIndex = this.layerCollection.indexOf(layer);\n            }\n            return this.defLayerIndex;\n        },\n        /**\n         * Gets or sets` index of the default layer`.\n         * @private\n         */\n        set: function (value) {\n            if (value < 0 || value > this.layers.count - 1) {\n                throw new Error('ArgumentOutOfRangeException : value, Index can not be less 0 and greater Layers.Count - 1');\n            }\n            else {\n                this.defLayerIndex = value;\n                this.modified = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageBase.prototype, \"layers\", {\n        /**\n         * Gets the collection of the page's `layers` (Read only).\n         * @private\n         */\n        get: function () {\n            if (this.layerCollection == null || typeof this.layerCollection === 'undefined') {\n                this.layerCollection = new PdfPageLayerCollection(this);\n            }\n            return this.layerCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return an instance of `PdfResources` class.\n     * @private\n     */\n    PdfPageBase.prototype.getResources = function () {\n        if (this.resources == null) {\n            this.resources = new PdfResources();\n            this.dictionary.items.setValue(this.dictionaryProperties.resources, this.resources);\n        }\n        return this.resources;\n    };\n    Object.defineProperty(PdfPageBase.prototype, \"contents\", {\n        /**\n         * Gets `array of page's content`.\n         * @private\n         */\n        get: function () {\n            var obj = this.pageDictionary.items.getValue(this.dictionaryProperties.contents);\n            var contents = obj;\n            var rh = obj;\n            if (contents == null) {\n                contents = new PdfArray();\n                this.pageDictionary.items.setValue(this.dictionaryProperties.contents, contents);\n            }\n            return contents;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the `resources`.\n     * @private\n     */\n    PdfPageBase.prototype.setResources = function (res) {\n        this.resources = res;\n        this.dictionary.items.setValue(this.dictionaryProperties.resources, this.resources);\n        this.modified = true;\n    };\n    return PdfPageBase;\n}());\nexport { PdfPageBase };\n","import { PdfArray } from './../primitives/pdf-array';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { SizeF, RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfColorSpace } from './../graphics/enum';\n/**\n * `PdfAnnotationCollection` class represents the collection of 'PdfAnnotation' objects.\n * @private\n */\nvar PdfAnnotationCollection = /** @class */ (function () {\n    function PdfAnnotationCollection(page) {\n        // Constants\n        /**\n         * `Error` constant message.\n         * @private\n         */\n        this.alreadyExistsAnnotationError = 'This annotatation had been already added to page';\n        /**\n         * `Error` constant message.\n         * @private\n         */\n        this.missingAnnotationException = 'Annotation is not contained in collection.';\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Array of the `annotations`.\n         * @private\n         */\n        this.internalAnnotations = new PdfArray();\n        /**\n         * privte `list` for the annotations.\n         * @private\n         */\n        this.lists = [];\n        if (typeof page !== 'undefined') {\n            this.page = page;\n        }\n    }\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"annotations\", {\n        /**\n         * Gets the `PdfAnnotation` object at the specified index. Read-Only.\n         * @private\n         */\n        get: function () {\n            return this.internalAnnotations;\n        },\n        set: function (value) {\n            this.internalAnnotations = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /**\n     * `Adds` a new annotation to the collection.\n     * @private\n     */\n    PdfAnnotationCollection.prototype.add = function (annotation) {\n        // this.SetPrint(annotation);\n        this.doAdd(annotation);\n    };\n    /**\n     * `Adds` a Annotation to collection.\n     * @private\n     */\n    /* tslint:disable */\n    PdfAnnotationCollection.prototype.doAdd = function (annotation) {\n        if (typeof annotation.destination !== 'undefined') {\n            var layout = new PdfStringLayouter();\n            var layoutResult = layout.layout(annotation.text, annotation.font, annotation.stringFormat, new SizeF((annotation.bounds.width), 0), false, new SizeF(0, 0));\n            var lastPosition = annotation.bounds.y;\n            if (layoutResult.lines.length === 1) {\n                var size = annotation.font.measureString(layoutResult.lines[0].text);\n                annotation.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n                annotation.text = layoutResult.lines[0].text;\n                //Draw Annotation Text.\n                this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, annotation.bounds.y, annotation.bounds.width, annotation.bounds.height, null);\n                //Add annotation to dictionary.\n                annotation.setPage(this.page);\n                this.setColor(annotation);\n                this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n                this.lists.push(annotation);\n            }\n            else {\n                for (var i = 0; i < layoutResult.lines.length; i++) {\n                    var size = annotation.font.measureString(layoutResult.lines[i].text);\n                    if (i === 0) {\n                        annotation.bounds = new RectangleF(annotation.bounds.x, lastPosition, size.width, size.height);\n                        annotation.text = layoutResult.lines[i].text;\n                        //Draw Annotation Text.\n                        this.page.graphics.drawString(annotation.text, annotation.font, null, annotation.brush, annotation.bounds.x, lastPosition, size.width, size.height, null);\n                        //Add annotation to dictionary.\n                        annotation.setPage(this.page);\n                        this.setColor(annotation);\n                        this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n                        this.lists.push(annotation);\n                        //Update y for drawing next line of the text.\n                        lastPosition += annotation.bounds.height;\n                    }\n                    else {\n                        var annot = annotation.clone();\n                        annot.bounds = new RectangleF(new PointF(annotation.bounds.x, lastPosition), size);\n                        annot.text = layoutResult.lines[i].text;\n                        //Draw Annotation Text.\n                        this.page.graphics.drawString(annot.text, annot.font, null, annot.brush, annot.bounds.x, annot.bounds.y, annot.bounds.width, annot.bounds.height, null);\n                        //Add annotation to dictionary.\n                        annot.setPage(this.page);\n                        this.setColor(annot);\n                        this.internalAnnotations.add(new PdfReferenceHolder(annot));\n                        this.lists.push(annot);\n                        //Update y for drawing next line of the text.\n                        lastPosition += annot.bounds.height;\n                    }\n                }\n            }\n        }\n        else {\n            annotation.setPage(this.page);\n            this.internalAnnotations.add(new PdfReferenceHolder(annotation));\n            return this.lists.push(annotation);\n        }\n    };\n    /* tslint:enable */\n    /**\n     * `Set a color of an annotation`.\n     * @private\n     */\n    PdfAnnotationCollection.prototype.setColor = function (annotation) {\n        var cs = PdfColorSpace.Rgb;\n        var colours = annotation.color.toArray(cs);\n        annotation.dictionary.items.setValue(this.dictionaryProperties.c, colours);\n    };\n    Object.defineProperty(PdfAnnotationCollection.prototype, \"element\", {\n        // IPdfWrapper Members\n        /**\n         * Gets the `Element` representing this object.\n         * @private\n         */\n        get: function () {\n            return this.internalAnnotations;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotationCollection;\n}());\nexport { PdfAnnotationCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPageBase } from './pdf-page-base';\nimport { PdfDictionary, SaveTemplateEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { SizeF } from './../drawing/pdf-drawing';\nimport { PdfAnnotationCollection } from './../annotations/annotation-collection';\nimport { PdfPageLayer } from './pdf-page-layer';\n/**\n * Provides methods and properties to create pages and its elements.\n * `PdfPage` class inherited from the `PdfPageBase` class.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * //\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * //\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfPage = /** @class */ (function (_super) {\n    __extends(PdfPage, _super);\n    //constructors\n    /**\n     * Initialize the new instance for `PdfPage` class.\n     * @private\n     */\n    function PdfPage() {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Stores the instance of `PdfAnnotationCollection` class.\n         * @hidden\n         * @default null\n         * @private\n         */\n        _this.annotationCollection = null;\n        /**\n         * Stores the instance of `PageBeginSave` event for Page Number Field.\n         * @default null\n         * @private\n         */\n        _this.beginSave = null;\n        _this.initialize();\n        return _this;\n    }\n    Object.defineProperty(PdfPage.prototype, \"document\", {\n        //Properties\n        /**\n         * Gets current `document`.\n         * @private\n         */\n        get: function () {\n            if (this.section !== null && this.section.parent !== null) {\n                return this.section.parent.document;\n            }\n            else {\n                return null;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"graphics\", {\n        /**\n         * Get the current `graphics`.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // add a new page to the document\n         * let page1 : PdfPage = document.pages.add();\n         * //\n         * // get graphics\n         * let graphics : PdfGraphics = page1.graphics;\n         * //\n         * // set the font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // create black brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // draw the text\n         * graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            var result = this.defaultLayer.graphics;\n            result.currentPage = this;\n            return result;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"crossTable\", {\n        /**\n         * Gets the `cross table`.\n         * @private\n         */\n        get: function () {\n            if (this.section === null) {\n                throw new Error('PdfDocumentException : Page is not created');\n            }\n            return this.section.parent === null ? this.section.parentDocument.crossTable : this.section.parent.document.crossTable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"size\", {\n        /**\n         * Gets the size of the PDF page- Read only.\n         * @public\n         */\n        get: function () {\n            return this.section.pageSettings.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"origin\", {\n        /**\n         * Gets the `origin` of the page.\n         * @private\n         */\n        get: function () {\n            return this.section.pageSettings.origin;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPage.prototype, \"annotations\", {\n        /**\n         * Gets a collection of the `annotations` of the page- Read only.\n         * @private\n         */\n        get: function () {\n            if (this.annotationCollection == null) {\n                this.annotationCollection = new PdfAnnotationCollection(this);\n                // if (!this.Dictionary.ContainsKey(this.dictionaryProperties.annots)) {\n                this.dictionary.items.setValue(this.dictionaryProperties.annots, this.annotationCollection.element);\n                // }\n                this.annotationCollection.annotations = this.dictionary.items.getValue(this.dictionaryProperties.annots);\n            }\n            return this.annotationCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Initializes` a page.\n     * @private\n     */\n    PdfPage.prototype.initialize = function () {\n        this.dictionary.items.setValue(this.dictionaryProperties.type, new PdfName('Page'));\n        this.dictionary.pageBeginDrawTemplate = new SaveTemplateEventHandler(this);\n    };\n    /**\n     * Sets parent `section` to the page.\n     * @private\n     */\n    PdfPage.prototype.setSection = function (section) {\n        this.section = section;\n        this.dictionary.items.setValue(this.dictionaryProperties.parent, new PdfReferenceHolder(section));\n    };\n    /**\n     * `Resets the progress`.\n     * @private\n     */\n    PdfPage.prototype.resetProgress = function () {\n        this.isProgressOn = false;\n    };\n    /**\n     * Get the page size reduced by page margins and page template dimensions.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a pages to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // create new standard font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // set brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * //\n     * // set the specified point using `getClientSize` method\n     * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, point);\n     * //\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfPage.prototype.getClientSize = function () {\n        var returnValue = this.section.getActualBounds(this, true);\n        return new SizeF(returnValue.width, returnValue.height);\n    };\n    /**\n     * Helper method to retrive the instance of `PageBeginSave` event for header and footer elements.\n     * @private\n     */\n    PdfPage.prototype.pageBeginSave = function () {\n        var doc = this.document;\n        if (typeof doc !== undefined && doc != null) {\n            this.drawPageTemplates(doc);\n        }\n        if (this.beginSave != null && typeof this.beginSave !== 'undefined') {\n            this.beginSave(this);\n        }\n    };\n    /**\n     * Helper method to draw template elements.\n     * @private\n     */\n    PdfPage.prototype.drawPageTemplates = function (document) {\n        // Draw Background templates.\n        var hasBackTemplates = this.section.containsTemplates(document, this, false);\n        if (hasBackTemplates) {\n            var backLayer = new PdfPageLayer(this, false);\n            this.layers.insert(0, backLayer);\n            this.section.drawTemplates(this, backLayer, document, false);\n            if (backLayer.graphics !== null && typeof backLayer.graphics !== 'undefined') {\n                for (var i = 0; i < backLayer.graphics.automaticFields.automaticFields.length; i++) {\n                    var fieldInfo = backLayer.graphics.automaticFields.automaticFields[i];\n                    fieldInfo.field.performDraw(backLayer.graphics, fieldInfo.location, fieldInfo.scalingX, fieldInfo.scalingY);\n                }\n            }\n        }\n        // Draw Foreground templates.\n        var hasFrontTemplates = this.section.containsTemplates(document, this, true);\n        if (hasFrontTemplates) {\n            var frontLayer = new PdfPageLayer(this, false);\n            this.layers.add(frontLayer);\n            this.section.drawTemplates(this, frontLayer, document, true);\n        }\n    };\n    return PdfPage;\n}(PdfPageBase));\nexport { PdfPage };\n","/**\n * Provides data for `PageAddedEventHandler` event.\n * This event raises when adding the new PDF page to the PDF document.\n */\nvar PageAddedEventArgs = /** @class */ (function () {\n    function PageAddedEventArgs(page) {\n        if (typeof page !== 'undefined') {\n            this.pdfPage = page;\n        }\n        else {\n            this.pdfPage = null;\n        }\n    }\n    Object.defineProperty(PageAddedEventArgs.prototype, \"page\", {\n        /**\n         * Gets the `newly added page`.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PageAddedEventArgs;\n}());\nexport { PageAddedEventArgs };\n","/**\n * Represents the `collection of pages in a section`.\n * @private\n */\nvar PdfSectionPageCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfSectionPageCollection` class.\n     * @private\n     */\n    function PdfSectionPageCollection(section) {\n        //  Fields\n        /**\n         * @hidden\n         * @private\n         */\n        this.pdfSection = null;\n        if (section == null) {\n            throw Error('ArgumentNullException(\"section\")');\n        }\n        this.section = section;\n    }\n    Object.defineProperty(PdfSectionPageCollection.prototype, \"section\", {\n        // Properties\n        /**\n         * Gets the `PdfPage` at the specified index.\n         * @private\n         */\n        get: function () {\n            return this.pdfSection;\n        },\n        set: function (value) {\n            this.pdfSection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public Methods\n    /**\n     * `Determines` whether the specified page is within the collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.contains = function (page) {\n        return this.section.contains(page);\n    };\n    /**\n     * `Removes` the specified page from collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.remove = function (page) {\n        this.section.remove(page);\n    };\n    /**\n     * `Adds` a new page from collection.\n     * @private\n     */\n    PdfSectionPageCollection.prototype.add = function () {\n        return this.section.add();\n    };\n    return PdfSectionPageCollection;\n}());\nexport { PdfSectionPageCollection };\n","import { TemplateType } from './../pages/enum';\n// import { PdfStampCollection } from `./../Pages/PdfStampCollection`;\n/**\n * `PdfDocumentTemplate` class encapsulates a page template for all the pages in the document.\n * @private\n */\nvar PdfDocumentTemplate = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfDocumentTemplate` class.\n     * @public\n     */\n    function PdfDocumentTemplate() {\n        //\n    }\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"left\", {\n        // private m_stamps : PdfStampCollection;\n        // Properties\n        /**\n         * `Left` page template object.\n         * @public\n         */\n        get: function () {\n            return this.leftTemplate;\n        },\n        set: function (value) {\n            this.leftTemplate = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"top\", {\n        /**\n         * `Top` page template object.\n         * @public\n         */\n        get: function () {\n            return this.topTemplate;\n        },\n        set: function (value) {\n            this.topTemplate = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"right\", {\n        /**\n         * `Right` page template object.\n         * @public\n         */\n        get: function () {\n            return this.rightTemplate;\n        },\n        set: function (value) {\n            this.rightTemplate = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"bottom\", {\n        /**\n         * `Bottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.bottomTemplate;\n        },\n        set: function (value) {\n            this.bottomTemplate = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenLeft\", {\n        /**\n         * `EvenLeft` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenLeft;\n        },\n        set: function (value) {\n            this.evenLeft = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenTop\", {\n        /**\n         * `EvenTop` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenTop;\n        },\n        set: function (value) {\n            this.evenTop = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenRight\", {\n        /**\n         * `EvenRight` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenRight;\n        },\n        set: function (value) {\n            this.evenRight = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"EvenBottom\", {\n        /**\n         * `EvenBottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.evenBottom;\n        },\n        set: function (value) {\n            this.evenBottom = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddLeft\", {\n        /**\n         * `OddLeft` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddLeft;\n        },\n        set: function (value) {\n            this.oddLeft = this.checkElement(value, TemplateType.Left);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddTop\", {\n        /**\n         * `OddTop` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddTop;\n        },\n        set: function (value) {\n            this.oddTop = this.checkElement(value, TemplateType.Top);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddRight\", {\n        /**\n         * `OddRight` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddRight;\n        },\n        set: function (value) {\n            this.oddRight = this.checkElement(value, TemplateType.Right);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentTemplate.prototype, \"OddBottom\", {\n        /**\n         * `OddBottom` page template object.\n         * @public\n         */\n        get: function () {\n            return this.oddBottom;\n        },\n        set: function (value) {\n            this.oddBottom = this.checkElement(value, TemplateType.Bottom);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Returns `left` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getLeft = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenLeft != null) ? this.EvenLeft : this.left;\n        }\n        else {\n            template = (this.OddLeft != null) ? this.OddLeft : this.left;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `top` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getTop = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenTop != null) ? this.EvenTop : this.top;\n        }\n        else {\n            template = (this.OddTop != null) ? this.OddTop : this.top;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `right` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getRight = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenRight != null) ? this.EvenRight : this.right;\n        }\n        else {\n            template = (this.OddRight != null) ? this.OddRight : this.right;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Returns `bottom` template.\n     * @public\n     */\n    PdfDocumentTemplate.prototype.getBottom = function (page) {\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var template = null;\n        // if (page.Document.Pages != null) {\n        var even = this.isEven(page);\n        if (even) {\n            template = (this.EvenBottom != null) ? this.EvenBottom : this.bottom;\n        }\n        else {\n            template = (this.OddBottom != null) ? this.OddBottom : this.bottom;\n        }\n        // }\n        return template;\n    };\n    /**\n     * Checks whether the page `is even`.\n     * @private\n     */\n    PdfDocumentTemplate.prototype.isEven = function (page) {\n        var pages = page.section.document.pages;\n        var index = 0;\n        if (pages.pageCollectionIndex.containsKey(page)) {\n            index = pages.pageCollectionIndex.getValue(page) + 1;\n        }\n        else {\n            index = pages.indexOf(page) + 1;\n        }\n        var even = ((index % 2) === 0);\n        return even;\n    };\n    /**\n     * Checks a `template element`.\n     * @private\n     */\n    PdfDocumentTemplate.prototype.checkElement = function (templateElement, type) {\n        if (templateElement != null) {\n            if ((typeof templateElement.type !== 'undefined') && (templateElement.type !== TemplateType.None)) {\n                throw new Error('NotSupportedException:Can not reassign the template element. Please, create new one.');\n            }\n            templateElement.type = type;\n        }\n        return templateElement;\n    };\n    return PdfDocumentTemplate;\n}());\nexport { PdfDocumentTemplate };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSectionTemplate.ts class for EJ2-PDF\n */\nimport { PdfDocumentTemplate } from './../document/pdf-document-template';\n/**\n * Represents a `page template` for all the pages in the section.\n */\nvar PdfSectionTemplate = /** @class */ (function (_super) {\n    __extends(PdfSectionTemplate, _super);\n    // Constructors\n    /**\n     * `Creates a new object`.\n     * @private\n     */\n    function PdfSectionTemplate() {\n        var _this = _super.call(this) || this;\n        _this.leftValue = _this.topValue = _this.rightValue = _this.bottomValue = _this.stampValue = true;\n        return _this;\n    }\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentLeftTemplate\", {\n        // Properties\n        /**\n         * Gets or sets value indicating whether parent `Left page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.leftValue;\n        },\n        set: function (value) {\n            this.leftValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentTopTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Top page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.topValue;\n        },\n        set: function (value) {\n            this.topValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentRightTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Right page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.rightValue;\n        },\n        set: function (value) {\n            this.rightValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentBottomTemplate\", {\n        /**\n         * Gets or sets value indicating whether parent `Bottom page template should be used or not`.\n         * @private\n         */\n        get: function () {\n            return this.bottomValue;\n        },\n        set: function (value) {\n            this.bottomValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionTemplate.prototype, \"applyDocumentStamps\", {\n        /**\n         * Gets or sets value indicating whether the `stamp value` is true or not.\n         * @private\n         */\n        get: function () {\n            return this.stampValue;\n        },\n        set: function (value) {\n            this.stampValue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfSectionTemplate;\n}(PdfDocumentTemplate));\nexport { PdfSectionTemplate };\n","import { PdfPage } from './pdf-page';\nimport { PageAddedEventArgs } from './page-added-event-arguments';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfDictionary } from './../primitives/pdf-dictionary';\nimport { SaveSectionEventHandler } from './../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfSectionCollection } from './pdf-section-collection';\nimport { PdfSectionPageCollection } from './pdf-section-page-collection';\nimport { RectangleF } from './../drawing/pdf-drawing';\nimport { PdfSectionTemplate } from './pdf-section-templates';\n/**\n * Represents a `section` entity. A section it's a set of the pages with similar page settings.\n */\nvar PdfSection = /** @class */ (function () {\n    function PdfSection(document, pageSettings) {\n        //Fields\n        //public PageAdded() : PageAddedEventArgs.PageAddedEventHandler = new PageAddedEventArgs.PageAddedEventHandler(Object,args)\n        /**\n         * @hidden\n         * @private\n         */\n        this.pageAdded = new PageAddedEventArgs();\n        /**\n         * @hidden\n         * @private\n         */\n        this.pdfPages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.pdfDocument = document;\n        if (typeof pageSettings === 'undefined') {\n            this.settings = document.pageSettings.clone();\n            this.initialSettings = this.settings.clone();\n        }\n        else {\n            this.settings = pageSettings.clone();\n            this.initialSettings = this.settings.clone();\n        }\n        this.initialize();\n    }\n    Object.defineProperty(PdfSection.prototype, \"parent\", {\n        //Property\n        /**\n         * Gets or sets the `parent`.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection;\n        },\n        set: function (value) {\n            this.sectionCollection = value;\n            this.section.items.setValue(this.dictionaryProperties.parent, new PdfReferenceHolder(value));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"parentDocument\", {\n        /**\n         * Gets the `parent document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"pageSettings\", {\n        /**\n         * Gets or sets the `page settings` of the section.\n         * @private\n         */\n        get: function () {\n            return this.settings;\n        },\n        set: function (value) {\n            if (value != null) {\n                this.settings = value;\n            }\n            else {\n                throw Error('Value can not be null.');\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.section;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"count\", {\n        /**\n         * Gets the `count` of the pages in the section.\n         * @private\n         */\n        get: function () {\n            return this.pagesReferences.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"template\", {\n        /**\n         * Gets or sets a `template` for the pages in the section.\n         * @private\n         */\n        get: function () {\n            if (this.pageTemplate == null) {\n                this.pageTemplate = new PdfSectionTemplate();\n            }\n            return this.pageTemplate;\n        },\n        set: function (value) {\n            this.pageTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"document\", {\n        /**\n         * Gets the `document`.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection.document;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSection.prototype, \"pages\", {\n        /**\n         * Gets the collection of `pages` in a section (Read only)\n         * @private\n         */\n        get: function () {\n            if (this.pagesCollection == null || typeof this.pagesCollection === 'undefined') {\n                this.pagesCollection = new PdfSectionPageCollection(this);\n            }\n            return this.pagesCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //methods\n    /**\n     * `Return the page collection` of current section.\n     * @private\n     */\n    PdfSection.prototype.getPages = function () {\n        return this.pdfPages;\n    };\n    /**\n     * `Translates` point into native coordinates of the page.\n     * @private\n     */\n    PdfSection.prototype.pointToNativePdf = function (page, point) {\n        var bounds = this.getActualBounds(page, true);\n        point.x += bounds.x;\n        point.y = this.pageSettings.height - (point.y);\n        return point;\n    };\n    /**\n     * Sets the page setting of the current section.\n     * @public\n     * @param settings Instance of `PdfPageSettings`\n     */\n    PdfSection.prototype.setPageSettings = function (settings) {\n        this.settings = settings;\n        this.state.orientation = settings.orientation;\n        this.state.rotate = settings.rotate;\n        this.state.size = settings.size;\n        this.state.origin = settings.origin;\n    };\n    /**\n     * `Initializes` the object.\n     * @private\n     */\n    PdfSection.prototype.initialize = function () {\n        this.pagesReferences = new PdfArray();\n        this.section = new PdfDictionary();\n        this.state = new PageSettingsState(this.pdfDocument);\n        this.section.sectionBeginSave = new SaveSectionEventHandler(this, this.state);\n        this.pageCount = new PdfNumber(0);\n        this.section.items.setValue(this.dictionaryProperties.count, this.pageCount);\n        this.section.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.pages));\n        this.section.items.setValue(this.dictionaryProperties.kids, this.pagesReferences);\n    };\n    /**\n     * Checks whether any template should be printed on this layer.\n     * @private\n     * @param document The parent document.\n     * @param page The parent page.\n     * @param foreground Layer z-order.\n     * @returns True - if some content should be printed on the layer, False otherwise.\n     */\n    PdfSection.prototype.containsTemplates = function (document, page, foreground) {\n        var documentHeaders = this.getDocumentTemplates(document, page, foreground);\n        var sectionTemplates = this.getSectionTemplates(page, foreground);\n        return (documentHeaders.length > 0 || sectionTemplates.length > 0);\n    };\n    /**\n     * Returns array of the document templates.\n     * @private\n     * @param document The parent document.\n     * @param page The parent page.\n     * @param headers If true - return headers/footers, if false - return simple templates.\n     * @param foreground If true - return foreground templates, if false - return background templates.\n     * @returns Returns array of the document templates.\n     */\n    /* tslint:disable */\n    PdfSection.prototype.getDocumentTemplates = function (document, page, foreground) {\n        var templates = [];\n        if (this.template.applyDocumentTopTemplate && document.template.getTop(page) != null) {\n            if ((!(document.template.getTop(page).foreground || foreground)) || (document.template.getTop(page).foreground && foreground)) {\n                templates.push(document.template.getTop(page));\n            }\n        }\n        if (this.template.applyDocumentBottomTemplate && document.template.getBottom(page) != null) {\n            if ((!(document.template.getBottom(page).foreground || foreground)) || (document.template.getBottom(page).foreground && foreground)) {\n                templates.push(document.template.getBottom(page));\n            }\n        }\n        if (this.template.applyDocumentLeftTemplate && document.template.getLeft(page) != null) {\n            if ((!(document.template.getLeft(page).foreground || foreground)) || (document.template.getLeft(page).foreground && foreground)) {\n                templates.push(document.template.getLeft(page));\n            }\n        }\n        if (this.template.applyDocumentRightTemplate && document.template.getRight(page) != null) {\n            if ((!(document.template.getRight(page).foreground || foreground)) || (document.template.getRight(page).foreground && foreground)) {\n                templates.push(document.template.getRight(page));\n            }\n        }\n        return templates;\n    };\n    /**\n     * Returns array of the section templates.\n     * @private\n     * @param page The parent page.\n     * @param foreground If true - return foreground templates, if false - return background templates.\n     * @returns Returns array of the section templates.\n     */\n    /* tslint:disable */\n    PdfSection.prototype.getSectionTemplates = function (page, foreground) {\n        var templates = [];\n        if (this.template.getTop(page) != null) {\n            var pageTemplate = this.template.getTop(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        if (this.template.getBottom(page) != null) {\n            var pageTemplate = this.template.getBottom(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        if (this.template.getLeft(page) != null) {\n            var pageTemplate = this.template.getLeft(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        if (this.template.getRight(page) != null) {\n            var pageTemplate = this.template.getRight(page);\n            if ((!(pageTemplate.foreground || foreground)) || (pageTemplate.foreground && foreground)) {\n                templates.push(pageTemplate);\n            }\n        }\n        return templates;\n    };\n    /* tslint:enable */\n    /**\n     * `Adds` the specified page.\n     * @private\n     */\n    PdfSection.prototype.add = function (page) {\n        if (typeof page === 'undefined') {\n            var page_1 = new PdfPage();\n            this.add(page_1);\n            return page_1;\n        }\n        else {\n            var r = this.checkPresence(page);\n            this.pdfPages.push(page);\n            this.pagesReferences.add(r);\n            page.setSection(this);\n            page.resetProgress();\n            this.pageAddedMethod(page);\n        }\n    };\n    /**\n     * `Checks the presence`.\n     * @private\n     */\n    PdfSection.prototype.checkPresence = function (page) {\n        var rh = new PdfReferenceHolder(page);\n        var contains = false;\n        var sc = this.parent;\n        for (var index = 0; index < sc.section.length; index++) {\n            var section = sc.section[index];\n            contains = contains || section.contains(page);\n        }\n        return rh;\n    };\n    /**\n     * `Determines` whether the page in within the section.\n     * @private\n     */\n    PdfSection.prototype.contains = function (page) {\n        var index = this.indexOf(page);\n        return (0 <= index);\n    };\n    /**\n     * Get the `index of` the page.\n     * @private\n     */\n    PdfSection.prototype.indexOf = function (page) {\n        for (var index = 0; index < this.pdfPages.length; index++) {\n            if (this.pdfPages[index] === page) {\n                return this.pdfPages.indexOf(page);\n            }\n        }\n        var r = new PdfReferenceHolder(page);\n        return this.pagesReferences.indexOf(r);\n    };\n    /**\n     * Call two event's methods.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.pageAddedMethod = function (page) {\n        //Create event's arguments\n        var args = new PageAddedEventArgs(page);\n        this.onPageAdded(args);\n        var parent = this.parent;\n        parent.document.pages.onPageAdded(args);\n        this.pageCount.intValue = this.count;\n    };\n    /**\n     * Called when the page has been added.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.onPageAdded = function (args) {\n        //\n    };\n    PdfSection.prototype.getActualBounds = function (arg1, arg2, arg3) {\n        if (arg1 instanceof PdfPage && typeof arg2 === 'boolean') {\n            var result = void 0;\n            var document_1 = this.parent.document;\n            result = this.getActualBounds(document_1, arg1, arg2);\n            return result;\n        }\n        else {\n            arg1 = arg1;\n            arg2 = arg2;\n            arg3 = arg3;\n            var bounds = new RectangleF(0, 0, 0, 0);\n            bounds.height = (arg3) ? this.pageSettings.size.height : this.pageSettings.getActualSize().height;\n            bounds.width = (arg3) ? this.pageSettings.size.width : this.pageSettings.getActualSize().width;\n            var left = this.getLeftIndentWidth(arg1, arg2, arg3);\n            var top_1 = this.getTopIndentHeight(arg1, arg2, arg3);\n            var right = this.getRightIndentWidth(arg1, arg2, arg3);\n            var bottom = this.getBottomIndentHeight(arg1, arg2, arg3);\n            bounds.x += left;\n            bounds.y += top_1;\n            bounds.width -= (left + right);\n            bounds.height -= (top_1 + bottom);\n            return bounds;\n        }\n    };\n    /**\n     * Calculates width of the `left indent`.\n     * @private\n     */\n    PdfSection.prototype.getLeftIndentWidth = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.left : 0;\n        var templateWidth = (this.template.getLeft(page) != null) ? this.template.getLeft(page).width : 0;\n        var docTemplateWidth = (document.template.getLeft(page) != null) ? document.template.getLeft(page).width : 0;\n        value += (this.template.applyDocumentLeftTemplate) ? Math.max(templateWidth, docTemplateWidth) : templateWidth;\n        return value;\n    };\n    /**\n     * Calculates `Height` of the top indent.\n     * @private\n     */\n    PdfSection.prototype.getTopIndentHeight = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.top : 0;\n        var templateHeight = (this.template.getTop(page) != null) ? this.template.getTop(page).height : 0;\n        var docTemplateHeight = (document.template.getTop(page) != null) ? document.template.getTop(page).height : 0;\n        value += (this.template.applyDocumentTopTemplate) ? Math.max(templateHeight, docTemplateHeight) : templateHeight;\n        return value;\n    };\n    /**\n     * Calculates `width` of the right indent.\n     * @private\n     */\n    PdfSection.prototype.getRightIndentWidth = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.right : 0;\n        var templateWidth = (this.template.getRight(page) != null) ? this.template.getRight(page).width : 0;\n        var docTemplateWidth = (document.template.getRight(page) != null) ? document.template.getRight(page).width : 0;\n        value += (this.template.applyDocumentRightTemplate) ? Math.max(templateWidth, docTemplateWidth) : templateWidth;\n        return value;\n    };\n    /**\n     * Calculates `Height` of the bottom indent.\n     * @private\n     */\n    PdfSection.prototype.getBottomIndentHeight = function (document, page, includeMargins) {\n        if (document == null) {\n            throw new Error('ArgumentNullException:document');\n        }\n        if (page == null) {\n            throw new Error('ArgumentNullException:page');\n        }\n        var value = (includeMargins) ? this.pageSettings.margins.bottom : 0;\n        var templateHeight = (this.template.getBottom(page) != null) ? this.template.getBottom(page).height : 0;\n        var docTemplateHeight = (document.template.getBottom(page) != null) ? document.template.getBottom(page).height : 0;\n        value += (this.template.applyDocumentBottomTemplate) ? Math.max(templateHeight, docTemplateHeight) : templateHeight;\n        return value;\n    };\n    /**\n     * `Removes` the page from the section.\n     * @private\n     */\n    PdfSection.prototype.remove = function (page) {\n        if (page == null) {\n            throw Error('ArgumentNullException(\"page\")');\n        }\n        var index = this.pdfPages.indexOf(page);\n        this.pagesReferences.removeAt(index);\n        var temproaryPages = [];\n        for (var j = 0; j < index; j++) {\n            temproaryPages.push(this.pdfPages[j]);\n        }\n        for (var j = index + 1; j < this.pdfPages.length; j++) {\n            temproaryPages.push(this.pdfPages[j]);\n        }\n        this.pdfPages = temproaryPages;\n    };\n    /**\n     * In fills dictionary by the data from `Page settings`.\n     * @private\n     */\n    PdfSection.prototype.applyPageSettings = function (container, parentSettings, state) {\n        var bounds = new RectangleF(state.origin, state.size);\n        container.items.setValue(this.dictionaryProperties.mediaBox, PdfArray.fromRectangle(bounds));\n        var rotate = 0;\n        rotate = PdfSectionCollection.rotateFactor * state.rotate;\n        var angle = new PdfNumber(rotate);\n        container.items.setValue(this.dictionaryProperties.rotate, angle);\n    };\n    /**\n     * Catches the Save event of the dictionary.\n     * @hidden\n     * @private\n     */\n    PdfSection.prototype.beginSave = function (state, writer) {\n        var doc = writer.document;\n        this.applyPageSettings(this.section, doc.pageSettings, state);\n    };\n    /**\n     * Draws page templates on the page.\n     * @private\n     */\n    PdfSection.prototype.drawTemplates = function (page, layer, document, foreground) {\n        var documentHeaders = this.getDocumentTemplates(document, page, foreground);\n        var sectionHeaders = this.getSectionTemplates(page, foreground);\n        this.drawTemplatesHelper(layer, document, documentHeaders);\n        this.drawTemplatesHelper(layer, document, sectionHeaders);\n    };\n    /**\n     * Draws page templates on the page.\n     * @private\n     */\n    PdfSection.prototype.drawTemplatesHelper = function (layer, document, templates) {\n        if (templates != null && templates.length > 0) {\n            var len = templates.length;\n            for (var i = 0; i < len; i++) {\n                var template = templates[i];\n                template.draw(layer, document);\n            }\n        }\n    };\n    return PdfSection;\n}());\nexport { PdfSection };\nvar PageSettingsState = /** @class */ (function () {\n    //Public Constructor\n    /**\n     * New instance to store the `PageSettings`.\n     * @private\n     */\n    function PageSettingsState(document) {\n        this.pageOrientation = document.pageSettings.orientation;\n        this.pageRotate = document.pageSettings.rotate;\n        this.pageSize = document.pageSettings.size;\n        this.pageOrigin = document.pageSettings.origin;\n    }\n    Object.defineProperty(PageSettingsState.prototype, \"orientation\", {\n        //public Properties\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageOrientation;\n        },\n        set: function (value) {\n            this.pageOrientation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"rotate\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageRotate;\n        },\n        set: function (value) {\n            this.pageRotate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"size\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageSize;\n        },\n        set: function (value) {\n            this.pageSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PageSettingsState.prototype, \"origin\", {\n        /**\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.pageOrigin;\n        },\n        set: function (value) {\n            this.pageOrigin = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PageSettingsState;\n}());\nexport { PageSettingsState };\n","import { PdfNumber } from './../primitives/pdf-number';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfDictionary, SaveSectionCollectionEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfSection } from './pdf-section';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * Represents the `collection of the sections`.\n * @private\n */\nvar PdfSectionCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfSectionCollection` class.\n     * @private\n     */\n    function PdfSectionCollection(document) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.sections = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        // if (document === null) {\n        //     throw new Error('ArgumentNullException : document');\n        // }\n        this.pdfDocument = document.clone();\n        this.initialize();\n    }\n    Object.defineProperty(PdfSectionCollection.prototype, \"section\", {\n        //Properties\n        /**\n         * Gets the `Section` collection.\n         */\n        get: function () {\n            return this.sections;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"document\", {\n        /**\n         * Gets a parent `document`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDocument;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of sections` in a document.\n         * @private\n         */\n        get: function () {\n            return this.sections.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfSectionCollection.prototype, \"element\", {\n        /**\n         * Gets the wrapped `element`.\n         * @private\n         */\n        get: function () {\n            return this.pages;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Methods\n    /**\n     * `Initializes the object`.\n     * @private\n     */\n    PdfSectionCollection.prototype.initialize = function () {\n        this.sectionCount = new PdfNumber(0);\n        this.sectionCollection = new PdfArray();\n        this.pages = new PdfDictionary();\n        this.pages.beginSave = new SaveSectionCollectionEventHandler(this);\n        this.pages.items.setValue(this.dictionaryProperties.type, new PdfName('Pages'));\n        this.pages.items.setValue(this.dictionaryProperties.kids, this.sectionCollection);\n        this.pages.items.setValue(this.dictionaryProperties.count, this.sectionCount);\n        this.pages.items.setValue(this.dictionaryProperties.resources, new PdfDictionary());\n        this.setPageSettings(this.pages, this.pdfDocument.pageSettings);\n    };\n    /**\n     * Initializes a new instance of the `PdfSectionCollection` class.\n     * @private\n     */\n    PdfSectionCollection.prototype.pdfSectionCollection = function (index) {\n        if (index < 0 || index >= this.count) {\n            throw new Error('IndexOutOfRangeException()');\n        }\n        return this.sections[index];\n    };\n    /**\n     * In fills dictionary by the data from `Page settings`.\n     * @private\n     */\n    PdfSectionCollection.prototype.setPageSettings = function (container, pageSettings) {\n        // if (container === null) {\n        //     throw new Error('ArgumentNullException : container');\n        // }\n        // if (pageSettings === null) {\n        //     throw new Error('ArgumentNullException : pageSettings');\n        // }\n        var bounds = new RectangleF(new PointF(), pageSettings.size);\n        container.items.setValue(this.dictionaryProperties.mediaBox, PdfArray.fromRectangle(bounds));\n    };\n    /**\n     * `Adds` the specified section.\n     * @private\n     */\n    PdfSectionCollection.prototype.add = function (section) {\n        if (typeof section === 'undefined') {\n            var section_1 = new PdfSection(this.pdfDocument);\n            this.add(section_1);\n            return section_1;\n        }\n        else {\n            // if (section === null) {\n            //     throw new Error('ArgumentNullException : section');\n            // }\n            var r = this.checkSection(section);\n            this.sections.push(section);\n            section.parent = this;\n            this.sectionCollection.add(r);\n            return this.sections.indexOf(section);\n        }\n    };\n    /**\n     * `Checks` if the section is within the collection.\n     * @private\n     */\n    PdfSectionCollection.prototype.checkSection = function (section) {\n        var r = new PdfReferenceHolder(section);\n        var contains = this.sectionCollection.contains(r);\n        // if (contains) {\n        //     throw new Error('ArgumentException : The object can not be added twice to the collection,section');\n        // }\n        return r;\n    };\n    /**\n     * Catches the Save event of the dictionary to `count the pages`.\n     * @private\n     */\n    PdfSectionCollection.prototype.countPages = function () {\n        var count = 0;\n        this.sections.forEach(function (n) { return (count += n.count); });\n        return count;\n    };\n    /**\n     * Catches the Save event of the dictionary to `count the pages`.\n     * @hidden\n     * @private\n     */\n    PdfSectionCollection.prototype.beginSave = function () {\n        this.sectionCount.intValue = this.countPages();\n    };\n    //Fields\n    /**\n     * Rotate factor for page `rotation`.\n     * @default 90\n     * @private\n     */\n    PdfSectionCollection.rotateFactor = 90;\n    return PdfSectionCollection;\n}());\nexport { PdfSectionCollection };\n","import { PdfPage } from './pdf-page';\nimport { Dictionary } from './../collections/dictionary';\n/**\n * Represents a virtual collection of all the pages in the document.\n * @private\n */\nvar PdfDocumentPageCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfPageCollection` class.\n     * @private\n     */\n    function PdfDocumentPageCollection(document) {\n        /**\n         * It holds the page collection with the `index`.\n         * @private\n         */\n        this.pdfPageCollectionIndex = new Dictionary();\n        this.document = document;\n    }\n    Object.defineProperty(PdfDocumentPageCollection.prototype, \"count\", {\n        //Property\n        /**\n         * Gets the total `number of the pages`.\n         * @private\n         */\n        get: function () {\n            return this.countPages();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentPageCollection.prototype, \"pageCollectionIndex\", {\n        /**\n         * Gets a `page index` from the document.\n         * @private\n         */\n        get: function () {\n            return this.pdfPageCollectionIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocumentPageCollection.prototype.add = function (page) {\n        if (typeof page === 'undefined') {\n            var page_1 = new PdfPage();\n            this.add(page_1);\n            return page_1;\n        }\n        else {\n            var section = this.getLastSection();\n            section.add(page);\n        }\n    };\n    /**\n     * Returns `last section` in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getLastSection = function () {\n        var sc = this.document.sections;\n        if (sc.section.length === 0) {\n            sc.add();\n        }\n        var section = sc.section[sc.section.length - 1];\n        return section;\n    };\n    /**\n     * Called when `new page has been added`.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.onPageAdded = function (args) {\n        // if (PageAdded !== null)\n        // {\n        //     PageAdded(this, args);\n        // }\n    };\n    /**\n     * Gets the `total number of pages`.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.countPages = function () {\n        var sc = this.document.sections;\n        var count = 0;\n        for (var index = 0; index < sc.section.length; index++) {\n            count += sc.section[index].count;\n        }\n        return count;\n    };\n    /**\n     * Gets the `page object` from page index.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getPageByIndex = function (index) {\n        return this.getPage(index);\n    };\n    /**\n     * Gets a page by its `index` in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getPage = function (index) {\n        if ((index < 0) || (index >= this.count)) {\n            throw Error('ArgumentOutOfRangeException(\"index\", \"Value can not be less 0\")');\n        }\n        var page = null;\n        var sectionStartIndex = 0;\n        var sectionCount = 0;\n        var pageIndex = 0;\n        var length = this.document.sections.count;\n        for (var i = 0; i < length; i++) {\n            var section = this.document.sections.section[i];\n            sectionCount = section.count;\n            pageIndex = index - sectionStartIndex;\n            // We found a section containing the page.\n            if ((index >= sectionStartIndex && pageIndex < sectionCount)) {\n                page = section.getPages()[pageIndex];\n                break;\n            }\n            sectionStartIndex += sectionCount;\n        }\n        return page;\n    };\n    /**\n     * Gets the `index of` the page in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.indexOf = function (page) {\n        var index = -1;\n        if (page == null) {\n            throw new Error('ArgumentNullException: page');\n        }\n        else {\n            var numPages = 0;\n            for (var i = 0, len = this.document.sections.count; i < len; i++) {\n                var section = this.document.sections.pdfSectionCollection(i);\n                index = section.indexOf(page);\n                if (index >= 0) {\n                    index += numPages;\n                    break;\n                }\n                else {\n                    index = -1;\n                }\n                numPages += section.count;\n            }\n        }\n        return index;\n    };\n    /**\n     * `Removes` the specified page.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.remove = function (page) {\n        if (page == null) {\n            throw Error('ArgumentNullException(\"page\")');\n        }\n        var section = null;\n        var len;\n        for (var i = 0, len_1 = this.document.sections.count; i < len_1; i++) {\n            section = this.document.sections.pdfSectionCollection(i);\n            if (section.pages.contains(page)) {\n                section.pages.remove(page);\n                break;\n            }\n        }\n        return section;\n    };\n    return PdfDocumentPageCollection;\n}());\nexport { PdfDocumentPageCollection };\n","/**\n * PdfCacheCollection.ts class for EJ2-PDF\n */\nimport { Dictionary } from './../collections/dictionary';\n/**\n * `Collection of the cached objects`.\n * @private\n */\nvar PdfCacheCollection = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfCacheCollection` class.\n     * @private\n     */\n    function PdfCacheCollection() {\n        this.referenceObjects = [];\n        this.pdfFontCollection = new Dictionary();\n    }\n    // Public methods\n    /**\n     * `Searches` for the similar cached object. If is not found - adds the object to the cache.\n     * @private\n     */\n    PdfCacheCollection.prototype.search = function (obj) {\n        var result = null;\n        var group = this.getGroup(obj);\n        if (group == null) {\n            group = this.createNewGroup();\n        }\n        else if (group.length > 0) {\n            result = group[0];\n        }\n        group.push(obj);\n        return result;\n    };\n    // Implementation\n    /**\n     * `Creates` a new group.\n     * @private\n     */\n    PdfCacheCollection.prototype.createNewGroup = function () {\n        var group = [];\n        this.referenceObjects.push(group);\n        return group;\n    };\n    /**\n     * `Find and Return` a group.\n     * @private\n     */\n    PdfCacheCollection.prototype.getGroup = function (result) {\n        var group = null;\n        if (result !== null) {\n            var len = this.referenceObjects.length;\n            for (var i = 0; i < len; i++) {\n                if (this.referenceObjects.length > 0) {\n                    var tGroup = this.referenceObjects[i];\n                    if (tGroup.length > 0) {\n                        var representative = tGroup[0];\n                        if (result.equalsTo(representative)) {\n                            group = tGroup;\n                            break;\n                        }\n                    }\n                    else {\n                        this.removeGroup(tGroup);\n                    }\n                }\n                len = this.referenceObjects.length;\n            }\n        }\n        return group;\n    };\n    /**\n     * Remove a group from the storage.\n     */\n    PdfCacheCollection.prototype.removeGroup = function (group) {\n        if (group !== null) {\n            var index = this.referenceObjects.indexOf(group);\n            this.referenceObjects.slice(index, index + 1);\n        }\n    };\n    PdfCacheCollection.prototype.destroy = function () {\n        this.pdfFontCollection = undefined;\n        this.referenceObjects = undefined;\n    };\n    return PdfCacheCollection;\n}());\nexport { PdfCacheCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfWriter, PdfWriterHelper } from './../input-output/pdf-writer';\nimport { PdfMainObjectCollection } from './../input-output/pdf-main-object-collection';\nimport { PdfDocumentBase } from './pdf-document-base';\nimport { PdfCrossTable } from './../input-output/pdf-cross-table';\nimport { PdfCatalog } from './pdf-catalog';\nimport { PdfPageSettings } from './../pages/pdf-page-settings';\nimport { PdfSectionCollection } from './../pages/pdf-section-collection';\nimport { PdfDocumentPageCollection } from './../pages/pdf-document-page-collection';\nimport { PdfCacheCollection } from './../general/pdf-cache-collection';\nimport { PdfColorSpace } from './../graphics/enum';\nimport { PdfDocumentTemplate } from './pdf-document-template';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\n/**\n * Represents a PDF document and can be used to create a new PDF document from the scratch.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * // set the font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocument = /** @class */ (function (_super) {\n    __extends(PdfDocument, _super);\n    function PdfDocument(isMerging) {\n        var _this = _super.call(this) || this;\n        /**\n         * Default `margin` value.\n         * @default 40.0\n         * @private\n         */\n        _this.defaultMargin = 40.0;\n        /**\n         * Internal variable to store instance of `StreamWriter` classes..\n         * @default null\n         * @private\n         */\n        _this.streamWriter = null;\n        _this.document = _this;\n        var isMerge = false;\n        if (typeof isMerging === 'undefined') {\n            PdfDocument.cacheCollection = new PdfCacheCollection();\n            isMerge = false;\n        }\n        else {\n            isMerge = isMerging;\n        }\n        var objects = new PdfMainObjectCollection();\n        _this.setMainObjectCollection(objects);\n        var crossTable = new PdfCrossTable();\n        crossTable.isMerging = isMerge;\n        crossTable.document = _this;\n        _this.setCrossTable(crossTable);\n        var catalog = new PdfCatalog();\n        _this.setCatalog(catalog);\n        objects.add(catalog);\n        catalog.position = -1;\n        _this.sectionCollection = new PdfSectionCollection(_this);\n        _this.documentPageCollection = new PdfDocumentPageCollection(_this);\n        catalog.pages = _this.sectionCollection;\n        return _this;\n    }\n    Object.defineProperty(PdfDocument, \"defaultFont\", {\n        //Properties\n        /**\n         * Gets the `default font`. It is used for complex objects when font is not explicitly defined.\n         * @private\n         */\n        get: function () {\n            if (this.defaultStandardFont == null) {\n                this.defaultStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 8);\n            }\n            return this.defaultStandardFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"sections\", {\n        /**\n         * Gets the collection of the `sections` in the document.\n         * @private\n         */\n        get: function () {\n            return this.sectionCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pageSettings\", {\n        /**\n         * Gets the document's page setting.\n         * @public\n         */\n        get: function () {\n            if (this.settings == null) {\n                this.settings = new PdfPageSettings(this.defaultMargin);\n            }\n            return this.settings;\n        },\n        /**\n         * Sets the document's page setting.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         *\n         * // sets the right margin of the page\n         * document.pageSettings.margins.right = 0;\n         * // set the page size.\n         * document.pageSettings.size = new SizeF(500, 500);\n         * // change the page orientation to landscape\n         * document.pageSettings.orientation = PdfPageOrientation.Landscape;\n         * // apply 90 degree rotation on the page\n         * document.pageSettings.rotate = PdfPageRotateAngle.RotateAngle90;\n         *\n         * // add a pages to the document\n         * let page1 : PdfPage = document.pages.add();\n         * // set font\n         * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n         * // set brush\n         * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n         * // set the specified Point\n         * let point : PointF = new PointF(page1.getClientSize().width - 200, page1.getClientSize().height - 200);\n         * // draw the text\n         * page1.graphics.drawString('Hello World', font, blackBrush, point);\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        set: function (value) {\n            this.settings = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"pages\", {\n        /**\n         * Represents the collection of pages in the PDF document.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * //\n         * // get the collection of pages in the document\n         * let pageCollection : PdfDocumentPageCollection  = document.pages;\n         * //\n         * // add pages\n         * let page1 : PdfPage = pageCollection.add();\n         * // save the document\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.documentPageCollection;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument, \"cache\", {\n        /**\n         * Gets collection of the `cached objects`.\n         * @private\n         */\n        get: function () {\n            if (typeof PdfDocument.cacheCollection === 'undefined' || PdfDocument.cacheCollection == null) {\n                return new PdfCacheCollection();\n            }\n            return PdfDocument.cacheCollection;\n        },\n        /**\n         * Sets collection of the `cached objects`.\n         * @private\n         */\n        set: function (value) {\n            this.cacheCollection = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument, \"enableCache\", {\n        /**\n         * Gets the value of enable cache.\n         * @private\n         */\n        get: function () {\n            return this.isCacheEnabled;\n        },\n        /**\n         * Sets thie value of enable cache.\n         * @private\n         */\n        set: function (value) {\n            this.isCacheEnabled = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"colorSpace\", {\n        /* tslint:disable */\n        /**\n         * Gets or sets the `color space` of the document. This property can be used to create PDF document in RGB, Gray scale or CMYK color spaces.\n         * @private\n         */\n        get: function () {\n            if ((this.pdfColorSpace === PdfColorSpace.Rgb) || ((this.pdfColorSpace === PdfColorSpace.Cmyk)\n                || (this.pdfColorSpace === PdfColorSpace.GrayScale))) {\n                return this.pdfColorSpace;\n            }\n            else {\n                return PdfColorSpace.Rgb;\n            }\n        },\n        set: function (value) {\n            if ((value === PdfColorSpace.Rgb) || ((value === PdfColorSpace.Cmyk) ||\n                (value === PdfColorSpace.GrayScale))) {\n                this.pdfColorSpace = value;\n            }\n            else {\n                this.pdfColorSpace = PdfColorSpace.Rgb;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocument.prototype, \"template\", {\n        /* tslint:enable */\n        /**\n         * Gets or sets a `template` to all pages in the document.\n         * @private\n         */\n        get: function () {\n            if (this.pageTemplate == null) {\n                this.pageTemplate = new PdfDocumentTemplate();\n            }\n            return this.pageTemplate;\n        },\n        set: function (value) {\n            this.pageTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocument.prototype.docSave = function (stream, arg2, arg3) {\n        this.checkPagesPresence();\n        if (stream === null) {\n            throw new Error('ArgumentNullException : stream');\n        }\n        this.streamWriter = stream;\n        var writer = new PdfWriter(stream);\n        writer.document = this;\n        if (typeof arg2 === 'boolean' && typeof arg3 === 'undefined') {\n            return this.crossTable.save(writer);\n        }\n        else {\n            this.crossTable.save(writer, arg2);\n        }\n    };\n    /**\n     * Saves the document to the specified output stream and return the stream as byte array.\n     * @private\n     */\n    PdfDocument.prototype._docSave = function () {\n        var stream = new PdfWriterHelper();\n        this.checkPagesPresence();\n        if (stream === null) {\n            throw new Error('ArgumentNullException : stream');\n        }\n        this.streamWriter = stream;\n        var writer = new PdfWriter(stream);\n        writer.document = this;\n        return this.crossTable._save(writer);\n    };\n    /**\n     * Checks the pages `presence`.\n     * @private\n     */\n    PdfDocument.prototype.checkPagesPresence = function () {\n        if (this.pages.count === 0) {\n            this.pages.add();\n        }\n    };\n    /**\n     * disposes the current instance of `PdfDocument` class.\n     * ```typescript\n     * // create a new PDF document\n     * let document : PdfDocument = new PdfDocument();\n     * // add a new page to the document\n     * let page1 : PdfPage = document.pages.add();\n     * // set the font\n     * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n     * // create black brush\n     * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n     * // draw the text\n     * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n     * // save the document\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    PdfDocument.prototype.destroy = function () {\n        this.catalog = undefined;\n        this.colorSpace = undefined;\n        this.currentSavingObj = undefined;\n        this.documentPageCollection = undefined;\n        this.isStreamCopied = undefined;\n        this.pageSettings = undefined;\n        this.pageTemplate = undefined;\n        this.pdfColorSpace = undefined;\n        this.sectionCollection = undefined;\n        PdfDocument.cache.destroy();\n        this.crossTable.pdfObjects.destroy();\n        PdfDocument.cache = undefined;\n        if (this.streamWriter) {\n            this.streamWriter.destroy();\n        }\n    };\n    /**\n     * `Font` used in complex objects to draw strings and text when it is not defined explicitly.\n     * @default null\n     * @private\n     */\n    PdfDocument.defaultStandardFont = null;\n    /**\n     * Indicates whether enable cache or not\n     * @default true\n     * @private\n     */\n    PdfDocument.isCacheEnabled = true;\n    return PdfDocument;\n}(PdfDocumentBase));\nexport { PdfDocument };\n","/**\n * PdfStandardFontMetricsFactory.ts class for EJ2-PDF\n */\nimport { PdfFontStyle, PdfFontFamily } from './enum';\nimport { PdfFontMetrics, StandardWidthTable } from './pdf-font-metrics';\n/**\n * @private\n * `Factory of the standard fonts metrics`.\n */\nvar PdfStandardFontMetricsFactory = /** @class */ (function () {\n    function PdfStandardFontMetricsFactory() {\n    }\n    /**\n     * Returns `metrics` of the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = null;\n        switch (fontFamily) {\n            case PdfFontFamily.Helvetica:\n                metrics = this.getHelveticaMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.Courier:\n                metrics = this.getCourierMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.TimesRoman:\n                metrics = this.getTimesMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.Symbol:\n                metrics = this.getSymbolMetrics(fontFamily, fontStyle, size);\n                break;\n            case PdfFontFamily.ZapfDingbats:\n                metrics = this.getZapfDingbatsMetrics(fontFamily, fontStyle, size);\n                break;\n            default:\n                metrics = this.getHelveticaMetrics(PdfFontFamily.Helvetica, fontStyle, size);\n                break;\n        }\n        metrics.name = fontFamily.toString();\n        metrics.subScriptSizeFactor = this.subSuperScriptFactor;\n        metrics.superscriptSizeFactor = this.subSuperScriptFactor;\n        return metrics;\n    };\n    // Implementation\n    /**\n     * Creates `Helvetica font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getHelveticaMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.helveticaBoldItalicAscent;\n            metrics.descent = this.helveticaBoldItalicDescent;\n            metrics.postScriptName = this.helveticaBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.helveticaBoldAscent;\n            metrics.descent = this.helveticaBoldDescent;\n            metrics.postScriptName = this.helveticaBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.helveticaItalicAscent;\n            metrics.descent = this.helveticaItalicDescent;\n            metrics.postScriptName = this.helveticaItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.helveticaAscent;\n            metrics.descent = this.helveticaDescent;\n            metrics.postScriptName = this.helveticaName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.arialWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Courier font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getCourierMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.courierBoldItalicAscent;\n            metrics.descent = this.courierBoldItalicDescent;\n            metrics.postScriptName = this.courierBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.courierBoldAscent;\n            metrics.descent = this.courierBoldDescent;\n            metrics.postScriptName = this.courierBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.courierItalicAscent;\n            metrics.descent = this.courierItalicDescent;\n            metrics.postScriptName = this.courierItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.courierAscent;\n            metrics.descent = this.courierDescent;\n            metrics.postScriptName = this.courierName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.fixedWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Times font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getTimesMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        if ((fontStyle & PdfFontStyle.Bold) > 0 && (fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.timesBoldItalicAscent;\n            metrics.descent = this.timesBoldItalicDescent;\n            metrics.postScriptName = this.timesBoldItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanBoldItalicWidths);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Bold) > 0) {\n            metrics.ascent = this.timesBoldAscent;\n            metrics.descent = this.timesBoldDescent;\n            metrics.postScriptName = this.timesBoldName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanBoldWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else if ((fontStyle & PdfFontStyle.Italic) > 0) {\n            metrics.ascent = this.timesItalicAscent;\n            metrics.descent = this.timesItalicDescent;\n            metrics.postScriptName = this.timesItalicName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanItalicWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        else {\n            metrics.ascent = this.timesAscent;\n            metrics.descent = this.timesDescent;\n            metrics.postScriptName = this.timesName;\n            metrics.size = size;\n            metrics.widthTable = new StandardWidthTable(this.timesRomanWidth);\n            metrics.height = metrics.ascent - metrics.descent;\n        }\n        return metrics;\n    };\n    /**\n     * Creates `Symbol font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getSymbolMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        metrics.ascent = this.symbolAscent;\n        metrics.descent = this.symbolDescent;\n        metrics.postScriptName = this.symbolName;\n        metrics.size = size;\n        metrics.widthTable = new StandardWidthTable(this.symbolWidth);\n        metrics.height = metrics.ascent - metrics.descent;\n        return metrics;\n    };\n    /**\n     * Creates `ZapfDingbats font metrics`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.getZapfDingbatsMetrics = function (fontFamily, fontStyle, size) {\n        var metrics = new PdfFontMetrics();\n        metrics.ascent = this.zapfDingbatsAscent;\n        metrics.descent = this.zapfDingbatsDescent;\n        metrics.postScriptName = this.zapfDingbatsName;\n        metrics.size = size;\n        metrics.widthTable = new StandardWidthTable(this.zapfDingbatsWidth);\n        metrics.height = metrics.ascent - metrics.descent;\n        return metrics;\n    };\n    /**\n     * `Multiplier` os subscript superscript.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.subSuperScriptFactor = 1.52;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaAscent = 931;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaDescent = -225;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaName = 'Helvetica';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldAscent = 962;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldDescent = -228;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldName = 'Helvetica-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicAscent = 931;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicDescent = -225;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaItalicName = 'Helvetica-Oblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicAscent = 962;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicDescent = -228;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.helveticaBoldItalicName = 'Helvetica-BoldOblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierAscent = 805;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierName = 'Courier';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldAscent = 801;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldName = 'Courier-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicAscent = 805;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierItalicName = 'Courier-Oblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicAscent = 801;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicDescent = -250;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.courierBoldItalicName = 'Courier-BoldOblique';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesAscent = 898;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesName = 'Times-Roman';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldAscent = 935;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldName = 'Times-Bold';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicAscent = 883;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicDescent = -217;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesItalicName = 'Times-Italic';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicAscent = 921;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicDescent = -218;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesBoldItalicName = 'Times-BoldItalic';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolAscent = 1010;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolDescent = -293;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolName = 'Symbol';\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsAscent = 820;\n    /**\n     * `Ascender` value for the font.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsDescent = -143;\n    /**\n     * `Font type`.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsName = 'ZapfDingbats';\n    /**\n     * `Arial` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.arialWidth = [\n        278, 278, 355, 556, 556, 889, 667, 191, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 278, 278, 584, 584,\n        584, 556, 1015, 667, 667, 722, 722, 667, 611, 778, 722, 278, 500, 667, 556, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 278, 278, 278,\n        469, 556, 333, 556, 556, 500, 556, 556, 278, 556, 556, 222, 222, 500, 222, 833,\n        556, 556, 556, 556, 333, 500, 278, 556, 500, 722, 500, 500, 500, 334, 260, 334,\n        584, 0, 556, 0, 222, 556, 333, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 222, 222, 333, 333, 350, 556, 1000, 333, 1000, 500, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 260, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 556, 537, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 667, 667, 667, 667, 667, 667, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 500, 556, 556, 556, 556, 278, 278,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 584, 611, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    /**\n     * `Arial bold` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.arialBoldWidth = [\n        278, 333, 474, 556, 556, 889, 722, 238, 333, 333, 389, 584, 278, 333,\n        278, 278, 556, 556, 556, 556, 556, 556, 556, 556, 556, 556, 333, 333, 584, 584,\n        584, 611, 975, 722, 722, 722, 722, 667, 611, 778, 722, 278, 556, 722, 611, 833,\n        722, 778, 667, 778, 722, 667, 611, 722, 667, 944, 667, 667, 611, 333, 278, 333,\n        584, 556, 333, 556, 611, 556, 611, 556, 333, 611, 611, 278, 278, 556, 278, 889,\n        611, 611, 611, 611, 389, 556, 333, 611, 556, 778, 556, 556, 500, 389, 280, 389,\n        584, 0, 556, 0, 278, 556, 500, 1000, 556, 556, 333, 1000, 667, 333, 1000, 0,\n        611, 0, 0, 278, 278, 500, 500, 350, 556, 1000, 333, 1000, 556, 333, 944, 0,\n        500, 667, 0, 333, 556, 556, 556, 556, 280, 556, 333, 737, 370, 556, 584, 0,\n        737, 333, 400, 584, 333, 333, 333, 611, 556, 278, 333, 333, 365, 556, 834, 834,\n        834, 611, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 278, 278,\n        278, 278, 722, 722, 778, 778, 778, 778, 778, 584, 778, 722, 722, 722, 722, 667,\n        667, 611, 556, 556, 556, 556, 556, 556, 889, 556, 556, 556, 556, 556, 278, 278,\n        278, 278, 611, 611, 611, 611, 611, 611, 611, 584, 611, 611, 611, 611, 611, 556,\n        611, 556\n    ];\n    /**\n     * `Fixed` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.fixedWidth = [\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600,\n        600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600, 600\n    ];\n    /**\n     * `Times` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanWidth = [\n        250, 333, 408, 500, 500, 833, 778, 180, 333, 333, 500, 564, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278, 564, 564,\n        564, 444, 921, 722, 667, 667, 722, 611, 556, 722, 722, 333, 389, 722, 611, 889,\n        722, 722, 556, 722, 667, 556, 611, 722, 722, 944, 722, 722, 611, 333, 278, 333,\n        469, 500, 333, 444, 500, 444, 500, 444, 333, 500, 500, 278, 278, 500, 278, 778,\n        500, 500, 500, 500, 333, 389, 278, 500, 500, 722, 500, 500, 444, 480, 200, 480,\n        541, 0, 500, 0, 333, 500, 444, 1000, 500, 500, 333, 1000, 556, 333, 889, 0,\n        611, 0, 0, 333, 333, 444, 444, 350, 500, 1000, 333, 980, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 200, 500, 333, 760, 276, 500, 564, 0,\n        760, 333, 400, 564, 300, 300, 333, 500, 453, 250, 333, 300, 310, 500, 750, 750,\n        750, 444, 722, 722, 722, 722, 722, 722, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 722, 722, 722, 722, 722, 722, 564, 722, 722, 722, 722, 722, 722,\n        556, 500, 444, 444, 444, 444, 444, 444, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 564, 500, 500, 500, 500, 500, 500,\n        500, 500\n    ];\n    /**\n     * `Times bold` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanBoldWidth = [\n        250, 333, 555, 500, 500, 1000, 833, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 930, 722, 667, 722, 722, 667, 611, 778, 778, 389, 500, 778, 667, 944,\n        722, 778, 611, 778, 722, 556, 667, 722, 722, 1000, 722, 722, 667, 333, 278, 333,\n        581, 500, 333, 500, 556, 444, 556, 444, 333, 500, 556, 278, 333, 556, 278, 833,\n        556, 500, 556, 556, 444, 389, 333, 556, 500, 722, 500, 500, 444, 394, 220, 394,\n        520, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 1000, 0,\n        667, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        444, 722, 0, 333, 500, 500, 500, 500, 220, 500, 333, 747, 300, 500, 570, 0,\n        747, 333, 400, 570, 300, 300, 333, 556, 540, 250, 333, 300, 330, 500, 750, 750,\n        750, 500, 722, 722, 722, 722, 722, 722, 1000, 722, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 778, 778, 778, 778, 778, 570, 778, 722, 722, 722, 722, 722,\n        611, 556, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 500,\n        556, 500\n    ];\n    /**\n     * `Times italic` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanItalicWidth = [\n        250, 333, 420, 500, 500, 833, 778, 214, 333, 333, 500, 675, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 675, 675,\n        675, 500, 920, 611, 611, 667, 722, 611, 611, 722, 722, 333, 444, 667, 556, 833,\n        667, 722, 611, 722, 611, 500, 556, 722, 611, 833, 611, 556, 556, 389, 278, 389,\n        422, 500, 333, 500, 500, 444, 500, 444, 278, 500, 500, 278, 278, 444, 278, 722,\n        500, 500, 500, 500, 389, 389, 278, 500, 444, 667, 444, 444, 389, 400, 275, 400,\n        541, 0, 500, 0, 333, 500, 556, 889, 500, 500, 333, 1000, 500, 333, 944, 0,\n        556, 0, 0, 333, 333, 556, 556, 350, 500, 889, 333, 980, 389, 333, 667, 0,\n        389, 556, 0, 389, 500, 500, 500, 500, 275, 500, 333, 760, 276, 500, 675, 0,\n        760, 333, 400, 675, 300, 300, 333, 500, 523, 250, 333, 300, 310, 500, 750, 750,\n        750, 500, 611, 611, 611, 611, 611, 611, 889, 667, 611, 611, 611, 611, 333, 333,\n        333, 333, 722, 667, 722, 722, 722, 722, 722, 675, 722, 722, 722, 722, 722, 556,\n        611, 500, 500, 500, 500, 500, 500, 500, 667, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 500, 500, 500, 500, 500, 500, 675, 500, 500, 500, 500, 500, 444,\n        500, 444\n    ];\n    /**\n     * `Times bold italic` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.timesRomanBoldItalicWidths = [\n        250, 389, 555, 500, 500, 833, 778, 278, 333, 333, 500, 570, 250, 333,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 333, 333, 570, 570,\n        570, 500, 832, 667, 667, 667, 722, 667, 667, 722, 778, 389, 500, 667, 611, 889,\n        722, 722, 611, 722, 667, 556, 611, 722, 667, 889, 667, 611, 611, 333, 278, 333,\n        570, 500, 333, 500, 500, 444, 500, 444, 333, 500, 556, 278, 278, 500, 278, 778,\n        556, 500, 500, 500, 389, 389, 278, 556, 444, 667, 500, 444, 389, 348, 220, 348,\n        570, 0, 500, 0, 333, 500, 500, 1000, 500, 500, 333, 1000, 556, 333, 944, 0,\n        611, 0, 0, 333, 333, 500, 500, 350, 500, 1000, 333, 1000, 389, 333, 722, 0,\n        389, 611, 0, 389, 500, 500, 500, 500, 220, 500, 333, 747, 266, 500, 606, 0,\n        747, 333, 400, 570, 300, 300, 333, 576, 500, 250, 333, 300, 300, 500, 750, 750,\n        750, 500, 667, 667, 667, 667, 667, 667, 944, 667, 667, 667, 667, 667, 389, 389,\n        389, 389, 722, 722, 722, 722, 722, 722, 722, 570, 722, 722, 722, 722, 722, 611,\n        611, 500, 500, 500, 500, 500, 500, 500, 722, 444, 444, 444, 444, 444, 278, 278,\n        278, 278, 500, 556, 500, 500, 500, 500, 500, 570, 500, 556, 556, 556, 556, 444,\n        500, 444\n    ];\n    /**\n     * `Symbol` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.symbolWidth = [\n        250, 333, 713, 500, 549, 833, 778, 439, 333, 333, 500, 549, 250, 549,\n        250, 278, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 278, 278,\n        549, 549, 549, 444, 549, 722, 667, 722, 612, 611, 763, 603, 722, 333,\n        631, 722, 686, 889, 722, 722, 768, 741, 556, 592, 611, 690, 439, 768,\n        645, 795, 611, 333, 863, 333, 658, 500, 500, 631, 549, 549, 494, 439,\n        521, 411, 603, 329, 603, 549, 549, 576, 521, 549, 549, 521, 549, 603,\n        439, 576, 713, 686, 493, 686, 494, 480, 200, 480, 549, 750, 620, 247,\n        549, 167, 713, 500, 753, 753, 753, 753, 1042, 987, 603, 987, 603, 400,\n        549, 411, 549, 549, 713, 494, 460, 549, 549, 549, 549, 1000, 603, 1000,\n        658, 823, 686, 795, 987, 768, 768, 823, 768, 768, 713, 713, 713, 713,\n        713, 713, 713, 768, 713, 790, 790, 890, 823, 549, 250, 713, 603, 603,\n        1042, 987, 603, 987, 603, 494, 329, 790, 790, 786, 713, 384, 384, 384,\n        384, 384, 384, 494, 494, 494, 494, 329, 274, 686, 686, 686, 384, 384,\n        384, 384, 384, 384, 494, 494, 494, -1\n    ];\n    /**\n     * `Zip dingbats` widths table.\n     * @private\n     */\n    PdfStandardFontMetricsFactory.zapfDingbatsWidth = [\n        278, 974, 961, 974, 980, 719, 789, 790, 791, 690, 960, 939, 549, 855,\n        911, 933, 911, 945, 974, 755, 846, 762, 761, 571, 677, 763, 760, 759,\n        754, 494, 552, 537, 577, 692, 786, 788, 788, 790, 793, 794, 816, 823,\n        789, 841, 823, 833, 816, 831, 923, 744, 723, 749, 790, 792, 695, 776,\n        768, 792, 759, 707, 708, 682, 701, 826, 815, 789, 789, 707, 687, 696,\n        689, 786, 787, 713, 791, 785, 791, 873, 761, 762, 762, 759, 759, 892,\n        892, 788, 784, 438, 138, 277, 415, 392, 392, 668, 668, 390, 390, 317,\n        317, 276, 276, 509, 509, 410, 410, 234, 234, 334, 334, 732, 544, 544,\n        910, 667, 760, 760, 776, 595, 694, 626, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788, 788,\n        788, 788, 788, 788, 788, 788, 894, 838, 1016, 458, 748, 924, 748, 918,\n        927, 928, 928, 834, 873, 828, 924, 924, 917, 930, 931, 463, 883, 836,\n        836, 867, 867, 696, 696, 874, 874, 760, 946, 771, 865, 771, 888, 967,\n        888, 831, 873, 927, 970, 918\n    ];\n    return PdfStandardFontMetricsFactory;\n}());\nexport { PdfStandardFontMetricsFactory };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfFontFamily, PdfFontStyle, FontEncoding } from './enum';\nimport { PdfFont } from './pdf-font';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfStandardFontMetricsFactory } from './pdf-standard-font-metrics-factory';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\n/**\n * Represents one of the 14 standard fonts.\n * It's used to create a standard PDF font to draw the text in to the PDF.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // add a new page to the document\n * let page1 : PdfPage = document.pages.add();\n * //\n * // create new standard font\n * let font : PdfStandardFont = new PdfStandardFont(PdfFontFamily.Helvetica, 20);\n * //\n * // create black brush\n * let blackBrush : PdfSolidBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n * // draw the text\n * page1.graphics.drawString('Hello World', font, blackBrush, new PointF(0, 0));\n * // save the document\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfStandardFont = /** @class */ (function (_super) {\n    __extends(PdfStandardFont, _super);\n    function PdfStandardFont(fontFamilyPrototype, size, style) {\n        var _this = _super.call(this, size, (typeof style === 'undefined') ? ((fontFamilyPrototype instanceof PdfStandardFont) ? fontFamilyPrototype.style : PdfFontStyle.Regular) : style) || this;\n        /**\n         * Gets `ascent` of the font.\n         * @private\n         */\n        _this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Gets `encodings` for internal class use.\n         * @hidden\n         * @private\n         */\n        _this.encodings = ['Unknown', 'StandardEncoding', 'MacRomanEncoding', 'MacExpertEncoding',\n            'WinAnsiEncoding', 'PDFDocEncoding', 'IdentityH'];\n        if (typeof fontFamilyPrototype === 'undefined') {\n            _this.pdfFontFamily = PdfFontFamily.Helvetica;\n        }\n        else if ((fontFamilyPrototype instanceof PdfStandardFont)) {\n            _this.pdfFontFamily = fontFamilyPrototype.fontFamily;\n        }\n        else {\n            _this.pdfFontFamily = fontFamilyPrototype;\n        }\n        _this.checkStyle();\n        _this.initializeInternals();\n        return _this;\n    }\n    Object.defineProperty(PdfStandardFont.prototype, \"fontFamily\", {\n        /* tslint:enable */\n        //Properties\n        /**\n         * Gets the `FontFamily`.\n         * @private\n         */\n        get: function () {\n            return this.pdfFontFamily;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //methods\n    /**\n     * Checks font `style` of the font.\n     * @private\n     */\n    PdfStandardFont.prototype.checkStyle = function () {\n        if (this.fontFamily === PdfFontFamily.Symbol || this.fontFamily === PdfFontFamily.ZapfDingbats) {\n            var style = this.style;\n            style &= ~(PdfFontStyle.Bold | PdfFontStyle.Italic);\n            this.setStyle(style);\n        }\n    };\n    /**\n     * Returns `width` of the line.\n     * @public\n     */\n    PdfStandardFont.prototype.getLineWidth = function (line, format) {\n        if (line == null) {\n            throw new Error('ArgumentNullException:line');\n        }\n        var width = 0;\n        var name = this.name;\n        line = PdfStandardFont.convert(line);\n        for (var i = 0, len = line.length; i < len; i++) {\n            var ch = line[i];\n            var charWidth = this.getCharWidthInternal(ch, format);\n            width += charWidth;\n        }\n        var size = this.metrics.getSize(format);\n        width *= (PdfFont.charSizeMultiplier * size);\n        width = this.applyFormatSettings(line, format, width);\n        return width;\n    };\n    /**\n     * Checks whether fonts are `equals`.\n     * @private\n     */\n    PdfStandardFont.prototype.equalsToFont = function (font) {\n        var equal = false;\n        var stFont = font;\n        if (stFont != null) {\n            var fontFamilyEqual = (this.fontFamily === stFont.fontFamily);\n            var lineReducer = (~(PdfFontStyle.Underline | PdfFontStyle.Strikeout));\n            var styleEqual = (this.style & lineReducer) === (stFont.style & lineReducer);\n            equal = (fontFamilyEqual && styleEqual);\n        }\n        return equal;\n    };\n    /**\n     * `Initializes` font internals..\n     * @private\n     */\n    PdfStandardFont.prototype.initializeInternals = function () {\n        var equalFont = null;\n        // if (PdfDocument.EnableCache) {\n        equalFont = PdfDocument.cache.search(this);\n        // }\n        var internals = null;\n        // if (equalFont == null) {\n        // Create font metrics.\n        var metrics = PdfStandardFontMetricsFactory.getMetrics(this.pdfFontFamily, this.style, this.size);\n        this.metrics = metrics;\n        internals = this.createInternals();\n        this.setInternals(internals);\n    };\n    /**\n     * `Creates` font`s dictionary.\n     * @private\n     */\n    PdfStandardFont.prototype.createInternals = function () {\n        var dictionary = new PdfDictionary();\n        dictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.font));\n        dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.type1));\n        dictionary.items.setValue(this.dictionaryProperties.baseFont, new PdfName(this.metrics.postScriptName));\n        if (this.fontFamily !== PdfFontFamily.Symbol && this.fontFamily !== PdfFontFamily.ZapfDingbats) {\n            var encoding = this.encodings[FontEncoding.WinAnsiEncoding];\n            dictionary.items.setValue(this.dictionaryProperties.encoding, new PdfName(encoding));\n        }\n        return dictionary;\n    };\n    /**\n     * Returns `width` of the char. This methods doesn`t takes into consideration font`s size.\n     * @private\n     */\n    PdfStandardFont.prototype.getCharWidthInternal = function (charCode, format) {\n        var width = 0;\n        var code = 0;\n        code = charCode.charCodeAt(0);\n        if (this.name === '0' || this.name === '1' || this.name === '2' ||\n            this.name === '3' || this.name === '4') {\n            code = code - PdfStandardFont.charOffset;\n        }\n        code = (code >= 0 && code !== 128) ? code : 0;\n        var metrics = this.metrics;\n        var widthTable = metrics.widthTable;\n        width = widthTable.items(code);\n        return width;\n    };\n    /**\n     * `Converts` the specified text.\n     * @private\n     */\n    PdfStandardFont.convert = function (text) {\n        return text;\n    };\n    //Constants\n    /**\n     * First character `position`.\n     * @private\n     */\n    PdfStandardFont.charOffset = 32;\n    return PdfStandardFont;\n}(PdfFont));\nexport { PdfStandardFont };\n","import { PdfColor } from './../graphics/pdf-color';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfDictionary, SaveAnnotationEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfString } from './../primitives/pdf-string';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfSolidBrush } from './../graphics/brushes/pdf-solid-brush';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStringFormat } from './../graphics/fonts/pdf-string-format';\nimport { PdfTextAlignment } from './../graphics/enum';\n/**\n * `PdfAnnotation` class represents the base class for annotation objects.\n * @private\n */\nvar PdfAnnotation = /** @class */ (function () {\n    function PdfAnnotation(arg1) {\n        // Fields\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * `Color` of the annotation\n         * @private\n         */\n        this.pdfColor = new PdfColor(255, 255, 255);\n        /**\n         * `Bounds` of the annotation.\n         * @private\n         */\n        this.rectangle = new RectangleF(0, 0, 0, 0);\n        /**\n         * Parent `page` of the annotation.\n         * @private\n         */\n        this.pdfPage = null;\n        /**\n         * `Brush of the text` of the annotation.\n         * @default new PdfSolidBrush(new PdfColor(0, 0, 0))\n         * @private\n         */\n        this.textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        /**\n         * `Font of the text` of the annotation.\n         * @default new PdfStandardFont(PdfFontFamily.TimesRoman, 10)\n         * @private\n         */\n        this.textFont = new PdfStandardFont(PdfFontFamily.TimesRoman, 10);\n        /**\n         * `StringFormat of the text` of the annotation.\n         * @default new PdfStringFormat(PdfTextAlignment.Left)\n         * @private\n         */\n        this.format = new PdfStringFormat(PdfTextAlignment.Left);\n        /**\n         * `Text` of the annotation.\n         * @private\n         */\n        this.content = '';\n        /**\n         * Internal variable to store `dictionary`.\n         * @private\n         */\n        this.pdfDictionary = new PdfDictionary();\n        /**\n         * To specifying the `Inner color` with which to fill the annotation\n         * @private\n         */\n        this.internalColor = new PdfColor();\n        /**\n         * `opacity or darkness` of the annotation.\n         * @private\n         * @default 1.0\n         */\n        this.darkness = 1.0;\n        if (typeof arg1 === 'undefined') {\n            this.initialize();\n        }\n        else {\n            this.initialize();\n            this.bounds = arg1;\n        }\n    }\n    Object.defineProperty(PdfAnnotation.prototype, \"color\", {\n        // Properties\n        /**\n         * `Color` of the annotation\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"innerColor\", {\n        /**\n         * To specifying the `Inner color` with which to fill the annotation\n         * @private\n         */\n        get: function () {\n            return this.internalColor;\n        },\n        set: function (value) {\n            this.internalColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"bounds\", {\n        /**\n         * `bounds` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.rectangle;\n        },\n        set: function (value) {\n            this.rectangle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"page\", {\n        /**\n         * Parent `page` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"font\", {\n        /**\n         * To specifying the `Font of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.textFont;\n        },\n        set: function (value) {\n            this.textFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"stringFormat\", {\n        /**\n         * To specifying the `StringFormat of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"brush\", {\n        /**\n         * To specifying the `Brush of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.textBrush;\n        },\n        set: function (value) {\n            this.textBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"text\", {\n        /**\n         * `Text` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.contents, new PdfString(this.content));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"dictionary\", {\n        /**\n         * Internal variable to store `dictionary`.\n         * @hidden\n         */\n        get: function () {\n            return this.pdfDictionary;\n        },\n        set: function (value) {\n            this.pdfDictionary = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the annotation event handler and specifies the type of the annotation.\n     * @private\n     */\n    PdfAnnotation.prototype.initialize = function () {\n        this.pdfDictionary.annotationBeginSave = new SaveAnnotationEventHandler(this);\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.annot));\n    };\n    /**\n     * Sets related `page` of the annotation.\n     * @private\n     */\n    PdfAnnotation.prototype.setPage = function (page) {\n        this.pdfPage = page;\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.p, new PdfReferenceHolder(this.pdfPage));\n    };\n    /**\n     * Handles the `BeginSave` event of the Dictionary.\n     * @private\n     */\n    PdfAnnotation.prototype.beginSave = function () {\n        this.save();\n    };\n    /**\n     * `Saves` an annotation.\n     * @private\n     */\n    /* tslint:disable */\n    PdfAnnotation.prototype.save = function () {\n        var nativeRectangle = new RectangleF(this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height);\n        var section = this.pdfPage.section;\n        var initialHeight = nativeRectangle.height;\n        var tempLoacation = section.pointToNativePdf(this.page, new PointF(nativeRectangle.x, nativeRectangle.y));\n        nativeRectangle.x = tempLoacation.x;\n        nativeRectangle.width = tempLoacation.x + nativeRectangle.width;\n        nativeRectangle.y = (tempLoacation.y - this.page.document.pageSettings.margins.top);\n        nativeRectangle.height = nativeRectangle.y - initialHeight;\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.rect, PdfArray.fromRectangle(nativeRectangle));\n        this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(this.darkness));\n    };\n    Object.defineProperty(PdfAnnotation.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotation;\n}());\nexport { PdfAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfAnnotation } from './annotation';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * `PdfLinkAnnotation` class represents the ink annotation class.\n * @private\n */\nvar PdfLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfLinkAnnotation, _super);\n    function PdfLinkAnnotation(rectangle) {\n        return _super.call(this, rectangle) || this;\n    }\n    // Implementation\n    /**\n     * `Initializes` annotation object.\n     * @private\n     */\n    PdfLinkAnnotation.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.link));\n    };\n    return PdfLinkAnnotation;\n}(PdfAnnotation));\nexport { PdfLinkAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLinkAnnotation } from './link-annotation';\n/**\n * Represents base class for `link annotations` with associated action.\n * @private\n */\nvar PdfActionLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfActionLinkAnnotation, _super);\n    // Constructors\n    /**\n     * Specifies the constructor for `ActionLinkAnnotation`.\n     * @private\n     */\n    function PdfActionLinkAnnotation(rectangle) {\n        var _this = _super.call(this, rectangle) || this;\n        // Fields\n        /**\n         * Internal variable to store annotation's `action`.\n         * @default null\n         * @private\n         */\n        _this.pdfAction = null;\n        return _this;\n    }\n    //Public method\n    /**\n     * get and set the `action`.\n     * @hidden\n     */\n    PdfActionLinkAnnotation.prototype.getSetAction = function (value) {\n        if (typeof value === 'undefined') {\n            return this.pdfAction;\n        }\n        else {\n            this.pdfAction = value;\n        }\n    };\n    return PdfActionLinkAnnotation;\n}(PdfLinkAnnotation));\nexport { PdfActionLinkAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLinkAnnotation } from './link-annotation';\n/**\n * `PdfDocumentLinkAnnotation` class represents an annotation object with holds link on another location within a document.\n * ```typescript\n * // create a new PDF document\n * let document : PdfDocument = new PdfDocument();\n * // create new pages\n * let page1 : PdfPage = document.pages.add();\n * let page2 : PdfPage = document.pages.add();\n * // create a new rectangle\n * let bounds : RectangleF = new RectangleF({x : 10, y : 200}, {width : 300, height : 25});\n * //\n * // create a new document link annotation\n * let documentLinkAnnotation : PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(bounds);\n * // set the annotation text\n * documentLinkAnnotation.text = 'Document link annotation';\n * // set the destination\n * documentLinkAnnotation.destination = new PdfDestination(page2);\n * // set the documentlink annotation location\n * documentLinkAnnotation.destination.location = new PointF(10, 0);\n * // add this annotation to a new page\n * page1.annotations.add(documentLinkAnnotation);\n * //\n * // save the document to disk\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfDocumentLinkAnnotation = /** @class */ (function (_super) {\n    __extends(PdfDocumentLinkAnnotation, _super);\n    function PdfDocumentLinkAnnotation(rectangle, destination) {\n        var _this = _super.call(this, rectangle) || this;\n        // Fields\n        /**\n         * `Destination` of the annotation.\n         * @default null\n         * @private\n         */\n        _this.pdfDestination = null;\n        if (typeof destination !== 'undefined') {\n            _this.destination = destination;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfDocumentLinkAnnotation.prototype, \"destination\", {\n        // Properties\n        /**\n         * Gets or sets the `destination` of the annotation.\n         * ```typescript\n         * // create a new PDF document\n         * let document : PdfDocument = new PdfDocument();\n         * // create new pages\n         * let page1 : PdfPage = document.pages.add();\n         * let page2 : PdfPage = document.pages.add();\n         * // create a new rectangle\n         * let bounds : RectangleF = new RectangleF({x : 10, y : 200}, {width : 300, height : 25});\n         * //\n         * // create a new document link annotation\n         * let documentLinkAnnotation : PdfDocumentLinkAnnotation = new PdfDocumentLinkAnnotation(bounds);\n         * // set the annotation text\n         * documentLinkAnnotation.text = 'Document link annotation';\n         * // set the destination\n         * documentLinkAnnotation.destination = new PdfDestination(page2);\n         * // set the documentlink annotation location\n         * documentLinkAnnotation.destination.location = new PointF(10, 0);\n         * // add this annotation to a new page\n         * page1.annotations.add(documentLinkAnnotation);\n         * //\n         * // save the document to disk\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         * @default null\n         */\n        get: function () {\n            return this.pdfDestination;\n        },\n        set: function (value) {\n            // if (this.pdfDestination !== value) {\n            this.pdfDestination = value;\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Saves` annotation object.\n     * @private\n     */\n    PdfDocumentLinkAnnotation.prototype.save = function () {\n        _super.prototype.save.call(this);\n        if (this.pdfDestination != null) {\n            this.dictionary.items.setValue(this.dictionaryProperties.dest, this.pdfDestination.element);\n        }\n    };\n    /**\n     * `Clone` the document link annotation.\n     * @private\n     */\n    PdfDocumentLinkAnnotation.prototype.clone = function () {\n        var annot = new PdfDocumentLinkAnnotation(this.bounds, this.destination);\n        annot.color = this.color;\n        annot.brush = this.brush;\n        annot.destination = this.destination;\n        annot.font = this.font;\n        return annot;\n    };\n    return PdfDocumentLinkAnnotation;\n}(PdfLinkAnnotation));\nexport { PdfDocumentLinkAnnotation };\n","/**\n * ElementLayouter.ts class for EJ2-PDF\n */\nimport { RectangleF } from './../../../drawing/pdf-drawing';\n/**\n * Base class for `elements lay outing`.\n * @private\n */\nvar ElementLayouter = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `ElementLayouter` class.\n     * @private\n     */\n    function ElementLayouter(element) {\n        this.layoutElement = element;\n    }\n    Object.defineProperty(ElementLayouter.prototype, \"elements\", {\n        // Properties\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.layoutElement;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `element`.\n     * @private\n     */\n    ElementLayouter.prototype.getElement = function () {\n        return this.layoutElement;\n    };\n    // Implementation\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    ElementLayouter.prototype.layout = function (param) {\n        return this.layoutInternal(param);\n    };\n    ElementLayouter.prototype.Layouter = function (param) {\n        return this.layoutInternal(param);\n    };\n    /**\n     * Returns the `next page`.\n     * @private\n     */\n    ElementLayouter.prototype.getNextPage = function (currentPage) {\n        var section = currentPage.section;\n        var nextPage = section.add();\n        return nextPage;\n    };\n    ElementLayouter.prototype.getPaginateBounds = function (param) {\n        if ((param == null)) {\n            throw new Error('ArgumentNullException : param');\n        }\n        var result = param.format.usePaginateBounds ? param.format.paginateBounds\n            : new RectangleF(param.bounds.x, 0, param.bounds.width, param.bounds.height);\n        return result;\n    };\n    return ElementLayouter;\n}());\nexport { ElementLayouter };\nvar PdfLayoutFormat = /** @class */ (function () {\n    function PdfLayoutFormat(baseFormat) {\n        if (typeof baseFormat === 'undefined') {\n            //\n        }\n        else {\n            this.break = baseFormat.break;\n            this.layout = baseFormat.layout;\n            this.paginateBounds = baseFormat.paginateBounds;\n            this.boundsSet = baseFormat.usePaginateBounds;\n        }\n    }\n    Object.defineProperty(PdfLayoutFormat.prototype, \"layout\", {\n        // Properties\n        /**\n         * Gets or sets `layout` type of the element.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.layoutType === 'undefined' || this.layoutType == null) {\n            //      this.layoutType = PdfLayoutType.Paginate;\n            // }\n            return this.layoutType;\n        },\n        set: function (value) {\n            this.layoutType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"break\", {\n        /**\n         * Gets or sets `break` type of the element.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.breakType === 'undefined' || this.boundsSet == null) {\n            //      this.breakType = PdfLayoutBreakType.FitPage;\n            // }\n            return this.breakType;\n        },\n        set: function (value) {\n            this.breakType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"paginateBounds\", {\n        /**\n         * Gets or sets the `bounds` on the next page.\n         * @private\n         */\n        get: function () {\n            if (typeof this.layoutPaginateBounds === 'undefined' && this.layoutPaginateBounds == null) {\n                this.layoutPaginateBounds = new RectangleF(0, 0, 0, 0);\n            }\n            return this.layoutPaginateBounds;\n        },\n        set: function (value) {\n            this.layoutPaginateBounds = value;\n            this.boundsSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutFormat.prototype, \"usePaginateBounds\", {\n        /**\n         * Gets a value indicating whether [`use paginate bounds`].\n         * @private\n         */\n        get: function () {\n            // if (typeof this.boundsSet === 'undefined' || this.boundsSet == null) {\n            //      this.boundsSet = false;\n            // }\n            return this.boundsSet;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutFormat;\n}());\nexport { PdfLayoutFormat };\nvar PdfLayoutParams = /** @class */ (function () {\n    function PdfLayoutParams() {\n    }\n    Object.defineProperty(PdfLayoutParams.prototype, \"page\", {\n        // Properties\n        /**\n         * Gets or sets the layout `page` for the element.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        set: function (value) {\n            this.pdfPage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutParams.prototype, \"bounds\", {\n        /**\n         * Gets or sets layout `bounds` for the element.\n         * @private\n         */\n        get: function () {\n            return new RectangleF(this.layoutBounds.x, this.layoutBounds.y, this.layoutBounds.width, this.layoutBounds.height);\n        },\n        set: function (value) {\n            this.layoutBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutParams.prototype, \"format\", {\n        /**\n         * Gets or sets `layout settings` for the element.\n         * @private\n         */\n        get: function () {\n            return this.layoutFormat;\n        },\n        set: function (value) {\n            this.layoutFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutParams;\n}());\nexport { PdfLayoutParams };\nvar PdfLayoutResult = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initializes the new instance of `PdfLayoutResult` class.\n     * @private\n     */\n    function PdfLayoutResult(page, bounds) {\n        this.pdfPage = page;\n        this.layoutBounds = bounds;\n    }\n    Object.defineProperty(PdfLayoutResult.prototype, \"page\", {\n        // Properties\n        /**\n         * Gets the last `page` where the element was drawn.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutResult.prototype, \"bounds\", {\n        /**\n         * Gets the `bounds` of the element on the last page where it was drawn.\n         * @private\n         */\n        get: function () {\n            return this.layoutBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfLayoutResult;\n}());\nexport { PdfLayoutResult };\n","/**\n * PdfBorders.ts class for EJ2-PDF\n */\nimport { PdfPen } from './../../../graphics/pdf-pen';\nimport { PdfDashStyle } from './../../../graphics/enum';\nimport { PdfColor } from './../../../graphics/pdf-color';\n/**\n * `PdfBorders` class used represents the cell border of the PDF grid.\n */\nvar PdfBorders = /** @class */ (function () {\n    // Constructor\n    /**\n     * Create a new instance for `PdfBorders` class.\n     * @private\n     */\n    function PdfBorders() {\n        var defaultBorderPenLeft = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenLeft.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenRight = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenRight.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenTop = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenTop.dashStyle = PdfDashStyle.Solid;\n        var defaultBorderPenBottom = new PdfPen(new PdfColor(0, 0, 0));\n        defaultBorderPenBottom.dashStyle = PdfDashStyle.Solid;\n        this.leftPen = defaultBorderPenLeft;\n        this.rightPen = defaultBorderPenRight;\n        this.topPen = defaultBorderPenTop;\n        this.bottomPen = defaultBorderPenBottom;\n    }\n    Object.defineProperty(PdfBorders.prototype, \"left\", {\n        // Properties\n        /**\n         * Gets or sets the `Left`.\n         * @private\n         */\n        get: function () {\n            return this.leftPen;\n        },\n        set: function (value) {\n            this.leftPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"right\", {\n        /**\n         * Gets or sets the `Right`.\n         * @private\n         */\n        get: function () {\n            return this.rightPen;\n        },\n        set: function (value) {\n            this.rightPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"top\", {\n        /**\n         * Gets or sets the `Top`.\n         * @private\n         */\n        get: function () {\n            return this.topPen;\n        },\n        set: function (value) {\n            this.topPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `Bottom`.\n         * @private\n         */\n        get: function () {\n            return this.bottomPen;\n        },\n        set: function (value) {\n            this.bottomPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"all\", {\n        /**\n         * sets the `All`.\n         * @private\n         */\n        set: function (value) {\n            this.leftPen = this.rightPen = this.topPen = this.bottomPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders.prototype, \"isAll\", {\n        /**\n         * Gets a value indicating whether this instance `is all`.\n         * @private\n         */\n        get: function () {\n            return ((this.leftPen === this.rightPen) && (this.leftPen === this.topPen) && (this.leftPen === this.bottomPen));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBorders, \"default\", {\n        /**\n         * Gets the `default`.\n         * @private\n         */\n        get: function () {\n            return new PdfBorders();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfBorders;\n}());\nexport { PdfBorders };\nvar PdfPaddings = /** @class */ (function () {\n    function PdfPaddings(left, right, top, bottom) {\n        /**\n         * The 'left' border padding set.\n         * @private\n         */\n        this.hasLeftPad = false;\n        /**\n         * The 'right' border padding set.\n         * @private\n         */\n        this.hasRightPad = false;\n        /**\n         * The 'top' border padding set.\n         * @private\n         */\n        this.hasTopPad = false;\n        /**\n         * The 'bottom' border padding set.\n         * @private\n         */\n        this.hasBottomPad = false;\n        if (typeof left === 'undefined') {\n            //0.5 is set for top and bottom by default.\n            this.bottomPad = this.topPad = this.leftPad = this.rightPad = 0.5;\n        }\n        else {\n            this.leftPad = left;\n            this.rightPad = right;\n            this.topPad = top;\n            this.bottomPad = bottom;\n            this.hasLeftPad = true;\n            this.hasRightPad = true;\n            this.hasTopPad = true;\n            this.hasBottomPad = true;\n        }\n    }\n    Object.defineProperty(PdfPaddings.prototype, \"left\", {\n        // Properties\n        /**\n         * Gets or sets the `left` value of the edge\n         * @private\n         */\n        get: function () {\n            return this.leftPad;\n        },\n        set: function (value) {\n            this.leftPad = value;\n            this.hasLeftPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"right\", {\n        /**\n         * Gets or sets the `right` value of the edge.\n         * @private\n         */\n        get: function () {\n            return this.rightPad;\n        },\n        set: function (value) {\n            this.rightPad = value;\n            this.hasRightPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"top\", {\n        /**\n         * Gets or sets the `top` value of the edge\n         * @private\n         */\n        get: function () {\n            return this.topPad;\n        },\n        set: function (value) {\n            this.topPad = value;\n            this.hasTopPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"bottom\", {\n        /**\n         * Gets or sets the `bottom` value of the edge.\n         * @private\n         */\n        get: function () {\n            return this.bottomPad;\n        },\n        set: function (value) {\n            this.bottomPad = value;\n            this.hasBottomPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPaddings.prototype, \"all\", {\n        /**\n         * Sets value to all sides `left,right,top and bottom`.s\n         * @private\n         */\n        set: function (value) {\n            this.leftPad = this.rightPad = this.topPad = this.bottomPad = value;\n            this.hasLeftPad = true;\n            this.hasRightPad = true;\n            this.hasTopPad = true;\n            this.hasBottomPad = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfPaddings;\n}());\nexport { PdfPaddings };\n","import { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutParams, PdfLayoutFormat } from './base/element-layouter';\nimport { PdfBorders } from './../../structured-elements/grid/styles/pdf-borders';\n/**\n * `PdfLayoutElement` class represents the base class for all elements that can be layout on the pages.\n * @private\n */\nvar PdfLayoutElement = /** @class */ (function () {\n    function PdfLayoutElement() {\n    }\n    Object.defineProperty(PdfLayoutElement.prototype, \"raiseBeginPageLayout\", {\n        // Property\n        /**\n         * Gets a value indicating whether the `start page layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.beginPageLayout !== 'undefined');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLayoutElement.prototype, \"raiseEndPageLayout\", {\n        /**\n         * Gets a value indicating whether the `ending page layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.endPageLayout !== 'undefined');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Event Handlers\n    PdfLayoutElement.prototype.onBeginPageLayout = function (args) {\n        if (this.beginPageLayout) {\n            this.beginPageLayout(this, args);\n        }\n    };\n    PdfLayoutElement.prototype.onEndPageLayout = function (args) {\n        if (this.endPageLayout) {\n            this.endPageLayout(this, args);\n        }\n    };\n    PdfLayoutElement.prototype.drawHelper = function (arg2, arg3, arg4, arg5) {\n        if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg2, arg3.x, arg3.y);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            return this.drawHelper(arg2, arg3, arg4, null);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg2, arg3, null);\n        }\n        else if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && arg4 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg2, arg3.x, arg3.y, arg4);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof PdfLayoutFormat || arg5 == null)) {\n            var width = (arg2.graphics.clientSize.width - arg3);\n            var layoutRectangle = new RectangleF(arg3, arg4, width, 0);\n            return this.drawHelper(arg2, layoutRectangle, arg5);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {\n            this.bEmbedFonts = arg4;\n            return this.drawHelper(arg2, arg3, null);\n        }\n        else {\n            var param = new PdfLayoutParams();\n            var temparg3 = arg3;\n            var temparg4 = arg4;\n            param.page = arg2;\n            param.bounds = temparg3;\n            if (param != null) {\n                var x = param.bounds.x;\n                var y = param.bounds.y;\n                if (param.bounds.x === 0) {\n                    x = PdfBorders.default.right.width / 2;\n                }\n                if (param.bounds.y === 0) {\n                    y = PdfBorders.default.top.width / 2;\n                }\n                var newBound = new RectangleF(x, y, param.bounds.width, param.bounds.height);\n                param.bounds = newBound;\n            }\n            param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n            var result = this.layout(param);\n            return result;\n        }\n    };\n    return PdfLayoutElement;\n}());\nexport { PdfLayoutElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * TextLayouter.ts class for EJ2-PDF\n */\nimport { ElementLayouter, PdfLayoutResult } from './element-layouter';\nimport { PdfTextElement } from './../text-element';\nimport { RectangleF, SizeF } from './../../../drawing/pdf-drawing';\nimport { LineType, PdfStringLayouter } from './../../fonts/string-layouter';\nimport { PdfLayoutBreakType } from './../../figures/enum';\nimport { PdfColor } from './../../pdf-color';\nimport { PdfTextWebLink } from './../../../annotations/pdf-text-web-link';\nimport { PdfTextAlignment } from '../../enum';\n/**\n * Class that `layouts the text`.\n * @private\n */\nvar TextLayouter = /** @class */ (function (_super) {\n    __extends(TextLayouter, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `TextLayouter` class.\n     * @private\n     */\n    function TextLayouter(element) {\n        return _super.call(this, element) || this;\n    }\n    Object.defineProperty(TextLayouter.prototype, \"element\", {\n        /**\n         * Gets the layout `element`.\n         * @private\n         */\n        get: function () {\n            return _super.prototype.getElement.call(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    TextLayouter.prototype.layoutInternal = function (param) {\n        /* tslint:disable */\n        this.format = (this.element.stringFormat !== null && typeof this.element.stringFormat !== 'undefined') ? this.element.stringFormat : null;\n        var currentPage = param.page;\n        var currentBounds = param.bounds;\n        var text = this.element.value;\n        var result = null;\n        var pageResult = new TextPageLayoutResult();\n        pageResult.page = currentPage;\n        pageResult.remainder = text;\n        for (;;) {\n            pageResult = this.layoutOnPage(text, currentPage, currentBounds, param);\n            result = this.getLayoutResult(pageResult);\n            break;\n        }\n        /* tslint:enable */\n        return result;\n    };\n    /**\n     * Raises `PageLayout` event if needed.\n     * @private\n     */\n    TextLayouter.prototype.getLayoutResult = function (pageResult) {\n        var result = new PdfTextLayoutResult(pageResult.page, pageResult.bounds, pageResult.remainder, pageResult.lastLineBounds);\n        return result;\n    };\n    /* tslint:disable */\n    /**\n     * `Layouts` the text on the page.\n     * @private\n     */\n    TextLayouter.prototype.layoutOnPage = function (text, currentPage, currentBounds, param) {\n        var result = new TextPageLayoutResult();\n        result.remainder = text;\n        result.page = currentPage;\n        currentBounds = this.checkCorrectBounds(currentPage, currentBounds);\n        var layouter = new PdfStringLayouter();\n        var stringResult = layouter.layout(text, this.element.font, this.format, currentBounds, currentPage.getClientSize().height, false, new SizeF(0, 0));\n        var textFinished = (stringResult.remainder == null);\n        var doesntFit = (param.format.break === PdfLayoutBreakType.FitElement);\n        var canDraw = !(doesntFit || stringResult.empty);\n        // Draw the text.\n        var graphics = currentPage.graphics;\n        var brush = this.element.getBrush();\n        if (this.element instanceof PdfTextWebLink) {\n            brush.color = new PdfColor(0, 0, 255);\n            if (!this.element._isLastElement && this.element.stringFormat && this.element.stringFormat.alignment === PdfTextAlignment.Justify) {\n                stringResult.layoutLines[0].type = LineType.LayoutBreak | LineType.FirstParagraphLine;\n            }\n        }\n        if (this.element && this.element instanceof PdfTextElement && !this.element._isLastElement && this.element.stringFormat && this.element.stringFormat.alignment === PdfTextAlignment.Justify) {\n            stringResult.layoutLines[0].type = LineType.LayoutBreak | LineType.FirstParagraphLine;\n        }\n        graphics.drawStringLayoutResult(stringResult, this.element.font, this.element.pen, brush, currentBounds, this.format);\n        var lineInfo = stringResult.lines[stringResult.lineCount - 1];\n        result.lastLineBounds = graphics.getLineBounds(stringResult.lineCount - 1, stringResult, this.element.font, currentBounds, this.format);\n        result.bounds = this.getTextPageBounds(currentPage, currentBounds, stringResult);\n        result.remainder = stringResult.remainder;\n        result.end = (textFinished);\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * `Corrects current bounds` on the page.\n     * @private\n     */\n    TextLayouter.prototype.checkCorrectBounds = function (currentPage, currentBounds) {\n        var pageSize = currentPage.graphics.clientSize;\n        currentBounds.height = (currentBounds.height > 0) ? currentBounds.height : pageSize.height - currentBounds.y;\n        return currentBounds;\n    };\n    /**\n     * Returns a `rectangle` where the text was printed on the page.\n     * @private\n     */\n    /* tslint:disable */\n    TextLayouter.prototype.getTextPageBounds = function (currentPage, currentBounds, stringResult) {\n        var textSize = stringResult.actualSize;\n        var x = currentBounds.x;\n        var y = currentBounds.y;\n        var width = (currentBounds.width > 0) ? currentBounds.width : textSize.width;\n        var height = textSize.height;\n        var shiftedRect = currentPage.graphics.checkCorrectLayoutRectangle(textSize, currentBounds.x, currentBounds.y, this.format);\n        // if (currentBounds.width <= 0) {\n        x = shiftedRect.x;\n        // }\n        var verticalShift = currentPage.graphics.getTextVerticalAlignShift(textSize.height, currentBounds.height, this.format);\n        y += verticalShift;\n        var bounds = new RectangleF(x, y, width, height);\n        return bounds;\n    };\n    return TextLayouter;\n}(ElementLayouter));\nexport { TextLayouter };\nvar TextPageLayoutResult = /** @class */ (function () {\n    function TextPageLayoutResult() {\n    }\n    return TextPageLayoutResult;\n}());\nexport { TextPageLayoutResult };\nvar PdfTextLayoutResult = /** @class */ (function (_super) {\n    __extends(PdfTextLayoutResult, _super);\n    // Constructors\n    /**\n     * Initializes the new instance of `PdfTextLayoutResult` class.\n     * @private\n     */\n    function PdfTextLayoutResult(page, bounds, remainder, lastLineBounds) {\n        var _this = _super.call(this, page, bounds) || this;\n        _this.remainderText = remainder;\n        _this.lastLineTextBounds = lastLineBounds;\n        return _this;\n    }\n    Object.defineProperty(PdfTextLayoutResult.prototype, \"remainder\", {\n        // Properties\n        /**\n         * Gets a value that contains the `text` that was not printed.\n         * @private\n         */\n        get: function () {\n            return this.remainderText;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextLayoutResult.prototype, \"lastLineBounds\", {\n        /**\n         * Gets a value that indicates the `bounds` of the last line that was printed on the page.\n         * @private\n         */\n        get: function () {\n            return this.lastLineTextBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTextLayoutResult;\n}(PdfLayoutResult));\nexport { PdfTextLayoutResult };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfTextElement.ts class for EJ2-PDF\n */\nimport { PdfLayoutElement } from './../figures/layout-element';\nimport { PdfBrush } from './../brushes/pdf-brush';\nimport { PdfFont } from './../fonts/pdf-font';\nimport { PdfStandardFont } from './../fonts/pdf-standard-font';\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutParams } from './../figures/base/element-layouter';\nimport { TextLayouter } from './base/text-layouter';\nimport { PdfSolidBrush } from './../brushes/pdf-solid-brush';\nimport { PdfColor } from './../pdf-color';\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutFormat } from './base/element-layouter';\nimport { PdfStringLayouter } from './../fonts/string-layouter';\nimport { PdfTextAlignment } from './../enum';\n/**\n * `PdfTextElement` class represents the text area with the ability to span several pages\n * and inherited from the 'PdfLayoutElement' class.\n * @private\n */\nvar PdfTextElement = /** @class */ (function (_super) {\n    __extends(PdfTextElement, _super);\n    function PdfTextElement(arg1, arg2, arg3, arg4, arg5) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * `Text` data.\n         * @private\n         */\n        _this.content = '';\n        /**\n         * `Value` of text data.\n         * @private\n         */\n        _this.elementValue = '';\n        /**\n         * indicate whether the drawText with PointF overload is called or not.\n         * @default false\n         * @private\n         */\n        _this.hasPointOverload = false;\n        _this._isLastElement = false;\n        /**\n         * indicate whether the PdfGridCell value is `PdfTextElement`\n         * @default false\n         * @private\n         */\n        _this.isPdfTextElement = false;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (typeof arg1 === 'string' && typeof arg2 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && typeof arg3 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfPen && typeof arg4 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfPen = arg3;\n        }\n        else if (typeof arg1 === 'string' && arg2 instanceof PdfFont && arg3 instanceof PdfBrush && typeof arg4 === 'undefined') {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfBrush = arg3;\n        }\n        else {\n            _this.content = arg1;\n            _this.elementValue = arg1;\n            _this.pdfFont = arg2;\n            _this.pdfPen = arg3;\n            _this.pdfBrush = arg4;\n            _this.format = arg5;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTextElement.prototype, \"text\", {\n        // Properties\n        /**\n         * Gets or sets a value indicating the `text` that should be printed.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * //\n         * // set the link text\n         * textLink.text = 'Google';\n         * //\n         * // set the font\n         * textLink.font = font;\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.elementValue = value;\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"value\", {\n        //get value\n        /**\n         * Gets or sets a `value` indicating the text that should be printed.\n         * @private\n         */\n        get: function () {\n            return this.elementValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"pen\", {\n        //get pen\n        /**\n         * Gets or sets a `PdfPen` that determines the color, width, and style of the text\n         * @private\n         */\n        get: function () {\n            return this.pdfPen;\n        },\n        //Set pen value\n        set: function (value) {\n            this.pdfPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"brush\", {\n        //get brush\n        /**\n         * Gets or sets the `PdfBrush` that will be used to draw the text with color and texture.\n         * @private\n         */\n        get: function () {\n            return this.pdfBrush;\n        },\n        //Set brush value\n        set: function (value) {\n            this.pdfBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"font\", {\n        //get font\n        /**\n         * Gets or sets a `PdfFont` that defines the text format.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * // set the link text\n         * textLink.text = 'Google';\n         * //\n         * // set the font\n         * textLink.font = font;\n         * //\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.pdfFont;\n        },\n        set: function (value) {\n            this.pdfFont = value;\n            if (this.pdfFont instanceof PdfStandardFont && this.content != null) {\n                this.elementValue = PdfStandardFont.convert(this.content);\n            }\n            else {\n                this.elementValue = this.content;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTextElement.prototype, \"stringFormat\", {\n        /**\n         * Gets or sets the `PdfStringFormat` that will be used to set the string format\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Gets a `brush` for drawing.\n     * @private\n     */\n    PdfTextElement.prototype.getBrush = function () {\n        return (this.pdfBrush == null || typeof this.pdfBrush === 'undefined') ? new PdfSolidBrush(new PdfColor(0, 0, 0)) : this.pdfBrush;\n    };\n    // /**\n    //  * `Draws` an element on the Graphics.\n    //  * @private\n    //  */\n    // public drawInternal(graphics : PdfGraphics) : void {\n    //     graphics.drawString(this.elementValue, this.pdfFont, this.pdfPen, this.getBrush(), 0, 0, this.stringFormat);\n    // }\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    PdfTextElement.prototype.layout = function (param) {\n        var layouter = new TextLayouter(this);\n        var result = layouter.layout(param);\n        return result;\n    };\n    PdfTextElement.prototype.drawText = function (arg2, arg3, arg4, arg5) {\n        if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && typeof arg4 === 'undefined') {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3.x, arg3.y);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3, arg4, null);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'undefined') {\n            return this.drawText(arg2, arg3, null);\n        }\n        else if (arg3 instanceof PointF && typeof arg3.width === 'undefined' && arg4 instanceof PdfLayoutFormat) {\n            this.hasPointOverload = true;\n            return this.drawText(arg2, arg3.x, arg3.y, arg4);\n        }\n        else if (typeof arg3 === 'number' && typeof arg4 === 'number' && (arg5 instanceof PdfLayoutFormat || arg5 == null)) {\n            this.hasPointOverload = true;\n            var width = (arg2.graphics.clientSize.width - arg3);\n            var layoutRectangle = new RectangleF(arg3, arg4, width, 0);\n            return this.drawText(arg2, layoutRectangle, arg5);\n        }\n        else if (arg3 instanceof RectangleF && typeof arg3.width !== 'undefined' && typeof arg4 === 'boolean') {\n            return this.drawText(arg2, arg3, null);\n        }\n        else {\n            var layout = new PdfStringLayouter();\n            if (this.hasPointOverload) {\n                var stringLayoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF((arg2.graphics.clientSize.width - arg3.x), 0), true, arg2.graphics.clientSize);\n                var layoutResult = void 0;\n                var param = new PdfLayoutParams();\n                var temparg3 = arg3;\n                var temparg4 = arg4;\n                param.page = arg2;\n                var previousPage = arg2;\n                param.bounds = temparg3;\n                param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n                if (stringLayoutResult.lines.length > 1) {\n                    this.text = stringLayoutResult.layoutLines[0].text;\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n                        layoutResult = this.layout(param);\n                        var bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, arg2.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                        var isPaginate = false;\n                        for (var i = 1; i < stringLayoutResult.lines.length; i++) {\n                            param.page = layoutResult.page;\n                            param.bounds = new RectangleF(new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n                            this.text = stringLayoutResult.layoutLines[i].text;\n                            if (bounds.y + stringLayoutResult.lineHeight > layoutResult.page.graphics.clientSize.height) {\n                                isPaginate = true;\n                                param.page = param.page.graphics.getNextPage();\n                                if (previousPosition.y > (layoutResult.page.graphics.clientSize.height - layoutResult.bounds.height)) {\n                                    bounds = new RectangleF(0, layoutResult.bounds.height, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                                }\n                                else {\n                                    bounds = new RectangleF(0, 0, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                                }\n                                param.bounds = bounds;\n                            }\n                            if (i === stringLayoutResult.lines.length - 1) {\n                                this._isLastElement = true;\n                            }\n                            layoutResult = this.layout(param);\n                            if (i !== (stringLayoutResult.lines.length - 1)) {\n                                bounds = new RectangleF(0, layoutResult.bounds.y + stringLayoutResult.lineHeight, layoutResult.page.graphics.clientSize.width, stringLayoutResult.lineHeight);\n                            }\n                            else {\n                                var lineWidth = this.font.measureString(this.text, this.format).width;\n                                layoutResult = this.calculateResultBounds(layoutResult, lineWidth, layoutResult.page.graphics.clientSize.width, 0);\n                            }\n                        }\n                    }\n                    return layoutResult;\n                }\n                else {\n                    var lineSize = this.font.measureString(this.text, this.format);\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        layoutResult = this.layout(param);\n                        layoutResult = this.calculateResultBounds(layoutResult, lineSize.width, layoutResult.page.graphics.clientSize.width, 0);\n                    }\n                    return layoutResult;\n                }\n            }\n            else {\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg3.width, 0), false, arg2.graphics.clientSize);\n                var result = void 0;\n                var param = new PdfLayoutParams();\n                var temparg3 = arg3;\n                var temparg4 = arg4;\n                param.page = arg2;\n                param.bounds = temparg3;\n                param.format = (temparg4 != null) ? temparg4 : new PdfLayoutFormat();\n                if (layoutResult.lines.length > 1) {\n                    this.text = layoutResult.layoutLines[0].text;\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        var previousPosition = new PointF(param.bounds.x, param.bounds.y);\n                        result = this.layout(param);\n                        var bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                        var isPaginate = false;\n                        for (var i = 1; i < layoutResult.lines.length; i++) {\n                            param.page = result.page;\n                            param.bounds = new RectangleF(bounds.x, bounds.y, bounds.width, bounds.height);\n                            this.text = layoutResult.layoutLines[i].text;\n                            if (bounds.y + layoutResult.lineHeight > result.page.graphics.clientSize.height) {\n                                isPaginate = true;\n                                param.page = param.page.graphics.getNextPage();\n                                if (previousPosition.y > (result.page.graphics.clientSize.height - result.bounds.height)) {\n                                    bounds = new RectangleF(temparg3.x, layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                                }\n                                else {\n                                    bounds = new RectangleF(temparg3.x, 0, temparg3.width, layoutResult.lineHeight);\n                                }\n                                param.bounds = bounds;\n                            }\n                            result = this.layout(param);\n                            if (i !== (layoutResult.lines.length - 1)) {\n                                bounds = new RectangleF(temparg3.x, result.bounds.y + layoutResult.lineHeight, temparg3.width, layoutResult.lineHeight);\n                            }\n                            else {\n                                var lineWidth = this.font.measureString(this.text, this.format).width;\n                                result = this.calculateResultBounds(result, lineWidth, temparg3.width, temparg3.x);\n                            }\n                        }\n                    }\n                    return result;\n                }\n                else {\n                    var lineSize = this.font.measureString(this.text, this.format);\n                    if (param.bounds.y <= param.page.graphics.clientSize.height) {\n                        result = this.layout(param);\n                        result = this.calculateResultBounds(result, lineSize.width, temparg3.width, temparg3.x);\n                    }\n                    return result;\n                }\n            }\n        }\n    };\n    PdfTextElement.prototype.calculateResultBounds = function (result, lineWidth, maximumWidth, startPosition) {\n        var shift = 0;\n        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n            result.bounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n            result.bounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n            result.bounds.x = startPosition + (maximumWidth - lineWidth);\n            result.bounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n            result.bounds.x = startPosition;\n            result.bounds.width = maximumWidth;\n        }\n        else {\n            result.bounds.width = startPosition;\n            result.bounds.width = lineWidth;\n        }\n        return result;\n    };\n    return PdfTextElement;\n}(PdfLayoutElement));\nexport { PdfTextElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfActionLinkAnnotation } from './action-link-annotation';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfUriAction } from './../actions/uri-action';\n/**\n * `PdfUriAnnotation` class represents the Uri annotation.\n * @private\n */\nvar PdfUriAnnotation = /** @class */ (function (_super) {\n    __extends(PdfUriAnnotation, _super);\n    function PdfUriAnnotation(rectangle, uri) {\n        var _this = _super.call(this, rectangle) || this;\n        if (typeof uri !== 'undefined') {\n            _this.uri = uri;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uriAction\", {\n        /**\n         * Get `action` of the annotation.\n         * @private\n         */\n        get: function () {\n            if (typeof this.pdfUriAction === 'undefined') {\n                this.pdfUriAction = new PdfUriAction();\n            }\n            return this.pdfUriAction;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfUriAnnotation.prototype, \"uri\", {\n        // Properties\n        /**\n         * Gets or sets the `Uri` address.\n         * @private\n         */\n        get: function () {\n            return this.uriAction.uri;\n        },\n        set: function (value) {\n            if (this.uriAction.uri !== value) {\n                this.uriAction.uri = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfUriAnnotation.prototype, \"action\", {\n        /**\n         * Gets or sets the `action`.\n         * @private\n         */\n        get: function () {\n            return this.getSetAction();\n        },\n        set: function (value) {\n            this.getSetAction(value);\n            this.uriAction.next = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initializes` annotation object.\n     * @private\n     */\n    PdfUriAnnotation.prototype.initialize = function () {\n        _super.prototype.initialize.call(this);\n        this.dictionary.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.link));\n        var tempPrimitive = this.uriAction.element;\n        this.dictionary.items.setValue(this.dictionaryProperties.a, this.uriAction.element);\n    };\n    return PdfUriAnnotation;\n}(PdfActionLinkAnnotation));\nexport { PdfUriAnnotation };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPage } from './../pages/pdf-page';\nimport { PointF, RectangleF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTextElement } from './../graphics/figures/text-element';\nimport { PdfUriAnnotation } from './uri-annotation';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfFontStyle } from './../graphics/fonts/enum';\nimport { PdfTextAlignment } from './../graphics/enum';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\n * `PdfTextWebLink` class represents the class for text web link annotation.\n * ```typescript\n * // create a new PDF document.\n * let document : PdfDocument = new PdfDocument();\n * // add a page to the document.\n * let page1 : PdfPage = document.pages.add();\n * // create the font\n * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n * //\n * // create the Text Web Link\n * let textLink : PdfTextWebLink = new PdfTextWebLink();\n * // set the hyperlink\n * textLink.url = 'http://www.google.com';\n * // set the link text\n * textLink.text = 'Google';\n * // set the font\n * textLink.font = font;\n * // draw the hyperlink in PDF page\n * textLink.draw(page1, new PointF(10, 40));\n * //\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextWebLink = /** @class */ (function (_super) {\n    __extends(PdfTextWebLink, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfTextWebLink` class.\n     * @private\n     */\n    function PdfTextWebLink() {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Internal variable to store `Url`.\n         * @default ''\n         * @private\n         */\n        _this.uniformResourceLocator = '';\n        /**\n         * Internal variable to store `Uri Annotation` object.\n         * @default null\n         * @private\n         */\n        _this.uriAnnotation = null;\n        /**\n         * Checks whether the drawTextWebLink method with `PointF` overload is called or not.\n         * If it set as true, then the start position of each lines excluding firest line is changed as (0, Y).\n         * @private\n         * @hidden\n         */\n        _this.recalculateBounds = false;\n        _this.defaultBorder = new PdfArray();\n        for (var i = 0; i < 3; i++) {\n            _this.defaultBorder.add(new PdfNumber(0));\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTextWebLink.prototype, \"url\", {\n        // Properties\n        /**\n         * Gets or sets the `Uri address`.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * //\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * //\n         * // set the link text\n         * textLink.text = 'Google';\n         * // set the font\n         * textLink.font = font;\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.uniformResourceLocator;\n        },\n        set: function (value) {\n            if (value.length === 0) {\n                throw new Error('ArgumentException : Url - string can not be empty');\n            }\n            this.uniformResourceLocator = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextWebLink.prototype.draw = function (arg1, arg2) {\n        if (arg1 instanceof PdfPage) {\n            var layout = new PdfStringLayouter();\n            var previousFontStyle = this.font.style;\n            if (arg2 instanceof PointF) {\n                this.recalculateBounds = true;\n                this.font.style = PdfFontStyle.Underline;\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF((arg1.graphics.clientSize.width - arg2.x), 0), true, arg1.graphics.clientSize);\n                if (layoutResult.lines.length === 1) {\n                    var textSize = this.font.measureString(this.value);\n                    var rect = new RectangleF(arg2, textSize);\n                    rect = this.calculateBounds(rect, textSize.width, arg1.graphics.clientSize.width, arg2.x);\n                    this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n                    arg1.annotations.add(this.uriAnnotation);\n                    var result = this.drawText(arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return result;\n                }\n                else {\n                    var result = this.drawMultipleLineWithPoint(layoutResult, arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return result;\n                }\n            }\n            else {\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg2.width, 0), false, new SizeF(0, 0));\n                this.font.style = PdfFontStyle.Underline;\n                if (layoutResult.lines.length === 1) {\n                    var textSize = this.font.measureString(this.value);\n                    var rect = new RectangleF(new PointF(arg2.x, arg2.y), textSize);\n                    rect = this.calculateBounds(rect, textSize.width, arg2.width, arg2.x);\n                    this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n                    arg1.annotations.add(this.uriAnnotation);\n                    var returnValue = this.drawText(arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return returnValue;\n                }\n                else {\n                    var returnValue = this.drawMultipleLineWithBounds(layoutResult, arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return returnValue;\n                }\n            }\n        }\n        else {\n            var page = new PdfPage();\n            page = arg1.page;\n            return this.draw(page, arg2);\n        }\n    };\n    /* tslint:enable */\n    //Private methods\n    /**\n     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified location.\n     * @private\n     */\n    PdfTextWebLink.prototype.drawMultipleLineWithPoint = function (result, page, location) {\n        var layoutResult;\n        for (var i = 0; i < result.layoutLines.length; i++) {\n            var size = this.font.measureString(result.lines[i].text);\n            if (i === result.layoutLines.length - 1 && this.stringFormat && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n                this._isLastElement = true;\n            }\n            var bounds = new RectangleF(location, size);\n            if (i !== 0) {\n                bounds.x = 0;\n            }\n            this.text = result.lines[i].text;\n            if (bounds.y + size.height > page.graphics.clientSize.height) {\n                if (i !== 0) {\n                    page = page.graphics.getNextPage();\n                    bounds = new RectangleF(0, 0, page.graphics.clientSize.width, size.height);\n                    location.y = 0;\n                }\n                else {\n                    break;\n                }\n            }\n            bounds = this.calculateBounds(bounds, size.width, page.graphics.clientSize.width, bounds.x);\n            this.uriAnnotation = new PdfUriAnnotation(bounds, this.url);\n            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n            page.annotations.add(this.uriAnnotation);\n            if (i !== 0) {\n                layoutResult = this.drawText(page, new PointF(0, bounds.y));\n            }\n            else {\n                layoutResult = this.drawText(page, bounds.x, bounds.y);\n            }\n            location.y += size.height;\n        }\n        return layoutResult;\n    };\n    /**\n     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified bounds.\n     * @private\n     */\n    PdfTextWebLink.prototype.drawMultipleLineWithBounds = function (result, page, bounds) {\n        var layoutResult;\n        for (var i = 0; i < result.layoutLines.length; i++) {\n            var size = this.font.measureString(result.lines[i].text);\n            var internalBounds = new RectangleF(new PointF(bounds.x, bounds.y), size);\n            internalBounds = this.calculateBounds(internalBounds, size.width, bounds.width, bounds.x);\n            this.text = result.lines[i].text;\n            if (bounds.y + size.height > page.graphics.clientSize.height) {\n                if (i !== 0) {\n                    page = page.graphics.getNextPage();\n                    bounds = new RectangleF(bounds.x, 0, bounds.width, size.height);\n                    internalBounds.y = 0;\n                }\n                else {\n                    break;\n                }\n            }\n            this.uriAnnotation = new PdfUriAnnotation(internalBounds, this.url);\n            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n            page.annotations.add(this.uriAnnotation);\n            layoutResult = this.drawText(page, bounds);\n            bounds.y += size.height;\n        }\n        return layoutResult;\n    };\n    /* tslint:disable */\n    PdfTextWebLink.prototype.calculateBounds = function (currentBounds, lineWidth, maximumWidth, startPosition) {\n        var shift = 0;\n        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n            currentBounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n            currentBounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n            currentBounds.x = startPosition + (maximumWidth - lineWidth);\n            currentBounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n            currentBounds.x = startPosition;\n            currentBounds.width = maximumWidth;\n        }\n        else {\n            currentBounds.width = startPosition;\n            currentBounds.width = lineWidth;\n        }\n        return currentBounds;\n    };\n    return PdfTextWebLink;\n}(PdfTextElement));\nexport { PdfTextWebLink };\n","/**\n * PdfNumbersConvertor.ts class for EJ2-PDF\n * @private\n */\nimport { PdfNumberStyle } from './../../pages/enum';\n/**\n * `PdfNumbersConvertor` for convert page number into numbers, roman letters, etc.,\n * @private\n */\nvar PdfNumbersConvertor = /** @class */ (function () {\n    function PdfNumbersConvertor() {\n    }\n    // Static methods\n    /**\n     * Convert string value from page number with correct format.\n     * @private\n     */\n    PdfNumbersConvertor.convert = function (intArabic, numberStyle) {\n        var result = '';\n        switch (numberStyle) {\n            case PdfNumberStyle.None:\n                result = '';\n                break;\n            case PdfNumberStyle.Numeric:\n                result = intArabic.toString();\n                break;\n            case PdfNumberStyle.LowerLatin:\n                result = this.arabicToLetter(intArabic).toLowerCase();\n                break;\n            case PdfNumberStyle.LowerRoman:\n                result = this.arabicToRoman(intArabic).toLowerCase();\n                break;\n            case PdfNumberStyle.UpperLatin:\n                result = this.arabicToLetter(intArabic);\n                break;\n            case PdfNumberStyle.UpperRoman:\n                result = this.arabicToRoman(intArabic);\n                break;\n        }\n        return result;\n    };\n    /**\n     * Converts `arabic to roman` letters.\n     * @private\n     */\n    PdfNumbersConvertor.arabicToRoman = function (intArabic) {\n        var retval = '';\n        var retvalM = this.generateNumber(intArabic, 1000, 'M');\n        retval += retvalM.returnValue;\n        intArabic = retvalM.intArabic;\n        var retvalCM = this.generateNumber(intArabic, 900, 'CM');\n        retval += retvalCM.returnValue;\n        intArabic = retvalCM.intArabic;\n        var retvalD = this.generateNumber(intArabic, 500, 'D');\n        retval += retvalD.returnValue;\n        intArabic = retvalD.intArabic;\n        var retvalCD = this.generateNumber(intArabic, 400, 'CD');\n        retval += retvalCD.returnValue;\n        intArabic = retvalCD.intArabic;\n        var retvalC = this.generateNumber(intArabic, 100, 'C');\n        retval += retvalC.returnValue;\n        intArabic = retvalC.intArabic;\n        var retvalXC = this.generateNumber(intArabic, 90, 'XC');\n        retval += retvalXC.returnValue;\n        intArabic = retvalXC.intArabic;\n        var retvalL = this.generateNumber(intArabic, 50, 'L');\n        retval += retvalL.returnValue;\n        intArabic = retvalL.intArabic;\n        var retvalXL = this.generateNumber(intArabic, 40, 'XL');\n        retval += retvalXL.returnValue;\n        intArabic = retvalXL.intArabic;\n        var retvalX = this.generateNumber(intArabic, 10, 'X');\n        retval += retvalX.returnValue;\n        intArabic = retvalX.intArabic;\n        var retvalIX = this.generateNumber(intArabic, 9, 'IX');\n        retval += retvalIX.returnValue;\n        intArabic = retvalIX.intArabic;\n        var retvalV = this.generateNumber(intArabic, 5, 'V');\n        retval += retvalV.returnValue;\n        intArabic = retvalV.intArabic;\n        var retvalIV = this.generateNumber(intArabic, 4, 'IV');\n        retval += retvalIV.returnValue;\n        intArabic = retvalIV.intArabic;\n        var retvalI = this.generateNumber(intArabic, 1, 'I');\n        retval += retvalI.returnValue;\n        intArabic = retvalI.intArabic;\n        return retval.toString();\n    };\n    /**\n     * Converts `arabic to normal letters`.\n     * @private\n     */\n    PdfNumbersConvertor.arabicToLetter = function (arabic) {\n        var stack = this.convertToLetter(arabic);\n        var result = '';\n        while (stack.length > 0) {\n            var num = stack.pop();\n            result = this.appendChar(result, num);\n        }\n        return result.toString();\n    };\n    /**\n     * Generate a string value of an input number.\n     * @private\n     */\n    PdfNumbersConvertor.generateNumber = function (value, magnitude, letter) {\n        var numberstring = '';\n        while (value >= magnitude) {\n            value -= magnitude;\n            numberstring += letter;\n        }\n        return { returnValue: numberstring.toString(), intArabic: value };\n    };\n    /**\n     * Convert a input number into letters.\n     * @private\n     */\n    PdfNumbersConvertor.convertToLetter = function (arabic) {\n        if (arabic <= 0) {\n            throw Error('ArgumentOutOfRangeException-arabic, Value can not be less 0');\n        }\n        var stack = [];\n        while (arabic > this.letterLimit) {\n            var remainder = arabic % this.letterLimit;\n            if (remainder === 0.0) {\n                arabic = arabic / this.letterLimit - 1;\n                remainder = this.letterLimit;\n            }\n            else {\n                arabic /= this.letterLimit;\n            }\n            stack.push(remainder);\n        }\n        stack.push(arabic);\n        return stack;\n    };\n    /**\n     * Convert number to actual string value.\n     * @private\n     */\n    PdfNumbersConvertor.appendChar = function (builder, value) {\n        var letter = String.fromCharCode(PdfNumbersConvertor.acsiiStartIndex + value);\n        builder += letter;\n        return builder;\n    };\n    // Fields\n    /**\n     * numbers of letters in english [readonly].\n     * @default = 26.0\n     * @private\n     */\n    PdfNumbersConvertor.letterLimit = 26.0;\n    /**\n     * Resturns `acsii start index` value.\n     * @default 64\n     * @private\n     */\n    PdfNumbersConvertor.acsiiStartIndex = (65 - 1);\n    return PdfNumbersConvertor;\n}());\nexport { PdfNumbersConvertor };\n","/**\n * Represent class to store information about `template and value pairs`.\n * @private\n */\nvar PdfTemplateValuePair = /** @class */ (function () {\n    function PdfTemplateValuePair(template, value) {\n        // Fields\n        /**\n         * Internal variable to store template.\n         * @default null\n         * @private\n         */\n        this.pdfTemplate = null;\n        /**\n         * Intenal variable to store value.\n         * @private\n         */\n        this.content = '';\n        if (typeof template === 'undefined') {\n            //\n        }\n        else {\n            this.template = template;\n            this.value = value;\n        }\n    }\n    Object.defineProperty(PdfTemplateValuePair.prototype, \"template\", {\n        // Properties\n        /**\n         * Gets or sets the template.\n         * @private\n         */\n        get: function () {\n            return this.pdfTemplate;\n        },\n        set: function (value) {\n            this.pdfTemplate = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTemplateValuePair.prototype, \"value\", {\n        /**\n         * Gets or sets the value.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTemplateValuePair;\n}());\nexport { PdfTemplateValuePair };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfAutomaticField.ts class for EJ2-PDF\n */\nimport { PdfAutomaticField } from './automatic-field';\nimport { TemporaryDictionary } from './../../collections/object-object-pair/dictionary';\nimport { PdfTemplateValuePair } from './pdf-template-value-pair';\nimport { SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfTemplate } from './../../graphics/figures/pdf-template';\n/**\n * Represents automatic field which has the same value within the `PdfGraphics`.\n */\nvar PdfMultipleValueField = /** @class */ (function (_super) {\n    __extends(PdfMultipleValueField, _super);\n    function PdfMultipleValueField() {\n        var _this = _super.call(this) || this;\n        //  Fields\n        /**\n         * Stores the instance of dictionary values of `graphics and template value pair`.\n         * @private\n         */\n        _this.list = new TemporaryDictionary();\n        return _this;\n    }\n    // Implementation\n    /* tslint:disable */\n    PdfMultipleValueField.prototype.performDraw = function (graphics, location, scalingX, scalingY) {\n        _super.prototype.performDrawHelper.call(this, graphics, location, scalingX, scalingY);\n        var value = this.getValue(graphics);\n        var template = new PdfTemplate(this.getSize());\n        this.list.setValue(graphics, new PdfTemplateValuePair(template, value));\n        var g = template.graphics;\n        var size = this.getSize();\n        template.graphics.drawString(value, this.getFont(), this.pen, this.getBrush(), 0, 0, size.width, size.height, this.stringFormat);\n        var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n        graphics.drawPdfTemplate(template, drawLocation, new SizeF(template.width * scalingX, template.height * scalingY));\n    };\n    return PdfMultipleValueField;\n}(PdfAutomaticField));\nexport { PdfMultipleValueField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfBrush } from './../../graphics/brushes/pdf-brush';\nimport { PdfNumberStyle } from './../../pages/enum';\nimport { PdfNumbersConvertor } from './pdf-numbers-convertor';\nimport { PdfMultipleValueField } from './multiple-value-field';\n/**\n * Represents PDF document `page number field`.\n * @public\n */\nvar PdfPageNumberField = /** @class */ (function (_super) {\n    __extends(PdfPageNumberField, _super);\n    function PdfPageNumberField(font, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the number style of the page number field.\n         * @private\n         */\n        _this.internalNumberStyle = PdfNumberStyle.Numeric;\n        if (typeof arg2 === 'undefined') {\n            _this.font = font;\n        }\n        else if (arg2 instanceof PdfBrush) {\n            _this.font = font;\n            _this.brush = arg2;\n        }\n        else {\n            _this.font = font;\n            _this.bounds = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPageNumberField.prototype, \"numberStyle\", {\n        // Properties\n        /**\n         * Gets and sets the number style of the page number field.\n         * @private\n         */\n        get: function () {\n            return this.internalNumberStyle;\n        },\n        set: function (value) {\n            this.internalNumberStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Return the `string` value of page number field.\n     * @public\n     */\n    PdfPageNumberField.prototype.getValue = function (graphics) {\n        var result = null;\n        var page = this.getPageFromGraphics(graphics);\n        result = this.internalGetValue(page);\n        return result;\n    };\n    /**\n     * Internal method to `get actual value of page number`.\n     * @private\n     */\n    PdfPageNumberField.prototype.internalGetValue = function (page) {\n        var document = page.document;\n        var pageIndex = document.pages.indexOf(page) + 1;\n        return PdfNumbersConvertor.convert(pageIndex, this.numberStyle);\n    };\n    return PdfPageNumberField;\n}(PdfMultipleValueField));\nexport { PdfPageNumberField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfCompositeField.ts class for EJ2-PDF\n */\nimport { PdfMultipleValueField } from './multiple-value-field';\n/**\n * Represents class which can concatenate multiple automatic fields into single string.\n */\nvar PdfCompositeField = /** @class */ (function (_super) {\n    __extends(PdfCompositeField, _super);\n    // Constructor\n    /**\n     * Initialize a new instance of `PdfCompositeField` class.\n     * @param font Font of the field.\n     * @param brush Color of the field.\n     * @param text Content of the field.\n     * @param list List of the automatic fields in specific order based on the text content.\n     */\n    function PdfCompositeField(font, brush, text) {\n        var list = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            list[_i - 3] = arguments[_i];\n        }\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the array of automatic fields.\n         * @private\n         */\n        _this.internalAutomaticFields = null;\n        /**\n         * Stores the text value of the field.\n         * @private\n         */\n        _this.internalText = '';\n        _this.font = font;\n        _this.brush = brush;\n        _this.text = text;\n        _this.automaticFields = list;\n        return _this;\n    }\n    Object.defineProperty(PdfCompositeField.prototype, \"text\", {\n        // Properties\n        /**\n         * Gets and sets the content of the field.\n         * @public\n         */\n        get: function () {\n            return this.internalText;\n        },\n        set: function (value) {\n            this.internalText = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfCompositeField.prototype, \"automaticFields\", {\n        /**\n         * Gets and sets the list of the field to drawn.\n         * @public\n         */\n        get: function () {\n            return this.internalAutomaticFields;\n        },\n        set: function (value) {\n            this.internalAutomaticFields = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Return the actual value generated from the list of automatic fields.\n     * @public\n     */\n    PdfCompositeField.prototype.getValue = function (graphics) {\n        var values = [];\n        var text = this.text.toString();\n        if (typeof this.automaticFields !== 'undefined' && this.automaticFields != null && this.automaticFields.length > 0) {\n            for (var i = 0; i < this.automaticFields.length; i++) {\n                var automaticField = this.automaticFields[i];\n                text = text.replace('{' + i + '}', automaticField.getValue(graphics));\n            }\n        }\n        return text;\n    };\n    return PdfCompositeField;\n}(PdfMultipleValueField));\nexport { PdfCompositeField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSingleValueField.ts class for EJ2-PDF\n */\nimport { PdfAutomaticField } from './automatic-field';\nimport { TemporaryDictionary } from './../../collections/object-object-pair/dictionary';\nimport { PdfTemplateValuePair } from './pdf-template-value-pair';\nimport { PointF, SizeF } from './../../drawing/pdf-drawing';\nimport { PdfTemplate } from './../../graphics/figures/pdf-template';\n/**\n * Represents automatic field which has the same value in the whole document.\n */\nvar PdfSingleValueField = /** @class */ (function (_super) {\n    __extends(PdfSingleValueField, _super);\n    // Constructors\n    function PdfSingleValueField() {\n        var _this = _super.call(this) || this;\n        // Fields\n        /* tslint:disable */\n        _this.list = new TemporaryDictionary();\n        /* tslint:enable */\n        _this.painterGraphics = [];\n        return _this;\n    }\n    PdfSingleValueField.prototype.performDraw = function (graphics, location, scalingX, scalingY) {\n        _super.prototype.performDrawHelper.call(this, graphics, location, scalingX, scalingY);\n        var page = this.getPageFromGraphics(graphics);\n        var document = page.document;\n        var textValue = this.getValue(graphics);\n        /* tslint:disable */\n        if (this.list.containsKey(document)) {\n            var pair = this.list.getValue(document);\n            var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n            graphics.drawPdfTemplate(pair.template, drawLocation, new SizeF(pair.template.width * scalingX, pair.template.height * scalingY));\n            this.painterGraphics.push(graphics);\n        }\n        else {\n            var size = this.getSize();\n            var template = new PdfTemplate(size);\n            this.list.setValue(document, new PdfTemplateValuePair(template, textValue));\n            template.graphics.drawString(textValue, this.getFont(), this.pen, this.getBrush(), 0, 0, size.width, size.height, this.stringFormat);\n            var drawLocation = new PointF(location.x + this.location.x, location.y + this.location.y);\n            graphics.drawPdfTemplate(template, drawLocation, new SizeF(template.width * scalingX, template.height * scalingY));\n            this.painterGraphics.push(graphics);\n        }\n        /* tslint:enable */\n    };\n    return PdfSingleValueField;\n}(PdfAutomaticField));\nexport { PdfSingleValueField };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfPageCountField.ts class for EJ2-PDF\n */\nimport { PdfSingleValueField } from './single-value-field';\nimport { PdfNumberStyle } from './../../pages/enum';\nimport { PdfBrush } from './../../graphics/brushes/pdf-brush';\nimport { PdfNumbersConvertor } from './pdf-numbers-convertor';\n/**\n * Represents total PDF document page count automatic field.\n */\nvar PdfPageCountField = /** @class */ (function (_super) {\n    __extends(PdfPageCountField, _super);\n    function PdfPageCountField(font, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Stores the number style of the field.\n         * @private\n         */\n        _this.internalNumberStyle = PdfNumberStyle.Numeric;\n        if (typeof arg2 === 'undefined') {\n            _this.font = font;\n        }\n        else if (arg2 instanceof PdfBrush) {\n            _this.font = font;\n            _this.brush = arg2;\n        }\n        else {\n            _this.font = font;\n            _this.bounds = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPageCountField.prototype, \"numberStyle\", {\n        // Properties\n        /**\n         * Gets and sets the number style of the field.\n         * @public\n         */\n        get: function () {\n            return this.internalNumberStyle;\n        },\n        set: function (value) {\n            this.internalNumberStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Return the actual value of the content to drawn.\n     * @public\n     */\n    PdfPageCountField.prototype.getValue = function (graphics) {\n        var result = null;\n        var page = this.getPageFromGraphics(graphics);\n        var document = page.section.parent.document;\n        var count = document.pages.count;\n        result = PdfNumbersConvertor.convert(count, this.numberStyle);\n        return result;\n    };\n    return PdfPageCountField;\n}(PdfSingleValueField));\nexport { PdfPageCountField };\n","/**\n * public Enum for `PdfDestinationMode`.\n * @private\n */\nexport var PdfDestinationMode;\n(function (PdfDestinationMode) {\n    /**\n     * Specifies the type of `Location`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"Location\"] = 0] = \"Location\";\n    /**\n     * Specifies the type of `FitToPage`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"FitToPage\"] = 1] = \"FitToPage\";\n    /**\n     * Specifies the type of `FitR`.\n     * @private\n     */\n    PdfDestinationMode[PdfDestinationMode[\"FitR\"] = 2] = \"FitR\";\n})(PdfDestinationMode || (PdfDestinationMode = {}));\n","/**\n * Specifies the constant values specifying whether to extend the shading\n * beyond the starting and ending points of the axis.\n */\nexport var PdfExtend;\n(function (PdfExtend) {\n    /**\n     * Do not extend any point.\n     */\n    PdfExtend[PdfExtend[\"None\"] = 0] = \"None\";\n    /**\n     * Extend start point.\n     */\n    PdfExtend[PdfExtend[\"Start\"] = 1] = \"Start\";\n    /**\n     * Extend end point.\n     */\n    PdfExtend[PdfExtend[\"End\"] = 2] = \"End\";\n    /**\n     * Extend both start and end points.\n     */\n    PdfExtend[PdfExtend[\"Both\"] = 3] = \"Both\";\n})(PdfExtend || (PdfExtend = {}));\n/**\n * Specifies the gradient direction of the linear gradient brush.\n */\nexport var PdfLinearGradientMode;\n(function (PdfLinearGradientMode) {\n    /**\n     * Specifies a gradient from upper right to lower left.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"BackwardDiagonal\"] = 0] = \"BackwardDiagonal\";\n    /**\n     * Specifies a gradient from upper left to lower right.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"ForwardDiagonal\"] = 1] = \"ForwardDiagonal\";\n    /**\n     * Specifies a gradient from left to right.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"Horizontal\"] = 2] = \"Horizontal\";\n    /**\n     * Specifies a gradient from top to bottom.\n     */\n    PdfLinearGradientMode[PdfLinearGradientMode[\"Vertical\"] = 3] = \"Vertical\";\n})(PdfLinearGradientMode || (PdfLinearGradientMode = {}));\n/**\n * Shading type constants.\n */\nexport var ShadingType;\n(function (ShadingType) {\n    /**\n     * Function-based shading.\n     */\n    ShadingType[ShadingType[\"Function\"] = 1] = \"Function\";\n    /**\n     * Axial shading.\n     */\n    ShadingType[ShadingType[\"Axial\"] = 2] = \"Axial\";\n    /**\n     * Radial shading.\n     */\n    ShadingType[ShadingType[\"Radial\"] = 3] = \"Radial\";\n})(ShadingType || (ShadingType = {}));\nexport var KnownColor;\n(function (KnownColor) {\n    KnownColor[KnownColor[\"ActiveBorder\"] = 1] = \"ActiveBorder\";\n    KnownColor[KnownColor[\"ActiveCaption\"] = 2] = \"ActiveCaption\";\n    KnownColor[KnownColor[\"ActiveCaptionText\"] = 3] = \"ActiveCaptionText\";\n    KnownColor[KnownColor[\"AppWorkspace\"] = 4] = \"AppWorkspace\";\n    KnownColor[KnownColor[\"Control\"] = 5] = \"Control\";\n    KnownColor[KnownColor[\"ControlDark\"] = 6] = \"ControlDark\";\n    KnownColor[KnownColor[\"ControlDarkDark\"] = 7] = \"ControlDarkDark\";\n    KnownColor[KnownColor[\"ControlLight\"] = 8] = \"ControlLight\";\n    KnownColor[KnownColor[\"ControlLightLight\"] = 9] = \"ControlLightLight\";\n    KnownColor[KnownColor[\"ControlText\"] = 10] = \"ControlText\";\n    KnownColor[KnownColor[\"Desktop\"] = 11] = \"Desktop\";\n    KnownColor[KnownColor[\"GrayText\"] = 12] = \"GrayText\";\n    KnownColor[KnownColor[\"Highlight\"] = 13] = \"Highlight\";\n    KnownColor[KnownColor[\"HighlightText\"] = 14] = \"HighlightText\";\n    KnownColor[KnownColor[\"HotTrack\"] = 15] = \"HotTrack\";\n    KnownColor[KnownColor[\"InactiveBorder\"] = 16] = \"InactiveBorder\";\n    KnownColor[KnownColor[\"InactiveCaption\"] = 17] = \"InactiveCaption\";\n    KnownColor[KnownColor[\"InactiveCaptionText\"] = 18] = \"InactiveCaptionText\";\n    KnownColor[KnownColor[\"Info\"] = 19] = \"Info\";\n    KnownColor[KnownColor[\"InfoText\"] = 20] = \"InfoText\";\n    KnownColor[KnownColor[\"Menu\"] = 21] = \"Menu\";\n    KnownColor[KnownColor[\"MenuText\"] = 22] = \"MenuText\";\n    KnownColor[KnownColor[\"ScrollBar\"] = 23] = \"ScrollBar\";\n    KnownColor[KnownColor[\"Window\"] = 24] = \"Window\";\n    KnownColor[KnownColor[\"WindowFrame\"] = 25] = \"WindowFrame\";\n    KnownColor[KnownColor[\"WindowText\"] = 26] = \"WindowText\";\n    KnownColor[KnownColor[\"Transparent\"] = 27] = \"Transparent\";\n    KnownColor[KnownColor[\"AliceBlue\"] = 28] = \"AliceBlue\";\n    KnownColor[KnownColor[\"AntiqueWhite\"] = 29] = \"AntiqueWhite\";\n    KnownColor[KnownColor[\"Aqua\"] = 30] = \"Aqua\";\n    KnownColor[KnownColor[\"Aquamarine\"] = 31] = \"Aquamarine\";\n    KnownColor[KnownColor[\"Azure\"] = 32] = \"Azure\";\n    KnownColor[KnownColor[\"Beige\"] = 33] = \"Beige\";\n    KnownColor[KnownColor[\"Bisque\"] = 34] = \"Bisque\";\n    KnownColor[KnownColor[\"Black\"] = 35] = \"Black\";\n    KnownColor[KnownColor[\"BlanchedAlmond\"] = 36] = \"BlanchedAlmond\";\n    KnownColor[KnownColor[\"Blue\"] = 37] = \"Blue\";\n    KnownColor[KnownColor[\"BlueViolet\"] = 38] = \"BlueViolet\";\n    KnownColor[KnownColor[\"Brown\"] = 39] = \"Brown\";\n    KnownColor[KnownColor[\"BurlyWood\"] = 40] = \"BurlyWood\";\n    KnownColor[KnownColor[\"CadetBlue\"] = 41] = \"CadetBlue\";\n    KnownColor[KnownColor[\"Chartreuse\"] = 42] = \"Chartreuse\";\n    KnownColor[KnownColor[\"Chocolate\"] = 43] = \"Chocolate\";\n    KnownColor[KnownColor[\"Coral\"] = 44] = \"Coral\";\n    KnownColor[KnownColor[\"CornflowerBlue\"] = 45] = \"CornflowerBlue\";\n    KnownColor[KnownColor[\"Cornsilk\"] = 46] = \"Cornsilk\";\n    KnownColor[KnownColor[\"Crimson\"] = 47] = \"Crimson\";\n    KnownColor[KnownColor[\"Cyan\"] = 48] = \"Cyan\";\n    KnownColor[KnownColor[\"DarkBlue\"] = 49] = \"DarkBlue\";\n    KnownColor[KnownColor[\"DarkCyan\"] = 50] = \"DarkCyan\";\n    KnownColor[KnownColor[\"DarkGoldenrod\"] = 51] = \"DarkGoldenrod\";\n    KnownColor[KnownColor[\"DarkGray\"] = 52] = \"DarkGray\";\n    KnownColor[KnownColor[\"DarkGreen\"] = 53] = \"DarkGreen\";\n    KnownColor[KnownColor[\"DarkKhaki\"] = 54] = \"DarkKhaki\";\n    KnownColor[KnownColor[\"DarkMagenta\"] = 55] = \"DarkMagenta\";\n    KnownColor[KnownColor[\"DarkOliveGreen\"] = 56] = \"DarkOliveGreen\";\n    KnownColor[KnownColor[\"DarkOrange\"] = 57] = \"DarkOrange\";\n    KnownColor[KnownColor[\"DarkOrchid\"] = 58] = \"DarkOrchid\";\n    KnownColor[KnownColor[\"DarkRed\"] = 59] = \"DarkRed\";\n    KnownColor[KnownColor[\"DarkSalmon\"] = 60] = \"DarkSalmon\";\n    KnownColor[KnownColor[\"DarkSeaGreen\"] = 61] = \"DarkSeaGreen\";\n    KnownColor[KnownColor[\"DarkSlateBlue\"] = 62] = \"DarkSlateBlue\";\n    KnownColor[KnownColor[\"DarkSlateGray\"] = 63] = \"DarkSlateGray\";\n    KnownColor[KnownColor[\"DarkTurquoise\"] = 64] = \"DarkTurquoise\";\n    KnownColor[KnownColor[\"DarkViolet\"] = 65] = \"DarkViolet\";\n    KnownColor[KnownColor[\"DeepPink\"] = 66] = \"DeepPink\";\n    KnownColor[KnownColor[\"DeepSkyBlue\"] = 67] = \"DeepSkyBlue\";\n    KnownColor[KnownColor[\"DimGray\"] = 68] = \"DimGray\";\n    KnownColor[KnownColor[\"DodgerBlue\"] = 69] = \"DodgerBlue\";\n    KnownColor[KnownColor[\"Firebrick\"] = 70] = \"Firebrick\";\n    KnownColor[KnownColor[\"FloralWhite\"] = 71] = \"FloralWhite\";\n    KnownColor[KnownColor[\"ForestGreen\"] = 72] = \"ForestGreen\";\n    KnownColor[KnownColor[\"Fuchsia\"] = 73] = \"Fuchsia\";\n    KnownColor[KnownColor[\"Gainsboro\"] = 74] = \"Gainsboro\";\n    KnownColor[KnownColor[\"GhostWhite\"] = 75] = \"GhostWhite\";\n    KnownColor[KnownColor[\"Gold\"] = 76] = \"Gold\";\n    KnownColor[KnownColor[\"Goldenrod\"] = 77] = \"Goldenrod\";\n    KnownColor[KnownColor[\"Gray\"] = 78] = \"Gray\";\n    KnownColor[KnownColor[\"Green\"] = 79] = \"Green\";\n    KnownColor[KnownColor[\"GreenYellow\"] = 80] = \"GreenYellow\";\n    KnownColor[KnownColor[\"Honeydew\"] = 81] = \"Honeydew\";\n    KnownColor[KnownColor[\"HotPink\"] = 82] = \"HotPink\";\n    KnownColor[KnownColor[\"IndianRed\"] = 83] = \"IndianRed\";\n    KnownColor[KnownColor[\"Indigo\"] = 84] = \"Indigo\";\n    KnownColor[KnownColor[\"Ivory\"] = 85] = \"Ivory\";\n    KnownColor[KnownColor[\"Khaki\"] = 86] = \"Khaki\";\n    KnownColor[KnownColor[\"Lavender\"] = 87] = \"Lavender\";\n    KnownColor[KnownColor[\"LavenderBlush\"] = 88] = \"LavenderBlush\";\n    KnownColor[KnownColor[\"LawnGreen\"] = 89] = \"LawnGreen\";\n    KnownColor[KnownColor[\"LemonChiffon\"] = 90] = \"LemonChiffon\";\n    KnownColor[KnownColor[\"LightBlue\"] = 91] = \"LightBlue\";\n    KnownColor[KnownColor[\"LightCoral\"] = 92] = \"LightCoral\";\n    KnownColor[KnownColor[\"LightCyan\"] = 93] = \"LightCyan\";\n    KnownColor[KnownColor[\"LightGoldenrodYellow\"] = 94] = \"LightGoldenrodYellow\";\n    KnownColor[KnownColor[\"LightGray\"] = 95] = \"LightGray\";\n    KnownColor[KnownColor[\"LightGreen\"] = 96] = \"LightGreen\";\n    KnownColor[KnownColor[\"LightPink\"] = 97] = \"LightPink\";\n    KnownColor[KnownColor[\"LightSalmon\"] = 98] = \"LightSalmon\";\n    KnownColor[KnownColor[\"LightSeaGreen\"] = 99] = \"LightSeaGreen\";\n    KnownColor[KnownColor[\"LightSkyBlue\"] = 100] = \"LightSkyBlue\";\n    KnownColor[KnownColor[\"LightSlateGray\"] = 101] = \"LightSlateGray\";\n    KnownColor[KnownColor[\"LightSteelBlue\"] = 102] = \"LightSteelBlue\";\n    KnownColor[KnownColor[\"LightYellow\"] = 103] = \"LightYellow\";\n    KnownColor[KnownColor[\"Lime\"] = 104] = \"Lime\";\n    KnownColor[KnownColor[\"LimeGreen\"] = 105] = \"LimeGreen\";\n    KnownColor[KnownColor[\"Linen\"] = 106] = \"Linen\";\n    KnownColor[KnownColor[\"Magenta\"] = 107] = \"Magenta\";\n    KnownColor[KnownColor[\"Maroon\"] = 108] = \"Maroon\";\n    KnownColor[KnownColor[\"MediumAquamarine\"] = 109] = \"MediumAquamarine\";\n    KnownColor[KnownColor[\"MediumBlue\"] = 110] = \"MediumBlue\";\n    KnownColor[KnownColor[\"MediumOrchid\"] = 111] = \"MediumOrchid\";\n    KnownColor[KnownColor[\"MediumPurple\"] = 112] = \"MediumPurple\";\n    KnownColor[KnownColor[\"MediumSeaGreen\"] = 113] = \"MediumSeaGreen\";\n    KnownColor[KnownColor[\"MediumSlateBlue\"] = 114] = \"MediumSlateBlue\";\n    KnownColor[KnownColor[\"MediumSpringGreen\"] = 115] = \"MediumSpringGreen\";\n    KnownColor[KnownColor[\"MediumTurquoise\"] = 116] = \"MediumTurquoise\";\n    KnownColor[KnownColor[\"MediumVioletRed\"] = 117] = \"MediumVioletRed\";\n    KnownColor[KnownColor[\"MidnightBlue\"] = 118] = \"MidnightBlue\";\n    KnownColor[KnownColor[\"MintCream\"] = 119] = \"MintCream\";\n    KnownColor[KnownColor[\"MistyRose\"] = 120] = \"MistyRose\";\n    KnownColor[KnownColor[\"Moccasin\"] = 121] = \"Moccasin\";\n    KnownColor[KnownColor[\"NavajoWhite\"] = 122] = \"NavajoWhite\";\n    KnownColor[KnownColor[\"Navy\"] = 123] = \"Navy\";\n    KnownColor[KnownColor[\"OldLace\"] = 124] = \"OldLace\";\n    KnownColor[KnownColor[\"Olive\"] = 125] = \"Olive\";\n    KnownColor[KnownColor[\"OliveDrab\"] = 126] = \"OliveDrab\";\n    KnownColor[KnownColor[\"Orange\"] = 127] = \"Orange\";\n    KnownColor[KnownColor[\"OrangeRed\"] = 128] = \"OrangeRed\";\n    KnownColor[KnownColor[\"Orchid\"] = 129] = \"Orchid\";\n    KnownColor[KnownColor[\"PaleGoldenrod\"] = 130] = \"PaleGoldenrod\";\n    KnownColor[KnownColor[\"PaleGreen\"] = 131] = \"PaleGreen\";\n    KnownColor[KnownColor[\"PaleTurquoise\"] = 132] = \"PaleTurquoise\";\n    KnownColor[KnownColor[\"PaleVioletRed\"] = 133] = \"PaleVioletRed\";\n    KnownColor[KnownColor[\"PapayaWhip\"] = 134] = \"PapayaWhip\";\n    KnownColor[KnownColor[\"PeachPuff\"] = 135] = \"PeachPuff\";\n    KnownColor[KnownColor[\"Peru\"] = 136] = \"Peru\";\n    KnownColor[KnownColor[\"Pink\"] = 137] = \"Pink\";\n    KnownColor[KnownColor[\"Plum\"] = 138] = \"Plum\";\n    KnownColor[KnownColor[\"PowderBlue\"] = 139] = \"PowderBlue\";\n    KnownColor[KnownColor[\"Purple\"] = 140] = \"Purple\";\n    KnownColor[KnownColor[\"Red\"] = 141] = \"Red\";\n    KnownColor[KnownColor[\"RosyBrown\"] = 142] = \"RosyBrown\";\n    KnownColor[KnownColor[\"RoyalBlue\"] = 143] = \"RoyalBlue\";\n    KnownColor[KnownColor[\"SaddleBrown\"] = 144] = \"SaddleBrown\";\n    KnownColor[KnownColor[\"Salmon\"] = 145] = \"Salmon\";\n    KnownColor[KnownColor[\"SandyBrown\"] = 146] = \"SandyBrown\";\n    KnownColor[KnownColor[\"SeaGreen\"] = 147] = \"SeaGreen\";\n    KnownColor[KnownColor[\"SeaShell\"] = 148] = \"SeaShell\";\n    KnownColor[KnownColor[\"Sienna\"] = 149] = \"Sienna\";\n    KnownColor[KnownColor[\"Silver\"] = 150] = \"Silver\";\n    KnownColor[KnownColor[\"SkyBlue\"] = 151] = \"SkyBlue\";\n    KnownColor[KnownColor[\"SlateBlue\"] = 152] = \"SlateBlue\";\n    KnownColor[KnownColor[\"SlateGray\"] = 153] = \"SlateGray\";\n    KnownColor[KnownColor[\"Snow\"] = 154] = \"Snow\";\n    KnownColor[KnownColor[\"SpringGreen\"] = 155] = \"SpringGreen\";\n    KnownColor[KnownColor[\"SteelBlue\"] = 156] = \"SteelBlue\";\n    KnownColor[KnownColor[\"Tan\"] = 157] = \"Tan\";\n    KnownColor[KnownColor[\"Teal\"] = 158] = \"Teal\";\n    KnownColor[KnownColor[\"Thistle\"] = 159] = \"Thistle\";\n    KnownColor[KnownColor[\"Tomato\"] = 160] = \"Tomato\";\n    KnownColor[KnownColor[\"Turquoise\"] = 161] = \"Turquoise\";\n    KnownColor[KnownColor[\"Violet\"] = 162] = \"Violet\";\n    KnownColor[KnownColor[\"Wheat\"] = 163] = \"Wheat\";\n    KnownColor[KnownColor[\"White\"] = 164] = \"White\";\n    KnownColor[KnownColor[\"WhiteSmoke\"] = 165] = \"WhiteSmoke\";\n    KnownColor[KnownColor[\"Yellow\"] = 166] = \"Yellow\";\n    KnownColor[KnownColor[\"YellowGreen\"] = 167] = \"YellowGreen\";\n    KnownColor[KnownColor[\"ButtonFace\"] = 168] = \"ButtonFace\";\n    KnownColor[KnownColor[\"ButtonHighlight\"] = 169] = \"ButtonHighlight\";\n    KnownColor[KnownColor[\"ButtonShadow\"] = 170] = \"ButtonShadow\";\n    KnownColor[KnownColor[\"GradientActiveCaption\"] = 171] = \"GradientActiveCaption\";\n    KnownColor[KnownColor[\"GradientInactiveCaption\"] = 172] = \"GradientInactiveCaption\";\n    KnownColor[KnownColor[\"MenuBar\"] = 173] = \"MenuBar\";\n    KnownColor[KnownColor[\"MenuHighlight\"] = 174] = \"MenuHighlight\";\n})(KnownColor || (KnownColor = {}));\n","import { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfPageRotateAngle } from './../pages/enum';\nimport { PdfDestinationMode } from './../general/enum';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\n/**\n * `PdfDestination` class represents an anchor in the document\n * where bookmarks or annotations can direct when clicked.\n */\nvar PdfDestination = /** @class */ (function () {\n    function PdfDestination(arg1, arg2) {\n        // Fields\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * Type of the `destination`.\n         * @private\n         */\n        this.destinationMode = PdfDestinationMode.Location;\n        /**\n         * `Zoom` factor.\n         * @private\n         * @default 0\n         */\n        this.zoomFactor = 0;\n        /**\n         * `Location` of the destination.\n         * @default new PointF() with 0 ,0 as co-ordinates\n         * @private\n         */\n        this.destinationLocation = new PointF(0, 0);\n        /**\n         * `Bounds` of the destination as RectangleF.\n         * @default RectangleF.Empty\n         * @private\n         */\n        this.bounds = new RectangleF();\n        /**\n         * Pdf primitive representing `this` object.\n         * @private\n         */\n        this.array = new PdfArray();\n        var angle = PdfPageRotateAngle.RotateAngle0;\n        this.destinationLocation = new PointF(0, this.destinationLocation.y);\n        this.pdfPage = arg1;\n        if (arg2 instanceof PointF) {\n            this.destinationLocation = arg2;\n        }\n        else {\n            this.bounds = arg2;\n        }\n    }\n    Object.defineProperty(PdfDestination.prototype, \"zoom\", {\n        // Properties\n        /**\n         * Gets and Sets the `zoom` factor.\n         * @private\n         */\n        get: function () {\n            return this.zoomFactor;\n        },\n        set: function (value) {\n            this.zoomFactor = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"page\", {\n        /**\n         * Gets and Sets the `page` object.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        set: function (value) {\n            this.pdfPage = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"mode\", {\n        /**\n         * Gets and Sets the destination `mode`.\n         * @private\n         */\n        get: function () {\n            return this.destinationMode;\n        },\n        set: function (value) {\n            this.destinationMode = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDestination.prototype, \"location\", {\n        /**\n         * Gets and Sets the `location`.\n         * @private\n         */\n        get: function () {\n            return this.destinationLocation;\n        },\n        set: function (value) {\n            this.destinationLocation = value;\n            this.initializePrimitive();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Translates` co-ordinates to PDF co-ordinate system (lower/left).\n     * @private\n     */\n    PdfDestination.prototype.pointToNativePdf = function (page, point) {\n        var section = page.section;\n        return section.pointToNativePdf(page, point);\n    };\n    /**\n     * `In fills` array by correct values.\n     * @private\n     */\n    PdfDestination.prototype.initializePrimitive = function () {\n        this.array.clear();\n        this.array.add(new PdfReferenceHolder(this.pdfPage));\n        switch (this.destinationMode) {\n            case PdfDestinationMode.Location:\n                var simplePage = this.pdfPage;\n                var point = new PointF();\n                point = this.pointToNativePdf(simplePage, this.destinationLocation);\n                this.array.add(new PdfName(this.dictionaryProperties.xyz));\n                this.array.add(new PdfNumber(point.x));\n                this.array.add(new PdfNumber(point.y));\n                this.array.add(new PdfNumber(this.zoomFactor));\n                break;\n            case PdfDestinationMode.FitToPage:\n                this.array.add(new PdfName(this.dictionaryProperties.fit));\n                break;\n        }\n    };\n    Object.defineProperty(PdfDestination.prototype, \"element\", {\n        /**\n         * Gets the `element` representing this object.\n         * @private\n         */\n        get: function () {\n            this.initializePrimitive();\n            return this.array;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfDestination;\n}());\nexport { PdfDestination };\n","import { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nvar PdfFunction = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfFunction` class.\n     * @public\n     */\n    function PdfFunction(dictionary) {\n        //Field\n        /**\n         * Internal variable to store dictionary.\n         * @private\n         */\n        this.mDictionary = null;\n        /**\n         * Local variable to store the dictionary properties.\n         * @private\n         */\n        this.mDictionaryProperties = new DictionaryProperties();\n        this.mDictionary = dictionary;\n    }\n    Object.defineProperty(PdfFunction.prototype, \"domain\", {\n        //Properties\n        /**\n         * Gets or sets the domain of the function.\n         * @public\n         */\n        get: function () {\n            var domain = this.mDictionary.items.getValue(this.mDictionaryProperties.domain);\n            return domain;\n        },\n        set: function (value) {\n            this.mDictionary.items.setValue(this.mDictionaryProperties.domain, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFunction.prototype, \"range\", {\n        /**\n         * Gets or sets the range.\n         * @public\n         */\n        get: function () {\n            var range = (this.mDictionary.items.getValue(this.mDictionaryProperties.range));\n            return range;\n        },\n        set: function (value) {\n            this.mDictionary.items.setValue(this.mDictionaryProperties.range, value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFunction.prototype, \"dictionary\", {\n        /**\n         * Gets the dictionary.\n         */\n        get: function () {\n            return this.mDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfFunction.prototype, \"element\", {\n        //IPdfWrapper Members\n        /**\n         * Gets the element.\n         */\n        get: function () {\n            return this.mDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFunction;\n}());\nexport { PdfFunction };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfSampledFunction.ts class for EJ2-PDF\n * Implements PDF Sampled Function.\n */\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfFunction } from './pdf-function';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfNumber } from './../../primitives/pdf-number';\nvar PdfSampledFunction = /** @class */ (function (_super) {\n    __extends(PdfSampledFunction, _super);\n    /**\n     * Initializes a new instance of the `PdfSampledFunction` class.\n     * @public\n     */\n    function PdfSampledFunction(domain, range, sizes, samples) {\n        var _this = _super.call(this, new PdfStream()) || this;\n        if (typeof domain === 'undefined') {\n            _this.dictionary.items.setValue(_this.mDictionaryProperties.functionType, new PdfNumber(0));\n        }\n        else {\n            _this.dictionary.items.setValue(_this.mDictionaryProperties.functionType, new PdfNumber(0));\n            _this.checkParams(domain, range, sizes, samples);\n            _this.setDomainAndRange(domain, range);\n            _this.setSizeAndValues(sizes, samples);\n        }\n        return _this;\n    }\n    // Helper methods\n    /**\n     * Checks the input parameters.\n     */\n    PdfSampledFunction.prototype.checkParams = function (domain, range, sizes, samples) {\n        var rLength = range.length;\n        var dLength = domain.length;\n        var sLength = samples.length;\n        var frameLength = (rLength * (dLength / 4));\n    };\n    /**\n     * Sets the domain and range.\n     */\n    PdfSampledFunction.prototype.setDomainAndRange = function (domain, range) {\n        this.domain = new PdfArray(domain);\n        this.range = new PdfArray(range);\n    };\n    /**\n     * Sets the size and values.\n     */\n    PdfSampledFunction.prototype.setSizeAndValues = function (sizes, samples) {\n        var s = (this.dictionary);\n        s.isResource = true;\n        this.dictionary.items.setValue(this.mDictionaryProperties.size, new PdfArray(sizes));\n        this.dictionary.items.setValue(this.mDictionaryProperties.bitsPerSample, new PdfNumber(8));\n        s.writeBytes(samples);\n    };\n    return PdfSampledFunction;\n}(PdfFunction));\nexport { PdfSampledFunction };\n","/**\n * PdfBrushes.ts class for EJ2-PDF\n */\nimport { PdfColor } from './../pdf-color';\nimport { Dictionary } from './../../collections/dictionary';\nimport { KnownColor } from './enum';\nimport { PdfSolidBrush } from './pdf-solid-brush';\n/**\n * `PdfBrushes` class provides objects used to fill the interiors of graphical shapes such as rectangles,\n * ellipses, pies, polygons, and paths.\n * @private\n */\nvar PdfBrushes = /** @class */ (function () {\n    function PdfBrushes() {\n    }\n    Object.defineProperty(PdfBrushes, \"AliceBlue\", {\n        //Static Properties\n        /**\n         * Gets the AliceBlue brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.AliceBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.AliceBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.AliceBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"AntiqueWhite\", {\n        /**\n         * Gets the antique white brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.AntiqueWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.AntiqueWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.AntiqueWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Aqua\", {\n        /**\n         * Gets the Aqua default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Aqua)) {\n                brush = (this.sBrushes.getValue(KnownColor.Aqua));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Aqua);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Aquamarine\", {\n        /**\n         * Gets the Aquamarine default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Aquamarine)) {\n                brush = (this.sBrushes.getValue(KnownColor.Aquamarine));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Aquamarine);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Azure\", {\n        /**\n         * Gets the Azure default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Azure)) {\n                brush = (this.sBrushes.getValue(KnownColor.Azure));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Azure);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Beige\", {\n        /**\n         * Gets the Beige default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Beige)) {\n                brush = (this.sBrushes.getValue(KnownColor.Beige));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Beige);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Bisque\", {\n        /**\n         * Gets the Bisque default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Bisque)) {\n                brush = (this.sBrushes.getValue(KnownColor.Bisque));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Bisque);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Black\", {\n        /**\n         * Gets the Black default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Black)) {\n                brush = (this.sBrushes.getValue(KnownColor.Black));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Black);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"BlanchedAlmond\", {\n        /**\n         * Gets the BlanchedAlmond default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.BlanchedAlmond)) {\n                brush = (this.sBrushes.getValue(KnownColor.BlanchedAlmond));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.BlanchedAlmond);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Blue\", {\n        /**\n         * Gets the Blue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Blue)) {\n                brush = (this.sBrushes.getValue(KnownColor.Blue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Blue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"BlueViolet\", {\n        /**\n         * Gets the BlueViolet default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.BlueViolet)) {\n                brush = (this.sBrushes.getValue(KnownColor.BlueViolet));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.BlueViolet);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Brown\", {\n        /**\n         * Gets the Brown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Brown)) {\n                brush = (this.sBrushes.getValue(KnownColor.Brown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Brown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"BurlyWood\", {\n        /**\n         * Gets the BurlyWood default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.BurlyWood)) {\n                brush = (this.sBrushes.getValue(KnownColor.BurlyWood));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.BurlyWood);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"CadetBlue\", {\n        /**\n         * Gets the CadetBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.CadetBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.CadetBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.CadetBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Chartreuse\", {\n        /**\n         * Gets the Chartreuse default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Chartreuse)) {\n                brush = (this.sBrushes.getValue(KnownColor.Chartreuse));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Chartreuse);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Chocolate\", {\n        /**\n         * Gets the Chocolate default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Chocolate)) {\n                brush = (this.sBrushes.getValue(KnownColor.Chocolate));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Chocolate);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Coral\", {\n        /**\n         * Gets the Coral default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Coral)) {\n                brush = (this.sBrushes.getValue(KnownColor.Coral));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Coral);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"CornflowerBlue\", {\n        /**\n         * Gets the CornflowerBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.CornflowerBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.CornflowerBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.CornflowerBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Cornsilk\", {\n        /**\n         * Gets the Corn silk default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Cornsilk)) {\n                brush = (this.sBrushes.getValue(KnownColor.Cornsilk));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Cornsilk);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Crimson\", {\n        /**\n         *  Gets the Crimson default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Crimson)) {\n                brush = (this.sBrushes.getValue(KnownColor.Crimson));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Crimson);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Cyan\", {\n        /**\n         * Gets the Cyan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Cyan)) {\n                brush = (this.sBrushes.getValue(KnownColor.Cyan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Cyan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkBlue\", {\n        /**\n         * Gets the DarkBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkCyan\", {\n        /**\n         * Gets the DarkCyan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkCyan)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkCyan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkCyan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkGoldenrod\", {\n        /**\n         * Gets the DarkGoldenrod default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkGoldenrod)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkGoldenrod));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkGoldenrod);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkGray\", {\n        /**\n         * Gets the DarkGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkGreen\", {\n        /**\n         * Gets the DarkGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkKhaki\", {\n        /**\n         * Gets the DarkKhaki default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkKhaki)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkKhaki));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkKhaki);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkMagenta\", {\n        /**\n         * Gets the DarkMagenta default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkMagenta)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkMagenta));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkMagenta);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkOliveGreen\", {\n        /**\n         * Gets the DarkOliveGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkOliveGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkOliveGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkOliveGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkOrange\", {\n        /**\n         * Gets the DarkOrange default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkOrange)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkOrange));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkOrange);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkOrchid\", {\n        /**\n         * Gets the DarkOrchid default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkOrchid)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkOrchid));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkOrchid);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkRed\", {\n        /**\n         * Gets the DarkRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSalmon\", {\n        /**\n         * Gets the DarkSalmon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSalmon)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSalmon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSalmon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSeaGreen\", {\n        /**\n         * Gets the DarkSeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSlateBlue\", {\n        /**\n         * Gets the DarkSlateBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSlateBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSlateBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSlateBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkSlateGray\", {\n        /**\n         * Gets the DarkSlateGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkSlateGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkSlateGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkSlateGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkTurquoise\", {\n        /**\n         * Gets the DarkTurquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkTurquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkTurquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkTurquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DarkViolet\", {\n        /**\n         * Gets the DarkViolet default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DarkViolet)) {\n                brush = (this.sBrushes.getValue(KnownColor.DarkViolet));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DarkViolet);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DeepPink\", {\n        /**\n         * Gets the DeepPink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DeepPink)) {\n                brush = (this.sBrushes.getValue(KnownColor.DeepPink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DeepPink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DeepSkyBlue\", {\n        /**\n         * Gets the DeepSkyBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DeepSkyBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DeepSkyBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DeepSkyBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DimGray\", {\n        /**\n         * Gets the DimGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DimGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.DimGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DimGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"DodgerBlue\", {\n        /**\n         * Gets the DodgerBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.DodgerBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.DodgerBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.DodgerBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Firebrick\", {\n        /**\n         * Gets the Firebrick default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Firebrick)) {\n                brush = (this.sBrushes.getValue(KnownColor.Firebrick));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Firebrick);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"FloralWhite\", {\n        /**\n         * Gets the FloralWhite default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.FloralWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.FloralWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.FloralWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"ForestGreen\", {\n        /**\n         * Gets the ForestGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.ForestGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.ForestGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.ForestGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Fuchsia\", {\n        /**\n         * Gets the Fuchsia default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Fuchsia)) {\n                brush = (this.sBrushes.getValue(KnownColor.Fuchsia));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Fuchsia);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Gainsboro\", {\n        /**\n         * Gets the Gainsborough default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Gainsboro)) {\n                brush = (this.sBrushes.getValue(KnownColor.Gainsboro));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Gainsboro);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"GhostWhite\", {\n        /**\n         * Gets the GhostWhite default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.GhostWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.GhostWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.GhostWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Gold\", {\n        /**\n         * Gets the Gold default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Gold)) {\n                brush = (this.sBrushes.getValue(KnownColor.Gold));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Gold);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Goldenrod\", {\n        /**\n         * Gets the Goldenrod default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Goldenrod)) {\n                brush = (this.sBrushes.getValue(KnownColor.Goldenrod));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Goldenrod);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Gray\", {\n        /**\n         * Gets the Gray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Gray)) {\n                brush = (this.sBrushes.getValue(KnownColor.Gray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Gray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Green\", {\n        /**\n         * Gets the Green default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Green)) {\n                brush = (this.sBrushes.getValue(KnownColor.Green));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Green);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"GreenYellow\", {\n        /**\n         * Gets the GreenYellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.GreenYellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.GreenYellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.GreenYellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Honeydew\", {\n        /**\n         * Gets the Honeydew default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Honeydew)) {\n                brush = (this.sBrushes.getValue(KnownColor.Honeydew));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Honeydew);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"HotPink\", {\n        /**\n         * Gets the HotPink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.HotPink)) {\n                brush = (this.sBrushes.getValue(KnownColor.HotPink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.HotPink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"IndianRed\", {\n        /**\n         * Gets the IndianRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.IndianRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.IndianRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.IndianRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Indigo\", {\n        /**\n         * Gets the Indigo default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Indigo)) {\n                brush = (this.sBrushes.getValue(KnownColor.Indigo));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Indigo);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Ivory\", {\n        /**\n         * Gets the Ivory default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Ivory)) {\n                brush = (this.sBrushes.getValue(KnownColor.Ivory));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Ivory);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Khaki\", {\n        /**\n         * Gets the Khaki default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Khaki)) {\n                brush = (this.sBrushes.getValue(KnownColor.Khaki));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Khaki);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Lavender\", {\n        /**\n         * Gets the Lavender default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Lavender)) {\n                brush = (this.sBrushes.getValue(KnownColor.Lavender));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Lavender);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LavenderBlush\", {\n        /**\n         * Gets the LavenderBlush default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LavenderBlush)) {\n                brush = (this.sBrushes.getValue(KnownColor.LavenderBlush));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LavenderBlush);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LawnGreen\", {\n        /**\n         * Gets the LawnGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LawnGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LawnGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LawnGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LemonChiffon\", {\n        /**\n         * Gets the LemonChiffon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LemonChiffon)) {\n                brush = (this.sBrushes.getValue(KnownColor.LemonChiffon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LemonChiffon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightBlue\", {\n        /**\n         * Gets the LightBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightCoral\", {\n        /**\n         * Gets the LightCoral default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightCoral)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightCoral));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightCoral);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightCyan\", {\n        /**\n         * Gets the LightCyan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightCyan)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightCyan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightCyan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightGoldenrodYellow\", {\n        /**\n         * Gets the LightGoldenrodYellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightGoldenrodYellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightGoldenrodYellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightGoldenrodYellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightGray\", {\n        /**\n         * Gets the LightGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightGreen\", {\n        /**\n         * Gets the LightGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightPink\", {\n        /**\n         * Gets the LightPink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightPink)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightPink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightPink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSalmon\", {\n        /**\n         * Gets the LightSalmon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSalmon)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSalmon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSalmon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSeaGreen\", {\n        /**\n         * Gets the LightSeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSkyBlue\", {\n        /**\n         * Gets the LightSkyBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSkyBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSkyBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSkyBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSlateGray\", {\n        /**\n         * Gets the LightSlateGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSlateGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSlateGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSlateGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightSteelBlue\", {\n        /**\n         * Gets the LightSteelBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightSteelBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightSteelBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightSteelBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LightYellow\", {\n        /**\n         * Gets the LightYellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LightYellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.LightYellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LightYellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Lime\", {\n        /**\n         * Gets the Lime default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Lime)) {\n                brush = (this.sBrushes.getValue(KnownColor.Lime));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Lime);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"LimeGreen\", {\n        /**\n         * Gets the LimeGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.LimeGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.LimeGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.LimeGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Linen\", {\n        /**\n         * Gets the Linen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Linen)) {\n                brush = (this.sBrushes.getValue(KnownColor.Linen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Linen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Magenta\", {\n        /**\n         * Gets the Magenta default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Magenta)) {\n                brush = (this.sBrushes.getValue(KnownColor.Magenta));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Magenta);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Maroon\", {\n        /**\n         * Gets the Maroon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Maroon)) {\n                brush = (this.sBrushes.getValue(KnownColor.Maroon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Maroon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumAquamarine\", {\n        /**\n         * Gets the MediumAquamarine default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumAquamarine)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumAquamarine));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumAquamarine);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumBlue\", {\n        /**\n         * Gets the MediumBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumOrchid\", {\n        /**\n         * Gets the MediumOrchid default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumOrchid)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumOrchid));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumOrchid);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumPurple\", {\n        /**\n         * Gets the MediumPurple default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumPurple)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumPurple));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumPurple);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumSeaGreen\", {\n        /**\n         * Gets the MediumSeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumSeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumSeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumSeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumSlateBlue\", {\n        /**\n         * Gets the MediumSlateBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumSlateBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumSlateBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumSlateBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumSpringGreen\", {\n        /**\n         * Gets the MediumSpringGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumSpringGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumSpringGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumSpringGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumTurquoise\", {\n        /**\n         * Gets the MediumTurquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumTurquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumTurquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumTurquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MediumVioletRed\", {\n        /**\n         * Gets the MediumVioletRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MediumVioletRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.MediumVioletRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MediumVioletRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MidnightBlue\", {\n        /**\n         * Gets the MidnightBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MidnightBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.MidnightBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MidnightBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MintCream\", {\n        /**\n         * Gets the MintCream default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MintCream)) {\n                brush = (this.sBrushes.getValue(KnownColor.MintCream));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MintCream);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"MistyRose\", {\n        /**\n         * Gets the MistyRose default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.MistyRose)) {\n                brush = (this.sBrushes.getValue(KnownColor.MistyRose));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.MistyRose);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Moccasin\", {\n        /**\n         * Gets the Moccasin default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Moccasin)) {\n                brush = (this.sBrushes.getValue(KnownColor.Moccasin));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Moccasin);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"NavajoWhite\", {\n        /**\n         * Gets the NavajoWhite default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.NavajoWhite)) {\n                brush = (this.sBrushes.getValue(KnownColor.NavajoWhite));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.NavajoWhite);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Navy\", {\n        /**\n         * Gets the Navy default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Navy)) {\n                brush = (this.sBrushes.getValue(KnownColor.Navy));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Navy);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"OldLace\", {\n        /**\n         * Gets the OldLace default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.OldLace)) {\n                brush = (this.sBrushes.getValue(KnownColor.OldLace));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.OldLace);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Olive\", {\n        /**\n         * Gets the Olive default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Olive)) {\n                brush = (this.sBrushes.getValue(KnownColor.Olive));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Olive);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"OliveDrab\", {\n        /**\n         * Gets the OliveDrab default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.OliveDrab)) {\n                brush = (this.sBrushes.getValue(KnownColor.OliveDrab));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.OliveDrab);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Orange\", {\n        /**\n         * Gets the Orange default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Orange)) {\n                brush = (this.sBrushes.getValue(KnownColor.Orange));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Orange);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"OrangeRed\", {\n        /**\n         * Gets the OrangeRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.OrangeRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.OrangeRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.OrangeRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Orchid\", {\n        /**\n         * Gets the Orchid default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Orchid)) {\n                brush = (this.sBrushes.getValue(KnownColor.Orchid));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Orchid);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleGoldenrod\", {\n        /**\n         * Gets the PaleGoldenrod default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleGoldenrod)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleGoldenrod));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleGoldenrod);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleGreen\", {\n        /**\n         * Gets the PaleGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleTurquoise\", {\n        /**\n         * Gets the PaleTurquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleTurquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleTurquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleTurquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PaleVioletRed\", {\n        /**\n         * Gets the PaleVioletRed default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PaleVioletRed)) {\n                brush = (this.sBrushes.getValue(KnownColor.PaleVioletRed));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PaleVioletRed);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PapayaWhip\", {\n        /**\n         * Gets the PapayaWhip default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PapayaWhip)) {\n                brush = (this.sBrushes.getValue(KnownColor.PapayaWhip));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PapayaWhip);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PeachPuff\", {\n        /**\n         * Gets the PeachPuff default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PeachPuff)) {\n                brush = (this.sBrushes.getValue(KnownColor.PeachPuff));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PeachPuff);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Peru\", {\n        /**\n         * Gets the Peru default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Peru)) {\n                brush = (this.sBrushes.getValue(KnownColor.Peru));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Peru);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Pink\", {\n        /**\n         * Gets the Pink default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Pink)) {\n                brush = (this.sBrushes.getValue(KnownColor.Pink));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Pink);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Plum\", {\n        /**\n         * Gets the Plum default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Plum)) {\n                brush = (this.sBrushes.getValue(KnownColor.Plum));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Plum);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"PowderBlue\", {\n        /**\n         * Gets the PowderBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.PowderBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.PowderBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.PowderBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Purple\", {\n        /**\n         * Gets the Purple default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Purple)) {\n                brush = (this.sBrushes.getValue(KnownColor.Purple));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Purple);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Red\", {\n        /**\n         * Gets the Red default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Red)) {\n                brush = (this.sBrushes.getValue(KnownColor.Red));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Red);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"RosyBrown\", {\n        /**\n         * Gets the RosyBrown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.RosyBrown)) {\n                brush = (this.sBrushes.getValue(KnownColor.RosyBrown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.RosyBrown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"RoyalBlue\", {\n        /**\n         * Gets the RoyalBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.RoyalBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.RoyalBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.RoyalBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SaddleBrown\", {\n        /**\n         * Gets the SaddleBrown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SaddleBrown)) {\n                brush = (this.sBrushes.getValue(KnownColor.SaddleBrown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SaddleBrown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Salmon\", {\n        /**\n         * Gets the Salmon default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Salmon)) {\n                brush = (this.sBrushes.getValue(KnownColor.Salmon));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Salmon);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SandyBrown\", {\n        /**\n         * Gets the SandyBrown default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SandyBrown)) {\n                brush = (this.sBrushes.getValue(KnownColor.SandyBrown));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SandyBrown);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SeaGreen\", {\n        /**\n         * Gets the SeaGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SeaGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.SeaGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SeaGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SeaShell\", {\n        /**\n         * Gets the SeaShell default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SeaShell)) {\n                brush = (this.sBrushes.getValue(KnownColor.SeaShell));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SeaShell);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Sienna\", {\n        /**\n         * Gets the Sienna default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Sienna)) {\n                brush = (this.sBrushes.getValue(KnownColor.Sienna));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Sienna);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Silver\", {\n        /**\n         * Gets the Silver default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Silver)) {\n                brush = (this.sBrushes.getValue(KnownColor.Silver));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Silver);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SkyBlue\", {\n        /**\n         * Gets the SkyBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SkyBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.SkyBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SkyBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SlateBlue\", {\n        /**\n         * Gets the SlateBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SlateBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.SlateBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SlateBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SlateGray\", {\n        /**\n         * Gets the SlateGray default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SlateGray)) {\n                brush = (this.sBrushes.getValue(KnownColor.SlateGray));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SlateGray);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Snow\", {\n        /**\n         * Gets the Snow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Snow)) {\n                brush = (this.sBrushes.getValue(KnownColor.Snow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Snow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SpringGreen\", {\n        /**\n         * Gets the SpringGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SpringGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.SpringGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SpringGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"SteelBlue\", {\n        /**\n         * Gets the SteelBlue default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.SteelBlue)) {\n                brush = (this.sBrushes.getValue(KnownColor.SteelBlue));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.SteelBlue);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Tan\", {\n        /**\n         * Gets the Tan default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Tan)) {\n                brush = (this.sBrushes.getValue(KnownColor.Tan));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Tan);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Teal\", {\n        /**\n         * Gets the Teal default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Teal)) {\n                brush = (this.sBrushes.getValue(KnownColor.Teal));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Teal);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Thistle\", {\n        /**\n         * Gets the Thistle default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Thistle)) {\n                brush = (this.sBrushes.getValue(KnownColor.Thistle));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Thistle);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Tomato\", {\n        /**\n         * Gets the Tomato default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Tomato)) {\n                brush = (this.sBrushes.getValue(KnownColor.Tomato));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Tomato);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Transparent\", {\n        /**\n         * Gets the Transparent default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Transparent)) {\n                brush = (this.sBrushes.getValue(KnownColor.Transparent));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Transparent);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Turquoise\", {\n        /**\n         * Gets the Turquoise default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Turquoise)) {\n                brush = (this.sBrushes.getValue(KnownColor.Turquoise));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Turquoise);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Violet\", {\n        /**\n         * Gets the Violet default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Violet)) {\n                brush = (this.sBrushes.getValue(KnownColor.Violet));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Violet);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Wheat\", {\n        /**\n         * Gets the Wheat default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Wheat)) {\n                brush = (this.sBrushes.getValue(KnownColor.Wheat));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Wheat);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"White\", {\n        /**\n         * Gets the White default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.White)) {\n                brush = (this.sBrushes.getValue(KnownColor.White));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.White);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"WhiteSmoke\", {\n        /**\n         * Gets the WhiteSmoke default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.WhiteSmoke)) {\n                brush = (this.sBrushes.getValue(KnownColor.WhiteSmoke));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.WhiteSmoke);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"Yellow\", {\n        /**\n         * Gets the Yellow default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.Yellow)) {\n                brush = (this.sBrushes.getValue(KnownColor.Yellow));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.Yellow);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBrushes, \"YellowGreen\", {\n        /**\n         * Gets the YellowGreen default brush.\n         * @public\n         */\n        get: function () {\n            var brush = null;\n            if (this.sBrushes.containsKey(KnownColor.YellowGreen)) {\n                brush = (this.sBrushes.getValue(KnownColor.YellowGreen));\n            }\n            if ((brush == null)) {\n                brush = this.getBrush(KnownColor.YellowGreen);\n            }\n            return brush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get the brush.\n     */\n    PdfBrushes.getBrush = function (colorName) {\n        var pdfColor = this.getColorValue(colorName);\n        var brush = new PdfSolidBrush(pdfColor);\n        this.sBrushes.setValue(colorName, brush);\n        return brush;\n    };\n    /**\n     * Get the color value.\n     * @param colorName The KnownColor name.\n     */\n    /* tslint:disable */\n    PdfBrushes.getColorValue = function (colorName) {\n        var color = new PdfColor();\n        switch (colorName) {\n            case KnownColor.Transparent:\n                color = new PdfColor(0, 255, 255, 255);\n                break;\n            case KnownColor.AliceBlue:\n                color = new PdfColor(255, 240, 248, 255);\n                break;\n            case KnownColor.AntiqueWhite:\n                color = new PdfColor(255, 250, 235, 215);\n                break;\n            case KnownColor.Aqua:\n                color = new PdfColor(255, 0, 255, 255);\n                break;\n            case KnownColor.Aquamarine:\n                color = new PdfColor(255, 127, 255, 212);\n                break;\n            case KnownColor.Azure:\n                color = new PdfColor(255, 240, 255, 255);\n                break;\n            case KnownColor.Beige:\n                color = new PdfColor(255, 245, 245, 220);\n                break;\n            case KnownColor.Bisque:\n                color = new PdfColor(255, 255, 228, 196);\n                break;\n            case KnownColor.Black:\n                color = new PdfColor(255, 0, 0, 0);\n                break;\n            case KnownColor.BlanchedAlmond:\n                color = new PdfColor(255, 255, 235, 205);\n                break;\n            case KnownColor.Blue:\n                color = new PdfColor(255, 0, 0, 255);\n                break;\n            case KnownColor.BlueViolet:\n                color = new PdfColor(255, 138, 43, 226);\n                break;\n            case KnownColor.Brown:\n                color = new PdfColor(255, 165, 42, 42);\n                break;\n            case KnownColor.BurlyWood:\n                color = new PdfColor(255, 222, 184, 135);\n                break;\n            case KnownColor.CadetBlue:\n                color = new PdfColor(255, 95, 158, 160);\n                break;\n            case KnownColor.Chartreuse:\n                color = new PdfColor(255, 127, 255, 0);\n                break;\n            case KnownColor.Chocolate:\n                color = new PdfColor(255, 210, 105, 30);\n                break;\n            case KnownColor.Coral:\n                color = new PdfColor(255, 255, 127, 80);\n                break;\n            case KnownColor.CornflowerBlue:\n                color = new PdfColor(255, 100, 149, 237);\n                break;\n            case KnownColor.Cornsilk:\n                color = new PdfColor(255, 255, 248, 220);\n                break;\n            case KnownColor.Crimson:\n                color = new PdfColor(255, 220, 20, 60);\n                break;\n            case KnownColor.Cyan:\n                color = new PdfColor(255, 0, 255, 255);\n                break;\n            case KnownColor.DarkBlue:\n                color = new PdfColor(255, 0, 0, 139);\n                break;\n            case KnownColor.DarkCyan:\n                color = new PdfColor(255, 0, 139, 139);\n                break;\n            case KnownColor.DarkGoldenrod:\n                color = new PdfColor(255, 184, 134, 11);\n                break;\n            case KnownColor.DarkGray:\n                color = new PdfColor(255, 169, 169, 169);\n                break;\n            case KnownColor.DarkGreen:\n                color = new PdfColor(255, 0, 100, 0);\n                break;\n            case KnownColor.DarkKhaki:\n                color = new PdfColor(255, 189, 183, 107);\n                break;\n            case KnownColor.DarkMagenta:\n                color = new PdfColor(255, 139, 0, 139);\n                break;\n            case KnownColor.DarkOliveGreen:\n                color = new PdfColor(255, 85, 107, 47);\n                break;\n            case KnownColor.DarkOrange:\n                color = new PdfColor(255, 255, 140, 0);\n                break;\n            case KnownColor.DarkOrchid:\n                color = new PdfColor(255, 153, 50, 204);\n                break;\n            case KnownColor.DarkRed:\n                color = new PdfColor(255, 139, 0, 0);\n                break;\n            case KnownColor.DarkSalmon:\n                color = new PdfColor(255, 233, 150, 122);\n                break;\n            case KnownColor.DarkSeaGreen:\n                color = new PdfColor(255, 143, 188, 139);\n                break;\n            case KnownColor.DarkSlateBlue:\n                color = new PdfColor(255, 72, 61, 139);\n                break;\n            case KnownColor.DarkSlateGray:\n                color = new PdfColor(255, 47, 79, 79);\n                break;\n            case KnownColor.DarkTurquoise:\n                color = new PdfColor(255, 0, 206, 209);\n                break;\n            case KnownColor.DarkViolet:\n                color = new PdfColor(255, 148, 0, 211);\n                break;\n            case KnownColor.DeepPink:\n                color = new PdfColor(255, 255, 20, 147);\n                break;\n            case KnownColor.DeepSkyBlue:\n                color = new PdfColor(255, 0, 191, 255);\n                break;\n            case KnownColor.DimGray:\n                color = new PdfColor(255, 105, 105, 105);\n                break;\n            case KnownColor.DodgerBlue:\n                color = new PdfColor(255, 30, 144, 255);\n                break;\n            case KnownColor.Firebrick:\n                color = new PdfColor(255, 178, 34, 34);\n                break;\n            case KnownColor.FloralWhite:\n                color = new PdfColor(255, 255, 250, 240);\n                break;\n            case KnownColor.ForestGreen:\n                color = new PdfColor(255, 34, 139, 34);\n                break;\n            case KnownColor.Fuchsia:\n                color = new PdfColor(255, 255, 0, 255);\n                break;\n            case KnownColor.Gainsboro:\n                color = new PdfColor(255, 220, 220, 220);\n                break;\n            case KnownColor.GhostWhite:\n                color = new PdfColor(255, 248, 248, 255);\n                break;\n            case KnownColor.Gold:\n                color = new PdfColor(255, 255, 215, 0);\n                break;\n            case KnownColor.Goldenrod:\n                color = new PdfColor(255, 218, 165, 32);\n                break;\n            case KnownColor.Gray:\n                color = new PdfColor(255, 128, 128, 128);\n                break;\n            case KnownColor.Green:\n                color = new PdfColor(255, 0, 128, 0);\n                break;\n            case KnownColor.GreenYellow:\n                color = new PdfColor(255, 173, 255, 47);\n                break;\n            case KnownColor.Honeydew:\n                color = new PdfColor(255, 240, 255, 240);\n                break;\n            case KnownColor.HotPink:\n                color = new PdfColor(255, 255, 105, 180);\n                break;\n            case KnownColor.IndianRed:\n                color = new PdfColor(255, 205, 92, 92);\n                break;\n            case KnownColor.Indigo:\n                color = new PdfColor(255, 75, 0, 130);\n                break;\n            case KnownColor.Ivory:\n                color = new PdfColor(255, 255, 255, 240);\n                break;\n            case KnownColor.Khaki:\n                color = new PdfColor(255, 240, 230, 140);\n                break;\n            case KnownColor.Lavender:\n                color = new PdfColor(255, 230, 230, 250);\n                break;\n            case KnownColor.LavenderBlush:\n                color = new PdfColor(255, 255, 240, 245);\n                break;\n            case KnownColor.LawnGreen:\n                color = new PdfColor(255, 124, 252, 0);\n                break;\n            case KnownColor.LemonChiffon:\n                color = new PdfColor(255, 255, 250, 205);\n                break;\n            case KnownColor.LightBlue:\n                color = new PdfColor(255, 173, 216, 230);\n                break;\n            case KnownColor.LightCoral:\n                color = new PdfColor(255, 240, 128, 128);\n                break;\n            case KnownColor.LightCyan:\n                color = new PdfColor(255, 224, 255, 255);\n                break;\n            case KnownColor.LightGoldenrodYellow:\n                color = new PdfColor(255, 250, 250, 210);\n                break;\n            case KnownColor.LightGreen:\n                color = new PdfColor(255, 144, 238, 144);\n                break;\n            case KnownColor.LightGray:\n                color = new PdfColor(255, 211, 211, 211);\n                break;\n            case KnownColor.LightPink:\n                color = new PdfColor(255, 255, 182, 193);\n                break;\n            case KnownColor.LightSalmon:\n                color = new PdfColor(255, 255, 160, 122);\n                break;\n            case KnownColor.LightSeaGreen:\n                color = new PdfColor(255, 32, 178, 170);\n                break;\n            case KnownColor.LightSkyBlue:\n                color = new PdfColor(255, 135, 206, 250);\n                break;\n            case KnownColor.LightSlateGray:\n                color = new PdfColor(255, 119, 136, 153);\n                break;\n            case KnownColor.LightSteelBlue:\n                color = new PdfColor(255, 176, 196, 222);\n                break;\n            case KnownColor.LightYellow:\n                color = new PdfColor(255, 255, 255, 224);\n                break;\n            case KnownColor.Lime:\n                color = new PdfColor(255, 0, 255, 0);\n                break;\n            case KnownColor.LimeGreen:\n                color = new PdfColor(255, 50, 205, 50);\n                break;\n            case KnownColor.Linen:\n                color = new PdfColor(255, 250, 240, 230);\n                break;\n            case KnownColor.Magenta:\n                color = new PdfColor(255, 255, 0, 255);\n                break;\n            case KnownColor.Maroon:\n                color = new PdfColor(255, 128, 0, 0);\n                break;\n            case KnownColor.MediumAquamarine:\n                color = new PdfColor(255, 102, 205, 170);\n                break;\n            case KnownColor.MediumBlue:\n                color = new PdfColor(255, 0, 0, 205);\n                break;\n            case KnownColor.MediumOrchid:\n                color = new PdfColor(255, 186, 85, 211);\n                break;\n            case KnownColor.MediumPurple:\n                color = new PdfColor(255, 147, 112, 219);\n                break;\n            case KnownColor.MediumSeaGreen:\n                color = new PdfColor(255, 60, 179, 113);\n                break;\n            case KnownColor.MediumSlateBlue:\n                color = new PdfColor(255, 123, 104, 238);\n                break;\n            case KnownColor.MediumSpringGreen:\n                color = new PdfColor(255, 0, 250, 154);\n                break;\n            case KnownColor.MediumTurquoise:\n                color = new PdfColor(255, 72, 209, 204);\n                break;\n            case KnownColor.MediumVioletRed:\n                color = new PdfColor(255, 199, 21, 133);\n                break;\n            case KnownColor.MidnightBlue:\n                color = new PdfColor(255, 25, 25, 112);\n                break;\n            case KnownColor.MintCream:\n                color = new PdfColor(255, 245, 255, 250);\n                break;\n            case KnownColor.MistyRose:\n                color = new PdfColor(255, 255, 228, 225);\n                break;\n            case KnownColor.Moccasin:\n                color = new PdfColor(255, 255, 228, 181);\n                break;\n            case KnownColor.NavajoWhite:\n                color = new PdfColor(255, 255, 222, 173);\n                break;\n            case KnownColor.Navy:\n                color = new PdfColor(255, 0, 0, 128);\n                break;\n            case KnownColor.OldLace:\n                color = new PdfColor(255, 253, 245, 230);\n                break;\n            case KnownColor.Olive:\n                color = new PdfColor(255, 128, 128, 0);\n                break;\n            case KnownColor.OliveDrab:\n                color = new PdfColor(255, 107, 142, 35);\n                break;\n            case KnownColor.Orange:\n                color = new PdfColor(255, 255, 165, 0);\n                break;\n            case KnownColor.OrangeRed:\n                color = new PdfColor(255, 255, 69, 0);\n                break;\n            case KnownColor.Orchid:\n                color = new PdfColor(255, 218, 112, 214);\n                break;\n            case KnownColor.PaleGoldenrod:\n                color = new PdfColor(255, 238, 232, 170);\n                break;\n            case KnownColor.PaleGreen:\n                color = new PdfColor(255, 152, 251, 152);\n                break;\n            case KnownColor.PaleTurquoise:\n                color = new PdfColor(255, 175, 238, 238);\n                break;\n            case KnownColor.PaleVioletRed:\n                color = new PdfColor(255, 219, 112, 147);\n                break;\n            case KnownColor.PapayaWhip:\n                color = new PdfColor(255, 255, 239, 213);\n                break;\n            case KnownColor.PeachPuff:\n                color = new PdfColor(255, 255, 218, 185);\n                break;\n            case KnownColor.Peru:\n                color = new PdfColor(255, 205, 133, 63);\n                break;\n            case KnownColor.Pink:\n                color = new PdfColor(255, 255, 192, 203);\n                break;\n            case KnownColor.Plum:\n                color = new PdfColor(255, 221, 160, 221);\n                break;\n            case KnownColor.PowderBlue:\n                color = new PdfColor(255, 176, 224, 230);\n                break;\n            case KnownColor.Purple:\n                color = new PdfColor(255, 128, 0, 128);\n                break;\n            case KnownColor.Red:\n                color = new PdfColor(255, 255, 0, 0);\n                break;\n            case KnownColor.RosyBrown:\n                color = new PdfColor(255, 188, 143, 143);\n                break;\n            case KnownColor.RoyalBlue:\n                color = new PdfColor(255, 65, 105, 225);\n                break;\n            case KnownColor.SaddleBrown:\n                color = new PdfColor(255, 139, 69, 19);\n                break;\n            case KnownColor.Salmon:\n                color = new PdfColor(255, 250, 128, 114);\n                break;\n            case KnownColor.SandyBrown:\n                color = new PdfColor(255, 244, 164, 96);\n                break;\n            case KnownColor.SeaGreen:\n                color = new PdfColor(255, 46, 139, 87);\n                break;\n            case KnownColor.SeaShell:\n                color = new PdfColor(255, 255, 245, 238);\n                break;\n            case KnownColor.Sienna:\n                color = new PdfColor(255, 160, 82, 45);\n                break;\n            case KnownColor.Silver:\n                color = new PdfColor(255, 192, 192, 192);\n                break;\n            case KnownColor.SkyBlue:\n                color = new PdfColor(255, 135, 206, 235);\n                break;\n            case KnownColor.SlateBlue:\n                color = new PdfColor(255, 106, 90, 205);\n                break;\n            case KnownColor.SlateGray:\n                color = new PdfColor(255, 112, 128, 144);\n                break;\n            case KnownColor.Snow:\n                color = new PdfColor(255, 255, 250, 250);\n                break;\n            case KnownColor.SpringGreen:\n                color = new PdfColor(255, 0, 255, 127);\n                break;\n            case KnownColor.SteelBlue:\n                color = new PdfColor(255, 70, 130, 180);\n                break;\n            case KnownColor.Tan:\n                color = new PdfColor(255, 210, 180, 140);\n                break;\n            case KnownColor.Teal:\n                color = new PdfColor(255, 0, 128, 128);\n                break;\n            case KnownColor.Thistle:\n                color = new PdfColor(255, 216, 191, 216);\n                break;\n            case KnownColor.Tomato:\n                color = new PdfColor(255, 255, 99, 71);\n                break;\n            case KnownColor.Turquoise:\n                color = new PdfColor(255, 64, 224, 208);\n                break;\n            case KnownColor.Violet:\n                color = new PdfColor(255, 238, 130, 238);\n                break;\n            case KnownColor.Wheat:\n                color = new PdfColor(255, 245, 222, 179);\n                break;\n            case KnownColor.White:\n                color = new PdfColor(255, 255, 255, 255);\n                break;\n            case KnownColor.WhiteSmoke:\n                color = new PdfColor(255, 245, 245, 245);\n                break;\n            case KnownColor.Yellow:\n                color = new PdfColor(255, 255, 255, 0);\n                break;\n            case KnownColor.YellowGreen:\n                color = new PdfColor(255, 154, 205, 50);\n                break;\n        }\n        return color;\n    };\n    //Static Fields\n    /**\n     * Local variable to store the brushes.\n     */\n    PdfBrushes.sBrushes = new Dictionary();\n    return PdfBrushes;\n}());\nexport { PdfBrushes };\n","/**\n * PdfBlend.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfColor } from './../pdf-color';\nimport { PdfColorBlend } from './pdf-color-blend';\n/**\n * `PdfBlend` Represents the blend color space\n * @private\n */\nvar PdfBlend = /** @class */ (function () {\n    function PdfBlend(count) {\n        //Constants\n        /**\n         * precision of the GCD calculations.\n         * @private\n         */\n        this.precision = 1000;\n        //\n    }\n    Object.defineProperty(PdfBlend.prototype, \"factors\", {\n        //Properties\n        /**\n         * Gets or sets the array of factor to the blend.\n         * @public\n         */\n        get: function () {\n            return this.mFactors;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Factors');\n            }\n            this.mFactors = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBlend.prototype, \"positions\", {\n        /**\n         * 'positions' Gets or sets the array of positions\n         * @public\n         */\n        get: function () {\n            return this.mPositions;\n        },\n        set: function (value) {\n            var positionarray = value;\n            for (var i = 0; i < positionarray.length; i++) {\n                if (((positionarray[i] < 0) || (positionarray[i] > 1))) {\n                    positionarray[i] = 0;\n                }\n            }\n            this.mPositions = positionarray;\n            this.mPositions = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBlend.prototype, \"count\", {\n        /**\n         * Gets the number of elements that specify the blend.\n         * @protected\n         */\n        get: function () {\n            return this.mCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Generates a correct color blend.\n     * @param colours The colours.\n     * @param colorSpace The color space.\n     */\n    PdfBlend.prototype.generateColorBlend = function (colours, colorSpace) {\n        if ((colours == null)) {\n            throw new Error('ArgumentNullException : colours');\n        }\n        if ((this.positions == null)) {\n            this.positions = [0];\n        }\n        var cBlend = new PdfColorBlend(this.count);\n        var positions = this.positions;\n        var clrs = null;\n        if ((positions.length === 1)) {\n            positions = [3];\n            positions[0] = 0;\n            positions[1] = this.positions[0];\n            positions[2] = 1;\n            /* tslint:disable */\n            clrs = new Array(3);\n            clrs[0] = colours[0];\n            clrs[1] = colours[0];\n            clrs[2] = colours[1];\n        }\n        else {\n            var c1 = colours[0];\n            var c2 = colours[1];\n            /* tslint:disable */\n            clrs = new Array(this.count);\n            var i = 0;\n            var count = this.count;\n            for (i = 0; i < count; ++i) {\n                clrs[i] = this.interpolate(this.mFactors[i], c1, c2, colorSpace);\n            }\n        }\n        cBlend.positions = positions;\n        cBlend.colors = clrs;\n        return cBlend;\n    };\n    /**\n     * 'clonePdfBlend' Clones this instance.\n     * @public\n     */\n    PdfBlend.prototype.clonePdfBlend = function () {\n        var blend = this;\n        if ((this.mFactors != null)) {\n            blend.factors = (this.mFactors);\n        }\n        if ((this.positions != null)) {\n            blend.positions = (this.positions);\n        }\n        return blend;\n    };\n    PdfBlend.prototype.gcd = function (u, v) {\n        if (typeof u === 'number' && typeof v === 'number' && typeof v !== 'undefined') {\n            if (((u < 0) || (u > 1))) {\n                throw new Error('ArgumentOutOfRangeException : u');\n            }\n            if (((v < 0) || (v > 1))) {\n                throw new Error('ArgumentOutOfRangeException : v');\n            }\n            var iU = (Math.max(1, (u * this.precision)));\n            var iV = (Math.max(1, (v * this.precision)));\n            var iResult = this.gcdInt(iU, iV);\n            var result = ((iResult) / this.precision);\n            return result;\n        }\n        else {\n            var values = u;\n            if ((values == null)) {\n                throw new Error('ArgumentNullException : values');\n            }\n            if ((values.length < 1)) {\n                throw new Error('ArgumentException : Not enough values in the array. - values');\n            }\n            var gcd = values[0];\n            if ((values.length > 1)) {\n                var count = values.length;\n                for (var i = 1; i < count; ++i) {\n                    gcd = this.gcd(values[i], gcd);\n                    if ((gcd === (1 / this.precision))) {\n                        break;\n                    }\n                }\n            }\n            return gcd;\n        }\n    };\n    /**\n     * Calculate the GCD int of the specified values.\n     * @param u The u.\n     * @param v The v.\n     */\n    PdfBlend.prototype.gcdInt = function (u, v) {\n        if ((u <= 0)) {\n            throw new Error('ArgumentOutOfRangeException' + u + 'The arguments cannot be less or equal to zero.');\n        }\n        if ((v <= 0)) {\n            throw new Error('ArgumentOutOfRangeException' + v + 'The arguments cannot be less or equal to zero.');\n        }\n        if (((u === 1) || (v === 1))) {\n            return 1;\n        }\n        var shift = 0;\n        while (this.isEven(u, v)) {\n            ++shift;\n            u >>= 1;\n            v >>= 1;\n        }\n        while (((u & 1) <= 0)) {\n            u >>= 1;\n        }\n        do {\n            while ((v & 1) <= 0) {\n                v >>= 1;\n            }\n            if (u > v) {\n                var t = v;\n                v = u;\n                u = t;\n            }\n            v = v - u;\n        } while (v !== 0);\n        return (u << shift);\n    };\n    PdfBlend.prototype.isEven = function (arg1, arg2) {\n        if (typeof arg2 === 'number' && typeof arg2 !== 'undefined') {\n            var result = true;\n            result = (result && ((arg1 & 1) <= 0)); //  Is u even?\n            result = (result && ((arg2 & 1) <= 0)); //  Is v even?\n            return result;\n        }\n        else {\n            return ((arg1 & 1) <= 0);\n        }\n    };\n    PdfBlend.prototype.interpolate = function (t, color1, color2, colorSpace) {\n        if (color1 instanceof PdfColor) {\n            var color = new PdfColor();\n            switch (colorSpace) {\n                case PdfColorSpace.Rgb:\n                    var red = (this.interpolate(t, color1.red, color2.red));\n                    var green = (this.interpolate(t, color1.green, color2.green));\n                    var blue = (this.interpolate(t, color1.blue, color2.blue));\n                    color = new PdfColor(red, green, blue);\n                    break;\n                case PdfColorSpace.GrayScale:\n                    var gray = (this.interpolate(t, color1.gray, color2.gray));\n                    color = new PdfColor(gray);\n                    break;\n                case PdfColorSpace.Cmyk:\n                    var cyan = (this.interpolate(t, color1.c, color2.c));\n                    var magenta = (this.interpolate(t, color1.m, color2.m));\n                    var yellow = (this.interpolate(t, color1.y, color2.y));\n                    var black = (this.interpolate(t, color1.k, color2.k));\n                    color = new PdfColor(cyan, magenta, yellow, black);\n                    break;\n            }\n            return color;\n        }\n        else {\n            var t0 = 0;\n            var t1 = 1;\n            var result = 0;\n            if ((t === t0)) {\n                result = color1;\n            }\n            else if ((t === t1)) {\n                result = color2;\n            }\n            else {\n                result = (color1 + ((t - t0) * ((color2 - color1) / (t1 - t0))));\n            }\n            return result;\n        }\n    };\n    return PdfBlend;\n}());\nexport { PdfBlend };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfColorBlend.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfSampledFunction } from './../../general/functions/pdf-sampled-function';\nimport { PdfBlend } from './pdf-blend';\n/**\n * `PdfColorBlend` Represents the arrays of colors and positions used for\n *  interpolating color blending in a multicolor gradient.\n * @private\n */\nvar PdfColorBlend = /** @class */ (function (_super) {\n    __extends(PdfColorBlend, _super);\n    function PdfColorBlend(count) {\n        var _this = _super.call(this) || this;\n        if (typeof count === 'number') {\n            _this = _super.call(this, count) || this;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfColorBlend.prototype, \"colors\", {\n        //Properties\n        /**\n         * Gets or sets the array of colors.\n         * @public\n         */\n        get: function () {\n            return this.mcolors;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Colors');\n            }\n            this.mcolors = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Gets the function.\n     * @param colorSpace The color space.\n     * @public\n     */\n    PdfColorBlend.prototype.getFunction = function (colorSpace) {\n        var domain = [0, 1];\n        var colourComponents = this.getColorComponentsCount(colorSpace);\n        var maxComponentValue = this.getMaxComponentValue(colorSpace);\n        var range = this.setRange(colourComponents, maxComponentValue);\n        var func = null;\n        if ((this.mbrush == null && typeof this.mbrush === 'undefined')) {\n            var sizes = [1];\n            var samplesCount = void 0;\n            var step = 1;\n            if (this.positions.length === 2) {\n                samplesCount = 2;\n            }\n            else {\n                var positions = this.positions;\n                var intervals = this.getIntervals(positions);\n                var gcd = this.gcd(intervals);\n                step = gcd;\n                samplesCount = (((1 / gcd)) + 1);\n            }\n            sizes[0] = samplesCount;\n            var samples = this.getSamplesValues(colorSpace, samplesCount, maxComponentValue, step);\n            func = new PdfSampledFunction(domain, range, sizes, samples);\n            return func;\n        }\n        return func;\n    };\n    /**\n     * 'cloneColorBlend' Clones this instance.\n     * @public\n     */\n    PdfColorBlend.prototype.cloneColorBlend = function () {\n        var cBlend = this;\n        if ((this.mcolors != null && typeof this.mcolors !== 'undefined')) {\n            cBlend.colors = (this.mcolors);\n        }\n        if ((this.positions != null && typeof this.positions !== 'undefined')) {\n            cBlend.positions = (this.positions);\n        }\n        return cBlend;\n    };\n    /**\n     * Sets the range.\n     * @param colourComponents The colour components.\n     * @param maxValue The max value.\n     */\n    PdfColorBlend.prototype.setRange = function (colourComponents, maxValue) {\n        var range = [(colourComponents * 2)];\n        for (var i = 0; (i < colourComponents); ++i) {\n            range[(i * 2)] = 0;\n            range[((i * 2) + 1)] = 1;\n        }\n        return range;\n    };\n    /**\n     * Calculates the color components count according to colour space.\n     * @param colorSpace The color space.\n     */\n    PdfColorBlend.prototype.getColorComponentsCount = function (colorSpace) {\n        var count = 0;\n        switch (colorSpace) {\n            case PdfColorSpace.Rgb:\n                count = 3;\n                break;\n            case PdfColorSpace.Cmyk:\n                count = 4;\n                break;\n            case PdfColorSpace.GrayScale:\n                count = 1;\n                break;\n            default:\n                throw new Error('ArgumentException - Unsupported color space: ' + colorSpace + ' colorSpace');\n        }\n        return count;\n    };\n    /**\n     * Gets samples values for specified colour space.\n     * @param colorSpace The color space.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getSamplesValues = function (colorSpace, sampleCount, maxComponentValue, step) {\n        var values;\n        switch (colorSpace) {\n            case PdfColorSpace.GrayScale:\n                values = this.getGrayscaleSamples(sampleCount, maxComponentValue, step);\n                break;\n            case PdfColorSpace.Cmyk:\n                values = this.getCmykSamples(sampleCount, maxComponentValue, step);\n                break;\n            case PdfColorSpace.Rgb:\n                values = this.getRgbSamples(sampleCount, maxComponentValue, step);\n                break;\n            default:\n                throw new Error('ArgumentException - Unsupported color space: ' + colorSpace + ' colorSpace');\n        }\n        return values;\n    };\n    /**\n     * Gets the grayscale samples.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getGrayscaleSamples = function (sampleCount, maxComponentValue, step) {\n        var values = [(sampleCount * 2)];\n        for (var i = 0; (i < sampleCount); ++i) {\n            var color = this.getNextColor(i, step, PdfColorSpace.GrayScale);\n            var index = (i * 2);\n        }\n        return values;\n    };\n    /**\n     * Gets the RGB samples.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getRgbSamples = function (sampleCount, maxComponentValue, step) {\n        var values = [(sampleCount * 3)];\n        for (var i = 0; (i < sampleCount); ++i) {\n            var color = this.getNextColor(i, step, PdfColorSpace.Rgb);\n            var index = (i * 3);\n            values[index] = color.r;\n            values[(index + 1)] = color.g;\n            values[(index + 2)] = color.b;\n        }\n        return values;\n    };\n    /**\n     * Gets the CMYK samples.\n     * @param sampleCount The sample count.\n     * @param maxComponentValue The max component value.\n     * @param step The step.\n     */\n    PdfColorBlend.prototype.getCmykSamples = function (sampleCount, maxComponentValue, step) {\n        var values = [(sampleCount * 4)];\n        for (var i = 0; (i < sampleCount); i++) {\n            var color = this.getNextColor(i, step, PdfColorSpace.Cmyk);\n            var index = (i * 4);\n            values[index] = ((color.c * maxComponentValue));\n            values[(index + 1)] = ((color.m * maxComponentValue));\n            values[(index + 2)] = ((color.y * maxComponentValue));\n            values[(index + 3)] = ((color.k * maxComponentValue));\n        }\n        return values;\n    };\n    /**\n     * Calculates the color that should be at the specified index.\n     * @param index The index.\n     * @param step The step.\n     * @param colorSpace The color space.\n     */\n    PdfColorBlend.prototype.getNextColor = function (index, step, colorSpace) {\n        var position = (step * index);\n        var indexHi;\n        var indexLow;\n        var result = this.getIndices(position, indexLow, indexHi);\n        indexLow = result.indexLow;\n        indexHi = result.indexHi;\n        var color;\n        if (indexLow === indexHi) {\n            color = this.mcolors[indexLow];\n        }\n        else {\n            var positionLow = this.positions[indexLow];\n            var positionHi = this.positions[indexHi];\n            var colorLow = this.mcolors[indexLow];\n            var colorHi = this.mcolors[indexHi];\n            var t = ((position - positionLow) / (positionHi - positionLow));\n            color = this.interpolate(t, colorLow, colorHi, colorSpace);\n        }\n        return color;\n    };\n    /**\n     * Gets the indices.\n     * @param position The position.\n     * @param indexLow The index low.\n     * @param indexHi The index hi.\n     */\n    PdfColorBlend.prototype.getIndices = function (position, indexLow, indexHi) {\n        var positions = this.positions;\n        indexLow = 0;\n        indexHi = 0;\n        for (var i = 0; (i < this.mcolors.length); ++i) {\n            var currPos = positions[i];\n            if ((currPos === position)) {\n                indexHi = i;\n                indexLow = i;\n                break;\n            }\n            else if ((currPos > position)) {\n                indexHi = i;\n                break;\n            }\n            indexLow = i;\n            indexHi = i;\n        }\n        return { indexLow: indexLow, indexHi: indexHi };\n    };\n    /**\n     * Calculates the max component value.\n     * @param colorSpace The color space.\n     */\n    PdfColorBlend.prototype.getMaxComponentValue = function (colorSpace) {\n        var result = 0;\n        switch (colorSpace) {\n            case PdfColorSpace.Cmyk:\n            case PdfColorSpace.Rgb:\n                result = 255;\n                break;\n            case PdfColorSpace.GrayScale:\n                result = 65535;\n                break;\n            default:\n                throw new Error('ArgumentException - Unsupported color space: ' + colorSpace + 'colorSpace');\n        }\n        return result;\n    };\n    /**\n     * Gets an intervals array from the positions array.\n     * @param positions The positions array.\n     */\n    PdfColorBlend.prototype.getIntervals = function (positions) {\n        var count = positions.length;\n        var intervals = [(count - 1)];\n        var prev = positions[0];\n        for (var i = 1; (i < count); ++i) {\n            var v = positions[i];\n            intervals[(i - 1)] = (v - prev);\n            prev = v;\n        }\n        return intervals;\n    };\n    return PdfColorBlend;\n}(PdfBlend));\nexport { PdfColorBlend };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfLinearGradientBrush.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfColor } from './../pdf-color';\nimport { PointF, Rectangle } from './../../drawing/pdf-drawing';\nimport { PdfDictionary } from '../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfBoolean } from '../../primitives/pdf-boolean';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfColorBlend } from './pdf-color-blend';\nimport { PdfGradientBrush } from './pdf-gradient-brush';\nimport { PdfExtend, PdfLinearGradientMode, ShadingType } from './enum';\n/**\n * `PdfLinearGradientBrush` Implements linear gradient brush by using PDF axial shading pattern.\n * @private\n */\nvar PdfLinearGradientBrush = /** @class */ (function (_super) {\n    __extends(PdfLinearGradientBrush, _super);\n    /**\n     * Initializes a new instance of the `PdfLinearGradientBrush` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfLinearGradientBrush(arg1, arg2, arg3, arg4) {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Local variable to store the dictionary properties.\n         * @private\n         */\n        _this.mDictionaryProperties = new DictionaryProperties();\n        if (arg1 instanceof PointF && arg2 instanceof PointF && arg3 instanceof PdfColor && arg4 instanceof PdfColor) {\n            _this.initialize(arg3, arg4);\n            _this.mPointStart = arg1;\n            _this.mPointEnd = arg2;\n            _this.setPoints(_this.mPointStart, _this.mPointEnd);\n        }\n        else if (arg1 instanceof Rectangle) {\n            _this.initialize(arg2, arg3);\n            /* tslint:disable-next-line:max-line-length */\n            if ((arg4 === PdfLinearGradientMode.BackwardDiagonal || arg4 === PdfLinearGradientMode.ForwardDiagonal || arg4 === PdfLinearGradientMode.Horizontal || arg4 === PdfLinearGradientMode.Vertical)) {\n                _this.mBoundaries = arg1;\n                switch (arg4) {\n                    case PdfLinearGradientMode.BackwardDiagonal:\n                        _this.mPointStart = new PointF(arg1.right, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.left, arg1.bottom);\n                        break;\n                    case PdfLinearGradientMode.ForwardDiagonal:\n                        _this.mPointStart = new PointF(arg1.left, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.right, arg1.bottom);\n                        break;\n                    case PdfLinearGradientMode.Horizontal:\n                        _this.mPointStart = new PointF(arg1.left, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.right, arg1.top);\n                        break;\n                    case PdfLinearGradientMode.Vertical:\n                        _this.mPointStart = new PointF(arg1.left, arg1.top);\n                        _this.mPointEnd = new PointF(arg1.left, arg1.bottom);\n                        break;\n                    default:\n                        throw new Error('ArgumentException -- Unsupported linear gradient mode: ' + arg4 + ' mode');\n                }\n                _this.setPoints(_this.mPointStart, _this.mPointEnd);\n            }\n            else if (typeof arg4 === 'number' && typeof arg4 !== 'undefined') {\n                _this.mBoundaries = arg1;\n                arg4 = arg4 % 360;\n                if ((arg4 === 0)) {\n                    _this.mPointStart = new PointF(arg1.left, arg1.top);\n                    _this.mPointEnd = new PointF(arg1.right, arg1.top);\n                }\n                else if ((arg4 === 90)) {\n                    _this.mPointStart = new PointF(arg1.left, arg1.top);\n                    _this.mPointEnd = new PointF(arg1.left, arg1.bottom);\n                }\n                else if ((arg4 === 180)) {\n                    _this.mPointEnd = new PointF(arg1.left, arg1.top);\n                    _this.mPointStart = new PointF(arg1.right, arg1.top);\n                }\n                else if ((arg4 === 270)) {\n                    _this.mPointEnd = new PointF(arg1.left, arg1.top);\n                    _this.mPointStart = new PointF(arg1.left, arg1.bottom);\n                }\n                else {\n                    var d2r = (Math.PI / 180);\n                    var radAngle = (arg4 * d2r);\n                    var k = Math.tan(radAngle);\n                    var x = (_this.mBoundaries.left\n                        + ((_this.mBoundaries.right - _this.mBoundaries.left) / 2));\n                    var y = (_this.mBoundaries.top\n                        + ((_this.mBoundaries.bottom - _this.mBoundaries.top) / 2));\n                    var centre = new PointF(x, y);\n                    x = (_this.mBoundaries.width / (2 * (Math.cos(radAngle))));\n                    y = ((k * x));\n                    x = (x + centre.x);\n                    y = (y + centre.y);\n                    var p1 = new PointF(x, y);\n                    var cp1 = _this.subPoints(p1, centre);\n                    //  P1 - P0\n                    var p = _this.choosePoint(arg4);\n                    var coef = (_this.mulPoints(_this.subPoints(p, centre), cp1)\n                        / _this.mulPoints(cp1, cp1));\n                    _this.mPointEnd = _this.addPoints(centre, _this.mulPoint(cp1, coef));\n                    //  Parametric line equation.\n                    _this.mPointStart = _this.addPoints(centre, _this.mulPoint(cp1, (coef * -1)));\n                }\n                _this.setPoints(_this.mPointEnd, _this.mPointStart);\n            }\n        }\n        return _this;\n    }\n    /**\n     * Initializes a new instance of the `PdfLinearGradientBrush` class.\n     * @param color1 The starting color of the gradient.\n     * @param color2 The end color of the gradient.\n     */\n    PdfLinearGradientBrush.prototype.initialize = function (color1, color2) {\n        this.mColours = [color1, color2];\n        this.mColourBlend = new PdfColorBlend(2);\n        this.mColourBlend.positions = [0, 1];\n        this.mColourBlend.colors = this.mColours;\n        this.initShading();\n    };\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"blend\", {\n        //Properties\n        /**\n         * Gets or sets a PdfBlend that specifies positions\n         * and factors that define a custom falloff for the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mBlend;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Blend');\n            }\n            if ((this.mColours == null)) {\n                throw new Error('NotSupportedException : There is no starting and ending colours specified.');\n            }\n            this.mBlend = value;\n            //  TODO: generate correct colour blend.\n            this.mColourBlend = this.mBlend.generateColorBlend(this.mColours, this.colorSpace);\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"interpolationColors\", {\n        /**\n         * Gets or sets a ColorBlend that defines a multicolor linear gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColourBlend;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : InterpolationColors');\n            }\n            this.mBlend = null;\n            this.mColours = null;\n            this.mColourBlend = value;\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"linearColors\", {\n        /**\n         * Gets or sets the starting and ending colors of the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColours;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : LinearColors');\n            }\n            if ((value.length < 2)) {\n                throw new Error('ArgumentException : The array is too small - LinearColors');\n            }\n            if ((this.mColours == null && typeof this.mColours === 'undefined')) {\n                this.mColours = [value[0], value[1]];\n            }\n            else {\n                this.mColours[0] = value[0];\n                this.mColours[1] = value[1];\n            }\n            if ((this.mBlend == null && typeof this.mBlend === 'undefined')) {\n                //  Set correct colour blend.\n                this.mColourBlend = new PdfColorBlend(2);\n                this.mColourBlend.colors = this.mColours;\n                this.mColourBlend.positions = [0, 1];\n            }\n            else {\n                this.mColourBlend = this.mBlend.generateColorBlend(this.mColours, this.colorSpace);\n            }\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"rectangle\", {\n        /**\n         * Gets a rectangular region that defines the boundaries of the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mBoundaries;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfLinearGradientBrush.prototype, \"extend\", {\n        /**\n         * Gets or sets the value indicating whether the gradient should extend starting and ending points.\n         * @public\n         */\n        get: function () {\n            var result = PdfExtend.None;\n            var extend = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            if ((extend != null)) {\n                var extStart = (extend.items(0));\n                var extEnd = (extend.items(1));\n                if (extStart.value) {\n                    result = (result | PdfExtend.Start);\n                }\n                if (extEnd.value) {\n                    result = (result | PdfExtend.End);\n                }\n            }\n            return result;\n        },\n        set: function (value) {\n            var extend = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            var extStart;\n            var extEnd;\n            if ((extend == null)) {\n                extStart = new PdfBoolean(false);\n                extEnd = new PdfBoolean(false);\n                extend = new PdfArray();\n                extend.add(extStart);\n                extend.add(extEnd);\n                this.shading.items.setValue(this.mDictionaryProperties.extend, extend);\n            }\n            else {\n                extStart = (extend.items(0));\n                extEnd = (extend.items(1));\n            }\n            // extStart.value = ((value && PdfExtend.Start) > 0);\n            // extEnd.value = ((value && PdfExtend.End) > 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Adds two points to each other.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.addPoints = function (point1, point2) {\n        var x = (point1.x + point2.x);\n        var y = (point1.y + point2.y);\n        var result = new PointF(x, y);\n        return result;\n    };\n    /**\n     * Subs the second point from the first one.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.subPoints = function (point1, point2) {\n        var x = (point1.x - point2.x);\n        var y = (point1.y - point2.y);\n        var result = new PointF(x, y);\n        return result;\n    };\n    /**\n     * Makes scalar multiplication of two points.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.mulPoints = function (point1, point2) {\n        var result = ((point1.x * point2.x) + (point1.y * point2.y));\n        return result;\n    };\n    /**\n     * Multiplies the point by the value specified.\n     * @param point The point1.\n     * @param value The value.\n     */\n    PdfLinearGradientBrush.prototype.mulPoint = function (point, value) {\n        point.x = (point.x * value);\n        point.y = (point.y * value);\n        return point;\n    };\n    /**\n     * Choose the point according to the angle.\n     * @param angle The angle.\n     */\n    PdfLinearGradientBrush.prototype.choosePoint = function (angle) {\n        var point = new PointF(0, 0);\n        //  Choose the correct point.\n        if ((angle < 90) && (angle > 0)) {\n            point = new PointF(this.mBoundaries.right, this.mBoundaries.bottom);\n        }\n        else if ((angle < 180) && (angle > 90)) {\n            point = new PointF(this.mBoundaries.left, this.mBoundaries.bottom);\n        }\n        else if ((angle < 270) && (angle > 180)) {\n            point = new PointF(this.mBoundaries.left, this.mBoundaries.top);\n        }\n        else if (angle > 270) {\n            point = new PointF(this.mBoundaries.right, this.mBoundaries.top);\n        }\n        else {\n            throw new Error('PdfException - Internal error.');\n        }\n        return point;\n    };\n    /**\n     * Sets the start and end points.\n     * @param point1 The point1.\n     * @param point2 The point2.\n     */\n    PdfLinearGradientBrush.prototype.setPoints = function (point1, point2) {\n        var points = new PdfArray();\n        points.add(new PdfNumber(point1.x));\n        points.add(new PdfNumber(this.updateY(point1.y)));\n        points.add(new PdfNumber(point2.x));\n        points.add(new PdfNumber(this.updateY(point2.y)));\n        this.shading.items.setValue(this.mDictionaryProperties.coords, points);\n    };\n    /**\n     * Updates y co-ordinate.\n     * @param y Y co-ordinate..\n     */\n    PdfLinearGradientBrush.prototype.updateY = function (y) {\n        if (y !== 0) {\n            return -y;\n        }\n        else {\n            return y;\n        }\n    };\n    //Overrides\n    /**\n     * Initializes the shading dictionary.\n     * @private\n     */\n    PdfLinearGradientBrush.prototype.initShading = function () {\n        this.colorSpace = PdfColorSpace.Rgb;\n        this.function = this.mColourBlend.getFunction(this.colorSpace);\n        this.shading.items.setValue(this.mDictionaryProperties.shadingType, new PdfNumber((ShadingType.Axial)));\n    };\n    //Overrides\n    /**\n     * Creates a new copy of a brush.\n     * @public\n     */\n    PdfLinearGradientBrush.prototype.clone = function () {\n        var brush = this;\n        brush.resetPatternDictionary(new PdfDictionary(this.patternDictionary));\n        brush.shading = new PdfDictionary();\n        brush.initShading();\n        brush.setPoints(brush.mPointStart, brush.mPointEnd);\n        if (brush !== null && brush instanceof PdfLinearGradientBrush) {\n            if ((this.matrix != null && typeof this.matrix !== 'undefined')) {\n                brush.matrix = this.matrix.clone();\n            }\n        }\n        if ((this.mColours != null && typeof this.mColours !== 'undefined')) {\n            brush.mColours = (this.mColours);\n        }\n        if ((this.blend != null && typeof this.blend !== 'undefined')) {\n            brush.blend = this.blend.clonePdfBlend();\n        }\n        else if ((this.interpolationColors != null && typeof this.interpolationColors !== 'undefined')) {\n            brush.interpolationColors = this.interpolationColors.cloneColorBlend();\n        }\n        brush.extend = this.extend;\n        this.cloneBackgroundValue(brush);\n        this.cloneAntiAliasingValue(brush);\n        return brush;\n    };\n    /**\n     * Resets the function.\n     * @public\n     */\n    PdfLinearGradientBrush.prototype.resetFunction = function () {\n        this.function = this.mColourBlend.getFunction(this.colorSpace);\n    };\n    return PdfLinearGradientBrush;\n}(PdfGradientBrush));\nexport { PdfLinearGradientBrush };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfRadialGradientBrush.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfDictionary } from '../../primitives/pdf-dictionary';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfBoolean } from '../../primitives/pdf-boolean';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfColorBlend } from './pdf-color-blend';\nimport { PdfGradientBrush } from './pdf-gradient-brush';\nimport { PdfExtend, ShadingType } from './enum';\n/**\n * `PdfRadialGradientBrush` Represent radial gradient brush.\n * @private\n */\nvar PdfRadialGradientBrush = /** @class */ (function (_super) {\n    __extends(PdfRadialGradientBrush, _super);\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfRadialGradientBrush` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfRadialGradientBrush(centerStart, radiusStart, centerEnd, radiusEnd, colorStart, colorEnd) {\n        var _this = _super.call(this, new PdfDictionary()) || this;\n        /**\n         * Local varaible to store the dictionary properties.\n         */\n        _this.mDictionaryProperties = new DictionaryProperties();\n        _this.initialize(colorStart, colorEnd);\n        if (radiusStart < 0) {\n            throw new Error('ArgumentOutOfRangeException : radiusStart - The radius cannot be less then zero.');\n        }\n        if (radiusEnd < 0) {\n            throw new Error('ArgumentOutOfRangeException : radiusEnd - The radius cannpt be less then zero.');\n        }\n        _this.mPointEnd = centerEnd;\n        _this.mPointStart = centerStart;\n        _this.mRadiusStart = radiusStart;\n        _this.mRadiusEnd = radiusEnd;\n        _this.setPoints(_this.mPointStart, _this.mPointEnd, _this.mRadiusStart, _this.mRadiusEnd);\n        return _this;\n    }\n    /**\n     * Initializes a new instance of the `PdfRadialGradientBrush` class.\n     * @param color1 The color1.\n     * @param color2 The color2.\n     */\n    PdfRadialGradientBrush.prototype.initialize = function (color1, color2) {\n        this.mColour = [color1, color2];\n        this.mColourBlends = new PdfColorBlend(2);\n        this.mColourBlends.positions = [0, 1];\n        this.mColourBlends.colors = this.mColour;\n        this.initShading();\n    };\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"blend\", {\n        //Properties\n        /**\n         * Gets or sets a PdfBlend that specifies positions and factors that define a custom falloff for the gradient.\n         * @public\n         */\n        get: function () {\n            return this.mBlend;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Blend');\n            }\n            if ((this.mColour == null && typeof this.mColour === 'undefined')) {\n                throw new Error('NotSupportedException : There is no starting and ending colours specified.');\n            }\n            this.mBlend = value;\n            this.mColourBlends = this.mBlend.generateColorBlend(this.mColour, this.colorSpace);\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"interpolationColors\", {\n        /**\n         * Gets or sets a ColorBlend that defines a multicolor radial gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColourBlends;\n        },\n        set: function (value) {\n            if (value == null) {\n                throw new Error('ArgumentNullException : InterpolationColors');\n            }\n            this.mBlend = null;\n            this.mColour = null;\n            this.mColourBlends = value;\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"linearColors\", {\n        /**\n         * Gets or sets the starting and ending colors of the radial gradient.\n         * @public\n         */\n        get: function () {\n            return this.mColour;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : radial LinearColors');\n            }\n            if ((value.length < 2)) {\n                throw new Error('ArgumentException : The array is too small LinearColors');\n            }\n            if ((this.mColour == null && typeof this.mColour === 'undefined')) {\n                this.mColour = [value[0], value[1]];\n            }\n            else {\n                this.mColour[0] = value[0];\n                this.mColour[1] = value[1];\n            }\n            if ((this.mBlend == null && typeof this.mBlend === 'undefined')) {\n                //  Set correct colour blend.\n                this.mColourBlends = new PdfColorBlend(2);\n                this.mColourBlends.colors = this.mColour;\n                this.mColourBlends.positions = [0, 1];\n            }\n            else {\n                this.mColourBlends = this.mBlend.generateColorBlend(this.mColour, this.colorSpace);\n            }\n            this.resetFunction();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"rectangle\", {\n        /**\n         * Gets or sets the rectangle.\n         * @public\n         */\n        get: function () {\n            return this.mBoundaries;\n        },\n        set: function (value) {\n            this.mBoundaries = value;\n            this.bBox = PdfArray.fromRectangle(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRadialGradientBrush.prototype, \"extend\", {\n        /**\n         * Gets or sets the value indicating whether the gradient\n         *  should extend starting and ending points.\n         * @public\n         */\n        get: function () {\n            var result1 = PdfExtend.None;\n            var extend1 = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            if (extend1 !== null && typeof extend1 !== 'undefined') {\n                var extStart = (extend1.items(0));\n                var extEnd = (extend1.items(1));\n                if (extStart.value) {\n                    result1 = (result1 | PdfExtend.Start);\n                }\n                if (extEnd.value) {\n                    result1 = (result1 | PdfExtend.End);\n                }\n            }\n            return result1;\n        },\n        set: function (value) {\n            var extend = (this.shading.items.getValue(this.mDictionaryProperties.extend));\n            var extStart;\n            var extEnd1;\n            if (extend == null && typeof extend === 'undefined') {\n                extStart = new PdfBoolean(false);\n                extEnd1 = new PdfBoolean(false);\n                extend = new PdfArray();\n                extend.add(extStart);\n                extend.add(extEnd1);\n                this.shading.items.setValue(this.mDictionaryProperties.extend, extend);\n            }\n            else {\n                extStart = (extend.items(0));\n                extEnd1 = (extend.items(1));\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Sets the points.\n     * @param pointStart The point start.\n     * @param pointEnd The point end.\n     * @param radiusStart The radius start.\n     * @param radiusEnd The radius end.\n     */\n    PdfRadialGradientBrush.prototype.setPoints = function (pointStart, pointEnd, radiusStart, radiusEnd) {\n        var points = new PdfArray();\n        points.add(new PdfNumber(pointStart.x));\n        points.add(new PdfNumber(this.updateY(pointStart.y)));\n        points.add(new PdfNumber(radiusStart));\n        points.add(new PdfNumber(pointEnd.x));\n        points.add(new PdfNumber(this.updateY(pointEnd.y)));\n        if ((radiusStart !== radiusEnd)) {\n            points.add(new PdfNumber(radiusEnd));\n        }\n        else {\n            points.add(new PdfNumber(0));\n        }\n        this.shading.items.setValue(this.mDictionaryProperties.coords, points);\n    };\n    /**\n     * Update y co-ordinate.\n     * @param y Y co-ordinate.\n     */\n    PdfRadialGradientBrush.prototype.updateY = function (y) {\n        if (y !== 0) {\n            return -y;\n        }\n        else {\n            return y;\n        }\n    };\n    /**\n     * Initializess the shading dictionary.\n     * @private\n     */\n    PdfRadialGradientBrush.prototype.initShading = function () {\n        this.colorSpace = PdfColorSpace.Rgb;\n        this.function = this.mColourBlends.getFunction(this.colorSpace);\n        this.shading.items.setValue(this.mDictionaryProperties.shadingType, new PdfNumber((ShadingType.Radial)));\n    };\n    //Overrides\n    /**\n     * Creates a new copy of a brush.\n     * @public\n     */\n    PdfRadialGradientBrush.prototype.clone = function () {\n        var rBrush = this;\n        rBrush.resetPatternDictionary(new PdfDictionary(this.patternDictionary));\n        rBrush.shading = new PdfDictionary();\n        rBrush.initShading();\n        rBrush.setPoints(this.mPointStart, this.mPointEnd, this.mRadiusStart, this.mRadiusEnd);\n        if (rBrush instanceof PdfRadialGradientBrush) {\n            if ((this.matrix !== null && typeof this.matrix !== 'undefined')) {\n                rBrush.matrix = this.matrix.clone();\n            }\n        }\n        if ((this.mColour !== null && typeof this.mColour !== 'undefined')) {\n            rBrush.mColour = (this.mColour);\n        }\n        if ((this.blend !== null && typeof this.blend !== 'undefined')) {\n            rBrush.blend = this.blend.clonePdfBlend();\n        }\n        else if ((this.interpolationColors !== null && typeof this.interpolationColors !== 'undefined')) {\n            rBrush.interpolationColors = this.interpolationColors.cloneColorBlend();\n        }\n        rBrush.extend = this.extend;\n        this.cloneBackgroundValue(rBrush);\n        this.cloneAntiAliasingValue(rBrush);\n        return rBrush;\n    };\n    /**\n     * Resets the function.\n     * @public\n     */\n    PdfRadialGradientBrush.prototype.resetFunction = function () {\n        this.function = this.mColourBlends.getFunction(this.colorSpace);\n    };\n    return PdfRadialGradientBrush;\n}(PdfGradientBrush));\nexport { PdfRadialGradientBrush };\n","/**\n * public Enum for `PdfBorderOverlapStyle`.\n * @private\n */\nexport var PdfBorderOverlapStyle;\n(function (PdfBorderOverlapStyle) {\n    /**\n     * Specifies the type of `Overlap`.\n     * @private\n     */\n    PdfBorderOverlapStyle[PdfBorderOverlapStyle[\"Overlap\"] = 0] = \"Overlap\";\n    /**\n     * Specifies the type of `Inside`.\n     * @private\n     */\n    PdfBorderOverlapStyle[PdfBorderOverlapStyle[\"Inside\"] = 1] = \"Inside\";\n})(PdfBorderOverlapStyle || (PdfBorderOverlapStyle = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfBorders, PdfPaddings } from './pdf-borders';\nimport { PdfBorderOverlapStyle } from './../../tables/light-tables/enum';\n/**\n * Base class for the `grid style`,\n */\nvar PdfGridStyleBase = /** @class */ (function () {\n    function PdfGridStyleBase() {\n    }\n    Object.defineProperty(PdfGridStyleBase.prototype, \"backgroundBrush\", {\n        // Properties\n        /**\n         * Gets or sets the `background brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridBackgroundBrush;\n        },\n        set: function (value) {\n            this.gridBackgroundBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"textBrush\", {\n        /**\n         * Gets or sets the `text brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridTextBrush;\n        },\n        set: function (value) {\n            this.gridTextBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"textPen\", {\n        /**\n         * Gets or sets the `text pen`.\n         * @private\n         */\n        get: function () {\n            return this.gridTextPen;\n        },\n        set: function (value) {\n            this.gridTextPen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"font\", {\n        /**\n         * Gets or sets the `font`.\n         * @private\n         */\n        get: function () {\n            return this.gridFont;\n        },\n        set: function (value) {\n            this.gridFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyleBase.prototype, \"backgroundImage\", {\n        /**\n         * Gets or sets the `background Image`.\n         * @private\n         */\n        get: function () {\n            return this.gridBackgroundImage;\n        },\n        set: function (value) {\n            this.gridBackgroundImage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridStyleBase;\n}());\nexport { PdfGridStyleBase };\n/**\n * `PdfGridStyle` class provides customization of the appearance for the 'PdfGrid'.\n */\nvar PdfGridStyle = /** @class */ (function (_super) {\n    __extends(PdfGridStyle, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGridStyle` class.\n     * @private\n     */\n    function PdfGridStyle() {\n        var _this = _super.call(this) || this;\n        _this.gridBorderOverlapStyle = PdfBorderOverlapStyle.Overlap;\n        _this.bAllowHorizontalOverflow = false;\n        _this.gridHorizontalOverflowType = PdfHorizontalOverflowType.LastPage;\n        return _this;\n    }\n    Object.defineProperty(PdfGridStyle.prototype, \"cellSpacing\", {\n        //Properties\n        /**\n         * Gets or sets the `cell spacing` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridCellSpacing === 'undefined') {\n                this.gridCellSpacing = 0;\n            }\n            return this.gridCellSpacing;\n        },\n        set: function (value) {\n            this.gridCellSpacing = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"horizontalOverflowType\", {\n        /**\n         * Gets or sets the type of the `horizontal overflow` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            return this.gridHorizontalOverflowType;\n        },\n        set: function (value) {\n            this.gridHorizontalOverflowType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"allowHorizontalOverflow\", {\n        /**\n         * Gets or sets a value indicating whether to `allow horizontal overflow`.\n         * @private\n         */\n        get: function () {\n            return this.bAllowHorizontalOverflow;\n        },\n        set: function (value) {\n            this.bAllowHorizontalOverflow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"cellPadding\", {\n        /**\n         * Gets or sets the `cell padding`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n            }\n            return this.gridCellPadding;\n        },\n        set: function (value) {\n            if (typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n                this.gridCellPadding = value;\n            }\n            else {\n                this.gridCellPadding = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridStyle.prototype, \"borderOverlapStyle\", {\n        /**\n         * Gets or sets the `border overlap style` of the 'PdfGrid'.\n         * @private\n         */\n        get: function () {\n            return this.gridBorderOverlapStyle;\n        },\n        set: function (value) {\n            this.gridBorderOverlapStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridStyle;\n}(PdfGridStyleBase));\nexport { PdfGridStyle };\n/**\n * `PdfGridCellStyle` class provides customization of the appearance for the 'PdfGridCell'.\n */\nvar PdfGridCellStyle = /** @class */ (function (_super) {\n    __extends(PdfGridCellStyle, _super);\n    /**\n     * Initializes a new instance of the `PdfGridCellStyle` class.\n     * @private\n     */\n    function PdfGridCellStyle() {\n        var _this = _super.call(this) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridCellBorders = PdfBorders.default;\n        return _this;\n    }\n    Object.defineProperty(PdfGridCellStyle.prototype, \"stringFormat\", {\n        //Properties\n        /**\n         * Gets the `string format` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCellStyle.prototype, \"borders\", {\n        /**\n         * Gets or sets the `border` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.gridCellBorders;\n        },\n        set: function (value) {\n            this.gridCellBorders = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCellStyle.prototype, \"cellPadding\", {\n        /**\n         * Gets or sets the `cell padding`.\n         * @private\n         */\n        get: function () {\n            return this.gridCellPadding;\n        },\n        set: function (value) {\n            if (this.gridCellPadding == null || typeof this.gridCellPadding === 'undefined') {\n                this.gridCellPadding = new PdfPaddings();\n            }\n            this.gridCellPadding = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridCellStyle;\n}(PdfGridStyleBase));\nexport { PdfGridCellStyle };\n/**\n * `PdfGridRowStyle` class provides customization of the appearance for the `PdfGridRow`.\n */\nvar PdfGridRowStyle = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRowStyle` class.\n     * @private\n     */\n    function PdfGridRowStyle() {\n        //\n    }\n    Object.defineProperty(PdfGridRowStyle.prototype, \"backgroundBrush\", {\n        // Properties\n        /**\n         * Gets or sets the `background brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowBackgroundBrush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setBackgroundBrush = function (value) {\n        this.gridRowBackgroundBrush = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.backgroundBrush = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"textBrush\", {\n        /**\n         * Gets or sets the `text brush`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowTextBrush;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setTextBrush = function (value) {\n        this.gridRowTextBrush = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.textBrush = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"textPen\", {\n        /**\n         * Gets or sets the `text pen`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowTextPen;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setTextPen = function (value) {\n        this.gridRowTextPen = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.textPen = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"font\", {\n        /**\n         * Gets or sets the `font`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowFont;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setFont = function (value) {\n        this.gridRowFont = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.font = value;\n            }\n        }\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"border\", {\n        /**\n         * Gets or sets the `border` of the current row.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridRowBorder === 'undefined') {\n                this.setBorder(new PdfBorders());\n            }\n            return this.gridRowBorder;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowStyle.prototype.setBorder = function (value) {\n        this.gridRowBorder = value;\n        if (typeof this.parent !== 'undefined') {\n            for (var i = 0; i < this.parent.cells.count; i++) {\n                this.parent.cells.getCell(i).style.borders = value;\n            }\n        }\n    };\n    /**\n     * sets the `parent row` of the current object.\n     * @private\n     */\n    PdfGridRowStyle.prototype.setParent = function (parent) {\n        this.parent = parent;\n    };\n    Object.defineProperty(PdfGridRowStyle.prototype, \"backgroundImage\", {\n        /**\n         * Gets or sets the `backgroundImage` of the 'PdfGridCell'.\n         * @private\n         */\n        get: function () {\n            return this.gridRowBackgroundImage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * sets the `backgroundImage` of the 'PdfGridCell'.\n     * @private\n     */\n    PdfGridRowStyle.prototype.setBackgroundImage = function (value) {\n        this.gridRowBackgroundImage = value;\n    };\n    return PdfGridRowStyle;\n}());\nexport { PdfGridRowStyle };\n/**\n * public Enum for `PdfHorizontalOverflowType`.\n * @private\n */\nexport var PdfHorizontalOverflowType;\n(function (PdfHorizontalOverflowType) {\n    /**\n     * Specifies the type of `NextPage`.\n     * @private\n     */\n    PdfHorizontalOverflowType[PdfHorizontalOverflowType[\"NextPage\"] = 0] = \"NextPage\";\n    /**\n     * Specifies the type of `LastPage`.\n     * @private\n     */\n    PdfHorizontalOverflowType[PdfHorizontalOverflowType[\"LastPage\"] = 1] = \"LastPage\";\n})(PdfHorizontalOverflowType || (PdfHorizontalOverflowType = {}));\n","import { PdfGrid } from './pdf-grid';\nimport { PdfGridCellStyle } from './styles/style';\nimport { PdfStringLayouter } from './../../graphics/fonts/string-layouter';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfStringFormat } from './../../graphics/fonts/pdf-string-format';\nimport { RectangleF, PointF, SizeF } from './../../drawing/pdf-drawing';\nimport { PdfDashStyle, PdfLineCap } from './../../graphics/enum';\nimport { PdfBorderOverlapStyle } from './../tables/light-tables/enum';\nimport { PdfSolidBrush } from './../../graphics/brushes/pdf-solid-brush';\nimport { PdfColor } from './../../graphics/pdf-color';\nimport { PdfImage } from './../../graphics/images/pdf-image';\nimport { PdfBitmap } from './../../graphics/images/pdf-bitmap';\nimport { PdfTextWebLink } from './../../annotations/pdf-text-web-link';\nimport { PdfLayoutType } from './../../graphics/figures/enum';\nimport { PdfGridLayouter, PdfGridLayoutFormat } from './../../structured-elements/grid/layout/grid-layouter';\nimport { PdfLayoutParams } from '../../../implementation/graphics/figures/base/element-layouter';\n/**\n * `PdfGridCell` class represents the schema of a cell in a 'PdfGrid'.\n */\nvar PdfGridCell = /** @class */ (function () {\n    function PdfGridCell(row) {\n        /**\n         * `Width` of the cell.\n         * @default 0\n         * @private\n         */\n        this.cellWidth = 0;\n        /**\n         * `Height` of the cell.\n         * @default 0\n         * @private\n         */\n        this.cellHeight = 0;\n        /**\n         * `tempval`to stores current width .\n         * @default 0\n         * @private\n         */\n        this.tempval = 0;\n        this.fontSpilt = false;\n        /**\n         * Specifies weather the `cell is drawn`.\n         * @default true\n         * @private\n         */\n        this.finsh = true;\n        /**\n         * The `remaining height` of row span.\n         * @default 0\n         * @private\n         */\n        this.rowSpanRemainingHeight = 0;\n        this.hasRowSpan = false;\n        this.hasColSpan = false;\n        /**\n         * the 'isFinish' is set to page finish\n         */\n        this.isFinish = true;\n        /**\n         * The `present' to store the current cell.\n         * @default false\n         * @private\n         */\n        this.present = false;\n        this.gridRowSpan = 1;\n        this.colSpan = 1;\n        if (typeof row !== 'undefined') {\n            this.gridRow = row;\n        }\n    }\n    Object.defineProperty(PdfGridCell.prototype, \"isCellMergeContinue\", {\n        //Properties\n        get: function () {\n            return this.internalIsCellMergeContinue;\n        },\n        set: function (value) {\n            this.internalIsCellMergeContinue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isRowMergeContinue\", {\n        get: function () {\n            return this.internalIsRowMergeContinue;\n        },\n        set: function (value) {\n            this.internalIsRowMergeContinue = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isCellMergeStart\", {\n        get: function () {\n            return this.internalIsCellMergeStart;\n        },\n        set: function (value) {\n            this.internalIsCellMergeStart = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"isRowMergeStart\", {\n        get: function () {\n            return this.internalIsRowMergeStart;\n        },\n        set: function (value) {\n            this.internalIsRowMergeStart = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"remainingString\", {\n        /**\n         * Gets or sets the `remaining string` after the row split between pages.\n         * @private\n         */\n        get: function () {\n            return this.remaining;\n        },\n        set: function (value) {\n            this.remaining = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"FinishedDrawingCell\", {\n        /**\n         * Gets or sets the `FinishedDrawingCell` .\n         * @private\n         */\n        get: function () {\n            return this.isFinish;\n        },\n        set: function (value) {\n            this.isFinish = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"stringFormat\", {\n        /**\n         * Gets or sets the `string format`.\n         * @private\n         */\n        get: function () {\n            if (this.format == null) {\n                this.format = new PdfStringFormat();\n            }\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"row\", {\n        /**\n         * Gets or sets the parent `row`.\n         * @private\n         */\n        get: function () {\n            return this.gridRow;\n        },\n        set: function (value) {\n            this.gridRow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"value\", {\n        /**\n         * Gets or sets the `value` of the cell.\n         * @private\n         */\n        get: function () {\n            return this.objectValue;\n        },\n        set: function (value) {\n            this.objectValue = value;\n            if (this.objectValue instanceof PdfGrid) {\n                this.row.grid.isSingleGrid = false;\n                var grid = this.objectValue;\n                grid.ParentCell = this;\n                this.objectValue.isChildGrid = true;\n                var rowCount = this.row.grid.rows.count;\n                for (var i = 0; i < rowCount; i++) {\n                    var row = this.row.grid.rows.getRow(i);\n                    var colCount = row.cells.count;\n                    for (var j = 0; j < colCount; j++) {\n                        var cell = row.cells.getCell(j);\n                        cell.parent = this;\n                    }\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"rowSpan\", {\n        /**\n         * Gets or sets a value that indicates the total number of rows that cell `spans` within a PdfGrid.\n         * @private\n         */\n        get: function () {\n            return this.gridRowSpan;\n        },\n        set: function (value) {\n            if (value < 1) {\n                throw new Error('ArgumentException : Invalid span specified, must be greater than or equal to 1');\n            }\n            else {\n                this.gridRowSpan = value;\n                this.row.rowSpanExists = true;\n                this.row.grid.hasRowSpanSpan = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"style\", {\n        /**\n         * Gets or sets the cell `style`.\n         * @private\n         */\n        get: function () {\n            if (this.cellStyle == null) {\n                this.cellStyle = new PdfGridCellStyle();\n            }\n            return this.cellStyle;\n        },\n        set: function (value) {\n            this.cellStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"height\", {\n        /**\n         * Gets the `height` of the PdfGrid cell.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.cellHeight === 0) {\n                this.cellHeight = this.measureHeight();\n            }\n            return this.cellHeight;\n        },\n        set: function (value) {\n            this.cellHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"columnSpan\", {\n        /**\n         * Gets or sets a value that indicates the total number of columns that cell `spans` within a PdfGrid.\n         * @private\n         */\n        get: function () {\n            return this.colSpan;\n        },\n        set: function (value) {\n            if (value < 1) {\n                throw Error('Invalid span specified, must be greater than or equal to 1');\n            }\n            else {\n                this.colSpan = value;\n                this.row.columnSpanExists = true;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridCell.prototype, \"width\", {\n        /**\n         * Gets the `width` of the PdfGrid cell.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.cellWidth === 0 || this.row.grid.isComplete) {\n                this.cellWidth = this.measureWidth();\n            }\n            return Math.round(this.cellWidth);\n        },\n        set: function (value) {\n            this.cellWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Calculates the width`.\n     * @private\n     */\n    PdfGridCell.prototype.measureWidth = function () {\n        // .. Calculate the cell text width.\n        // .....Add border widths, cell spacings and paddings to the width.\n        var width = 0;\n        var layouter = new PdfStringLayouter();\n        if (typeof this.objectValue === 'string') {\n            /* tslint:disable */\n            var slr = layouter.layout(this.objectValue, this.getTextFont(), this.stringFormat, new SizeF(Number.MAX_VALUE, Number.MAX_VALUE), false, new SizeF(0, 0));\n            width += slr.actualSize.width;\n            width += (this.style.borders.left.width + this.style.borders.right.width) * 2;\n        }\n        else if (this.objectValue instanceof PdfGrid) {\n            width = this.objectValue.size.width;\n            //width += this.objectValue.style.cellSpacing;\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            width += this.objectValue.width;\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            var webLink = this.objectValue;\n            var result = layouter.layout(webLink.text, webLink.font, webLink.stringFormat, new SizeF(0, 0), false, new SizeF(0, 0));\n            /* tslint:enable */\n            width += result.actualSize.width;\n            width += (this.style.borders.left.width + this.style.borders.right.width) * 2;\n        }\n        if (!(this.objectValue instanceof PdfGrid)) {\n            if (this.style.cellPadding != null) {\n                width += (this.style.cellPadding.left + this.style.cellPadding.right);\n            }\n            else {\n                width += (this.row.grid.style.cellPadding.left + this.row.grid.style.cellPadding.right);\n            }\n        }\n        else {\n            if (this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined') {\n                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {\n                    width += this.style.cellPadding.left;\n                }\n                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {\n                    width += this.style.cellPadding.right;\n                }\n            }\n            else {\n                if (typeof this.row.grid.style.cellPadding.left !== 'undefined' && this.row.grid.style.cellPadding.hasLeftPad) {\n                    width += this.row.grid.style.cellPadding.left;\n                }\n                if (typeof this.row.grid.style.cellPadding.right !== 'undefined' && this.row.grid.style.cellPadding.hasRightPad) {\n                    width += this.row.grid.style.cellPadding.right;\n                }\n            }\n        }\n        width += this.row.grid.style.cellSpacing;\n        return width;\n    };\n    /**\n     * Draw the `cell background`.\n     * @private\n     */\n    PdfGridCell.prototype.drawCellBackground = function (graphics, bounds) {\n        var backgroundBrush = this.getBackgroundBrush();\n        //graphics.isTemplateGraphics = true;\n        if (backgroundBrush != null) {\n            graphics.save();\n            graphics.drawRectangle(backgroundBrush, bounds.x, bounds.y, bounds.width, bounds.height);\n            graphics.restore();\n        }\n        if (this.style.backgroundImage != null) {\n            var image = this.getBackgroundImage();\n            graphics.drawImage(this.style.backgroundImage, bounds.x, bounds.y, bounds.width, bounds.height);\n        }\n    };\n    /**\n     * `Adjusts the text layout area`.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGridCell.prototype.adjustContentLayoutArea = function (bounds) {\n        //Add Padding value to its Cell Bounds\n        var returnBounds = new RectangleF(bounds.x, bounds.y, bounds.width, bounds.height);\n        if (!(this.objectValue instanceof PdfGrid)) {\n            if (typeof this.style.cellPadding === 'undefined' || this.style.cellPadding == null) {\n                returnBounds.x += this.gridRow.grid.style.cellPadding.left;\n                returnBounds.y += this.gridRow.grid.style.cellPadding.top;\n                returnBounds.width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n                returnBounds.height -= (this.gridRow.grid.style.cellPadding.bottom + this.gridRow.grid.style.cellPadding.top);\n            }\n            else {\n                returnBounds.x += this.style.cellPadding.left;\n                returnBounds.y += this.style.cellPadding.top;\n                returnBounds.width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n                returnBounds.height -= (this.style.cellPadding.bottom + this.style.cellPadding.top);\n                if (this.rowSpan === 1) {\n                    returnBounds.width -= (this.style.borders.left.width);\n                }\n            }\n            if (typeof this.style.borders === 'undefined' || this.style.borders == null) {\n                returnBounds.x += this.gridRow.style.border.left.width;\n                returnBounds.y += this.gridRow.style.border.top.width;\n                returnBounds.width -= (this.gridRow.style.border.left.width + this.gridRow.style.border.right.width);\n                returnBounds.height -= (this.gridRow.style.border.top.width + this.gridRow.style.border.bottom.width);\n            }\n            else {\n                returnBounds.x += this.style.borders.left.width;\n                returnBounds.y += this.style.borders.top.width;\n                returnBounds.width -= (this.style.borders.left.width + this.style.borders.right.width);\n                returnBounds.height -= (this.style.borders.top.width + this.style.borders.bottom.width);\n                if (this.rowSpan === 1) {\n                    returnBounds.width -= (this.style.borders.left.width);\n                }\n            }\n        }\n        else {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                if (this.gridRow.grid.style.cellPadding !== null && typeof this.gridRow.grid.style.cellPadding !== 'undefined') {\n                    var hasLeftPad = this.gridRow.grid.style.cellPadding.hasLeftPad;\n                    var hasTopPad = this.gridRow.grid.style.cellPadding.hasTopPad;\n                    var hasRightPad = this.gridRow.grid.style.cellPadding.hasRightPad;\n                    var hasBottomPad = this.gridRow.grid.style.cellPadding.hasBottomPad;\n                    if (hasLeftPad || hasTopPad || hasRightPad || hasBottomPad) {\n                        if (typeof this.gridRow.grid.style.cellPadding.left !== 'undefined' && hasLeftPad) {\n                            returnBounds.x += this.gridRow.grid.style.cellPadding.left + this.cellStyle.borders.left.width;\n                            returnBounds.width -= this.gridRow.grid.style.cellPadding.left;\n                        }\n                        if (typeof this.gridRow.grid.style.cellPadding.top !== 'undefined' && hasTopPad) {\n                            returnBounds.y += this.gridRow.grid.style.cellPadding.top + this.cellStyle.borders.top.width;\n                            returnBounds.height -= this.gridRow.grid.style.cellPadding.top;\n                        }\n                        if (typeof this.gridRow.grid.style.cellPadding.right !== 'undefined' && hasRightPad) {\n                            returnBounds.width -= this.gridRow.grid.style.cellPadding.right;\n                        }\n                        if (typeof this.gridRow.grid.style.cellPadding.bottom !== 'undefined' && hasBottomPad) {\n                            returnBounds.height -= this.gridRow.grid.style.cellPadding.bottom;\n                        }\n                    }\n                    else {\n                        var format = this.getStringFormat();\n                        if (format.alignment === null || typeof format.alignment === 'undefined') {\n                            returnBounds.x += this.row.grid.style.cellPadding.left;\n                            returnBounds.y += this.row.grid.style.cellPadding.top;\n                        }\n                    }\n                }\n                else {\n                    var format = this.getStringFormat();\n                    if (format.alignment === null || typeof format.alignment === 'undefined') {\n                        returnBounds.x += this.row.grid.style.cellPadding.left;\n                        returnBounds.y += this.row.grid.style.cellPadding.top;\n                    }\n                }\n            }\n            else {\n                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {\n                    returnBounds.x += this.style.cellPadding.left + this.cellStyle.borders.left.width;\n                    returnBounds.width -= this.style.cellPadding.left;\n                }\n                if (typeof this.style.cellPadding.top !== 'undefined' && this.style.cellPadding.hasTopPad) {\n                    returnBounds.y += this.style.cellPadding.top + this.cellStyle.borders.top.width;\n                    returnBounds.height -= this.style.cellPadding.top;\n                }\n                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {\n                    returnBounds.width -= this.style.cellPadding.right;\n                }\n                if (typeof this.style.cellPadding.bottom !== 'undefined' && this.style.cellPadding.hasBottomPad) {\n                    returnBounds.height -= this.style.cellPadding.bottom;\n                }\n            }\n            returnBounds.width -= (this.cellStyle.borders.left.width + this.cellStyle.borders.right.width);\n            returnBounds.height -= (this.cellStyle.borders.top.width + this.cellStyle.borders.bottom.width);\n        }\n        return returnBounds;\n    };\n    /**\n     * `Draws` the specified graphics.\n     * @private\n     */\n    PdfGridCell.prototype.draw = function (graphics, bounds, cancelSubsequentSpans) {\n        var isrowbreak = false;\n        /*if (!this.row.grid.isSingleGrid)\n        {\n            //Check whether the Grid Span to Nextpage\n            if ((this.remainingString != null) || (PdfGridLayouter.repeatRowIndex != -1))\n            {\n                this.DrawParentCells(graphics, bounds, true);\n            }\n            else if (this.row.grid.rows.count > 1)\n            {\n                for (let i : number  = 0; i < this.row.grid.rows.count; i++)\n                {\n                    if (this.row == this.row.grid.rows.getRow(i))\n                    {\n                        if (this.row.grid.rows.getRow(i).rowBreakHeight > 0)\n                            isrowbreak = true;\n                        if ((i > 0) && (isrowbreak))\n                            this.DrawParentCells(graphics, bounds, false);\n                    }\n                }\n            }\n        } */\n        var result = null;\n        /*if (cancelSubsequentSpans)\n        {\n            //..Cancel all subsequent cell spans, if no space exists.\n            let currentCellIndex : number = this.row.cells.indexOf(this);\n            for (let i : number = currentCellIndex + 1; i <= currentCellIndex + this.colSpan; i++)\n            {\n                this.row.cells.getCell(i).isCellMergeContinue = false;\n                this.row.cells.getCell(i).isRowMergeContinue = false;\n            }\n            this.colSpan = 1;\n        }*/\n        //..Skip cells which were already covered by spanmap.\n        if (this.internalIsCellMergeContinue || this.internalIsRowMergeContinue) {\n            if (this.internalIsCellMergeContinue && this.row.grid.style.allowHorizontalOverflow) {\n                if ((this.row.rowOverflowIndex > 0 && (this.row.cells.indexOf(this) != this.row.rowOverflowIndex + 1)) || (this.row.rowOverflowIndex == 0 && this.internalIsCellMergeContinue)) {\n                    return result;\n                }\n            }\n            else {\n                return result;\n            }\n        }\n        //Adjust bounds with Row and Column Spacing\n        bounds = this.adjustOuterLayoutArea(bounds, graphics);\n        this.drawCellBackground(graphics, bounds);\n        var textPen = this.getTextPen();\n        var textBrush = this.getTextBrush();\n        if (typeof textPen === 'undefined' && typeof textBrush === 'undefined') {\n            textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        }\n        var font = this.getTextFont();\n        var strFormat = this.getStringFormat();\n        var innerLayoutArea = bounds;\n        if (innerLayoutArea.height >= graphics.clientSize.height) {\n            // If to break row to next page.\n            if (this.row.grid.allowRowBreakAcrossPages) {\n                innerLayoutArea.height -= innerLayoutArea.y;\n                if (typeof this._rowHeight !== 'undefined' && this._rowHeight !== null && innerLayoutArea.height > this._rowHeight) {\n                    innerLayoutArea.height = this._rowHeight;\n                }\n                //bounds.height -= bounds.y;\n                // if(this.row.grid.isChildGrid)\n                // {\n                //     innerLayoutArea.height -= this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;\n                // }\n            }\n            // if user choose to cut the row whose height is more than page height.\n            // else\n            // {\n            //     innerLayoutArea.height = graphics.clientSize.height;\n            //     bounds.height = graphics.clientSize.height;\n            // }\n        }\n        innerLayoutArea = this.adjustContentLayoutArea(innerLayoutArea);\n        if (typeof this.objectValue === 'string' || typeof this.remaining === 'string') {\n            var temp = void 0;\n            var layoutRectangle = void 0;\n            if (innerLayoutArea.height < font.height)\n                layoutRectangle = new RectangleF(innerLayoutArea.x, innerLayoutArea.y, innerLayoutArea.width, font.height);\n            else\n                layoutRectangle = innerLayoutArea;\n            if (innerLayoutArea.height < font.height && this.row.grid.isChildGrid && this.row.grid.ParentCell != null) {\n                var height = layoutRectangle.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom - this.row.grid.style.cellPadding.bottom;\n                if (this.row.grid.splitChildRowIndex != -1) {\n                    this.fontSpilt = true;\n                    this.row.rowFontSplit = true;\n                }\n                if (height > 0 && height < font.height)\n                    layoutRectangle.height = height;\n                // else if (height + this.row.grid.style.cellPadding.bottom > 0 && height + this.row.grid.style.cellPadding.bottom < font.height)\n                //     layoutRectangle.height = height + this.row.grid.style.cellPadding.bottom;\n                // else if (bounds.height < font.height)\n                //     layoutRectangle.height = bounds.height;\n                // else if (bounds.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom < font.height)\n                //     layoutRectangle.height = bounds.height - this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;                        \n            }\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                layoutRectangle.width -= this.gridRow.grid.style.cellSpacing;\n                bounds.width -= this.gridRow.grid.style.cellSpacing;\n            }\n            if (this.isFinish) {\n                // if (this.row.grid.splitChildRowIndex != -1 && !this.row.grid.isChildGrid && typeof this.remaining === 'undefined'){\n                //     this.remaining = '';\n                //     graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                // } else {\n                temp = this.remaining === '' ? this.remaining : this.objectValue;\n                graphics.drawString(temp, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                if (this.row.grid.splitChildRowIndex != -1 && !this.row.grid.isChildGrid && typeof this.remaining === 'undefined') {\n                    this.remaining = '';\n                    //graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                }\n            }\n            else {\n                if (typeof this.remaining == 'undefined' || this.remaining === null) {\n                    this.remaining = '';\n                }\n                if (this.row.repeatFlag) {\n                    graphics.drawString(this.remaining, font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                }\n                //  else {\n                //     if(this.row.grid.ParentCell.row.repeatFlag) {\n                //         graphics.drawString((this.remaining as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);                    \n                //     } else {\n                //         layoutRectangle.height = this.row.height;\n                //         graphics.drawString((this.objectValue as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n                //         bounds.height = this.row.height;\n                //     }\n                //  }\n                this.isFinish = true;\n                //graphics.drawString((this.remaining as string), font, textPen, textBrush, layoutRectangle.x, layoutRectangle.y, layoutRectangle.width, layoutRectangle.height, strFormat);\n            }\n            result = graphics.stringLayoutResult;\n            // if(this.row.grid.isChildGrid && this.row.rowBreakHeight > 0 && result !=null) {\n            //     bounds.height -= this.row.grid.ParentCell.row.grid.style.cellPadding.bottom;\n            // }\n        }\n        else if (this.objectValue instanceof PdfGrid) {\n            var childGrid = this.objectValue;\n            childGrid.isChildGrid = true;\n            childGrid.ParentCell = this;\n            var layoutRect = void 0;\n            layoutRect = innerLayoutArea;\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                bounds.width -= this.gridRow.grid.style.cellSpacing;\n            }\n            // layoutRect = bounds;\n            // if (this.style.cellPadding != null){\n            //     layoutRect = bounds;            \n            // } else if((this.row.grid.style.cellPadding != null) && (childGrid.style.cellPadding.bottom === 0.5) && (childGrid.style.cellPadding.top === 0.5)\n            //                               && (childGrid.style.cellPadding.left === 5.76) && (childGrid.style.cellPadding.right === 5.76)\n            //                               && (this.gridRow.grid.style.cellSpacing === 0) && (childGrid.style.cellSpacing === 0)) {\n            //     layoutRect = innerLayoutArea;\n            // }\n            // if(this.objectValue.style.cellPadding != null && typeof this.objectValue.style.cellPadding !== 'undefined'){\n            //     layoutRect = bounds;\n            // }           \n            var layouter = new PdfGridLayouter(childGrid);\n            var format = new PdfGridLayoutFormat();\n            if (this.row.grid.LayoutFormat != null)\n                format = this.row.grid.LayoutFormat;\n            else\n                format.layout = PdfLayoutType.Paginate;\n            var param = new PdfLayoutParams();\n            if (graphics.layer != null) {\n                // Define layout parameters.\n                param.page = graphics.page;\n                param.bounds = layoutRect;\n                param.format = format;\n                //Set the span \n                childGrid.setSpan();\n                childGrid.checkSpan();\n                // Draw the child grid.\n                var childGridResult = layouter.Layouter(param);\n                //let childGridResult : PdfLayoutResult = layouter.innerLayout(param);\n                this.value = childGrid;\n                if (this.row.grid.splitChildRowIndex !== -1) {\n                    this.height = this.row.rowBreakHeightValue;\n                }\n                if (param.page != childGridResult.page) //&& (isWidthGreaterthanParent != true))\n                 {\n                    if (this.row.rowBreakHeightValue !== null && typeof this.row.rowBreakHeightValue !== 'undefined')\n                        childGridResult.bounds.height = this.row.rowBreakHeightValue;\n                    if (this.row.rowBreakHeight == 0)\n                        this.row.NestedGridLayoutResult = childGridResult;\n                    else\n                        this.row.rowBreakHeight = this.row.rowBreakHeightValue;\n                    //bounds.height = this.row.rowBreakHeight;\n                    //After drawing paginated nested grid, the bounds of the parent grid in start page should be corrected for borders.\n                    //bounds.height = graphics.clientSize.height - bounds.y;\n                }\n            }\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            var imageBounds = new RectangleF(innerLayoutArea.x, innerLayoutArea.y, innerLayoutArea.width, innerLayoutArea.height);\n            var image = this.objectValue;\n            if (image.width <= innerLayoutArea.width) {\n                imageBounds.width = image.width;\n            }\n            if (image.height <= innerLayoutArea.height) {\n                imageBounds.height = image.height;\n            }\n            graphics.drawImage(this.objectValue, imageBounds.x, imageBounds.y, imageBounds.width, imageBounds.height);\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            this.objectValue.draw(graphics.currentPage, innerLayoutArea);\n        }\n        else if (typeof this.objectValue === 'undefined') {\n            this.objectValue = \"\";\n            graphics.drawString(this.objectValue, font, textPen, textBrush, innerLayoutArea.x, innerLayoutArea.y, innerLayoutArea.width, innerLayoutArea.height, strFormat);\n            if (this.style.cellPadding != null && this.style.cellPadding.bottom == 0 && this.style.cellPadding.left == 0 && this.style.cellPadding.right == 0 && this.style.cellPadding.top == 0) {\n                bounds.width -= (this.style.borders.left.width + this.style.borders.right.width);\n            }\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                bounds.width -= this.gridRow.grid.style.cellSpacing;\n            }\n        }\n        if (this.style.borders != null) {\n            if (!this.fontSpilt)\n                this.drawCellBorders(graphics, bounds);\n            else {\n                if (this.row.grid.ParentCell.row.grid.splitChildRowIndex != -1) {\n                    this.row.rowFontSplit = false;\n                    this.drawCellBorders(graphics, bounds);\n                }\n            }\n        }\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * Draws the `cell border` constructed by drawing lines.\n     * @private\n     */\n    PdfGridCell.prototype.drawCellBorders = function (graphics, bounds) {\n        if (this.row.grid.style.borderOverlapStyle === PdfBorderOverlapStyle.Inside) {\n            bounds.x += this.style.borders.left.width;\n            bounds.y += this.style.borders.top.width;\n            bounds.width -= this.style.borders.right.width;\n            bounds.height -= this.style.borders.bottom.width;\n        }\n        var p1 = new PointF(bounds.x, bounds.y + bounds.height);\n        var p2 = new PointF(bounds.x, bounds.y);\n        var pen = this.cellStyle.borders.left;\n        if (this.cellStyle.borders.left.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        // SetTransparency(ref graphics, pen);\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n        p1 = new PointF(bounds.x + bounds.width, bounds.y);\n        p2 = new PointF(bounds.x + bounds.width, bounds.y + bounds.height);\n        pen = this.cellStyle.borders.right;\n        if ((bounds.x + bounds.width) > (graphics.clientSize.width - (pen.width / 2))) {\n            p1 = new PointF(graphics.clientSize.width - (pen.width / 2), bounds.y);\n            p2 = new PointF(graphics.clientSize.width - (pen.width / 2), bounds.y + bounds.height);\n        }\n        if (this.cellStyle.borders.right.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n        p1 = new PointF(bounds.x, bounds.y);\n        p2 = new PointF(bounds.x + bounds.width, bounds.y);\n        pen = this.cellStyle.borders.top;\n        if (this.cellStyle.borders.top.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n        p1 = new PointF(bounds.x + bounds.width, bounds.y + bounds.height);\n        p2 = new PointF(bounds.x, bounds.y + bounds.height);\n        pen = this.cellStyle.borders.bottom;\n        if ((bounds.y + bounds.height) > (graphics.clientSize.height - (pen.width / 2))) {\n            p1 = new PointF((bounds.x + bounds.width), (graphics.clientSize.height - (pen.width / 2)));\n            p2 = new PointF(bounds.x, (graphics.clientSize.height - (pen.width / 2)));\n        }\n        if (this.cellStyle.borders.bottom.dashStyle === PdfDashStyle.Solid) {\n            pen.lineCap = PdfLineCap.Square;\n        }\n        if (pen.width !== 0) {\n            graphics.drawLine(pen, p1, p2);\n        }\n    };\n    // private setTransparency(graphics : PdfGraphics, pen : PdfPen) : void {\n    //     let alpha : number = (pen.color.a / 255) as number;\n    //     graphics.save();\n    //     graphics.setTransparency(alpha);\n    // }\n    /**\n     * `Adjusts the outer layout area`.\n     * @private\n     */\n    /* tslint:disable */\n    PdfGridCell.prototype.adjustOuterLayoutArea = function (bounds, g) {\n        var isHeader = false;\n        var cellSpacing = this.row.grid.style.cellSpacing;\n        if (cellSpacing > 0) {\n            bounds = new RectangleF(bounds.x + cellSpacing, bounds.y + cellSpacing, bounds.width - cellSpacing, bounds.height - cellSpacing);\n        }\n        var currentColIndex = this.row.cells.indexOf(this);\n        if (this.columnSpan > 1 || (this.row.rowOverflowIndex > 0 && (currentColIndex == this.row.rowOverflowIndex + 1) && this.isCellMergeContinue)) {\n            var span = this.columnSpan;\n            if (span == 1 && this.isCellMergeContinue) {\n                for (var j = currentColIndex + 1; j < this.row.grid.columns.count; j++) {\n                    if (this.row.cells.getCell(j).isCellMergeContinue)\n                        span++;\n                    else\n                        break;\n                }\n            }\n            var totalWidth = 0;\n            for (var i = currentColIndex; i < currentColIndex + span; i++) {\n                if (this.row.grid.style.allowHorizontalOverflow) {\n                    var width = void 0;\n                    var compWidth = this.row.grid.size.width < g.clientSize.width ? this.row.grid.size.width : g.clientSize.width;\n                    if (this.row.grid.size.width > g.clientSize.width) {\n                        width = bounds.x + totalWidth + this.row.grid.columns.getColumn(i).width;\n                    }\n                    else {\n                        width = totalWidth + this.row.grid.columns.getColumn(i).width;\n                    }\n                    if (width > compWidth) {\n                        break;\n                    }\n                }\n                totalWidth += this.row.grid.columns.getColumn(i).width;\n            }\n            totalWidth -= this.row.grid.style.cellSpacing;\n            bounds.width = totalWidth;\n        }\n        if (this.rowSpan > 1 || this.row.rowSpanExists) {\n            var span = this.rowSpan;\n            var currentRowIndex = this.row.grid.rows.rowCollection.indexOf(this.row);\n            if (currentRowIndex == -1) {\n                currentRowIndex = this.row.grid.headers.indexOf(this.row);\n                if (currentRowIndex != -1) {\n                    isHeader = true;\n                }\n            }\n            // if (span == 1 && this.isCellMergeContinue) {\n            //         for (let j : number = currentRowIndex + 1; j < this.row.grid.rows.count; j++)\n            //         {\n            //             let flag : boolean = (isHeader ? this.row.grid.headers.getHeader(j).cells.getCell(currentColIndex).isCellMergeContinue : this.row.grid.rows.getRow(j).cells.getCell(currentColIndex).isCellMergeContinue);\n            //             if (flag)\n            //                 span++;\n            //             else\n            //                 break;\n            //         }\n            // }\n            var totalHeight = 0;\n            var max = 0;\n            for (var i = currentRowIndex; i < currentRowIndex + span; i++) {\n                totalHeight += (isHeader ? this.row.grid.headers.getHeader(i).height : this.row.grid.rows.getRow(i).height);\n                var row = this.row.grid.rows.getRow(i);\n                var rowIndex = this.row.grid.rows.rowCollection.indexOf(row);\n                /*if (this.rowSpan > 1)\n                    {\n                        for (let k : number = 0; k < this.row.cells.count; k++) {\n                            let cell : PdfGridCell = this.row.cells.getCell(k);\n                            if(cell.rowSpan>1)\n                            {\n                                let tempHeight : number =0;\n                                \n                                for (let j :number = i; j < i +cell.rowSpan; j++)\n                                {\n                                    if (!this.row.grid.rows.getRow(j).isRowSpanRowHeightSet)\n                                        this.row.grid.rows.getRow(j).isRowHeightSet = false;\n                                    tempHeight += this.row.grid.rows.getRow(j).height;\n                                    if (!this.row.grid.rows.getRow(j).isRowSpanRowHeightSet)\n                                        this.row.grid.rows.getRow(j).isRowHeightSet = true;\n                                }\n                                //To check the Row spanned cell height is greater than the total spanned row height.\n                                if(cell.height>tempHeight)\n                                {\n                                    if (max < (cell.height - tempHeight))\n                                    {\n                                        max = cell.height - tempHeight;\n                                        if (this.rowSpanRemainingHeight != 0 && max > this.rowSpanRemainingHeight)\n                                        {\n                                            max += this.rowSpanRemainingHeight;\n                                        }\n                                        let index :number = row.cells.indexOf(cell);\n                                        //set the m_rowspanRemainingHeight to last rowspanned row.\n                                        this.row.grid.rows.getRow((rowIndex +cell.rowSpan) - 1).cells.getCell(index).rowSpanRemainingHeight = max;\n                                        this.rowSpanRemainingHeight = this.row.grid.rows.getRow((rowIndex + cell.rowSpan) - 1).cells.getCell(index).rowSpanRemainingHeight;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    if (!this.row.grid.rows.getRow(i).isRowSpanRowHeightSet)\n                    this.row.grid.rows.getRow(i).isRowHeightSet = true;*/\n            }\n            var cellIndex = this.row.cells.indexOf(this);\n            totalHeight -= this.row.grid.style.cellSpacing;\n            // if (this.row.cells.getCell(cellIndex).height > totalHeight && (!this.row.grid.rows.getRow((currentRowIndex + span) - 1).isRowHeightSet)) {\n            //      this.row.grid.rows.getRow((currentRowIndex + span) - 1).cells.getCell(cellIndex).rowSpanRemainingHeight = this.row.cells.getCell(cellIndex).height - totalHeight;\n            //      totalHeight = this.row.cells.getCell(cellIndex).height;\n            //      bounds.height = totalHeight;\n            // } else {\n            bounds.height = totalHeight;\n            //  }\n            if (!this.row.rowMergeComplete) {\n                bounds.height = totalHeight;\n            }\n        }\n        return bounds;\n    };\n    /* tslint:enable */\n    /**\n     * Gets the `text font`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextFont = function () {\n        if (typeof this.style.font !== 'undefined' && this.style.font != null) {\n            return this.style.font;\n        }\n        else if (typeof this.row.style.font !== 'undefined' && this.row.style.font != null) {\n            return this.row.style.font;\n        }\n        else if (typeof this.row.grid.style.font !== 'undefined' && this.row.grid.style.font != null) {\n            return this.row.grid.style.font;\n        }\n        else {\n            return PdfDocument.defaultFont;\n        }\n    };\n    /**\n     * Gets the `text brush`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextBrush = function () {\n        if (typeof this.style.textBrush !== 'undefined' && this.style.textBrush != null) {\n            return this.style.textBrush;\n        }\n        else if (typeof this.row.style.textBrush !== 'undefined' && this.row.style.textBrush != null) {\n            return this.row.style.textBrush;\n        }\n        else {\n            return this.row.grid.style.textBrush;\n        }\n    };\n    /**\n     * Gets the `text pen`.\n     * @private\n     */\n    PdfGridCell.prototype.getTextPen = function () {\n        if (typeof this.style.textPen !== 'undefined' && this.style.textPen != null) {\n            return this.style.textPen;\n        }\n        else if (typeof this.row.style.textPen !== 'undefined' && this.row.style.textPen != null) {\n            return this.row.style.textPen;\n        }\n        else {\n            return this.row.grid.style.textPen;\n        }\n    };\n    /**\n     * Gets the `background brush`.\n     * @private\n     */\n    PdfGridCell.prototype.getBackgroundBrush = function () {\n        if (typeof this.style.backgroundBrush !== 'undefined' && this.style.backgroundBrush != null) {\n            return this.style.backgroundBrush;\n        }\n        else if (typeof this.row.style.backgroundBrush !== 'undefined' && this.row.style.backgroundBrush != null) {\n            return this.row.style.backgroundBrush;\n        }\n        else {\n            return this.row.grid.style.backgroundBrush;\n        }\n    };\n    /**\n     * Gets the `background image`.\n     * @private\n     */\n    PdfGridCell.prototype.getBackgroundImage = function () {\n        if (typeof this.style.backgroundImage !== 'undefined' && this.style.backgroundImage != null) {\n            return this.style.backgroundImage;\n        }\n        else if (typeof this.row.style.backgroundImage !== 'undefined' && this.row.style.backgroundImage != null) {\n            return this.row.style.backgroundImage;\n        }\n        else {\n            return this.row.grid.style.backgroundImage;\n        }\n    };\n    /**\n     * Gets the current `StringFormat`.\n     * @private\n     */\n    PdfGridCell.prototype.getStringFormat = function () {\n        if (typeof this.style.stringFormat !== 'undefined' && this.style.stringFormat != null) {\n            return this.style.stringFormat;\n        }\n        else {\n            return this.stringFormat;\n        }\n    };\n    /**\n     * Calculates the `height`.\n     * @private\n     */\n    PdfGridCell.prototype.measureHeight = function () {\n        // .. Calculate the cell text height.\n        // .....Add border widths, cell spacings and paddings to the height.\n        var width = this.calculateWidth();\n        // //check whether the Current PdfGridCell has padding\n        if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n            width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n            //width -= (this.style.borders.left.width + this.style.borders.right.width);\n        }\n        else {\n            width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n            width -= (this.style.borders.left.width + this.style.borders.right.width);\n        }\n        var height = 0;\n        var layouter = new PdfStringLayouter();\n        if (typeof this.objectValue === 'string' || typeof this.remaining === 'string') {\n            var currentValue = this.objectValue;\n            /* tslint:disable */\n            if (!this.isFinish)\n                currentValue = !(this.remaining === null || this.remaining === '' ||\n                    typeof this.remaining === 'undefined') ? this.remaining : this.objectValue;\n            var slr = null;\n            var cellIndex = this.row.cells.indexOf(this);\n            if (this.gridRow.grid.style.cellSpacing != 0) {\n                width -= this.gridRow.grid.style.cellSpacing * 2;\n            }\n            if (!this.row.cells.getCell(cellIndex).hasColSpan && !this.row.cells.getCell(cellIndex).hasRowSpan) {\n                if (this.gridRow.grid.isChildGrid) {\n                    if (width < 0) {\n                        this.tempval = width;\n                        if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                            this.tempval += (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n                        }\n                        else {\n                            this.tempval += (this.style.cellPadding.right + this.style.cellPadding.left);\n                            this.tempval += (this.style.borders.left.width + this.style.borders.right.width);\n                        }\n                    }\n                    else {\n                        this.tempval = width;\n                    }\n                    slr = layouter.layout(currentValue, this.getTextFont(), this.stringFormat, new SizeF(this.tempval, 0), false, new SizeF(0, 0));\n                    height += slr.actualSize.height;\n                }\n                else {\n                    slr = layouter.layout(currentValue, this.getTextFont(), this.stringFormat, new SizeF(width, 0), false, new SizeF(0, 0));\n                    height += slr.actualSize.height;\n                }\n            }\n            /* tslint:enable */\n            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        }\n        else if (this.objectValue instanceof PdfGrid) {\n            var cellIndex = this.row.cells.indexOf(this);\n            var internalWidth = 0;\n            if ((this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined')) {\n                internalWidth = this.calculateWidth();\n                if (typeof this.style.cellPadding.left !== 'undefined' && this.style.cellPadding.hasLeftPad) {\n                    internalWidth -= this.style.cellPadding.left;\n                }\n                if (typeof this.style.cellPadding.right !== 'undefined' && this.style.cellPadding.hasRightPad) {\n                    internalWidth -= this.style.cellPadding.right;\n                }\n            }\n            else if ((this.row.grid.style.cellPadding != null || typeof this.row.grid.style.cellPadding !== 'undefined')) {\n                internalWidth = this.calculateWidth();\n                if (typeof this.row.grid.style.cellPadding.left !== 'undefined' && this.row.grid.style.cellPadding.hasLeftPad) {\n                    internalWidth -= this.row.grid.style.cellPadding.left;\n                }\n                if (typeof this.row.grid.style.cellPadding.right !== 'undefined' && this.row.grid.style.cellPadding.hasRightPad) {\n                    internalWidth -= this.row.grid.style.cellPadding.right;\n                }\n            }\n            else {\n                internalWidth = this.calculateWidth();\n            }\n            this.objectValue.tempWidth = internalWidth;\n            if (!this.row.cells.getCell(cellIndex).hasColSpan && !this.row.cells.getCell(cellIndex).hasRowSpan) {\n                height = this.objectValue.size.height;\n            }\n            else {\n                height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n            }\n            if (this.gridRow.grid.style.cellSpacing !== 0) {\n                width -= this.gridRow.grid.style.cellSpacing * 2;\n                //height += (this.row.grid.style.cellPadding.top + this.row.grid.style.cellPadding.bottom);\n            }\n            if (this.style.cellPadding != null || typeof this.style.cellPadding !== 'undefined') {\n                if (typeof this.row.grid.style.cellPadding.top !== 'undefined' && this.row.grid.style.cellPadding.hasTopPad) {\n                    height += this.row.grid.style.cellPadding.top;\n                }\n                if (this.row.grid.style.cellPadding.hasBottomPad && typeof this.row.grid.style.cellPadding.bottom !== 'undefined') {\n                    height += this.row.grid.style.cellPadding.bottom;\n                }\n            }\n            height += this.objectValue.style.cellSpacing;\n        }\n        else if (this.objectValue instanceof PdfImage || this.objectValue instanceof PdfBitmap) {\n            height += this.objectValue.height;\n        }\n        else if (this.objectValue instanceof PdfTextWebLink) {\n            var webLink = this.objectValue;\n            /* tslint:disable */\n            var slr = layouter.layout(webLink.text, webLink.font, webLink.stringFormat, new SizeF(width, 0), false, new SizeF(0, 0));\n            /* tslint:enable */\n            height += slr.actualSize.height;\n            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        }\n        else if (typeof this.objectValue === 'undefined') {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                width -= (this.gridRow.grid.style.cellPadding.right + this.gridRow.grid.style.cellPadding.left);\n            }\n            else {\n                width -= (this.style.cellPadding.right + this.style.cellPadding.left);\n                width -= (this.style.borders.left.width + this.style.borders.right.width);\n            }\n            height += (this.style.borders.top.width + this.style.borders.bottom.width) * 2;\n        }\n        //Add padding top and bottom value to height\n        if (!(this.objectValue instanceof PdfGrid)) {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                height += (this.row.grid.style.cellPadding.top + this.row.grid.style.cellPadding.bottom);\n            }\n            else {\n                height += (this.style.cellPadding.top + this.style.cellPadding.bottom);\n            }\n        }\n        else {\n            if (this.style.cellPadding == null || typeof this.style.cellPadding === 'undefined') {\n                if (typeof this.row.grid.style.cellPadding.top !== 'undefined' && this.row.grid.style.cellPadding.hasTopPad) {\n                    height += this.row.grid.style.cellPadding.top;\n                }\n                if (typeof this.row.grid.style.cellPadding.bottom !== 'undefined' && this.row.grid.style.cellPadding.hasBottomPad) {\n                    height += this.row.grid.style.cellPadding.bottom;\n                }\n            }\n            else {\n                if (typeof this.style.cellPadding.top !== 'undefined' && this.style.cellPadding.hasTopPad) {\n                    height += this.style.cellPadding.top;\n                }\n                if (typeof this.style.cellPadding.bottom !== 'undefined' && this.style.cellPadding.hasBottomPad) {\n                    height += this.style.cellPadding.bottom;\n                }\n            }\n        }\n        height += this.row.grid.style.cellSpacing;\n        return height;\n    };\n    /**\n     * return the calculated `width` of the cell.\n     * @private\n     */\n    PdfGridCell.prototype.calculateWidth = function () {\n        var cellIndex = this.row.cells.indexOf(this);\n        var rowindex = this.row.grid.rows.rowCollection.indexOf(this.row);\n        var columnSpan = this.columnSpan;\n        var width = 0;\n        if (columnSpan === 1) {\n            for (var i = 0; i < columnSpan; i++) {\n                width += this.row.grid.columns.getColumn(cellIndex + i).width;\n            }\n        }\n        else if (columnSpan > 1) {\n            for (var i = 0; i < columnSpan; i++) {\n                width += this.row.grid.columns.getColumn(cellIndex + i).width;\n                if ((i + 1) < columnSpan) {\n                    this.row.cells.getCell(cellIndex + i + 1).hasColSpan = true;\n                }\n            }\n        }\n        if (this.parent != null && this.parent.row.width > 0) {\n            if ((this.row.grid.isChildGrid) && this.parent != null && (this.row.width > this.parent.row.width)) {\n                width = 0;\n                for (var j = 0; j < this.parent.columnSpan; j++) {\n                    width += this.parent.row.grid.columns.getColumn(j).width;\n                }\n                width = width / this.row.cells.count;\n            }\n        }\n        return width;\n    };\n    return PdfGridCell;\n}());\nexport { PdfGridCell };\n/**\n * `PdfGridCellCollection` class provides access to an ordered,\n * strongly typed collection of 'PdfGridCell' objects.\n * @private\n */\nvar PdfGridCellCollection = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGridCellCollection` class with the row.\n     * @private\n     */\n    function PdfGridCellCollection(row) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.cells = [];\n        this.gridRow = row;\n    }\n    //Properties\n    /**\n     * Gets the current `cell`.\n     * @private\n     */\n    PdfGridCellCollection.prototype.getCell = function (index) {\n        if (index < 0 || index >= this.count) {\n            throw new Error('IndexOutOfRangeException');\n        }\n        return this.cells[index];\n    };\n    Object.defineProperty(PdfGridCellCollection.prototype, \"count\", {\n        /**\n         * Gets the cells `count`.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.cells.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridCellCollection.prototype.add = function (cell) {\n        if (typeof cell === 'undefined') {\n            var tempcell = new PdfGridCell();\n            this.add(tempcell);\n            return cell;\n        }\n        else {\n            cell.row = this.gridRow;\n            this.cells.push(cell);\n        }\n    };\n    /**\n     * Returns the `index of` a particular cell in the collection.\n     * @private\n     */\n    PdfGridCellCollection.prototype.indexOf = function (cell) {\n        return this.cells.indexOf(cell);\n    };\n    return PdfGridCellCollection;\n}());\nexport { PdfGridCellCollection };\n","import { PdfGridCell } from './pdf-grid-cell';\nimport { PdfStringFormat } from './../../graphics/fonts/pdf-string-format';\n/**\n * `PdfGridColumn` class represents the schema of a column in a 'PdfGrid'.\n */\nvar PdfGridColumn = /** @class */ (function () {\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfGridColumn` class with the parent grid.\n     * @private\n     */\n    function PdfGridColumn(grid) {\n        /**\n         * The `width` of the column.\n         * @default 0\n         * @private\n         */\n        this.columnWidth = 0;\n        this.grid = grid;\n    }\n    Object.defineProperty(PdfGridColumn.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the 'PdfGridColumn'.\n         * @private\n         */\n        get: function () {\n            return this.columnWidth;\n        },\n        set: function (value) {\n            this.isCustomWidth = true;\n            this.columnWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumn.prototype, \"format\", {\n        /**\n         * Gets or sets the information about the text `formatting`.\n         * @private\n         */\n        get: function () {\n            if (this.stringFormat == null) {\n                this.stringFormat = new PdfStringFormat(); //GetDefaultFormat();\n            }\n            return this.stringFormat;\n        },\n        set: function (value) {\n            this.stringFormat = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridColumn;\n}());\nexport { PdfGridColumn };\n/**\n * `PdfGridColumnCollection` class provides access to an ordered,\n * strongly typed collection of 'PdfGridColumn' objects.\n * @private\n */\nvar PdfGridColumnCollection = /** @class */ (function () {\n    //properties\n    //Constructors\n    /**\n     * Initializes a new instance of the `PdfGridColumnCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridColumnCollection(grid) {\n        /**\n         * @hidden\n         * @private\n         */\n        this.internalColumns = [];\n        /**\n         * @hidden\n         * @private\n         */\n        this.columnWidth = 0;\n        this.grid = grid;\n        this.internalColumns = [];\n    }\n    //Iplementation\n    /**\n     * `Add` a new column to the 'PdfGrid'.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.add = function (count) {\n        // public add(column : PdfGridColumn) : void\n        // public add(arg : number|PdfGridColumn) : void {\n        // if (typeof arg === 'number') {\n        for (var i = 0; i < count; i++) {\n            this.internalColumns.push(new PdfGridColumn(this.grid));\n            for (var index = 0; index < this.grid.rows.count; index++) {\n                var row = this.grid.rows.getRow(index);\n                var cell = new PdfGridCell();\n                cell.value = '';\n                row.cells.add(cell);\n            }\n        }\n        // } else {\n        //     let column : PdfGridColumn = new PdfGridColumn(this.grid);\n        //     this.columns.push(column);\n        //     return column;\n        // }\n    };\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of columns` in the 'PdfGrid'.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.internalColumns.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"width\", {\n        /**\n         * Gets the `widths`.\n         * @private\n         */\n        get: function () {\n            if (this.columnWidth === 0) {\n                this.columnWidth = this.measureColumnsWidth();\n            }\n            if (this.grid.initialWidth !== 0 && this.columnWidth !== this.grid.initialWidth && !this.grid.style.allowHorizontalOverflow) {\n                this.columnWidth = this.grid.initialWidth;\n                this.grid.isPageWidth = true;\n            }\n            return this.columnWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridColumnCollection.prototype, \"columns\", {\n        /**\n         * Gets the `array of PdfGridColumn`.[Read-Only]\n         * @private\n         */\n        get: function () {\n            return this.internalColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the `PdfGridColumn` from the specified index.[Read-Only]\n     * @private\n     */\n    PdfGridColumnCollection.prototype.getColumn = function (index) {\n        if (index >= 0 && index <= this.columns.length) {\n            return this.columns[index];\n        }\n        else {\n            throw Error('can not get the column from the index: ' + index);\n        }\n    };\n    //Implementation\n    /**\n     * `Calculates the column widths`.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.measureColumnsWidth = function () {\n        var totalWidth = 0;\n        this.grid.measureColumnsWidth();\n        for (var i = 0, count = this.internalColumns.length; i < count; i++) {\n            totalWidth += this.internalColumns[i].width;\n        }\n        return totalWidth;\n    };\n    /**\n     * Gets the `widths of the columns`.\n     * @private\n     */\n    PdfGridColumnCollection.prototype.getDefaultWidths = function (totalWidth) {\n        var widths = [];\n        var summ = 0.0;\n        var subFactor = this.count;\n        for (var i = 0; i < this.count; i++) {\n            if (this.grid.isPageWidth && totalWidth >= 0 && !this.internalColumns[i].isCustomWidth) {\n                this.internalColumns[i].width = 0;\n            }\n            else {\n                widths[i] = this.internalColumns[i].width;\n                if (this.internalColumns[i].width > 0 && this.internalColumns[i].isCustomWidth) {\n                    totalWidth -= this.internalColumns[i].width;\n                    subFactor--;\n                }\n                else {\n                    widths[i] = 0;\n                }\n            }\n        }\n        for (var i = 0; i < this.count; i++) {\n            var width = totalWidth / subFactor;\n            if (widths[i] <= 0) {\n                widths[i] = width;\n            }\n        }\n        return widths;\n    };\n    return PdfGridColumnCollection;\n}());\nexport { PdfGridColumnCollection };\n","import { PdfGridCell, PdfGridCellCollection } from './pdf-grid-cell';\nimport { PdfGridRowStyle } from './styles/style';\n/**\n * `PdfGridRow` class provides customization of the settings for the particular row.\n */\nvar PdfGridRow = /** @class */ (function () {\n    //Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRow` class with the parent grid.\n     * @private\n     */\n    function PdfGridRow(grid) {\n        /**\n         * Stores the index of the overflowing row.\n         * @private\n         */\n        this.gridRowOverflowIndex = 0;\n        /**\n         * The `height` of the row.\n         * @private\n         */\n        this.rowHeight = 0;\n        /**\n         * The `width` of the row.\n         * @private\n         */\n        this.rowWidth = 0;\n        /**\n         * The `isFinish` of the row.\n         * @private\n         */\n        this.isrowFinish = false;\n        /**\n         * Check whether the Row span row height `is set explicitly`.\n         * @default false\n         * @public\n         */\n        this.isRowSpanRowHeightSet = false;\n        /**\n         * The `page count` of the row.\n         * @public\n         */\n        this.noOfPageCount = 0;\n        /**\n         * Check whether the row height `is set explicitly`.\n         * @default false\n         * @private\n         */\n        this.isRowHeightSet = false;\n        this.isPageBreakRowSpanApplied = false;\n        /**\n         * Check weather the row merge `is completed` or not.\n         * @default true\n         * @private\n         */\n        this.isRowMergeComplete = true;\n        this.repeatFlag = false;\n        this.rowFontSplit = false;\n        this.isHeaderRow = false;\n        this.pdfGrid = grid;\n    }\n    Object.defineProperty(PdfGridRow.prototype, \"rowSpanExists\", {\n        //Properties\n        /**\n         * Gets or sets a value indicating [`row span exists`].\n         * @private\n         */\n        get: function () {\n            return this.bRowSpanExists;\n        },\n        set: function (value) {\n            this.bRowSpanExists = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"cells\", {\n        /**\n         * Gets the `cells` from the selected row.[Read-Only].\n         * @private\n         */\n        get: function () {\n            if (this.gridCells == null) {\n                this.gridCells = new PdfGridCellCollection(this);\n            }\n            return this.gridCells;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"grid\", {\n        /**\n         * Gets or sets the parent `grid`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGrid;\n        },\n        set: function (value) {\n            this.pdfGrid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"style\", {\n        /**\n         * Gets or sets the row `style`.\n         * @private\n         */\n        get: function () {\n            if (typeof this.rowStyle === 'undefined') {\n                this.rowStyle = new PdfGridRowStyle();\n                this.rowStyle.setParent(this);\n            }\n            return this.rowStyle;\n        },\n        set: function (value) {\n            this.rowStyle = value;\n            for (var i = 0; i < this.cells.count; i++) {\n                this.cells.getCell(i).style.borders = value.border;\n                if (typeof value.font !== 'undefined') {\n                    this.cells.getCell(i).style.font = value.font;\n                }\n                if (typeof value.backgroundBrush !== 'undefined') {\n                    this.cells.getCell(i).style.backgroundBrush = value.backgroundBrush;\n                }\n                if (typeof value.backgroundImage !== 'undefined') {\n                    this.cells.getCell(i).style.backgroundImage = value.backgroundImage;\n                }\n                if (typeof value.textBrush !== 'undefined') {\n                    this.cells.getCell(i).style.textBrush = value.textBrush;\n                }\n                if (typeof value.textPen !== 'undefined') {\n                    this.cells.getCell(i).style.textPen = value.textPen;\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowBreakHeight\", {\n        /**\n         * `Height` of the row yet to be drawn after split.\n         * @private\n         */\n        get: function () {\n            if (typeof this.gridRowBreakHeight === 'undefined') {\n                this.gridRowBreakHeight = 0;\n            }\n            return this.gridRowBreakHeight;\n        },\n        set: function (value) {\n            this.gridRowBreakHeight = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowOverflowIndex\", {\n        /**\n         * `over flow index` of the row.\n         * @private\n         */\n        get: function () {\n            return this.gridRowOverflowIndex;\n        },\n        set: function (value) {\n            this.gridRowOverflowIndex = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"height\", {\n        /**\n         * Gets or sets the `height` of the row.\n         * @private\n         */\n        get: function () {\n            if (!this.isRowHeightSet) {\n                this.rowHeight = this.measureHeight();\n            }\n            return this.rowHeight;\n        },\n        set: function (value) {\n            this.rowHeight = value;\n            this.isRowHeightSet = true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"width\", {\n        /**\n         * Gets or sets the `width` of the row.\n         * @private\n         */\n        get: function () {\n            if (this.rowWidth === 0 || typeof this.rowWidth === 'undefined') {\n                this.rowWidth = this.measureWidth();\n            }\n            return this.rowWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"NestedGridLayoutResult\", {\n        /**\n         * Gets or sets the row `Nested grid Layout Result`.\n         * @private\n         */\n        get: function () {\n            return this.gridResult;\n        },\n        set: function (value) {\n            this.gridResult = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"columnSpanExists\", {\n        /**\n         * Gets or sets a value indicating [`column span exists`].\n         * @private\n         */\n        get: function () {\n            return this.bColumnSpanExists;\n        },\n        set: function (value) {\n            this.bColumnSpanExists = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowMergeComplete\", {\n        /**\n         * Check whether the Row `has row span or row merge continue`.\n         * @private\n         */\n        get: function () {\n            return this.isRowMergeComplete;\n        },\n        set: function (value) {\n            this.isRowMergeComplete = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRow.prototype, \"rowIndex\", {\n        /**\n         * Returns `index` of the row.\n         * @private\n         */\n        get: function () {\n            return this.grid.rows.rowCollection.indexOf(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * `Calculates the height`.\n     * @private\n     */\n    PdfGridRow.prototype.measureHeight = function () {\n        var rowSpanRemainingHeight = 0;\n        var rowHeight;\n        var maxHeight = 0;\n        if (this.cells.getCell(0).rowSpan > 1) {\n            rowHeight = 0;\n        }\n        else {\n            rowHeight = this.cells.getCell(0).height;\n        }\n        for (var i = 0; i < this.cells.count; i++) {\n            var cell = this.cells.getCell(i);\n            //get the maximum rowspan remaining height.\n            if (cell.rowSpanRemainingHeight > rowSpanRemainingHeight) {\n                rowSpanRemainingHeight = cell.rowSpanRemainingHeight;\n            }\n            //skip the cell if row spanned.\n            // if (cell.isRowMergeContinue) {\n            //     continue;\n            // }\n            // if (!cell.isRowMergeContinue) {\n            //     this.rowMergeComplete = false;\n            // }\n            this.rowMergeComplete = false;\n            if (cell.rowSpan > 1) {\n                var cellIn = i;\n                var rowin = this.isHeaderRow ? this.grid.headers.indexOf(this) : this.grid.rows.rowCollection.indexOf(this);\n                for (var j = 0; j < cell.rowSpan; j++) {\n                    if ((j + 1) < cell.rowSpan) {\n                        (this.isHeaderRow ? this.grid.headers.getHeader(rowin + j + 1) : this.grid.rows.getRow(rowin + j + 1)).cells.getCell(cellIn).hasRowSpan = true;\n                    }\n                }\n                if (maxHeight < cell.height) {\n                    maxHeight = cell.height;\n                }\n                continue;\n            }\n            rowHeight = Math.max(rowHeight, cell.height);\n        }\n        if (maxHeight > rowHeight) {\n            rowHeight = maxHeight;\n        }\n        if (rowHeight === 0) {\n            rowHeight = maxHeight;\n        }\n        else if (rowSpanRemainingHeight > 0) {\n            rowHeight += rowSpanRemainingHeight;\n        }\n        return rowHeight;\n    };\n    PdfGridRow.prototype.measureWidth = function () {\n        var rowWid = 0;\n        for (var i = 0; i < this.grid.columns.count; i++) {\n            var column = this.grid.columns.getColumn(i);\n            rowWid += column.width;\n        }\n        return rowWid;\n    };\n    return PdfGridRow;\n}());\nexport { PdfGridRow };\n/**\n * `PdfGridRowCollection` class provides access to an ordered, strongly typed collection of 'PdfGridRow' objects.\n * @private\n */\nvar PdfGridRowCollection = /** @class */ (function () {\n    // Constructor\n    /**\n     * Initializes a new instance of the `PdfGridRowCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridRowCollection(grid) {\n        this.rows = [];\n        this.grid = grid;\n    }\n    Object.defineProperty(PdfGridRowCollection.prototype, \"count\", {\n        //Properties\n        /**\n         * Gets the number of header in the `PdfGrid`.[Read-Only].\n         * @private\n         */\n        get: function () {\n            return this.rows.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridRowCollection.prototype, \"rowCollection\", {\n        //Implementation\n        /**\n         * Return the row collection of the `grid`.\n         * @private\n         */\n        get: function () {\n            return this.rows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridRowCollection.prototype.addRow = function (arg) {\n        if (typeof arg === 'undefined') {\n            var temprow = new PdfGridRow(this.grid);\n            this.addRow(temprow);\n            return temprow;\n        }\n        else {\n            arg.style.setBackgroundBrush(this.grid.style.backgroundBrush);\n            arg.style.setFont(this.grid.style.font);\n            arg.style.setTextBrush(this.grid.style.textBrush);\n            arg.style.setTextPen(this.grid.style.textPen);\n            if (arg.cells.count === 0) {\n                for (var i = 0; i < this.grid.columns.count; i++) {\n                    arg.cells.add(new PdfGridCell());\n                }\n            }\n            this.rows.push(arg);\n        }\n    };\n    /**\n     * Return the row by index.\n     * @private\n     */\n    PdfGridRowCollection.prototype.getRow = function (index) {\n        return this.rows[index];\n    };\n    return PdfGridRowCollection;\n}());\nexport { PdfGridRowCollection };\n/**\n * `PdfGridHeaderCollection` class provides customization of the settings for the header.\n * @private\n */\nvar PdfGridHeaderCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfGridHeaderCollection` class with the parent grid.\n     * @private\n     */\n    function PdfGridHeaderCollection(grid) {\n        /**\n         * The array to store the `rows` of the grid header.\n         * @private\n         */\n        this.rows = [];\n        this.grid = grid;\n        this.rows = [];\n    }\n    //Properties\n    /**\n     * Gets a 'PdfGridRow' object that represents the `header` row in a 'PdfGridHeaderCollection' control.[Read-Only].\n     * @private\n     */\n    PdfGridHeaderCollection.prototype.getHeader = function (index) {\n        // if (index < 0 || index >= Count) {\n        //     throw new IndexOutOfRangeException();\n        // }\n        return (this.rows[index]);\n    };\n    Object.defineProperty(PdfGridHeaderCollection.prototype, \"count\", {\n        /**\n         * Gets the `number of header` in the 'PdfGrid'.[Read-Only]\n         * @private\n         */\n        get: function () {\n            return this.rows.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGridHeaderCollection.prototype.add = function (arg) {\n        if (typeof arg === 'number') {\n            var row = void 0;\n            for (var i = 0; i < arg; i++) {\n                row = new PdfGridRow(this.grid);\n                row.isHeaderRow = true;\n                for (var j = 0; j < this.grid.columns.count; j++) {\n                    row.cells.add(new PdfGridCell());\n                }\n                this.rows.push(row);\n            }\n            return this.rows;\n        }\n        else {\n            this.rows.push(arg);\n        }\n    };\n    PdfGridHeaderCollection.prototype.indexOf = function (row) {\n        return this.rows.indexOf(row);\n    };\n    return PdfGridHeaderCollection;\n}());\nexport { PdfGridHeaderCollection };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfGrid.ts class for EJ2-PDF\n */\nimport { PdfGridColumnCollection } from './pdf-grid-column';\nimport { PdfGridRowCollection, PdfGridHeaderCollection } from './pdf-grid-row';\nimport { RectangleF, SizeF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfLayoutElement } from './../../graphics/figures/layout-element';\nimport { PdfLayoutFormat } from './../../graphics/figures/base/element-layouter';\nimport { PdfGridStyle } from './styles/style';\nimport { PdfBorders } from './styles/pdf-borders';\nimport { PdfGridLayouter } from './../../structured-elements/grid/layout/grid-layouter';\nvar PdfGrid = /** @class */ (function (_super) {\n    __extends(PdfGrid, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGrid` class.\n     * @private\n     */\n    function PdfGrid() {\n        var _this = _super.call(this) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridSize = new SizeF(0, 0);\n        /**\n         * Check the child grid is ' split or not'\n         */\n        _this.isGridSplit = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isRearranged = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.pageBounds = new RectangleF();\n        /**\n         * @hidden\n         * @private\n         */\n        _this.listOfNavigatePages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.parentCellIndex = 0;\n        _this.tempWidth = 0;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.breakRow = true;\n        _this.splitChildRowIndex = -1;\n        /**\n         * The event raised on `begin cell lay outing`.\n         * @event\n         * @private\n         */\n        //public beginPageLayout : Function;\n        /**\n         * The event raised on `end cell lay outing`.\n         * @event\n         * @private\n         */\n        //public endPageLayout : Function;\n        _this.hasRowSpanSpan = false;\n        _this.hasColumnSpan = false;\n        _this.isSingleGrid = true;\n        return _this;\n    }\n    Object.defineProperty(PdfGrid.prototype, \"raiseBeginCellDraw\", {\n        //Properties\n        /**\n         * Gets a value indicating whether the `start cell layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.beginCellDraw !== 'undefined' && typeof this.beginCellDraw !== null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"raiseEndCellDraw\", {\n        /**\n         * Gets a value indicating whether the `end cell layout event` should be raised.\n         * @private\n         */\n        get: function () {\n            return (typeof this.endCellDraw !== 'undefined' && typeof this.endCellDraw !== null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"repeatHeader\", {\n        /**\n         * Gets or sets a value indicating whether to `repeat header`.\n         * @private\n         */\n        get: function () {\n            if (this.bRepeatHeader == null || typeof this.bRepeatHeader === 'undefined') {\n                this.bRepeatHeader = false;\n            }\n            return this.bRepeatHeader;\n        },\n        set: function (value) {\n            this.bRepeatHeader = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"allowRowBreakAcrossPages\", {\n        /**\n         * Gets or sets a value indicating whether to split or cut rows that `overflow a page`.\n         * @private\n         */\n        get: function () {\n            return this.breakRow;\n        },\n        set: function (value) {\n            this.breakRow = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"columns\", {\n        /**\n         * Gets the `column` collection of the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridColumns == null || typeof this.gridColumns === 'undefined') {\n                this.gridColumns = new PdfGridColumnCollection(this);\n            }\n            return this.gridColumns;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"rows\", {\n        /**\n         * Gets the `row` collection from the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridRows == null) {\n                this.gridRows = new PdfGridRowCollection(this);\n            }\n            return this.gridRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"headers\", {\n        /**\n         * Gets the `headers` collection from the PdfGrid.[Read-Only]\n         * @private\n         */\n        get: function () {\n            if (this.gridHeaders == null || typeof this.gridHeaders === 'undefined') {\n                this.gridHeaders = new PdfGridHeaderCollection(this);\n            }\n            return this.gridHeaders;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"initialWidth\", {\n        /**\n         * Indicating `initial width` of the page.\n         * @private\n         */\n        get: function () {\n            return this.gridInitialWidth;\n        },\n        set: function (value) {\n            this.gridInitialWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"style\", {\n        /**\n         * Gets or sets the `grid style`.\n         * @private\n         */\n        get: function () {\n            if (this.gridStyle == null) {\n                this.gridStyle = new PdfGridStyle();\n            }\n            return this.gridStyle;\n        },\n        set: function (value) {\n            if (this.gridStyle == null) {\n                this.gridStyle = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"isPageWidth\", {\n        /**\n         * Gets a value indicating whether the grid column width is considered to be `page width`.\n         * @private\n         */\n        get: function () {\n            return this.ispageWidth;\n        },\n        set: function (value) {\n            this.ispageWidth = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"isChildGrid\", {\n        /**\n         * Gets or set if grid `is nested grid`.\n         * @private\n         */\n        get: function () {\n            return this.ischildGrid;\n        },\n        set: function (value) {\n            this.ischildGrid = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"size\", {\n        /**\n         * Gets or set if grid ' is split or not'\n         * @public\n         */\n        // public get isGridSplit() : boolean {\n        //     return this.isgridSplit;\n        // }\n        // public set isGridSplit(value : boolean) {\n        //     this.isgridSplit = value;\n        // }public get isGridSplit() : boolean {\n        //     return this.isgridSplit;\n        // }\n        // public set isGridSplit(value : boolean) {\n        //     this.isgridSplit = value;\n        // }\n        /**\n         * Gets the `size`.\n         * @private\n         */\n        get: function () {\n            if ((this.gridSize.width === 0 || typeof this.gridSize.width === 'undefined') && this.gridSize.height === 0) {\n                this.gridSize = this.measure();\n            }\n            return this.gridSize;\n            // } else {\n            //     return this.gridSize;\n            // }\n        },\n        set: function (value) {\n            this.gridSize = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"ParentCell\", {\n        get: function () {\n            return this.parentCell;\n        },\n        set: function (value) {\n            this.parentCell = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGrid.prototype, \"LayoutFormat\", {\n        get: function () {\n            return this.layoutFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfGrid.prototype.draw = function (arg1, arg2, arg3, arg4) {\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2.x, arg2.y);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null)) {\n            var width = (arg1.graphics.clientSize.width - arg2);\n            var layoutRectangle = new RectangleF(arg2, arg3, width, 0);\n            return this.drawHelper(arg1, layoutRectangle, arg4);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'boolean') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n    };\n    /**\n     * `measures` this instance.\n     * @private\n     */\n    PdfGrid.prototype.measure = function () {\n        var height = 0;\n        var width = this.columns.width;\n        for (var i = 0; i < this.headers.count; i++) {\n            var row = this.headers.getHeader(i);\n            height += row.height;\n        }\n        for (var i = 0; i < this.rows.count; i++) {\n            var row = this.rows.getRow(i);\n            height += row.height;\n        }\n        return new SizeF(width, height);\n    };\n    PdfGrid.prototype.onBeginCellDraw = function (args) {\n        if (this.raiseBeginCellDraw) {\n            this.beginCellDraw(this, args);\n        }\n    };\n    PdfGrid.prototype.onEndCellDraw = function (args) {\n        if (this.raiseEndCellDraw) {\n            this.endCellDraw(this, args);\n        }\n    };\n    /**\n     * `Layouts` the specified graphics.\n     * @private\n     */\n    PdfGrid.prototype.layout = function (param) {\n        var width = param.bounds.width;\n        var height = param.bounds.height;\n        var hasChanged = false;\n        if (typeof param.bounds.width === 'undefined' || param.bounds.width === 0) {\n            width = param.page.getClientSize().width - param.bounds.x;\n            hasChanged = true;\n        }\n        if (typeof param.bounds.height === 'undefined' || param.bounds.height === 0) {\n            height = param.page.getClientSize().height;\n            hasChanged = true;\n        }\n        if (hasChanged) {\n            param.bounds = new RectangleF(param.bounds.x, param.bounds.y, width, height);\n        }\n        if (this.rows.count !== 0) {\n            var currentRow = this.rows.getRow(0).cells.getCell(0).style;\n            if (currentRow.borders != null && ((currentRow.borders.left != null && currentRow.borders.left.width !== 1) ||\n                (currentRow.borders.top != null && currentRow.borders.top.width !== 1))) {\n                var x = currentRow.borders.left.width / 2;\n                var y = currentRow.borders.top.width / 2;\n                if (param.bounds.x === PdfBorders.default.right.width / 2 && param.bounds.y === PdfBorders.default.right.width / 2) {\n                    var newBound = new RectangleF(x, y, this.gridSize.width, this.gridSize.height);\n                    param.bounds = newBound;\n                }\n            }\n        }\n        this.setSpan();\n        this.checkSpan();\n        this.layoutFormat = param.format;\n        this._gridLocation = param.bounds;\n        var layouter = new PdfGridLayouter(this);\n        var result = (layouter.Layouter(param));\n        return result;\n    };\n    PdfGrid.prototype.setSpan = function () {\n        var colSpan = 1;\n        var rowSpan = 1;\n        var currentCellIndex = 0;\n        var currentRowIndex = 0;\n        var maxSpan = 0;\n        var rowCount = this.headers.count;\n        for (var i = 0; i < rowCount; i++) {\n            var row = this.headers.getHeader(i);\n            maxSpan = 0;\n            var colCount = row.cells.count;\n            for (var j = 0; j < colCount; j++) {\n                var cell = row.cells.getCell(j);\n                maxSpan = Math.max(maxSpan, cell.rowSpan);\n                //Skip setting span map for already coverted rows/columns.\n                if (!cell.isCellMergeContinue && !cell.isRowMergeContinue && (cell.columnSpan > 1 || cell.rowSpan > 1)) {\n                    if (cell.columnSpan + j > row.cells.count) {\n                        throw new Error('Invalid span specified at row ' + j.toString() + ' column ' + i.toString());\n                    }\n                    if (cell.rowSpan + i > this.headers.count) {\n                        throw new Error('Invalid span specified at Header ' + j.toString() + ' column ' + i.toString());\n                    }\n                    // if (this.rows.count !== 0 && cell.rowSpan + i > this.rows.count) {\n                    //     throw new Error('Invalid span specified at row ' + j.toString() + ' column ' + i.toString());\n                    // }\n                    if (cell.columnSpan > 1 && cell.rowSpan > 1) {\n                        colSpan = cell.columnSpan;\n                        rowSpan = cell.rowSpan;\n                        currentCellIndex = j;\n                        currentRowIndex = i;\n                        cell.isCellMergeStart = true;\n                        cell.isRowMergeStart = true;\n                        //Set Column merges for first row\n                        while (colSpan > 1) {\n                            currentCellIndex++;\n                            row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                            row.cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                            row.cells.getCell(currentCellIndex).rowSpan = rowSpan;\n                            colSpan--;\n                        }\n                        currentCellIndex = j;\n                        colSpan = cell.columnSpan;\n                        //Set Row Merges and column merges foreach subsequent rows.\n                        while (rowSpan > 1) {\n                            currentRowIndex++;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                            rowSpan--;\n                            while (colSpan > 1) {\n                                currentCellIndex++;\n                                this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                this.headers.getHeader(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                colSpan--;\n                            }\n                            colSpan = cell.columnSpan;\n                            currentCellIndex = j;\n                        }\n                    }\n                    else if (cell.columnSpan > 1 && cell.rowSpan === 1) {\n                        colSpan = cell.columnSpan;\n                        currentCellIndex = j;\n                        cell.isCellMergeStart = true;\n                        //Set Column merges.\n                        while (colSpan > 1) {\n                            currentCellIndex++;\n                            row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                            colSpan--;\n                        }\n                    }\n                    else if (cell.columnSpan === 1 && cell.rowSpan > 1) {\n                        rowSpan = cell.rowSpan;\n                        currentRowIndex = i;\n                        //Set row Merges.\n                        while (rowSpan > 1) {\n                            currentRowIndex++;\n                            this.headers.getHeader(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                            rowSpan--;\n                        }\n                    }\n                }\n            }\n            row.maximumRowSpan = maxSpan;\n        }\n    };\n    PdfGrid.prototype.checkSpan = function () {\n        var cellcolSpan;\n        var cellrowSpan = 1;\n        var cellmaxSpan = 0;\n        var currentCellIndex;\n        var currentRowIndex = 0;\n        cellcolSpan = cellrowSpan = 1;\n        currentCellIndex = currentRowIndex = 0;\n        if (this.hasRowSpanSpan || this.hasColumnSpan) {\n            var rowCount = this.rows.count;\n            for (var i = 0; i < rowCount; i++) {\n                var row = this.rows.getRow(i);\n                cellmaxSpan = 0;\n                var colCount = row.cells.count;\n                for (var j = 0; j < colCount; j++) {\n                    var cell = row.cells.getCell(j);\n                    cellmaxSpan = Math.max(cellmaxSpan, cell.rowSpan);\n                    //Skip setting span map for already coverted rows/columns.\n                    if (!cell.isCellMergeContinue && !cell.isRowMergeContinue\n                        && (cell.columnSpan > 1 || cell.rowSpan > 1)) {\n                        if (cell.columnSpan + j > row.cells.count) {\n                            throw new Error('Invalid span specified at row  ' + j.toString() + ' column ' + i.toString());\n                        }\n                        if (cell.rowSpan + i > this.rows.count) {\n                            throw new Error('Invalid span specified at row  ' + j.toString() + ' column ' + i.toString());\n                        }\n                        if (cell.columnSpan > 1 && cell.rowSpan > 1) {\n                            cellcolSpan = cell.columnSpan;\n                            cellrowSpan = cell.rowSpan;\n                            currentCellIndex = j;\n                            currentRowIndex = i;\n                            cell.isCellMergeStart = true;\n                            cell.isRowMergeStart = true;\n                            //Set Column merges for first row\n                            while (cellcolSpan > 1) {\n                                currentCellIndex++;\n                                row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                row.cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                cellcolSpan--;\n                            }\n                            currentCellIndex = j;\n                            cellcolSpan = cell.columnSpan;\n                            //Set Row Merges and column merges foreach subsequent rows.\n                            while (cellrowSpan > 1) {\n                                currentRowIndex++;\n                                this.rows.getRow(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                                this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                cellrowSpan--;\n                                while (cellcolSpan > 1) {\n                                    currentCellIndex++;\n                                    this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                    this.rows.getRow(currentRowIndex).cells.getCell(currentCellIndex).isRowMergeContinue = true;\n                                    cellcolSpan--;\n                                }\n                                cellcolSpan = cell.columnSpan;\n                                currentCellIndex = j;\n                            }\n                        }\n                        else if (cell.columnSpan > 1 && cell.rowSpan === 1) {\n                            cellcolSpan = cell.columnSpan;\n                            currentCellIndex = j;\n                            cell.isCellMergeStart = true;\n                            //Set Column merges.\n                            while (cellcolSpan > 1) {\n                                currentCellIndex++;\n                                row.cells.getCell(currentCellIndex).isCellMergeContinue = true;\n                                cellcolSpan--;\n                            }\n                        }\n                        else if (cell.columnSpan === 1 && cell.rowSpan > 1) {\n                            cellrowSpan = cell.rowSpan;\n                            currentRowIndex = i;\n                            //Set row Merges.\n                            while (cellrowSpan > 1) {\n                                currentRowIndex++;\n                                this.rows.getRow(currentRowIndex).cells.getCell(j).isRowMergeContinue = true;\n                                cellrowSpan--;\n                            }\n                        }\n                    }\n                }\n                row.maximumRowSpan = cellmaxSpan;\n            }\n        }\n    };\n    PdfGrid.prototype.measureColumnsWidth = function (bounds) {\n        if (typeof bounds !== 'undefined') {\n            this.isPageWidth = false;\n            var widths = this.columns.getDefaultWidths(bounds.width - bounds.x);\n            //let tempWidth : number = this.columns.getColumn(0).width;\n            for (var i = 0, count = this.columns.count; i < count; i++) {\n                // if (this.columns.getColumn(i).width < 0)\n                //     this.columns.getColumn(i).columnWidth = widths[i];\n                // else if (this.columns.getColumn(i).width > 0 && !this.columns.getColumn(i).isCustomWidth && widths[i]>0 && this.isComplete)\n                this.columns.getColumn(i).columnWidth = widths[i];\n                this.tempWidth = widths[i];\n            }\n            if (this.ParentCell != null && this.style.allowHorizontalOverflow == false && this.ParentCell.row.grid.style.allowHorizontalOverflow == false) {\n                var padding = 0;\n                var columnWidth = 0;\n                var columnCount = this.columns.count;\n                var childGridColumnWidth = 0;\n                if (this.ParentCell.style.cellPadding != null || typeof this.ParentCell.style.cellPadding !== 'undefined') {\n                    if (typeof this.ParentCell.style.cellPadding.left != 'undefined' && this.ParentCell.style.cellPadding.hasLeftPad) {\n                        padding += this.ParentCell.style.cellPadding.left;\n                    }\n                    if (typeof this.ParentCell.style.cellPadding.right != 'undefined' && this.ParentCell.style.cellPadding.hasRightPad) {\n                        padding += this.ParentCell.style.cellPadding.right;\n                    }\n                }\n                for (var i = 0; i < this.ParentCell.columnSpan; i++) {\n                    columnWidth += this.ParentCell.row.grid.columns.getColumn(this.parentCellIndex + i).width;\n                }\n                for (var j = 0; j < this.columns.count; j++) {\n                    if (this.gridColumns.getColumn(j).width > 0 && this.gridColumns.getColumn(j).isCustomWidth) {\n                        columnWidth -= this.gridColumns.getColumn(j).width;\n                        columnCount--;\n                    }\n                }\n                if ((this.ParentCell.row.grid.style.cellPadding != null || typeof this.ParentCell.row.grid.style.cellPadding != 'undefined')) {\n                    if (typeof this.ParentCell.row.grid.style.cellPadding.top != 'undefined' && this.ParentCell.row.grid.style.cellPadding.hasTopPad) {\n                        padding += this.ParentCell.row.grid.style.cellPadding.top;\n                    }\n                    if (typeof this.ParentCell.row.grid.style.cellPadding.bottom != 'undefined' && this.ParentCell.row.grid.style.cellPadding.hasBottomPad) {\n                        padding += this.ParentCell.row.grid.style.cellPadding.bottom;\n                    }\n                }\n                if (this.ParentCell.row.grid.style.cellSpacing != 0) {\n                    columnWidth -= this.ParentCell.row.grid.style.cellSpacing * 2;\n                }\n                if (columnWidth > padding) {\n                    childGridColumnWidth = (columnWidth - padding) / columnCount;\n                    this.tempWidth = childGridColumnWidth;\n                    if (this.ParentCell != null) {\n                        for (var j = 0; j < this.columns.count; j++) {\n                            if (!this.columns.getColumn(j).isCustomWidth)\n                                this.columns.getColumn(j).columnWidth = childGridColumnWidth;\n                        }\n                    }\n                }\n            }\n            // if (this.ParentCell != null && this.ParentCell.row.width > 0)\n            // {\n            //     if (this.isChildGrid && this.gridSize.width > this.ParentCell.row.width)\n            //     {\n            //         widths = this.columns.getDefaultWidths(bounds.width);\n            //         for (let i : number = 0; i < this.columns.count; i++)\n            //         {\n            //             this.columns.getColumn(i).width = widths[i];\n            //         }\n            //     }\n            // }\n        }\n        else {\n            var widths = [this.columns.count];\n            for (var n = 0; n < this.columns.count; n++) {\n                widths[n] = 0;\n            }\n            var cellWidth = 0;\n            var cellWidths = 0;\n            if ((typeof this.isChildGrid === 'undefined' && typeof this._gridLocation !== 'undefined') || (this.isChildGrid === null && typeof this._gridLocation !== 'undefined')) {\n                this.initialWidth = this._gridLocation.width;\n            }\n            if (this.headers.count > 0) {\n                var colCount_1 = this.headers.getHeader(0).cells.count;\n                var rowCount = this.headers.count;\n                for (var i = 0; i < colCount_1; i++) {\n                    cellWidth = 0;\n                    for (var j = 0; j < rowCount; j++) {\n                        var rowWidth = Math.min(this.initialWidth, this.headers.getHeader(j).cells.getCell(i).width);\n                        cellWidth = Math.max(cellWidth, rowWidth);\n                    }\n                    widths[i] = cellWidth;\n                }\n            }\n            // else {\n            //     let colCount : number = this.rows.getRow(0).cells.count;\n            //     let rowCount : number = this.rows.count;\n            //     for (let i : number = 0; i < colCount; i++) {\n            //         cellWidth = 0;\n            //         for (let j : number = 0; j < rowCount; j++) {\n            //             let rowWidth : number = Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width);\n            //             cellWidth = Math.max(cellWidth, rowWidth);\n            //         }\n            //         widths[i] = cellWidth;\n            //     }\n            // }\n            cellWidth = 0;\n            for (var i = 0, colCount_2 = this.columns.count; i < colCount_2; i++) {\n                for (var j = 0, rowCount = this.rows.count; j < rowCount; j++) {\n                    if ((this.rows.getRow(j).cells.getCell(i).columnSpan == 1 && !this.rows.getRow(j).cells.getCell(i).isCellMergeContinue) || this.rows.getRow(j).cells.getCell(i).value != null) {\n                        if (this.rows.getRow(j).cells.getCell(i).value != null && !this.rows.getRow(j).grid.style.allowHorizontalOverflow) {\n                            var value = this.rows.getRow(j).grid.style.cellPadding.right +\n                                this.rows.getRow(j).grid.style.cellPadding.left\n                                + this.rows.getRow(j).cells.getCell(i).style.borders.left.width / 2;\n                            //  if (this.initialWidth != 0 )\n                            //         (this.rows.getRow(j).cells.getCell(i).value as PdfGrid).initialWidth = this.initialWidth - value;\n                        }\n                        var rowWidth = 0;\n                        rowWidth = this.initialWidth > 0.0 ? Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width) : this.rows.getRow(j).cells.getCell(i).width;\n                        // let internalWidth : number = this.rows.getRow(j).cells.getCell(i).width;\n                        // internalWidth += this.rows.getRow(j).cells.getCell(i).style.borders.left.width;\n                        // internalWidth += this.rows.getRow(j).cells.getCell(i).style.borders.right.width;\n                        // let internalHeight : number = this.rows.getRow(j).cells.getCell(i).height;\n                        // internalHeight += (this.rows.getRow(j).cells.getCell(i).style.borders.top.width);\n                        // internalHeight += (this.rows.getRow(j).cells.getCell(i).style.borders.bottom.width);\n                        // let isCorrectWidth : boolean = (internalWidth + this.gridLocation.x) > this.currentGraphics.clientSize.width;\n                        // let isCorrectHeight : boolean = (internalHeight + this.gridLocation.y) > this.currentGraphics.clientSize.height;\n                        // if (isCorrectWidth || isCorrectHeight) {\n                        //     throw Error('Image size exceeds client size of the page. Can not insert this image');\n                        // }\n                        // rowWidth = Math.min(this.initialWidth, this.rows.getRow(j).cells.getCell(i).width);\n                        cellWidth = Math.max(widths[i], Math.max(cellWidth, rowWidth));\n                        cellWidth = Math.max(this.columns.getColumn(i).width, cellWidth);\n                    }\n                }\n                if (this.rows.count != 0)\n                    widths[i] = cellWidth;\n                cellWidth = 0;\n            }\n            for (var i = 0, RowCount = this.rows.count; i < RowCount; i++) {\n                for (var j = 0, ColCount = this.columns.count; j < ColCount; j++) {\n                    if (this.rows.getRow(i).cells.getCell(j).columnSpan > 1) {\n                        var total = widths[j];\n                        for (var k = 1; k < this.rows.getRow(i).cells.getCell(j).columnSpan; k++) {\n                            total += widths[j + k];\n                        }\n                        // if (this.rows.getRow(i).cells.getCell(j).width > total)\n                        // {\n                        //     let extendedWidth : number = this.rows.getRow(i).cells.getCell(j).width - total;\n                        //     extendedWidth = extendedWidth / this.rows.getRow(i).cells.getCell(j).columnSpan;\n                        //     for (let k : number = j; k < j + this.rows.getRow(i).cells.getCell(j).columnSpan; k++)\n                        //         widths[k] += extendedWidth;\n                        // }\n                    }\n                }\n            }\n            // if (this.isChildGrid && this.initialWidth != 0)\n            // {\n            //     widths = this.columns.getDefaultWidths(this.initialWidth);\n            // }\n            for (var i = 0, count = this.columns.count; i < count; i++) {\n                if (this.columns.getColumn(i).width <= 0)\n                    this.columns.getColumn(i).columnWidth = widths[i];\n                else if (this.columns.getColumn(i).width > 0 && !this.columns.getColumn(i).isCustomWidth)\n                    this.columns.getColumn(i).columnWidth = widths[i];\n            }\n            var padding = 0;\n            var colWidth = 0;\n            var colCount = this.columns.count;\n            var childGridColWidth = 0;\n            colWidth = this.tempWidth;\n            for (var j = 0; j < this.columns.count; j++) {\n                if (this.gridColumns.getColumn(j).width > 0 && this.gridColumns.getColumn(j).isCustomWidth) {\n                    colWidth -= this.gridColumns.getColumn(j).width;\n                    colCount--;\n                }\n            }\n            // if (this.style.cellSpacing != 0){\n            //     colWidth -= this.style.cellSpacing * 2;\n            // }\n            if (colWidth > 0) {\n                if (this.ParentCell.row.grid.style.cellSpacing != 0) {\n                    colWidth -= this.ParentCell.row.grid.style.cellSpacing * 2;\n                }\n            }\n            if (colWidth > padding) {\n                childGridColWidth = (colWidth) / colCount;\n                if (this.ParentCell != null) {\n                    for (var j = 0; j < this.columns.count; j++) {\n                        if (!this.columns.getColumn(j).isCustomWidth)\n                            this.columns.getColumn(j).columnWidth = childGridColWidth;\n                    }\n                }\n            }\n        }\n    };\n    return PdfGrid;\n}(PdfLayoutElement));\nexport { PdfGrid };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfGrid } from '../pdf-grid';\nimport { PdfStringFormat } from './../../../graphics/fonts/pdf-string-format';\nimport { SizeF, RectangleF, PointF } from './../../../drawing/pdf-drawing';\nimport { PdfBorders } from '../styles/pdf-borders';\nimport { PdfLayoutType, PdfLayoutBreakType } from './../../../graphics/figures/enum';\nimport { PdfLayoutResult, PdfLayoutFormat, ElementLayouter } from './../../../graphics/figures/base/element-layouter';\nimport { PdfHorizontalOverflowType } from '../styles/style';\nimport { TemporaryDictionary } from './../../../collections/object-object-pair/dictionary';\nimport { PdfStringLayouter } from './../../../graphics/fonts/string-layouter';\nimport { PdfDocument } from './../../../document/pdf-document';\n/**\n * Class `lay outing the text`.\n *\n */\nvar PdfGridLayouter = /** @class */ (function (_super) {\n    __extends(PdfGridLayouter, _super);\n    //constructor\n    /**\n     * Initialize a new instance for `PdfGrid` class.\n     * @private\n     */\n    function PdfGridLayouter(baseFormat) {\n        var _this = _super.call(this, baseFormat) || this;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridInitialWidth = 0;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.gridSize = new SizeF(0, 0);\n        _this.parentCellIndex = 0;\n        _this.tempWidth = 0;\n        _this.childheight = 0;\n        /**\n         * Check weather it is `child grid or not`.\n         * @private\n         */\n        _this.isChildGrid = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.hasRowSpanSpan = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.isRearranged = false;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.pageBounds = new RectangleF();\n        /**\n         * @hidden\n         * @private\n         */\n        _this.listOfNavigatePages = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.flag = true;\n        /**\n         * @hidden\n         * @private\n         */\n        _this.columnRanges = [];\n        /**\n         * @hidden\n         * @private\n         */\n        _this.currentLocation = new PointF(0, 0);\n        /**\n         * @hidden\n         * @private\n         */\n        _this.breakRow = true;\n        _this.slr = null;\n        _this.remainderText = null;\n        _this.isPaginate = false;\n        /**\n         * Checks whether the x co-ordinate is need to set as client size or not.\n         * @hidden\n         * @private\n         */\n        _this.isOverloadWithPosition = false;\n        return _this;\n    }\n    Object.defineProperty(PdfGridLayouter.prototype, \"Grid\", {\n        //Properties\n        get: function () {\n            return this.elements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Constructors\n    /**\n     * Initializes a new instance of the `StringLayouter` class.\n     * @private\n     */\n    //Public methods\n    /**\n     * `Layouts` the text.\n     * @private\n     */\n    /**\n     * `Layouts` the specified graphics.\n     * @private\n     */\n    /**\n     * `Layouts` the specified graphics.\n     * @private\n     */\n    /*public layout(graphics : PdfLayoutParams) : PdfLayoutResult\n    public layout(graphics : PdfGraphics, bounds : RectangleF) : void\n    public layout(graphics : PdfGraphics, bounds : PointF) : void\n    public layout(graphics ?: PdfGraphics | PdfLayoutParams, bounds ?: PointF | RectangleF) : void | PdfLayoutResult  {\n        if (graphics instanceof PdfGraphics) {\n        if (bounds instanceof PointF) {\n            if (bounds.x === 0) {\n                bounds.x = PdfBorders.default.right.width / 2;\n            }\n            if (bounds.y === 0) {\n                bounds.y = PdfBorders.default.top.width / 2;\n            }\n            let boundaries : RectangleF = new RectangleF(bounds, new SizeF(0, 0));\n            this.layout(graphics, boundaries);\n        } else {\n            let width : number = graphics.clientSize.width;\n            let parameter : PdfLayoutParams = new PdfLayoutParams();\n            parameter.bounds = bounds;\n            this.currentGraphics = graphics;\n            if (graphics.layer != null) {\n                let index : number = 0;\n                if (this.currentGraphics.page instanceof PdfPage) {\n                    index = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);\n                } else {\n                    index = (this.currentGraphics.page as PdfPageBase).defaultLayerIndex;\n                }\n            } else {\n                this.layoutInternal(parameter);\n            }\n        }\n    }\n    }*/\n    /**\n     * Gets the `format`.\n     * @private\n     */\n    PdfGridLayouter.prototype.getFormat = function (format) {\n        var f = format;\n        return f;\n    };\n    /**\n     * `Layouts` the element.\n     * @private\n     */\n    PdfGridLayouter.prototype.layoutInternal = function (param) {\n        var format = this.getFormat(param.format);\n        this.gridLayoutFormat = this.getFormat(param.format);\n        this.currentPage = param.page;\n        if (this.currentPage !== null) {\n            var pageHeight = this.currentPage.getClientSize().height;\n            var pageWidth = this.currentPage.getClientSize().width;\n            this.currentPageBounds = this.currentPage.getClientSize();\n        }\n        else {\n            throw Error('Can not set page as null');\n            //this.currentPageBounds = this.currentGraphics.clientSize;\n        }\n        this.currentGraphics = this.currentPage.graphics;\n        //this.currentGraphics = (this.currentPage != null ) ? this.currentPage.graphics : this.currentGraphics;\n        // if (this.currentGraphics.layer !== null) {\n        //     let index : number = 0;\n        //     if (this.currentGraphics.page instanceof PdfPage) {\n        //         index = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);\n        //     } else {\n        //         index = (this.currentGraphics.page as PdfPageBase).defaultLayerIndex;\n        //     }\n        //     this.listOfNavigatePages.push(index);\n        // }\n        var index = 0;\n        index = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n        this.listOfNavigatePages.push(index);\n        if (format != null && format.break === PdfLayoutBreakType.FitColumnsToPage) {\n            this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), new SizeF(this.Grid.columns.width, this.currentGraphics.clientSize.height));\n        }\n        else {\n            this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), this.currentGraphics.clientSize);\n        }\n        //this.currentBounds = new RectangleF(new PointF(param.bounds.x, param.bounds.y), this.currentGraphics.clientSize);\n        if (this.Grid.rows.count !== 0) {\n            this.currentBounds.width = (param.bounds.width > 0) ? param.bounds.width :\n                (this.currentBounds.width - this.Grid.rows.getRow(0).cells.getCell(0).style.borders.left.width / 2);\n        }\n        else if (this.Grid.headers.count !== 0) {\n            // this.currentBounds.width = (param.bounds.width > 0) ? param.bounds.width : (this.currentBounds.width -\n            //                                 this.Grid.headers.getHeader(0).cells.getCell(0).style.borders.left.width / 2);\n            this.currentBounds.width = param.bounds.width;\n        }\n        else {\n            throw Error('Please add row or header into grid');\n        }\n        this.startLocation = new PointF(param.bounds.x, param.bounds.y);\n        // if (this.Grid.style.allowHorizontalOverflow && this.currentBounds.width > this.currentGraphics.clientSize.width) {\n        //     this.currentBounds.width = this.currentGraphics.clientSize.width;\n        //     this.currentBounds.width -= this.currentBounds.x;\n        // }\n        // if (this.Grid.isChildGrid) {\n        //     this.childheight = param.bounds.height;\n        // }\n        // if (param.format !== null && param.format.usePaginateBounds) {\n        //     if (param.format.paginateBounds.height > 0) {\n        //         this.currentBounds.height = param.format.paginateBounds.height;\n        //     }\n        //} else \n        if (param.bounds.height > 0 && !this.Grid.isChildGrid) {\n            this.currentBounds.height = param.bounds.height;\n        }\n        if (!this.Grid.isChildGrid) {\n            this.hType = this.Grid.style.horizontalOverflowType;\n        }\n        if (!this.Grid.style.allowHorizontalOverflow) {\n            this.columnRanges = [];\n            if (typeof this.Grid.isChildGrid !== 'undefined' && typeof this.Grid.isChildGrid) {\n                this.Grid.measureColumnsWidth(this.currentBounds);\n            }\n            else {\n                this.Grid.measureColumnsWidth(new RectangleF(this.currentBounds.x, this.currentBounds.y, this.currentBounds.x + this.currentBounds.width, this.currentBounds.height));\n            }\n            this.columnRanges.push([0, this.Grid.columns.count - 1]);\n        }\n        else {\n            this.Grid.measureColumnsWidth();\n            this.determineColumnDrawRanges();\n        }\n        if (this.Grid.hasRowSpanSpan) {\n            for (var i = 0; i < this.Grid.rows.count; i++) {\n                if (this.Grid.rows.getRow(i).height !== -1 && !this.Grid.rows.getRow(i).isRowHeightSet) {\n                    this.Grid.rows.getRow(i).isRowHeightSet = true;\n                }\n            }\n        }\n        var result = this.layoutOnPage(param);\n        return result;\n    };\n    // /* tslint:enable */\n    /**\n     * `Determines the column draw ranges`.\n     * @private\n     */\n    PdfGridLayouter.prototype.determineColumnDrawRanges = function () {\n        var startColumn = 0;\n        var endColumn = 0;\n        var cellWidths = 0;\n        var availableWidth = this.currentGraphics.clientSize.width - this.currentBounds.x;\n        for (var i = 0; i < this.Grid.columns.count; i++) {\n            cellWidths += this.Grid.columns.getColumn(i).width;\n            if (cellWidths >= availableWidth) {\n                var subWidths = 0;\n                for (var j = startColumn; j <= i; j++) {\n                    subWidths += this.Grid.columns.getColumn(j).width;\n                    if (subWidths > availableWidth) {\n                        break;\n                    }\n                    endColumn = j;\n                }\n                this.columnRanges.push([startColumn, endColumn]);\n                startColumn = endColumn + 1;\n                endColumn = startColumn;\n                cellWidths = (endColumn <= i) ? this.Grid.columns.getColumn(i).width : 0;\n            }\n        }\n        // if (startColumn !== this.columns.Count) {\n        this.columnRanges.push([startColumn, this.Grid.columns.count - 1]);\n        // }\n    };\n    /**\n     * `Layouts the on page`.\n     * @private\n     */\n    PdfGridLayouter.prototype.layoutOnPage = function (param) {\n        /* tslint:disable */\n        this.pageBounds.x = param.bounds.x;\n        this.pageBounds.y = param.bounds.y;\n        this.pageBounds.height = param.bounds.height;\n        var format = this.getFormat(param.format);\n        var endArgs = null;\n        var result = null;\n        var layoutedPages = new TemporaryDictionary();\n        var startPage = param.page;\n        var isParentCell = false;\n        var cellBounds = [];\n        for (var index = 0; index < this.columnRanges.length; index++) {\n            var range = this.columnRanges[index];\n            this.cellStartIndex = range[0];\n            this.cellEndIndex = range[1];\n            var returnObject = this.raiseBeforePageLayout(this.currentPage, this.currentBounds, this.currentRowIndex);\n            this.currentBounds = returnObject.currentBounds;\n            this.currentRowIndex = returnObject.currentRowIndex;\n            // if (returnObject.returnValue) {\n            //     result = new PdfGridLayoutResult(this.currentPage, this.currentBounds);\n            //     break;\n            // }\n            //Draw Headers.\n            var drawHeader = void 0;\n            for (var i_1 = 0; i_1 < this.Grid.headers.count; i_1++) {\n                var row = this.Grid.headers.getHeader(i_1);\n                var headerHeight = this.currentBounds.y;\n                this.isHeader = true;\n                if (startPage != this.currentPage) {\n                    for (var k = this.cellStartIndex; k <= this.cellEndIndex; k++) {\n                        if (row.cells.getCell(k).isCellMergeContinue) {\n                            row.cells.getCell(k).isCellMergeContinue = false;\n                            row.cells.getCell(k).value = \"\";\n                        }\n                    }\n                }\n                // RowLayoutResult\n                var headerResult = this.drawRow(row);\n                if (headerHeight === this.currentBounds.y) {\n                    drawHeader = true;\n                    if (PdfGridLayouter.repeatRowIndex === -1) {\n                        PdfGridLayouter.repeatRowIndex = i_1;\n                    }\n                }\n                else {\n                    drawHeader = false;\n                }\n                if (!headerResult.isFinish && startPage !== null\n                    && format.layout !== PdfLayoutType.OnePage && drawHeader) {\n                    this.startLocation.x = this.currentBounds.x;\n                    this.currentPage = this.getNextPageformat(format);\n                    this.startLocation.y = this.currentBounds.y;\n                    if (typeof format.paginateBounds !== 'undefined' && format.paginateBounds.x === 0 && format.paginateBounds.y === 0 && format.paginateBounds.width === 0 && format.paginateBounds.height === 0)\n                        this.currentBounds.x += this.startLocation.x;\n                    this.drawRow(row);\n                }\n                this.isHeader = false;\n            }\n            var i = 0;\n            var length_1 = this.Grid.rows.count;\n            var repeatRow = void 0;\n            var startingHeight = 0;\n            var flag = true;\n            //Here is to draw parent Grid and Cells\n            cellBounds = [];\n            //Draw row by row with the specified cell range.\n            for (var j = 0; j < this.Grid.rows.count; j++) {\n                var row = this.Grid.rows.getRow(j);\n                i++;\n                this.currentRowIndex = i - 1;\n                var originalHeight = this.currentBounds.y;\n                startPage = this.currentPage;\n                PdfGridLayouter.repeatRowIndex = -1;\n                if (flag && row.grid.isChildGrid) {\n                    startingHeight = originalHeight;\n                    flag = false;\n                }\n                var rowResult = null;\n                ///rowResult = this.drawRow(row);\n                /*if(!row.isrowFinish) {\n                    if(!row.grid.isgridSplit){\n                        rowResult = this.drawRow(row);\n                        row.isrowFinish = true;\n                        row.isrowDraw = true;\n                    } else {\n                        if(!row.isrowDraw){\n                            rowResult = this.drawRow(row);\n                            row.isrowFinish = true;\n                            row.isrowDraw = true;\n                            row.grid.isgridSplit = false;\n                        } else {\n                            rowResult =  null;\n                            break;\n                        }\n                    }\n                }\n                else {\n                    //row.isrowFinish = false;\n                    //rowResult = this.drawRow(row);\n                    rowResult = null;\n                    break;\n                    \n                }             */\n                if (this.Grid.splitChildRowIndex == -1) {\n                    rowResult = this.drawRow(row);\n                    row.isrowFinish = true;\n                }\n                else {\n                    if (row.grid.ParentCell.row.grid.isGridSplit && this.Grid.splitChildRowIndex <= row.rowIndex) {\n                        rowResult = this.drawRow(row);\n                        row.isrowFinish = true;\n                    }\n                    else if (row.isrowFinish) {\n                        continue;\n                    }\n                    else {\n                        break;\n                    }\n                }\n                //rowResult = this.drawRow(row);\n                cellBounds.push(rowResult.bounds.width);\n                /*if (row.isRowBreaksNextPage)\n                    {\n                        let x : number  = 0;\n                        for (let l : number = 0; l < row.cells.count; l++)\n                        {\n                            let isNestedRowBreak : boolean = false;\n                            if (row.height == row.cells.getCell(l).height)\n                            {\n                                let n : number;\n                                let grid : PdfGrid = row.cells.getCell(l).value as PdfGrid;\n                                for (let m : number = grid.rows.count; 0 < m; m--)\n                                {\n                                    if ((grid.rows.getRow(m - 1).rowBreakHeight > 0))\n                                    {\n                                        isNestedRowBreak = true;\n                                        break;\n                                    }\n                                    if (grid.rows.getRow(m - 1).isRowBreaksNextPage)\n                                    {\n                                        row.rowBreakHeightValue = grid.rows.getRow(m - 1).rowBreakHeightValue;\n                                        break;\n                                    }\n                                    row.rowBreakHeightValue += grid.rows.getRow(m - 1).height;\n                                }\n                            }\n                            if (isNestedRowBreak)\n                                break;\n                        }\n                        for (let j : number = 0; j < row.cells.count; j++)\n                        {\n\n                            if (row.height > row.cells.getCell(j).height)\n                            {\n                                row.cells.getCell(j).value = \" \";\n                                let rect : RectangleF ;\n                                let page : PdfPage = this.getNextPage(this.currentPage);\n                                let section : PdfSection = this.currentPage.section;\n                                let index : number = section.indexOf(page);\n                                for (let k : number = 0; k < (section.count - 1) - index; k++)\n                                {\n                                    rect = new RectangleF(x, 0, row.grid.columns.getColumn(j).width, page.getClientSize().height);\n                                    PdfGridLayouter.repeatRowIndex = -1;\n                                    row.cells.getCell(j).draw(page.graphics, rect, false);\n                                    page = this.getNextPage(page);\n                                }\n                                rect = new RectangleF(x, 0, row.grid.columns.getColumn(j).width, row.rowBreakHeightValue);\n\n                                row.cells.getCell(j).draw(page.graphics, rect, false);\n                            }\n                            x += row.grid.columns.getColumn(j).width;\n                        }\n                    }*/\n                //if height remains same, it is understood that row is not drawn in the page\n                if (originalHeight === this.currentBounds.y) {\n                    repeatRow = true;\n                    PdfGridLayouter.repeatRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                }\n                else {\n                    repeatRow = false;\n                    PdfGridLayouter.repeatRowIndex = -1;\n                }\n                while (!rowResult.isFinish && startPage != null) {\n                    var tempResult = this.getLayoutResult();\n                    /*if (startPage != this.currentPage)\n                        {\n                            if (row.grid.isChildGrid && row.grid.ParentCell != null)\n                            {\n                                let bounds : RectangleF= new RectangleF(new PointF(format.paginateBounds.x,format.paginateBounds.y), new SizeF(param.bounds.width, tempResult.bounds.height));\n                                bounds.x += param.bounds.x;\n                                if (row.grid.ParentCell.row.grid.style.cellPadding != null)\n                                {\n                                    bounds.y += row.grid.ParentCell.row.grid.style.cellPadding.top;\n                                    if (bounds.height > this.currentPageBounds.height)\n                                    {\n                                        bounds.height = this.currentPageBounds.height - bounds.y;\n                                        bounds.height -= (row.grid.ParentCell.row.grid.style.cellPadding.bottom);\n                                    }\n                                }\n                                // Draw border for cells in the nested grid cell's row.\n                                for (let c : number = 0; c < row.cells.count; c++)\n                                {\n                                    let cell : PdfGridCell = row.cells.getCell(c);\n                                    let cellWidth :  number= 0;\n                                    if (cell.columnSpan > 1)\n                                    {\n                                        for (; c < cell.columnSpan; c++)\n                                            cellWidth += row.grid.columns.getColumn(c).width;\n                                    }\n                                    else\n                                        cellWidth = Math.max(cell.width, row.grid.columns.getColumn(c).width);\n                                    cell.drawCellBorders(this.currentGraphics, new RectangleF(new PointF(bounds.x,bounds.y), new SizeF(cellWidth, bounds.height)));\n                                    bounds.x += cellWidth;\n                                    c += (cell.columnSpan - 1);\n                                }\n                            }\n                        }\n                        */\n                    endArgs = this.raisePageLayouted(tempResult);\n                    if (endArgs.cancel || repeatRow)\n                        break;\n                    else if (this.Grid.allowRowBreakAcrossPages) {\n                        //If there is no space in the current page, add new page and then draw the remaining row.\n                        this.currentPage = this.getNextPageformat(format);\n                        originalHeight = this.currentBounds.y;\n                        var location_1 = new PointF(PdfBorders.default.right.width / 2, PdfBorders.default.top.width / 2);\n                        if ((format.paginateBounds.x === 0 && format.paginateBounds.y === 0 && format.paginateBounds.width === 0 &&\n                            format.paginateBounds.height === 0) && (this.startLocation.x === location_1.x && this.startLocation.y === location_1.y)) {\n                            this.currentBounds.x += this.startLocation.x;\n                            this.currentBounds.y += this.startLocation.y;\n                        }\n                        if (this.isPaginate) {\n                            this.startLocation.y = this.currentBounds.y;\n                            this.isPaginate = false;\n                        }\n                        if (this.Grid.isChildGrid && row.grid.ParentCell != null) {\n                            if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                                if (row.rowBreakHeight + this.Grid.ParentCell.row.grid.style.cellPadding.top < this.currentBounds.height) {\n                                    this.currentBounds.y = this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                                }\n                            }\n                        }\n                        if (row.grid.ParentCell != null) {\n                            row.grid.ParentCell.row.isRowBreaksNextPage = true;\n                            row.grid.ParentCell.row.rowBreakHeightValue = row.rowBreakHeight + this.Grid.ParentCell.row.grid.style.cellPadding.top + this.Grid.ParentCell.row.grid.style.cellPadding.bottom;\n                            for (var i_2 = row.rowIndex + 1; i_2 < row.grid.rows.count; i_2++) {\n                                row.grid.ParentCell.row.rowBreakHeightValue += row.grid.rows.getRow(i_2).height;\n                            }\n                            //row.rowBreakHeight = row.grid.ParentCell.row.rowBreakHeightValue;\n                        }\n                        /*if (row.noOfPageCount > 1)\n                        {\n                            let temp : number = row.rowBreakHeightValue;\n                            for (let j : number = 1; j < row.noOfPageCount; j++)\n                            {\n                                row.rowBreakHeightValue = 0;\n                                row.height = ((row.noOfPageCount - 1) * this.currentPage.getClientSize().height);\n                                this.drawRow(row);\n                                this.currentPage = this.getNextPageformat(format);\n                                startPage = this.currentPage;\n                            }\n                            row.rowBreakHeightValue = temp;\n                            row.noOfPageCount = 1;\n                            rowResult = this.drawRow(row);\n                        } else {\n                            rowResult = this.drawRow(row);\n                        }\n                        /*if(row.grid.isChildGrid){\n                            row.isrowFinish = false;\n                            row.isrowDraw = false;\n                            row.grid.isgridSplit = true;\n                            row.grid.ParentCell.row.grid.isgridSplit = true;\n                            //rowResult.isFinish = false;\n                            break;\n                        }*/\n                        if (row.grid.isChildGrid) {\n                            //row.grid.isgridSplit = true;\n                            row.isrowFinish = false;\n                            //row.grid.ParentCell.row.grid.isgridSplit = true;\n                            row.grid.splitChildRowIndex = row.rowIndex;\n                            row.grid.ParentCell.row.grid.splitChildRowIndex = row.grid.ParentCell.row.rowIndex;\n                            if (row.grid.ParentCell.row.grid.isGridSplit) {\n                                row.grid.ParentCell.row.noOfPageCount += 1;\n                                row.grid.ParentCell.row.grid.isGridSplit = false;\n                            }\n                            break;\n                        }\n                        if (row.noOfPageCount < 1) {\n                            if (row.grid.splitChildRowIndex != -1) {\n                                row.grid.isGridSplit = true;\n                            }\n                            if (row.style.border != null && ((row.style.border.left != null && row.style.border.left.width !== 1)\n                                || (row.style.border.top != null && row.style.border.top.width !== 1))) {\n                                var x = row.style.border.left.width / 2;\n                                var y = row.style.border.top.width / 2;\n                                if (this.currentBounds.x === PdfBorders.default.right.width / 2 && this.currentBounds.y === PdfBorders.default.right.width / 2) {\n                                    var newBound = new RectangleF(x, y, this.currentBounds.width, this.currentBounds.height);\n                                    this.currentBounds = newBound;\n                                }\n                            }\n                            if (this.Grid.repeatHeader) {\n                                for (var j_1 = 0; j_1 < this.Grid.headers.count; j_1++) {\n                                    var headerRepeat = this.Grid.headers.getHeader(j_1);\n                                    this.drawRow(headerRepeat);\n                                }\n                            }\n                            rowResult = this.drawRow(row);\n                            if (row.noOfPageCount >= 1) {\n                                var temp = row.rowBreakHeightValue;\n                                for (var j_2 = 0; j_2 < row.noOfPageCount; j_2++) {\n                                    //this.currentPage.section.add();\n                                    var tempResult1 = this.getLayoutResult();\n                                    endArgs = this.raisePageLayouted(tempResult1);\n                                    this.currentPage = this.getNextPageformat(format);\n                                    originalHeight = this.currentBounds.y;\n                                    //row.rowBreakHeightValue = 0;\n                                    if (row.grid.splitChildRowIndex != -1) {\n                                        row.grid.isGridSplit = true;\n                                    }\n                                    this.currentBounds.y = 0.5;\n                                    if (this.Grid.repeatHeader) {\n                                        for (var i_3 = 0; i_3 < this.Grid.headers.count; i_3++) {\n                                            var header = this.Grid.headers.getHeader(i_3);\n                                            this.drawRow(header);\n                                        }\n                                    }\n                                    //row.height = ((row.noOfPageCount - 1) * this.currentPage.getClientSize().height);\n                                    this.drawRow(row);\n                                }\n                                // row.rowBreakHeight = temp;\n                                // row.noOfPageCount = 1;\n                                // rowResult = this.drawRow(row);\n                            }\n                            row.grid.splitChildRowIndex = -1;\n                            row.grid.isGridSplit = false;\n                            rowResult.isFinish = this.checkIsFisished(row);\n                            //row.NestedGridLayoutResult.bounds.height = row.rowBreakHeightValue;\n                            //this.currentBounds.y = rowResult.bounds.y;\n                            for (var i_4 = 0; i_4 < row.cells.count; i_4++) {\n                                if (row.cells.getCell(i_4).value instanceof PdfGrid) {\n                                    row.cells.getCell(i_4).value.splitChildRowIndex = -1;\n                                }\n                            }\n                        }\n                    }\n                    // else if (!this.Grid.allowRowBreakAcrossPages && i < length)\n                    // {\n                    //     this.currentPage = this.getNextPageformat(format);\n                    //     break;\n                    // }\n                    // else if (i >= length)\n                    //     break;\n                }\n                if (!rowResult.isFinish && startPage !== null && format.layout !== PdfLayoutType.OnePage && repeatRow) {\n                    // During pagination, cell position is maintained here.\n                    this.startLocation.x = this.currentBounds.x;\n                    var isAddNextPage = false;\n                    this.currentPage = this.getNextPageformat(format);\n                    /*if (!this.Grid.isSingleGrid)\n                    {\n                        for ( let j : number= 0; j < this.Grid.rows.count; j++)\n                        {\n                            let isWidthGreaterthanParent : boolean = false;\n                            for (let k : number = 0; k < this.Grid.rows.getRow(j).cells.count; k++)\n                            {\n                                if (this.Grid.rows.getRow(j).cells.getCell(k).width > this.currentPageBounds.width)\n                                    isWidthGreaterthanParent = true;\n                            }\n                            if (isWidthGreaterthanParent && this.Grid.rows.getRow(j).cells.getCell(this.rowBreakPageHeightCellIndex).pageCount > 0)\n                            {\n                                isAddNextPage = true;\n                            }\n                        }\n                    }\n                    if (!this.Grid.isRearranged && isAddNextPage)\n                         {\n                             let section : PdfSection = this.currentPage.section;\n                             \n                             //this.currentPage = section.add();\n                         \n                             this.currentGraphics = this.currentPage.graphics;\n                             this.currentBounds = new RectangleF(new PointF(0,0), this.currentPage.getClientSize());\n                          \n                             let pageindex  : number = (this.currentGraphics.page as PdfPage).section.indexOf(this.currentGraphics.page as PdfPage);\n                         }\n                         else\n                         {\n                             this.currentPage = this.getNextPageformat(format);\n                         }\n                         if (format.paginateBounds.y == 0)\n                             this.currentBounds.y = PdfBorders.default.top.width/2;\n                         else\n                         {\n                             this.currentBounds.y = format == null ? 0 : format.paginateBounds.y;\n                             \n                         }*/\n                    if (this.raiseBeforePageLayout(this.currentPage, this.currentBounds, this.currentRowIndex).returnValue) {\n                        break;\n                    }\n                    if ((param.format !== null) && !param.format.usePaginateBounds && param.bounds !== null &&\n                        param.bounds.height > 0 && !this.Grid.isChildGrid) {\n                        this.currentBounds.height = param.bounds.height;\n                    }\n                    if (typeof param.format !== 'undefined' && param.format != null && typeof param.format.usePaginateBounds !== 'undefined' && !param.format.usePaginateBounds && !(param.format.paginateBounds.x === 0 && param.format.paginateBounds.y === 0 && param.format.paginateBounds.width === 0 && param.format.paginateBounds.height === 0) && param.format.paginateBounds.y === 0) {\n                        this.currentBounds.y = PdfBorders.default.top.width / 2;\n                    }\n                    else {\n                        this.currentBounds.y = format == null ? 0 : format.paginateBounds.y;\n                        if (format != null && (format.paginateBounds.x !== 0 || format.paginateBounds.y !== 0 || format.paginateBounds.height !== 0 || format.paginateBounds.width !== 0)) {\n                            this.currentBounds.x = format.paginateBounds.x;\n                            this.currentBounds.width = format.paginateBounds.width;\n                            this.currentBounds.height = format.paginateBounds.height;\n                        }\n                    }\n                    if (typeof param.format !== 'undefined' && (param.format !== null) && typeof param.format.usePaginateBounds !== 'undefined' && !param.format.usePaginateBounds && param.bounds !== null &&\n                        param.bounds.y > 0 && !this.Grid.isChildGrid) {\n                        this.currentBounds.y = param.bounds.y;\n                    }\n                    this.startLocation.y = this.currentBounds.y;\n                    if ((format.paginateBounds.x === format.paginateBounds.y) &&\n                        (format.paginateBounds.y === format.paginateBounds.height) &&\n                        (format.paginateBounds.height === format.paginateBounds.width) && (format.paginateBounds.width === 0)) {\n                        this.currentBounds.x += this.startLocation.x;\n                    }\n                    if (this.currentBounds.x === PdfBorders.default.left.width / 2) {\n                        this.currentBounds.y += this.startLocation.x;\n                    }\n                    if (this.Grid.repeatHeader) {\n                        for (var i_5 = 0; i_5 < this.Grid.headers.count; i_5++) {\n                            var header = this.Grid.headers.getHeader(i_5);\n                            this.drawRow(header);\n                        }\n                    }\n                    this.drawRow(row);\n                    if (this.currentPage !== null && !layoutedPages.containsKey(this.currentPage)) {\n                        layoutedPages.add(this.currentPage, range);\n                    }\n                }\n                if (row.NestedGridLayoutResult != null) {\n                    // Position for next row in the grid.\n                    this.currentPage = row.NestedGridLayoutResult.page;\n                    this.currentGraphics = this.currentPage.graphics; //If not, next row will not be drawn in the layouted page.\n                    this.startLocation = new PointF(row.NestedGridLayoutResult.bounds.x, row.NestedGridLayoutResult.bounds.y);\n                    var recalHeight = this.ReCalculateHeight(row, row.NestedGridLayoutResult.bounds.height);\n                    this.currentBounds.y = recalHeight;\n                    //this.currentBounds.y = row.NestedGridLayoutResult.bounds.height;\n                    if (startPage != this.currentPage) {\n                        var section = this.currentPage.section;\n                        var startIndex = section.indexOf(startPage) + 1;\n                        var endIndex = section.indexOf(this.currentPage);\n                        for (var page = startIndex; page < endIndex + 1; page++) {\n                            var pageGraphics = section.getPages()[page].graphics;\n                            var location_2 = new PointF(format.paginateBounds.x, format.paginateBounds.y);\n                            var height = page == endIndex ? (row.NestedGridLayoutResult.bounds.height - param.bounds.y) :\n                                (this.currentBounds.height - location_2.y);\n                            if (height <= pageGraphics.clientSize.height)\n                                height += param.bounds.y;\n                            // if (row.grid.isChildGrid && row.grid.ParentCell != null)\n                            //     location.x += param.bounds.x;\n                            location_2.y = format == null ? 0.5 : format.paginateBounds.y;\n                            // Draw border for last paginated row containing nested grid.\n                            for (var c = 0; c < row.cells.count; c++) {\n                                var cell = row.cells.getCell(c);\n                                var cellWidth = 0;\n                                var totalwidth = 0;\n                                var childGridCell = void 0;\n                                if (cell.value instanceof PdfGrid) {\n                                    if (!childGridCell) {\n                                        childGridCell = cell;\n                                    }\n                                    for (var i_6 = 0; i_6 < cell.value.columns.count; i_6++) {\n                                        totalwidth += cell.value.columns.getColumn(i_6).columnWidth;\n                                    }\n                                }\n                                else {\n                                    totalwidth = cell.width;\n                                }\n                                if (cell.columnSpan > 1) {\n                                    for (; c < cell.columnSpan; c++)\n                                        cellWidth += row.grid.columns.getColumn(c).width;\n                                }\n                                else\n                                    cellWidth = Math.max(totalwidth, row.grid.columns.getColumn(c).width);\n                                var bottomPadding = void 0;\n                                if (childGridCell && childGridCell.style && childGridCell.style.cellPadding) {\n                                    bottomPadding = childGridCell.style.cellPadding.bottom;\n                                }\n                                else {\n                                    bottomPadding = this.Grid.style.cellPadding.bottom;\n                                }\n                                if (typeof bottomPadding === 'number' && (height + bottomPadding) < pageGraphics.clientSize.height) {\n                                    height += bottomPadding;\n                                    this.currentBounds.y += bottomPadding;\n                                }\n                                cell.drawCellBorders(pageGraphics, new RectangleF(location_2, new SizeF(cellWidth, height)));\n                                var rowWidth = this.Grid.rows.getRow(this.Grid.rows.count - 1).width;\n                                if (cellWidth !== rowWidth) {\n                                    cell.drawCellBorders(pageGraphics, new RectangleF(location_2, new SizeF(rowWidth, height)));\n                                }\n                                location_2.x += cellWidth;\n                                c += (cell.columnSpan - 1);\n                            }\n                        }\n                        // So, nested grid drawing is completed for the current row. Update page.\n                        // Otherwise, the next nested grid of the parent will draw borders from start.\n                        startPage = this.currentPage;\n                    }\n                }\n            }\n            var isPdfGrid = false;\n            var maximumCellBoundsWidth = 0;\n            if (cellBounds.length > 0) {\n                maximumCellBoundsWidth = cellBounds[0];\n            }\n            var largeNavigatePage = [[1, 2]];\n            for (var c = 0; c < this.Grid.rows.count; c++) {\n                if (this.cellEndIndex != -1 && this.Grid.rows.getRow(c).cells.getCell(this.cellEndIndex).value instanceof PdfGrid) {\n                    var grid = this.Grid.rows.getRow(c).cells.getCell(this.cellEndIndex).value;\n                    this.rowLayoutBoundsWidth = grid.rowLayoutBoundsWidth;\n                    isPdfGrid = true;\n                    // if (largeNavigatePage[0][0] < grid.listOfNavigatePages.length)\n                    // {\n                    //     largeNavigatePage[0][0] = grid.listOfNavigatePages.length;\n                    //     largeNavigatePage[0][1] = cellBounds[c];\n                    // }\n                    // else if ((largeNavigatePage[0][0] == grid.listOfNavigatePages.length) && (largeNavigatePage[0][1] < cellBounds[c]))\n                    // {\n                    //     largeNavigatePage[0][1] = cellBounds[c];\n                    // }\n                }\n            }\n            if (!isPdfGrid && cellBounds.length > 0) {\n                for (var c = 0; c < i - 1; c++) {\n                    if (maximumCellBoundsWidth < cellBounds[c]) {\n                        maximumCellBoundsWidth = cellBounds[c];\n                    }\n                }\n                this.rowLayoutBoundsWidth = maximumCellBoundsWidth;\n            }\n            else {\n                this.rowLayoutBoundsWidth = largeNavigatePage[0][1];\n            }\n            if (this.columnRanges.indexOf(range) < this.columnRanges.length - 1\n                && startPage != null && format.layout != PdfLayoutType.OnePage) {\n                isParentCell = this.Grid.isChildGrid;\n                if (largeNavigatePage[0][0] != 0) {\n                    var section = this.currentPage.section;\n                    var pageIndex = section.indexOf(this.currentPage);\n                    this.currentGraphics = this.currentPage.graphics;\n                    this.currentBounds = new RectangleF(new PointF(0, 0), this.currentPage.getClientSize());\n                    var pageindex = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n                }\n                else {\n                    this.currentPage = this.getNextPageformat(format);\n                }\n                // let locationGrid : PointF= new PointF(PdfBorders.default.right.width / 2, PdfBorders.default.top.width / 2);\n                // if (format.paginateBounds == new RectangleF(0,0,0,0) && this.startLocation == locationGrid)\n                // {\n                //     this.currentBounds.x += this.startLocation.x;\n                //     this.currentBounds.y += this.startLocation.y;\n                // }\n            }\n            if (this.columnRanges.length - 1 !== index && this.columnRanges.length > 1 && format.layout !== PdfLayoutType.OnePage) {\n                this.currentPage = this.getNextPageformat(format);\n                if ((format.paginateBounds.x === format.paginateBounds.y) && (format.paginateBounds.y === format.paginateBounds.height)\n                    && (format.paginateBounds.height === format.paginateBounds.width) && (format.paginateBounds.width === 0)) {\n                    this.currentBounds.x += this.startLocation.x;\n                    this.currentBounds.y += this.startLocation.y;\n                    //this.currentBounds.height = this.pageBounds.height;\n                }\n            }\n        }\n        result = this.getLayoutResult();\n        if (this.Grid.style.allowHorizontalOverflow && this.Grid.style.horizontalOverflowType == PdfHorizontalOverflowType.NextPage) {\n            this.reArrangePages(layoutedPages);\n        }\n        this.raisePageLayouted(result);\n        return result;\n    };\n    PdfGridLayouter.prototype.checkIsFisished = function (row) {\n        var result = true;\n        for (var i = 0; i < row.cells.count; i++) {\n            if (!row.cells.getCell(i).FinishedDrawingCell) {\n                result = false;\n            }\n        }\n        return result;\n    };\n    /* tslint:enable */\n    /**\n     * Gets the `next page`.\n     * @private\n     */\n    PdfGridLayouter.prototype.getNextPageformat = function (format) {\n        var section = this.currentPage.section;\n        var nextPage = null;\n        var index = section.indexOf(this.currentPage);\n        this.flag = false;\n        if (index === section.count - 1) {\n            nextPage = section.add();\n        }\n        else {\n            nextPage = section.getPages()[index + 1];\n        }\n        this.currentGraphics = nextPage.graphics;\n        var pageindex = this.currentGraphics.page.section.indexOf(this.currentGraphics.page);\n        if (!(this.listOfNavigatePages.indexOf(pageindex) !== -1)) {\n            this.listOfNavigatePages.push(pageindex);\n        }\n        this.currentBounds = new RectangleF(new PointF(0, 0), nextPage.getClientSize());\n        if ((typeof format !== 'undefined') && format != null && format.usePaginateBounds && (typeof format.paginateBounds !== 'undefined') && format.paginateBounds != null && (format.paginateBounds.x !== format.paginateBounds.y) && (format.paginateBounds.y !== format.paginateBounds.height)\n            && (format.paginateBounds.height !== format.paginateBounds.width) && (format.paginateBounds.width !== 0)) {\n            this.currentBounds.x = format.paginateBounds.x;\n            this.currentBounds.y = format.paginateBounds.y;\n            this.currentBounds.height = format.paginateBounds.height;\n        }\n        return nextPage;\n    };\n    PdfGridLayouter.prototype.CheckIfDefaultFormat = function (format) {\n        var defaultFormat = new PdfStringFormat();\n        return (format.alignment === defaultFormat.alignment && format.characterSpacing === defaultFormat.characterSpacing &&\n            format.clipPath === defaultFormat.clipPath && format.firstLineIndent === defaultFormat.firstLineIndent &&\n            format.horizontalScalingFactor === defaultFormat.horizontalScalingFactor &&\n            format.lineAlignment === defaultFormat.lineAlignment\n            && format.lineLimit === defaultFormat.lineLimit && format.lineSpacing === defaultFormat.lineSpacing &&\n            format.measureTrailingSpaces === defaultFormat.measureTrailingSpaces && format.noClip === defaultFormat.noClip &&\n            format.paragraphIndent === defaultFormat.paragraphIndent && format.rightToLeft === defaultFormat.rightToLeft &&\n            format.subSuperScript === defaultFormat.subSuperScript && format.wordSpacing === defaultFormat.wordSpacing &&\n            format.wordWrap === defaultFormat.wordWrap);\n    };\n    /**\n     * `Raises BeforeCellDraw event`.\n     * @private\n     */\n    PdfGridLayouter.prototype.RaiseBeforeCellDraw = function (graphics, rowIndex, cellIndex, bounds, value, style) {\n        var args = null;\n        if (this.Grid.raiseBeginCellDraw) {\n            args = new PdfGridBeginCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style);\n            this.Grid.onBeginCellDraw(args);\n            style = args.style;\n        }\n        return style;\n    };\n    /**\n     * `Raises AfterCellDraw event`.\n     * @private\n     */\n    PdfGridLayouter.prototype.raiseAfterCellDraw = function (graphics, rowIndex, cellIndex, bounds, value, cellstyle) {\n        var args = null;\n        if (this.Grid.raiseEndCellDraw) {\n            args = new PdfGridEndCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, cellstyle);\n            this.Grid.onEndCellDraw(args);\n        }\n    };\n    PdfGridLayouter.prototype.reArrangePages = function (layoutedPages) {\n        var document = this.currentPage.document;\n        var pages = [];\n        var keys = layoutedPages.keys();\n        var values = layoutedPages.values();\n        for (var i = 0; i < keys.length; i++) {\n            var page = keys[i];\n            page.section = null;\n            pages.push(page);\n            document.pages.remove(page);\n        }\n        /* tslint:disable */\n        for (var i = 0; i < layoutedPages.size(); i++) {\n            var count = 0;\n            for (var j = i, count_1 = (layoutedPages.size() / this.columnRanges.length); j < layoutedPages.size(); j += count_1) {\n                var page = pages[j];\n                if (typeof page !== 'undefined' && document.pages.indexOf(page) === -1) {\n                    document.pages.add(page);\n                }\n            }\n        }\n        /* tslint:enable */\n    };\n    /**\n     * Gets the `layout result`.\n     * @private\n     */\n    PdfGridLayouter.prototype.getLayoutResult = function () {\n        if (this.Grid.isChildGrid && this.Grid.allowRowBreakAcrossPages) {\n            for (var i = 0; i < this.Grid.rows.count; i++) {\n                var row = this.Grid.rows.getRow(i);\n                if (row.rowBreakHeight > 0 && row.repeatFlag) {\n                    this.startLocation.y = this.currentPage.origin.y;\n                }\n            }\n        }\n        var bounds;\n        if (!this.isChanged) {\n            bounds = new RectangleF(this.startLocation, new SizeF(this.currentBounds.width, this.currentBounds.y -\n                this.startLocation.y));\n        }\n        // else {\n        //     bounds = new RectangleF(this.currentLocation, new SizeF(this.currentBounds.width, this.currentBounds.y -\n        //                              this.currentLocation.y));\n        // }\n        /* tslint:enable */\n        return new PdfGridLayoutResult(this.currentPage, bounds);\n    };\n    /**\n     * `Recalculate row height` for the split cell to be drawn.\n     * @private\n     */\n    PdfGridLayouter.prototype.ReCalculateHeight = function (row, height) {\n        var newHeight = 0.0;\n        for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n            if (!(row.cells.getCell(i).remainingString === null || row.cells.getCell(i).remainingString === '' ||\n                typeof row.cells.getCell(i).remainingString === 'undefined')) {\n                newHeight = Math.max(newHeight, row.cells.getCell(i).measureHeight());\n            }\n        }\n        return Math.max(height, newHeight);\n    };\n    /**\n     * `Raises BeforePageLayout event`.\n     * @private\n     */\n    PdfGridLayouter.prototype.raiseBeforePageLayout = function (currentPage, currentBounds, currentRow) {\n        var cancel = false;\n        if (this.Grid.raiseBeginPageLayout) {\n            var args = new PdfGridBeginPageLayoutEventArgs(currentBounds, currentPage, currentRow);\n            this.Grid.onBeginPageLayout(args);\n            // if (currentBounds !== args.Bounds) {\n            //     this.isChanged = true;\n            //     this.currentLocation = new PointF(args.Bounds.x, args.Bounds.y);\n            //     this.measureColumnsWidth(new RectangleF(new PointF(args.Bounds.x, args.Bounds.y) ,\n            //                                                  new SizeF(args.Bounds.width + args.Bounds.x ,\n            //                                                                 args.Bounds.height)));\n            // }\n            cancel = (typeof args.cancel === 'undefined' ? false : args.cancel);\n            currentBounds = args.bounds;\n            currentRow = args.startRowIndex;\n        }\n        return { returnValue: cancel, currentBounds: currentBounds, currentRowIndex: currentRow };\n    };\n    /**\n     * `Raises PageLayout event` if needed.\n     * @private\n     */\n    PdfGridLayouter.prototype.raisePageLayouted = function (result) {\n        var args = new PdfGridEndPageLayoutEventArgs(result);\n        if (this.Grid.raiseEndPageLayout) {\n            this.Grid.onEndPageLayout(args);\n        }\n        return args;\n    };\n    PdfGridLayouter.prototype.drawRow = function (row, result, height) {\n        if (typeof result === 'undefined') {\n            //.. Check if required space available.\n            //.....If the row conains spans which  falls through more than one page, then draw the row to next page.                        \n            var result_1 = new RowLayoutResult();\n            var rowHeightWithSpan = 0;\n            var location_3 = new PointF(0, 0);\n            var size = new SizeF(0, 0);\n            var isHeader = false;\n            var allowRowBreak = true;\n            if (row.rowSpanExists) {\n                var maxSpan = 0;\n                var currRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                if (currRowIndex === -1) {\n                    currRowIndex = this.Grid.headers.indexOf(row);\n                    if (currRowIndex !== -1) {\n                        isHeader = true;\n                    }\n                }\n                for (var i = 0; i < row.cells.count; i++) {\n                    var cell = row.cells.getCell(i);\n                    maxSpan = Math.max(maxSpan, cell.rowSpan);\n                }\n                for (var i = currRowIndex; i < currRowIndex + maxSpan; i++) {\n                    rowHeightWithSpan += (isHeader ? this.Grid.headers.getHeader(i).height : this.Grid.rows.getRow(i).height);\n                }\n                // let rowMaxHeight : number = rowHeightWithSpan;\n                // for (let i : number = 0; i < row.cells.count; i++ ) {\n                //     rowMaxHeight = rowMaxHeight > row.cells.getCell(i).height ? rowMaxHeight : row.cells.getCell(i).height;\n                // }\n                // let flag : boolean = true;\n                // let nextRow : PdfGridRow = this.Grid.headers.getHeader(this.Grid.headers.indexOf(row) + 1);\n                // for (let i : number = 0; i < nextRow.cells.count; i++ ) {\n                //     if (nextRow.cells.getCell(i).value !== '' && nextRow.cells.getCell(i).value !== undefined) {\n                //         flag = false;\n                //         break;\n                //     }\n                // }\n                // if ((rowMaxHeight > rowHeightWithSpan) && flag) {\n                //     row.height += (rowMaxHeight - rowHeightWithSpan);\n                // }\n                if ((rowHeightWithSpan > this.currentBounds.height ||\n                    rowHeightWithSpan + this.currentBounds.y > this.currentBounds.height)) {\n                    if (row.rowSpanExists &&\n                        (this.Grid.LayoutFormat.break === PdfLayoutBreakType.FitElement || !this.Grid.allowRowBreakAcrossPages)) {\n                        allowRowBreak = false;\n                    }\n                }\n                if ((rowHeightWithSpan > this.currentBounds.height || rowHeightWithSpan + this.currentBounds.y > this.currentBounds.height)\n                    && allowRowBreak) {\n                    rowHeightWithSpan = 0;\n                    row.isPageBreakRowSpanApplied = true;\n                    for (var i = 0; i < row.cells.count; i++) {\n                        var cell = row.cells.getCell(i);\n                        maxSpan = cell.rowSpan;\n                        for (var i_7 = currRowIndex; i_7 < currRowIndex + maxSpan; i_7++) {\n                            rowHeightWithSpan += isHeader ? this.Grid.headers.getHeader(i_7).height : this.Grid.rows.getRow(i_7).height;\n                            var layoutFormat = this.Grid.LayoutFormat;\n                            var currentBoundsHeight = this.currentPageBounds.height;\n                            if (layoutFormat.usePaginateBounds && layoutFormat.paginateBounds && layoutFormat.paginateBounds.height > 0) {\n                                var bottom = layoutFormat.paginateBounds.y + layoutFormat.paginateBounds.height;\n                                if (!this.Grid.isChildGrid && this.Grid.listOfNavigatePages.length === 1) {\n                                    bottom += this.Grid._gridLocation.y;\n                                }\n                                if (bottom < currentBoundsHeight) {\n                                    currentBoundsHeight = bottom;\n                                    this.currentPageBounds.height = currentBoundsHeight;\n                                    this.currentBounds.height = currentBoundsHeight;\n                                }\n                            }\n                            if ((this.currentBounds.y + rowHeightWithSpan) > currentBoundsHeight) {\n                                rowHeightWithSpan -= isHeader ? this.Grid.headers.getHeader(i_7).height : this.Grid.rows.getRow(i_7).height;\n                                for (var j = 0; j < this.Grid.rows.getRow(currRowIndex).cells.count; j++) {\n                                    var newSpan = i_7 - currRowIndex;\n                                    if (!isHeader &&\n                                        this.Grid.rows.getRow(currRowIndex).cells.getCell(j).rowSpan === maxSpan &&\n                                        newSpan !== 0) {\n                                        var currCell = this.Grid.rows.getRow(currRowIndex).cells.getCell(j);\n                                        var nextCell = this.Grid.rows.getRow(i_7).cells.getCell(j);\n                                        currCell.rowSpan = newSpan === 0 ? 1 : newSpan;\n                                        this.Grid.rows.getRow(currRowIndex).maximumRowSpan = newSpan === 0 ? 1 : newSpan;\n                                        nextCell.rowSpan = maxSpan - newSpan;\n                                        if (this.Grid.rows.getRow(i_7).maximumRowSpan < (maxSpan - newSpan)) {\n                                            this.Grid.rows.getRow(i_7).maximumRowSpan = maxSpan - newSpan;\n                                        }\n                                        var pdfGrid = currCell.value;\n                                        nextCell.stringFormat = currCell.stringFormat;\n                                        nextCell.style = currCell.style;\n                                        nextCell.style.backgroundImage = null;\n                                        nextCell.columnSpan = currCell.columnSpan;\n                                        if (pdfGrid instanceof PdfGrid &&\n                                            this.currentBounds.y + pdfGrid.size.height + this.Grid.rows.getRow(i_7).height +\n                                                pdfGrid.style.cellPadding.top + pdfGrid.style.cellPadding.bottom >= this.currentBounds.height) {\n                                            nextCell.value = currCell.value;\n                                        }\n                                        else if (!(pdfGrid instanceof PdfGrid)) {\n                                            nextCell.value = currCell.value;\n                                        }\n                                        if (i_7 > 0)\n                                            this.Grid.rows.getRow(i_7 - 1).rowSpanExists = true;\n                                        nextCell.isRowMergeContinue = false;\n                                        nextCell.isRowMergeStart = true;\n                                    }\n                                    else if (isHeader &&\n                                        this.Grid.headers.getHeader(currRowIndex).cells.getCell(j).rowSpan === maxSpan) {\n                                        var headerCell = this.Grid.headers.getHeader(currRowIndex).cells.getCell(j);\n                                        var nextHeaderCell = this.Grid.headers.getHeader(i_7).cells.getCell(j);\n                                        headerCell.rowSpan = newSpan === 0 ? 1 : newSpan;\n                                        nextHeaderCell.rowSpan = maxSpan - newSpan;\n                                        nextHeaderCell.stringFormat = headerCell.stringFormat;\n                                        nextHeaderCell.style = headerCell.style;\n                                        nextHeaderCell.columnSpan = headerCell.columnSpan;\n                                        nextHeaderCell.value = headerCell.value;\n                                        this.Grid.headers.getHeader(i_7 - 1).rowSpanExists = false;\n                                        nextHeaderCell.isRowMergeContinue = false;\n                                        nextHeaderCell.isRowMergeStart = true;\n                                    }\n                                }\n                                break;\n                            }\n                        }\n                        rowHeightWithSpan = 0;\n                    }\n                }\n            }\n            var calculatedHeight = row.rowBreakHeight > 0.0 ? row.rowBreakHeight : row.height;\n            if (typeof this.Grid.isChildGrid !== 'undefined' && this.Grid.isChildGrid && typeof this.Grid.ParentCell !== 'undefined' && this.Grid.ParentCell != null) {\n                //Split row only if row height exceeds page height and AllowRowBreakAcrossPages is true.\n                // if (calculatedHeight + this.Grid.ParentCell.row.grid.style.cellPadding.bottom +\n                //             this.Grid.ParentCell.row.grid.style.cellPadding.top > this.currentPageBounds.height) {\n                //     if (this.Grid.allowRowBreakAcrossPages) {\n                //         result.isFinish = true;\n                //         if ( this.Grid.isChildGrid && row.rowBreakHeight > 0 ) {\n                //             if (this.Grid.ParentCell.row.grid.style.cellPadding !== null) {\n                //                 this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                //             }\n                //             this.currentBounds.x = this.startLocation.x;\n                //         }\n                //         result.bounds = this.currentBounds ;\n                //         this.drawRowWithBreak(result, row, calculatedHeight);\n                //     } else {\n                //         //If AllowRowBreakAcrossPages is not true, draw the row till it fits the page.                       \n                //         if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                //             this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                //             calculatedHeight = this.currentBounds.height - this.currentBounds.y -\n                //                     this.Grid.ParentCell.row.grid.style.cellPadding.bottom;\n                //         }\n                //         result.isFinish = false;\n                //         this.drawRow( row, result, calculatedHeight);\n                //     }\n                // } else\n                if (this.currentBounds.y + this.Grid.ParentCell.row.grid.style.cellPadding.bottom + calculatedHeight >\n                    this.currentPageBounds.height || this.currentBounds.y + this.Grid.ParentCell.row.grid.style.cellPadding.bottom\n                    + calculatedHeight > this.currentBounds.height || this.currentBounds.y +\n                    this.Grid.ParentCell.row.grid.style.cellPadding.bottom + rowHeightWithSpan > this.currentPageBounds.height) {\n                    //If a row is repeated and still cannot fit in page, proceed draw.\n                    if (typeof this.Grid.ParentCell.row.grid.LayoutFormat !== 'undefined' && this.Grid.ParentCell.row.grid.LayoutFormat.break === PdfLayoutBreakType.FitPage) {\n                        PdfGridLayouter.repeatRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                        this.Grid.splitChildRowIndex = this.Grid.rows.rowCollection.indexOf(row);\n                    }\n                    if (PdfGridLayouter.repeatRowIndex > -1 && PdfGridLayouter.repeatRowIndex === row.rowIndex) {\n                        if (this.Grid.allowRowBreakAcrossPages) {\n                            result_1.isFinish = true;\n                            // if (this.Grid.isChildGrid && row.rowBreakHeightValue > 0) {\n                            //     // if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                            //     //     this.currentBounds.y += this.Grid.ParentCell.row.grid.style.cellPadding.top;\n                            //     // }\n                            //     this.currentBounds.x = this.startLocation.x;\n                            // }\n                            result_1.bounds = this.currentBounds;\n                            this.drawRowWithBreak(result_1, row, calculatedHeight);\n                            row.repeatFlag = true;\n                            row.repeatRowNumber = PdfGridLayouter.repeatRowIndex;\n                        }\n                        // else {\n                        //     result.isFinish = false;\n                        //     row.repeatFlag = false;\n                        //     this.drawRow( row, result, calculatedHeight);\n                        // }\n                    }\n                    // else {\n                    //     result.isFinish = false;\n                    // }\n                }\n                else {\n                    result_1.isFinish = true;\n                    if (row.grid.ParentCell.row.rowBreakHeightValue > 0) {\n                        row.repeatFlag = true;\n                    }\n                    else {\n                        row.repeatFlag = false;\n                        calculatedHeight = row.height;\n                    }\n                    if (this.Grid.isChildGrid && row.rowBreakHeight > 0) {\n                        if (this.Grid.ParentCell.row.grid.style.cellPadding != null) {\n                            calculatedHeight += this.Grid.ParentCell.row.grid.style.cellPadding.bottom;\n                        }\n                    }\n                    this.drawRow(row, result_1, calculatedHeight);\n                }\n            }\n            else {\n                //Split row only if row height exceeds page height and AllowRowBreakAcrossPages is true.\n                if (calculatedHeight > this.currentPageBounds.height) {\n                    if (this.Grid.allowRowBreakAcrossPages) {\n                        result_1.isFinish = true;\n                        //result.bounds = this.currentBounds;\n                        this.drawRowWithBreak(result_1, row, calculatedHeight);\n                        row.isrowFinish = true;\n                        row.repeatFlag = true;\n                        if (row.grid.splitChildRowIndex !== -1) {\n                            result_1.isFinish = false;\n                        }\n                    }\n                    // else {\n                    //     //If AllowRowBreakAcrossPages is not true, draw the row till it fits the page.\n                    //     result.isFinish = false;\n                    //     this.drawRow( row, result, calculatedHeight);\n                    // }\n                }\n                else if (this.currentBounds.y + calculatedHeight > this.currentPageBounds.height ||\n                    this.currentBounds.y + calculatedHeight > (this.currentBounds.height + this.startLocation.y) ||\n                    this.currentBounds.y + rowHeightWithSpan > this.currentPageBounds.height) {\n                    // If a row is repeated and still cannot fit in page, proceed draw.\n                    var isFit = false;\n                    if ((this.Grid.allowRowBreakAcrossPages && !this.Grid.repeatHeader && !row.isRowHeightSet && !row.rowMergeComplete)) {\n                        if (this.Grid.LayoutFormat !== null && this.Grid.LayoutFormat.paginateBounds.height > 0) {\n                            isFit = this.isFitToCell((this.currentBounds.height + this.startLocation.y) - this.currentBounds.y, this.Grid, row);\n                        }\n                        else\n                            isFit = this.isFitToCell(this.currentPageBounds.height - this.currentBounds.y, this.Grid, row);\n                        if (isFit) {\n                            this.isPaginate = true;\n                        }\n                    }\n                    else if (this.Grid.allowRowBreakAcrossPages && this.Grid.LayoutFormat != null && this.Grid.LayoutFormat.layout == PdfLayoutType.Paginate && this.Grid.LayoutFormat.break != PdfLayoutBreakType.FitElement && row.isRowHeightSet && this.currentBounds.y + height > this.currentPageBounds.height) {\n                        isFit = this.isFitToCell(this.currentPageBounds.height - this.currentBounds.y, this.Grid, row);\n                        if (!isFit)\n                            isFit = !(this.slr !== null && this.slr.actualSize.height == 0 && this.slr.remainder != null && this.slr.remainder.length > 0 && this.remainderText == this.slr.remainder);\n                        if (isFit && this.slr != null && this.slr.lineCount > 1) {\n                            //It may text cutoff issue\n                            isFit = false;\n                        }\n                        this.remainderText = null;\n                    }\n                    if (PdfGridLayouter.repeatRowIndex > -1 && PdfGridLayouter.repeatRowIndex === row.rowIndex || isFit) {\n                        if (this.Grid.allowRowBreakAcrossPages) {\n                            result_1.isFinish = true;\n                            this.drawRowWithBreak(result_1, row, calculatedHeight);\n                            row.repeatFlag = true;\n                            row.repeatRowNumber = PdfGridLayouter.repeatRowIndex;\n                            if (row.grid.splitChildRowIndex !== -1) {\n                                result_1.isFinish = false;\n                            }\n                        }\n                        else {\n                            result_1.isFinish = false;\n                            this.drawRow(row, result_1, calculatedHeight);\n                        }\n                    }\n                    else {\n                        result_1.isFinish = false;\n                    }\n                }\n                else {\n                    result_1.isFinish = true;\n                    this.drawRow(row, result_1, calculatedHeight);\n                    row.repeatFlag = false;\n                }\n            }\n            return result_1;\n        }\n        else {\n            var skipcell = false;\n            var loc = new PointF(this.currentBounds.x, this.currentBounds.y);\n            // if (row.grid.isChildGrid && row.grid.allowRowBreakAcrossPages && this.startLocation.x !== this.currentBounds.x && row.width <\n            //                 this.currentPage.getClientSize().width) {\n            //     location.x = this.startLocation.x;\n            // }\n            result.bounds = new RectangleF(loc, new SizeF(0, 0));\n            height = this.ReCalculateHeight(row, height);\n            for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n                var cancelSpans = ((i > this.cellEndIndex + 1) && (row.cells.getCell(i).columnSpan > 1));\n                // let cancelSpans : boolean = false;\n                if (!cancelSpans) {\n                    for (var j = 1; j < row.cells.getCell(i).columnSpan; j++) {\n                        row.cells.getCell(i + j).isCellMergeContinue = true;\n                    }\n                }\n                var size = new SizeF(this.Grid.columns.getColumn(i).width, height);\n                // if (size.width > this.currentGraphics.clientSize.width) {\n                //     size.width = this.currentGraphics.clientSize.width;\n                // }\n                // if (this.Grid.isChildGrid && this.Grid.style.allowHorizontalOverflow) {\n                //     if (size.width >= this.currentGraphics.clientSize.width) {\n                //         size.width -= 2 * this.currentBounds.x;\n                //     }\n                // }\n                /* tslint:disable */\n                if (!this.CheckIfDefaultFormat(this.Grid.columns.getColumn(i).format) &&\n                    this.CheckIfDefaultFormat(row.cells.getCell(i).stringFormat)) {\n                    row.cells.getCell(i).stringFormat = this.Grid.columns.getColumn(i).format;\n                }\n                var cellstyle = row.cells.getCell(i).style;\n                var tempValue = ((typeof row.cells.getCell(i).value === 'string' &&\n                    row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '');\n                row.cells.getCell(i).style = this.RaiseBeforeCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(loc, size), tempValue, cellstyle);\n                //row.cells.getCell(i).style = cellstyle;\n                if (!skipcell) {\n                    if (row.cells.getCell(i).value instanceof PdfGrid) {\n                        var grid = row.cells.getCell(i).value;\n                        grid.parentCellIndex = i;\n                    }\n                    var stringResult = row.cells.getCell(i).draw(this.currentGraphics, new RectangleF(loc, size), cancelSpans);\n                    if (row.grid.style.allowHorizontalOverflow && (row.cells.getCell(i).columnSpan > this.cellEndIndex ||\n                        i + row.cells.getCell(i).columnSpan > this.cellEndIndex + 1) && this.cellEndIndex < row.cells.count - 1) {\n                        row.rowOverflowIndex = this.cellEndIndex;\n                    }\n                    if (row.grid.style.allowHorizontalOverflow && (row.rowOverflowIndex > 0 && (row.cells.getCell(i).columnSpan >\n                        this.cellEndIndex || i + row.cells.getCell(i).columnSpan > this.cellEndIndex + 1)) &&\n                        row.cells.getCell(i).columnSpan - this.cellEndIndex + i - 1 > 0) {\n                        row.cells.getCell(row.rowOverflowIndex + 1).value = stringResult !== null ? (stringResult.remainder !== undefined) ?\n                            stringResult.remainder : '' : '';\n                        row.cells.getCell(row.rowOverflowIndex + 1).stringFormat = row.cells.getCell(i).stringFormat;\n                        row.cells.getCell(row.rowOverflowIndex + 1).style = row.cells.getCell(i).style;\n                        row.cells.getCell(row.rowOverflowIndex + 1).columnSpan = row.cells.getCell(i).columnSpan - this.cellEndIndex + i - 1;\n                    }\n                }\n                /* tslint:enable */\n                tempValue = ((typeof row.cells.getCell(i).value === 'string' &&\n                    row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '');\n                if (!cancelSpans) {\n                    this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(loc, size), tempValue, row.cells.getCell(i).style);\n                }\n                if (row.cells.getCell(i).value instanceof PdfGrid) {\n                    var grid = row.cells.getCell(i).value;\n                    if (this.Grid.columns.getColumn(i).width >= this.currentGraphics.clientSize.width) {\n                        loc.x = grid.rowLayoutBoundsWidth;\n                        loc.x += grid.style.cellSpacing;\n                    }\n                    else {\n                        loc.x += this.Grid.columns.getColumn(i).width;\n                    }\n                }\n                else {\n                    loc.x += this.Grid.columns.getColumn(i).width;\n                }\n            }\n            if (!row.rowMergeComplete || row.isRowHeightSet) {\n                this.currentBounds.y += height;\n            }\n            result.bounds = new RectangleF(new PointF(result.bounds.x, result.bounds.y), new SizeF(loc.x, loc.y));\n        }\n    };\n    PdfGridLayouter.prototype.isFitToCell = function (currentHeight, grid, gridRow) {\n        var isFit = false;\n        var layouter = new PdfStringLayouter();\n        for (var i = 0; i < gridRow.cells.count; i++) {\n            var cell = gridRow.cells.getCell(i);\n            if (typeof cell.value !== 'undefined' && cell.value !== null && typeof cell.value === 'string') {\n                var font = null;\n                if (typeof cell.style.font !== 'undefined' && cell.style.font != null) {\n                    font = cell.style.font;\n                }\n                else if (typeof cell.row.style.font !== 'undefined' && cell.row.style.font != null) {\n                    font = cell.row.style.font;\n                }\n                else if (typeof cell.row.grid.style.font !== 'undefined' && cell.row.grid.style.font != null) {\n                    font = cell.row.grid.style.font;\n                }\n                else {\n                    font = PdfDocument.defaultFont;\n                }\n                this.remainderText = cell.value;\n                var width = cell.width;\n                var column = grid.columns.getColumn(i);\n                if (column.isCustomWidth && cell.width > column.width) {\n                    width = column.width;\n                }\n                this.slr = layouter.layout(cell.value, font, cell.stringFormat, new SizeF(width, currentHeight), false, this.currentPageBounds);\n                var height = this.slr.actualSize.height;\n                if (cell.value !== '' && height === 0) {\n                    isFit = false;\n                    break;\n                }\n                if (cell.style !== null && cell.style.borders !== null && cell.style.borders.top !== null && cell.style.borders.bottom !== null) {\n                    height += (cell.style.borders.top.width + cell.style.borders.bottom.width) * 2;\n                }\n                if (this.slr.lineCount > 1 && cell.stringFormat != null && cell.stringFormat.lineSpacing != 0) {\n                    height += (this.slr.lineCount - 1) * (cell.style.stringFormat.lineSpacing);\n                }\n                if (cell.style.cellPadding === null) {\n                    height += (grid.style.cellPadding.top + grid.style.cellPadding.bottom);\n                }\n                else {\n                    height += (grid.style.cellPadding.top + grid.style.cellPadding.bottom);\n                }\n                height += grid.style.cellSpacing;\n                if (currentHeight > height || (typeof this.slr.remainder !== 'undefined' && this.slr.remainder !== null)) {\n                    isFit = true;\n                    break;\n                }\n            }\n        }\n        return isFit;\n    };\n    PdfGridLayouter.prototype.drawRowWithBreak = function (result, row, calculateHeight) {\n        var location = new PointF(this.currentBounds.x, this.currentBounds.y);\n        if (row.grid.isChildGrid && row.grid.allowRowBreakAcrossPages && this.startLocation.x !== this.currentBounds.x) {\n            location.x = this.startLocation.x;\n        }\n        result.bounds = new RectangleF(location, new SizeF(0, 0));\n        this.gridHeight = row.rowBreakHeight > 0 ? this.currentPageBounds.height : 0;\n        // Calculate the remaining height.\n        if (row.grid.style.cellPadding.top + this.currentBounds.y + row.grid.style.cellPadding.bottom < this.currentPageBounds.height) {\n            row.rowBreakHeight = this.currentBounds.y + calculateHeight - this.currentPageBounds.height;\n        }\n        // else {\n        //     row.rowBreakHeight = calculateHeight;\n        //     result.isFinish = false;\n        //     return;\n        // }\n        // No need to explicit break if the row height is equal to grid height.\n        for (var i = 0; i < row.cells.count; i++) {\n            var cell = row.cells.getCell(i);\n            var cellHeight = cell.measureHeight();\n            if (cellHeight === calculateHeight && cell.value instanceof PdfGrid) {\n                row.rowBreakHeight = 0;\n            }\n            // else if (cellHeight === calculateHeight && (cell.value as PdfGrid) === null) {\n            //     row.rowBreakHeight = this.currentBounds.y + calculateHeight - this.currentPageBounds.height;\n            // }\n        }\n        for (var i = this.cellStartIndex; i <= this.cellEndIndex; i++) {\n            var gridColumnWidth = this.Grid.columns.getColumn(i).width;\n            var cancelSpans = ((row.cells.getCell(i).columnSpan + i > this.cellEndIndex + 1) &&\n                (row.cells.getCell(i).columnSpan > 1));\n            if (!cancelSpans) {\n                for (var k = 1; k < row.cells.getCell(i).columnSpan; k++) {\n                    row.cells.getCell(i + k).isCellMergeContinue = true;\n                    gridColumnWidth += this.Grid.columns.getColumn(i + k).width;\n                }\n            }\n            var size = new SizeF(gridColumnWidth, this.gridHeight > 0.0 ? this.gridHeight :\n                this.currentPageBounds.height);\n            // if (size.width === 0) {\n            //     size = new SizeF(row.cells.getCell(i).width, size.height);\n            // }\n            // if (!this.CheckIfDefaultFormat(this.Grid.columns.getColumn(i).format) &&\n            //         this.CheckIfDefaultFormat((row.cells.getCell(i).stringFormat))) {\n            //     row.cells.getCell(i).stringFormat = this.Grid.columns.getColumn(i).format;\n            // }\n            var cellstyle1 = row.cells.getCell(i).style;\n            row.cells.getCell(i).style = cellstyle1;\n            var skipcell = false;\n            var stringResult = null;\n            if (!skipcell) {\n                row.cells.getCell(i)._rowHeight = row.height;\n                stringResult = row.cells.getCell(i).draw(this.currentGraphics, new RectangleF(location, size), cancelSpans);\n            }\n            //If still row is to be drawn, set cell finished drawing cell as false and update the text to be drawn.\n            if (row.rowBreakHeight > 0.0) {\n                if (stringResult != null && typeof stringResult.remainder !== 'undefined') {\n                    row.cells.getCell(i).FinishedDrawingCell = false;\n                    row.cells.getCell(i).remainingString = stringResult.remainder == null ? ' ' : stringResult.remainder;\n                    row.rowBreakHeight = calculateHeight - stringResult.actualSize.height;\n                }\n            }\n            result.isFinish = (!result.isFinish) ? result.isFinish : row.cells.getCell(i).FinishedDrawingCell;\n            // let tempValue : string = ((typeof row.cells.getCell(i).value === 'string' &&\n            //row.cells.getCell(i).value !== null) ? row.cells.getCell(i).value : '') as string;\n            // if (!cancelSpans) {\n            //     // this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i,\n            //     //           new RectangleF(location, size), tempValue, row.cells.getCell(i).style);            \n            //     this.raiseAfterCellDraw(this.currentGraphics, this.currentRowIndex, i, new RectangleF(location, size),\n            //                             (row.cells.getCell(i).value as string) ? row.cells.getCell(i).value.toString() : ' ',\n            //                             row.cells.getCell(i).style);\n            //     }                \n            if (row.cells.getCell(i).value instanceof PdfGrid) {\n                var grid = row.cells.getCell(i).value;\n                this.rowBreakPageHeightCellIndex = i;\n                // row.cells.getCell(i).pageCount = grid.listOfNavigatePages.length;\n                // for (let j : number = 0;j<grid.listOfNavigatePages.length;j++){\n                //     let pageIndex : number =grid.listOfNavigatePages.indexOf(j);\n                //             this.Grid.listOfNavigatePages.push(pageIndex);\n                //     }\n                if (this.Grid.columns.getColumn(i).width >= this.currentGraphics.clientSize.width) {\n                    location.x = this.rowLayoutBoundsWidth;\n                    location.x += grid.style.cellSpacing;\n                }\n                else {\n                    location.x += this.Grid.columns.getColumn(i).width;\n                }\n            }\n            else {\n                location.x += this.Grid.columns.getColumn(i).width;\n            }\n        }\n        this.currentBounds.y += this.gridHeight > 0.0 ? this.gridHeight : calculateHeight;\n        result.bounds = new RectangleF(new PointF(result.bounds.x, result.bounds.y), new SizeF(location.x, location.y));\n    };\n    /**\n     * @hidden\n     * @private\n     */\n    PdfGridLayouter.repeatRowIndex = -1;\n    return PdfGridLayouter;\n}(ElementLayouter));\nexport { PdfGridLayouter };\n// recalculateBounds : boolean, clientSize : SizeF\n//Implementation\n/**\n * `Initializes` internal data.\n * @private\n */\n//Internal declaration\nvar PdfGridLayoutResult = /** @class */ (function (_super) {\n    __extends(PdfGridLayoutResult, _super);\n    /**\n     * Constructor\n     * @private\n     */\n    function PdfGridLayoutResult(page, bounds) {\n        return _super.call(this, page, bounds) || this;\n    }\n    return PdfGridLayoutResult;\n}(PdfLayoutResult));\nexport { PdfGridLayoutResult };\n/**\n * `PdfGridLayoutFormat` class represents a flexible grid that consists of columns and rows.\n */\nvar PdfGridLayoutFormat = /** @class */ (function (_super) {\n    __extends(PdfGridLayoutFormat, _super);\n    /**\n     * Initializes a new instance of the `PdfGridLayoutFormat` class.\n     * @private\n     */\n    function PdfGridLayoutFormat(baseFormat) {\n        return _super.call(this, baseFormat) || this;\n    }\n    return PdfGridLayoutFormat;\n}(PdfLayoutFormat));\nexport { PdfGridLayoutFormat };\nvar GridCellEventArgs = /** @class */ (function () {\n    // Constructors\n    /**\n     * Initialize a new instance for `GridCellEventArgs` class.\n     * @private\n     */\n    function GridCellEventArgs(graphics, rowIndex, cellIndex, bounds, value) {\n        this.gridRowIndex = rowIndex;\n        this.gridCellIndex = cellIndex;\n        this.internalValue = value;\n        this.gridBounds = bounds;\n        this.pdfGraphics = graphics;\n    }\n    Object.defineProperty(GridCellEventArgs.prototype, \"rowIndex\", {\n        // Properties\n        /**\n         * Gets the value of current `row index`.\n         * @private\n         */\n        get: function () {\n            return this.gridRowIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"cellIndex\", {\n        /**\n         * Gets the value of current `cell index`.\n         * @private\n         */\n        get: function () {\n            return this.gridCellIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"value\", {\n        /**\n         * Gets the actual `value` of current cell.\n         * @private\n         */\n        get: function () {\n            return this.internalValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"bounds\", {\n        /**\n         * Gets the `bounds` of current cell.\n         * @private\n         */\n        get: function () {\n            return this.gridBounds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(GridCellEventArgs.prototype, \"graphics\", {\n        /**\n         * Gets the instance of `current graphics`.\n         * @private\n         */\n        get: function () {\n            return this.pdfGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return GridCellEventArgs;\n}());\nexport { GridCellEventArgs };\nvar PdfGridBeginCellDrawEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridBeginCellDrawEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `StartCellLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridBeginCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style) {\n        var _this = _super.call(this, graphics, rowIndex, cellIndex, bounds, value) || this;\n        _this.style = style;\n        return _this;\n    }\n    Object.defineProperty(PdfGridBeginCellDrawEventArgs.prototype, \"skip\", {\n        // Properties\n        /**\n         * Gets or sets a value indicating whether the value of this cell should be `skipped`.\n         * @private\n         */\n        get: function () {\n            return this.bSkip;\n        },\n        set: function (value) {\n            this.bSkip = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfGridBeginCellDrawEventArgs.prototype, \"style\", {\n        /**\n         * Gets or sets a `style` value of the cell.\n         * @private\n         */\n        get: function () {\n            return this.cellStyle;\n        },\n        set: function (value) {\n            this.cellStyle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridBeginCellDrawEventArgs;\n}(GridCellEventArgs));\nexport { PdfGridBeginCellDrawEventArgs };\nvar PdfGridEndCellDrawEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridEndCellDrawEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfGridEndCellLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridEndCellDrawEventArgs(graphics, rowIndex, cellIndex, bounds, value, style) {\n        var _this = _super.call(this, graphics, rowIndex, cellIndex, bounds, value) || this;\n        _this.cellStyle = style;\n        return _this;\n    }\n    Object.defineProperty(PdfGridEndCellDrawEventArgs.prototype, \"style\", {\n        // Propertise\n        /**\n         * Get the `PdfGridCellStyle`.\n         * @private\n         */\n        get: function () {\n            return this.cellStyle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridEndCellDrawEventArgs;\n}(GridCellEventArgs));\nexport { PdfGridEndCellDrawEventArgs };\nvar PdfCancelEventArgs = /** @class */ (function () {\n    function PdfCancelEventArgs() {\n    }\n    Object.defineProperty(PdfCancelEventArgs.prototype, \"cancel\", {\n        // Properties\n        /**\n         * Gets and Sets the value of `cancel`.\n         * @private\n         */\n        get: function () {\n            return this.isCancel;\n        },\n        set: function (value) {\n            this.isCancel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfCancelEventArgs;\n}());\nexport { PdfCancelEventArgs };\nvar BeginPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(BeginPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `BeginPageLayoutEventArgs` class with the specified rectangle and page.\n     * @private\n     */\n    function BeginPageLayoutEventArgs(bounds, page) {\n        var _this = _super.call(this) || this;\n        _this.bounds = bounds;\n        _this.pdfPage = page;\n        return _this;\n    }\n    Object.defineProperty(BeginPageLayoutEventArgs.prototype, \"bounds\", {\n        // Properties\n        /**\n         * Gets or sets value that indicates the lay outing `bounds` on the page.\n         * @private\n         */\n        get: function () {\n            return this.cellBounds;\n        },\n        set: function (value) {\n            this.cellBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BeginPageLayoutEventArgs.prototype, \"page\", {\n        /**\n         * Gets the `page` where the lay outing should start.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return BeginPageLayoutEventArgs;\n}(PdfCancelEventArgs));\nexport { BeginPageLayoutEventArgs };\n/**\n * `EndPageLayoutEventArgs` class is alternate for end page layout events.\n */\nvar EndPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(EndPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `EndPageLayoutEventArgs` class. with the specified 'PdfLayoutResult'.\n     * @private\n     */\n    function EndPageLayoutEventArgs(result) {\n        var _this = _super.call(this) || this;\n        _this.layoutResult = result;\n        return _this;\n    }\n    Object.defineProperty(EndPageLayoutEventArgs.prototype, \"result\", {\n        // Properties\n        /**\n         * Gets the lay outing `result` of the page.\n         * @private\n         */\n        get: function () {\n            return this.layoutResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(EndPageLayoutEventArgs.prototype, \"nextPage\", {\n        /**\n         * Gets or sets a value indicating the `next page` where the element should be layout.\n         * @private\n         */\n        get: function () {\n            return this.nextPdfPage;\n        },\n        set: function (value) {\n            this.nextPdfPage = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return EndPageLayoutEventArgs;\n}(PdfCancelEventArgs));\nexport { EndPageLayoutEventArgs };\n/**\n * `PdfGridBeginPageLayoutEventArgs` class is alternate for begin page layout events.\n */\nvar PdfGridBeginPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridBeginPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initialize a new instance of `PdfGridBeginPageLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridBeginPageLayoutEventArgs(bounds, page, startRow) {\n        var _this = _super.call(this, bounds, page) || this;\n        _this.startRow = startRow;\n        return _this;\n    }\n    Object.defineProperty(PdfGridBeginPageLayoutEventArgs.prototype, \"startRowIndex\", {\n        // Properties\n        /**\n         * Gets the `start row index`.\n         * @private\n         */\n        get: function () {\n            return this.startRow;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfGridBeginPageLayoutEventArgs;\n}(BeginPageLayoutEventArgs));\nexport { PdfGridBeginPageLayoutEventArgs };\n/**\n * `PdfGridEndPageLayoutEventArgs` class is alternate for begin page layout events.\n */\nvar PdfGridEndPageLayoutEventArgs = /** @class */ (function (_super) {\n    __extends(PdfGridEndPageLayoutEventArgs, _super);\n    // Constructors\n    /**\n     * Initialize a new instance of `PdfGridEndPageLayoutEventArgs` class.\n     * @private\n     */\n    function PdfGridEndPageLayoutEventArgs(result) {\n        return _super.call(this, result) || this;\n    }\n    return PdfGridEndPageLayoutEventArgs;\n}(EndPageLayoutEventArgs));\nexport { PdfGridEndPageLayoutEventArgs };\nvar RowLayoutResult = /** @class */ (function () {\n    //Constructors\n    /**\n     * Initializes a new instance of the `RowLayoutResult` class.\n     * @private\n     */\n    function RowLayoutResult() {\n        this.layoutedBounds = new RectangleF(0, 0, 0, 0);\n    }\n    Object.defineProperty(RowLayoutResult.prototype, \"isFinish\", {\n        /**\n         * Gets or sets a value indicating whether this instance `is finish`.\n         * @private\n         */\n        get: function () {\n            return this.bIsFinished;\n        },\n        set: function (value) {\n            this.bIsFinished = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RowLayoutResult.prototype, \"bounds\", {\n        /**\n         * Gets or sets the `bounds`.\n         * @private\n         */\n        get: function () {\n            return this.layoutedBounds;\n        },\n        set: function (value) {\n            this.layoutedBounds = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RowLayoutResult;\n}());\nexport { RowLayoutResult };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * ShapeLayouter.ts class for EJ2-PDF\n * @private\n */\nimport { ElementLayouter, PdfLayoutResult } from './element-layouter';\nimport { RectangleF, PointF } from './../../../drawing/pdf-drawing';\nimport { PdfLayoutBreakType, PdfLayoutType } from './../../figures/enum';\nimport { BeginPageLayoutEventArgs, EndPageLayoutEventArgs } from './../../../structured-elements/grid/layout/grid-layouter';\n/**\n * ShapeLayouter class.\n * @private\n */\nvar ShapeLayouter = /** @class */ (function (_super) {\n    __extends(ShapeLayouter, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `ShapeLayouter` class.\n     * @private\n     */\n    function ShapeLayouter(element) {\n        var _this = _super.call(this, element) || this;\n        // Fields\n        /**\n         * Initializes the object to store `older form elements` of previous page.\n         * @default 0\n         * @private\n         */\n        _this.olderPdfForm = 0;\n        /**\n         * The `bounds` of the shape element.\n         * * @default new RectangleF()\n         * @private\n         */\n        _this.shapeBounds = new RectangleF();\n        /**\n         * Total Page size of the web page.\n         * * @default 0\n         * @private\n         */\n        _this.totalPageSize = 0;\n        return _this;\n    }\n    Object.defineProperty(ShapeLayouter.prototype, \"element\", {\n        // Properties\n        /**\n         * Gets shape element.\n         * @private\n         */\n        get: function () {\n            return this.elements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Layouts the element.\n     * @private\n     */\n    ShapeLayouter.prototype.layoutInternal = function (param) {\n        var currentPage = param.page;\n        var currentBounds = param.bounds;\n        var shapeLayoutBounds = this.element.getBounds();\n        shapeLayoutBounds.x = 0;\n        shapeLayoutBounds.y = 0;\n        /* tslint:disable */\n        var isEmpty = (this.shapeBounds.x === this.shapeBounds.y && this.shapeBounds.y === this.shapeBounds.width && this.shapeBounds.width === this.shapeBounds.height && this.shapeBounds.height === 0) ? true : false;\n        /* tslint:enable */\n        if ((this.isPdfGrid) && (!(isEmpty))) {\n            shapeLayoutBounds = this.shapeBounds;\n        }\n        var result = null;\n        var pageResult = new ShapeLayoutResult();\n        pageResult.page = currentPage;\n        /*tslint:disable:no-constant-condition */\n        while (true) {\n            // Raise event.\n            var result1 = this.raiseBeforePageLayout(currentPage, currentBounds);\n            currentBounds = result1.currentBounds;\n            var endArgs = null;\n            if (!result1.cancel) {\n                pageResult = this.layoutOnPage(currentPage, currentBounds, shapeLayoutBounds, param);\n                // Raise event.\n                endArgs = this.raiseEndPageLayout(pageResult);\n                result1.cancel = (endArgs === null) ? false : endArgs.cancel;\n            }\n            if (!pageResult.end && !result1.cancel) {\n                currentBounds = this.getPaginateBounds(param);\n                shapeLayoutBounds = this.getNextShapeBounds(shapeLayoutBounds, pageResult);\n                currentPage = (endArgs === null || endArgs.nextPage === null) ?\n                    this.getNextPage(currentPage) : endArgs.nextPage;\n                if (this.isPdfGrid) {\n                    result = this.getLayoutResult(pageResult);\n                    break;\n                }\n            }\n            else {\n                result = this.getLayoutResult(pageResult);\n                break;\n            }\n        }\n        return result;\n    };\n    /**\n     * Raises BeforePageLayout event.\n     * @private\n     */\n    ShapeLayouter.prototype.raiseBeforePageLayout = function (currentPage, currentBounds) {\n        var cancel = false;\n        if (this.element.raiseBeginPageLayout) {\n            var args = new BeginPageLayoutEventArgs(currentBounds, currentPage);\n            this.element.onBeginPageLayout(args);\n            cancel = args.cancel;\n            currentBounds = args.bounds;\n        }\n        return { currentBounds: currentBounds, cancel: cancel };\n    };\n    /**\n     * Raises PageLayout event if needed.\n     * @private\n     */\n    ShapeLayouter.prototype.raiseEndPageLayout = function (pageResult) {\n        var args = null;\n        if (this.element.raiseEndPageLayout) {\n            var res = this.getLayoutResult(pageResult);\n            args = new EndPageLayoutEventArgs(res);\n            this.element.onEndPageLayout(args);\n        }\n        return args;\n    };\n    /**\n     * Creates layout result.\n     * @private\n     */\n    ShapeLayouter.prototype.getLayoutResult = function (pageResult) {\n        var result = new PdfLayoutResult(pageResult.page, pageResult.bounds);\n        return result;\n    };\n    /**\n     * Calculates the next active shape bounds.\n     * @private\n     */\n    ShapeLayouter.prototype.getNextShapeBounds = function (shapeLayoutBounds, pageResult) {\n        var layoutedBounds = pageResult.bounds;\n        shapeLayoutBounds.y = (shapeLayoutBounds.y + layoutedBounds.height);\n        shapeLayoutBounds.height = (shapeLayoutBounds.height - layoutedBounds.height);\n        return shapeLayoutBounds;\n    };\n    /**\n     * Layouts the element on the current page.\n     * @private\n     */\n    ShapeLayouter.prototype.layoutOnPage = function (currentPage, curBounds, sBounds, param) {\n        var result = new ShapeLayoutResult();\n        curBounds = this.checkCorrectCurrentBounds(currentPage, curBounds, param);\n        var fitToPage = this.fitsToBounds(curBounds, sBounds);\n        var canDraw = !((param.format.break === PdfLayoutBreakType.FitElement)\n            && (!fitToPage && (currentPage === param.page)));\n        var shapeFinished = false;\n        if (canDraw) {\n            var drawRectangle = this.getDrawBounds(curBounds, sBounds);\n            this.drawShape(currentPage.graphics, curBounds, drawRectangle);\n            result.bounds = this.getPageResultBounds(curBounds, sBounds);\n            shapeFinished = ((curBounds.height) >= (sBounds.height));\n        }\n        result.end = (shapeFinished || (param.format.layout === PdfLayoutType.OnePage));\n        result.page = currentPage;\n        return result;\n    };\n    /**\n     * Returns Rectangle for element drawing on the page.\n     * @private\n     */\n    ShapeLayouter.prototype.getDrawBounds = function (currentBounds, shapeLayoutBounds) {\n        var result = currentBounds;\n        result.y = (result.y - shapeLayoutBounds.y);\n        result.height = (result.height + shapeLayoutBounds.y);\n        return result;\n    };\n    /**\n     * Draws the shape.\n     * @private\n     */\n    ShapeLayouter.prototype.drawShape = function (g, currentBounds, drawRectangle) {\n        var gState = g.save();\n        try {\n            g.setClip(currentBounds);\n            this.element.drawGraphicsHelper(g, new PointF(drawRectangle.x, drawRectangle.y));\n        }\n        finally {\n            g.restore(gState);\n        }\n    };\n    /**\n     * Corrects current bounds on the page.\n     * @protected\n     */\n    ShapeLayouter.prototype.checkCorrectCurrentBounds = function (currentPage, curBounds, param) {\n        var pageSize = currentPage.graphics.clientSize;\n        curBounds.width = (curBounds.width > 0) ? curBounds.width : (pageSize.width - curBounds.x);\n        curBounds.height = (curBounds.height > 0) ? curBounds.height : (pageSize.height - curBounds.y);\n        if (this.isPdfGrid) {\n            curBounds.height = (curBounds.height - this.bottomCellPadding);\n        }\n        return curBounds;\n    };\n    /**\n     * Calculates bounds where the shape was layout on the page.\n     * @private\n     */\n    ShapeLayouter.prototype.getPageResultBounds = function (currentBounds, shapeLayoutBounds) {\n        var result = currentBounds;\n        result.height = Math.min(result.height, shapeLayoutBounds.height);\n        return result;\n    };\n    /**\n     * Checks whether shape rectangle fits to the lay outing bounds.\n     * @private\n     */\n    ShapeLayouter.prototype.fitsToBounds = function (currentBounds, shapeLayoutBounds) {\n        var fits = (shapeLayoutBounds.height <= currentBounds.height);\n        return fits;\n    };\n    /**\n     * Initializes the offset `index`.\n     * * @default 0\n     * @private\n     */\n    ShapeLayouter.index = 0;\n    /**\n     * Initializes the `difference in page height`.\n     * * @default 0\n     * @private\n     */\n    ShapeLayouter.splitDiff = 0;\n    /**\n     * Determines the `end of Vertical offset` values.\n     * * @default false\n     * @private\n     */\n    ShapeLayouter.last = false;\n    /**\n     * Determines the document link annotation `border width`.\n     * * @default 0\n     * @private\n     */\n    ShapeLayouter.borderWidth = 0;\n    return ShapeLayouter;\n}(ElementLayouter));\nexport { ShapeLayouter };\n/**\n * Contains lay outing result settings.\n * @private\n */\nvar ShapeLayoutResult = /** @class */ (function () {\n    function ShapeLayoutResult() {\n    }\n    return ShapeLayoutResult;\n}());\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfLayoutElement } from './../layout-element';\nimport { ShapeLayouter } from './shape-layouter';\n/**\n * Base class for the main shapes.\n * @private\n */\nvar PdfShapeElement = /** @class */ (function (_super) {\n    __extends(PdfShapeElement, _super);\n    function PdfShapeElement() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    // methods\n    /**\n     * Gets the bounds.\n     * @private\n     */\n    PdfShapeElement.prototype.getBounds = function () {\n        var rect = this.getBoundsInternal();\n        return rect;\n    };\n    /**\n     * `drawGraphicsHelper` the graphics.\n     * @public\n     */\n    PdfShapeElement.prototype.drawGraphicsHelper = function (graphics, location) {\n        if ((graphics == null)) {\n            throw new Error('ArgumentNullException :graphics');\n        }\n        this.drawShapeHelper(graphics, location.x, location.y);\n    };\n    /**\n     * `drawShapeHelper` the graphics.\n     * @private\n     */\n    PdfShapeElement.prototype.drawShapeHelper = function (graphics, x, y) {\n        var bNeedSave = (x !== 0.5 || y !== 0.5);\n        var gState = null;\n        // Translate co-ordinates.\n        if (bNeedSave) {\n            // Save state.\n            gState = graphics.save();\n            graphics.translateTransform(x, y);\n        }\n        this.drawInternal(graphics);\n        if (bNeedSave) {\n            // Restore state.\n            graphics.restore(gState);\n        }\n    };\n    /**\n     * Layouts the element.\n     * @private\n     */\n    PdfShapeElement.prototype.layout = function (param) {\n        var layouter = new ShapeLayouter(this);\n        var result = layouter.layout(param);\n        return result;\n    };\n    return PdfShapeElement;\n}(PdfLayoutElement));\nexport { PdfShapeElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfDrawElement.ts class for EJ2-PDF\n */\nimport { PdfShapeElement } from './pdf-shape-element';\n/**\n * Represents a base class for all page graphics elements.\n */\nvar PdfDrawElement = /** @class */ (function (_super) {\n    __extends(PdfDrawElement, _super);\n    /**\n     * Initializes a new instance of the `PdfDrawElement` class.\n     * @protected\n     */\n    function PdfDrawElement(pen) {\n        var _this = _super.call(this) || this;\n        if (typeof pen !== 'undefined') {\n            _this.mpen = pen;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfDrawElement.prototype, \"pen\", {\n        // Properties\n        /**\n         * Gets or sets a pen that will be used to draw the element.\n         * @public\n         */\n        get: function () {\n            return this.mpen;\n        },\n        set: function (value) {\n            this.mpen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfDrawElement;\n}(PdfShapeElement));\nexport { PdfDrawElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfFillElement.ts class for EJ2-PDF\n */\nimport { PdfDrawElement } from './draw-element';\nimport { PdfPen } from './../../pdf-pen';\nimport { PdfColor } from './../../pdf-color';\n/**\n * Represents a base class for all page graphics elements.\n */\nvar PdfFillElement = /** @class */ (function (_super) {\n    __extends(PdfFillElement, _super);\n    /**\n     * Initializes a new instance of the `PdfFillElement` class.\n     * @protected\n     */\n    function PdfFillElement(arg1, arg2) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Internal variable to store pen.\n         * @private\n         */\n        _this.mbrush = null;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof PdfPen) {\n            _this = _super.call(this, arg1) || this;\n        }\n        else {\n            _this.mbrush = arg2;\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfFillElement.prototype, \"brush\", {\n        // Properties\n        /**\n         * Gets or sets a brush of the element.\n         * @public\n         */\n        get: function () {\n            return this.mbrush;\n        },\n        set: function (value) {\n            this.mbrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Gets the pen. If both pen and brush are not explicitly defined, default pen will be used.\n     * @protected\n     */\n    PdfFillElement.prototype.obtainPen = function () {\n        return ((this.mbrush == null) && (this.pen == null)) ? new PdfPen(new PdfColor(0, 0, 0)) : this.pen;\n    };\n    return PdfFillElement;\n}(PdfDrawElement));\nexport { PdfFillElement };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Path.ts class for EJ2-PDF\n */\nimport { PdfBrush } from './../brushes/pdf-brush';\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutFormat } from './../figures/base/element-layouter';\nimport { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PathPointType } from './enum';\nimport { PdfFillElement } from './../figures/base/fill-element';\nimport { PdfFillMode } from './../enum';\n/**\n * `PdfPath` class Implements graphics path, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfPath = /** @class */ (function (_super) {\n    __extends(PdfPath, _super);\n    /**\n     * Initializes a new instance of the `PdfPath` class.\n     * @public\n     */\n    /* tslint:disable-next-line:max-line-length */\n    function PdfPath(arg1, arg2, arg3, arg4) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Local variable to store the points.\n         * @private\n         */\n        _this.mpoints = null;\n        /**\n         * Local variable to store the path Types.\n         * @private\n         */\n        _this.mpathTypes = null;\n        /**\n         * Local variable to store the Start Figure.\n         * @private\n         */\n        _this.mStartFigure = true;\n        /**\n         * Local variable to store the fill Mode.\n         * @private\n         */\n        _this.mfillMode = PdfFillMode.Alternate;\n        /**\n         * Local variable to store the Beziers.\n         * @private\n         */\n        _this.isBeziers3 = false;\n        /**\n         * Local variable to store the xps.\n         * @private\n         */\n        _this.isXps = false;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof PdfPen) {\n            _this = _super.call(this, arg1) || this;\n            if (arg2 instanceof PdfBrush) {\n                _this = _super.call(this, arg1, arg2) || this;\n                _this.fillMode = arg3;\n            }\n            else if (arg2 !== null && typeof arg2 !== 'undefined' && arg3 !== null && typeof arg3 !== 'undefined') {\n                _this.addPath(arg2, arg3);\n            }\n        }\n        else if (arg1 instanceof PdfBrush) {\n            _this = _super.call(this, arg1) || this;\n            if (arg2 !== null && typeof arg2 !== 'undefined') {\n                _this.fillMode = arg2;\n            }\n            if (arg3 !== null && typeof arg3 !== 'undefined' && arg4 !== null && typeof arg4 !== 'undefined') {\n                _this.addPath(arg3, arg4);\n            }\n        }\n        else {\n            _this.addPath(arg1, arg2);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfPath.prototype, \"fillMode\", {\n        // Properties\n        /**\n         * Gets or sets the fill mode.\n         * @public\n         */\n        get: function () {\n            return this.mfillMode;\n        },\n        set: function (value) {\n            this.mfillMode = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pathPoints\", {\n        /**\n         * Gets the path points.\n         * @public\n         */\n        get: function () {\n            return this.points;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pathTypes\", {\n        /**\n         * Gets the path point types.\n         * @public\n         */\n        get: function () {\n            return this.types;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"pointCount\", {\n        /**\n         * Gets the point count.\n         * @public\n         */\n        get: function () {\n            var count = 0;\n            if ((this.mpoints != null)) {\n                count = this.mpoints.length;\n            }\n            return count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"lastPoint\", {\n        /**\n         * Gets the last points.\n         * @public\n         */\n        get: function () {\n            return this.getLastPoint();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"points\", {\n        /**\n         * Gets the points list.\n         * @private\n         */\n        get: function () {\n            if ((this.mpoints == null)) {\n                this.mpoints = [];\n            }\n            return this.mpoints;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPath.prototype, \"types\", {\n        /**\n         * Gets the types.\n         * @private\n         */\n        get: function () {\n            if ((this.mpathTypes == null)) {\n                this.mpathTypes = [];\n            }\n            return this.mpathTypes;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfPath.prototype.draw = function (arg1, arg2, arg3, arg4) {\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2.x, arg2.y);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(arg1, arg2, null);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(arg1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof PointF && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null) && typeof arg3 === 'number') {\n            var widthValue = (arg1.graphics.clientSize.width - arg2);\n            var layoutRect = new RectangleF(arg2, arg3, widthValue, 0);\n            return this.drawHelper(arg1, layoutRect, arg4);\n        }\n        else if (arg2 instanceof RectangleF && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n        else {\n            return this.drawHelper(arg1, arg2, arg3);\n        }\n    };\n    PdfPath.prototype.addArc = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof RectangleF) {\n            this.addArc(arg1.x, arg1.y, arg1.width, arg1.height, arg2, arg3);\n        }\n        else {\n            var points = this.getBezierArcPoints(arg1, arg2, (arg2 + arg3), (arg2 + arg4), arg5, arg6);\n            for (var i = 0; i < points.length; i = i + 8) {\n                /* tslint:disable-next-line:max-line-length */\n                var point = [points[i], points[i + 1], points[i + 2], points[i + 3], points[i + 4], points[i + 5], points[i + 6], points[i + 7]];\n                this.addPoints(point, PathPointType.Bezier3);\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-line-length */\n    PdfPath.prototype.addBezier = function (arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\n        if (arg1 instanceof PointF && arg2 instanceof PointF && arg3 instanceof PointF && arg4 instanceof PointF) {\n            this.addBezier(arg1.x, arg1.y, arg2.x, arg2.y, arg3.x, arg3.y, arg4.x, arg4.y);\n        }\n        else {\n            var points = [];\n            points.push(arg1);\n            points.push(arg2);\n            points.push(arg3);\n            points.push(arg4);\n            points.push(arg5);\n            points.push(arg6);\n            points.push(arg7);\n            points.push(arg8);\n            this.addPoints(points, PathPointType.Bezier3);\n        }\n    };\n    PdfPath.prototype.addEllipse = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof RectangleF) {\n            this.addEllipse(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            this.startFigure();\n            this.addArc(arg1, arg2, arg3, arg4, 0, 360);\n            this.closeFigure();\n        }\n    };\n    PdfPath.prototype.addLine = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof PointF && arg2 instanceof PointF) {\n            this.addLine(arg1.x, arg1.y, arg2.x, arg2.y);\n        }\n        else {\n            var points = [];\n            points.push(arg1);\n            points.push(arg2);\n            points.push(arg3);\n            points.push(arg4);\n            this.addPoints(points, PathPointType.Line);\n        }\n    };\n    PdfPath.prototype.addPath = function (arg1, arg2) {\n        if (arg1 instanceof PdfPath) {\n            this.addPath(arg1.pathPoints, arg1.pathTypes);\n        }\n        else {\n            if ((arg1 == null)) {\n                throw new Error('ArgumentNullException:pathPoints');\n            }\n            if ((arg2 == null)) {\n                throw new Error('ArgumentNullException:pathTypes');\n            }\n            var count = arg1.length;\n            if ((count !== arg2.length)) {\n                throw new Error('The argument arrays should be of equal length.');\n            }\n        }\n    };\n    PdfPath.prototype.addPie = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof RectangleF) {\n            this.addPie(arg1.x, arg1.y, arg1.width, arg1.height, arg2, arg3);\n        }\n        else {\n            this.startFigure();\n            this.addArc(arg1, arg2, arg3, arg4, arg5, arg6);\n            this.addPoint(new PointF((arg1 + (arg3 / 2)), (arg2 + (arg4 / 2))), PathPointType.Line);\n            this.closeFigure();\n        }\n    };\n    /**\n     * `add a polygon` specified by points.\n     * @param points The points of the polygon\n     */\n    PdfPath.prototype.addPolygon = function (points) {\n        var count = (points.length * 2);\n        var p = [];\n        this.startFigure();\n        for (var i = 0; i < points.length; i++) {\n            p.push(points[i].x);\n            p.push(points[i].y);\n        }\n        this.addPoints(p, PathPointType.Line);\n        this.closeFigure();\n    };\n    PdfPath.prototype.addRectangle = function (arg1, y, width, height) {\n        if (arg1 instanceof RectangleF) {\n            this.addRectangle(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            var points = [];\n            this.startFigure();\n            points.push(arg1);\n            points.push(y);\n            points.push((arg1 + width));\n            points.push(y);\n            points.push((arg1 + width));\n            points.push((y + height));\n            points.push(arg1);\n            points.push((y + height));\n            this.addPoints(points, PathPointType.Line);\n            this.closeFigure();\n        }\n    };\n    /**\n     * Starts a new figure.\n     * @public\n     */\n    PdfPath.prototype.startFigure = function () {\n        this.mStartFigure = true;\n    };\n    /**\n     * Closed all non-closed figures.\n     * @public\n     */\n    PdfPath.prototype.closeAllFigures = function () {\n        var startPath = this.pathPoints[0];\n        for (var i = 0; i < this.mpathTypes.length; i++) {\n            var pt = ((this.types[i]));\n            var flag = false;\n            if (((i !== 0) && (pt === PathPointType.Start))) {\n                this.closeFigure((i - 1));\n                flag = true;\n            }\n            else if (((i === (this.mpathTypes.length - 1)) && (!flag && this.isXps))) {\n                if ((startPath.x === this.pathPoints[i].y)) {\n                    this.closeFigure(i);\n                }\n            }\n        }\n    };\n    /**\n     * Gets the last point.\n     * @public\n     */\n    PdfPath.prototype.getLastPoint = function () {\n        var lastPoint = new PointF(0, 0);\n        var count = this.pointCount;\n        if (((count > 0) && (this.mpoints != null))) {\n            lastPoint.x = this.mpoints[(count - 1)].x;\n            lastPoint.y = this.mpoints[(count - 1)].y;\n        }\n        return lastPoint;\n    };\n    /**\n     * Gets the bezier points for arc constructing.\n     * @public\n     */\n    PdfPath.prototype.getBezierArcPoints = function (x1, y1, x2, y2, s1, e1) {\n        if ((x1 > x2)) {\n            var tmp = void 0;\n            tmp = x1;\n            x1 = x2;\n            x2 = tmp;\n        }\n        if ((y2 > y1)) {\n            var tmp = void 0;\n            tmp = y1;\n            y1 = y2;\n            y2 = tmp;\n        }\n        var fragAngle;\n        var numFragments;\n        if ((Math.abs(e1) <= 90)) {\n            fragAngle = e1;\n            numFragments = 1;\n        }\n        else {\n            numFragments = (Math.ceil((Math.abs(e1) / 90)));\n            fragAngle = (e1 / numFragments);\n        }\n        var xcen = ((x1 + x2) / 2);\n        var ycen = ((y1 + y2) / 2);\n        var rx = ((x2 - x1) / 2);\n        var ry = ((y2 - y1) / 2);\n        var halfAng = ((fragAngle * (Math.PI / 360)));\n        var kappa = (Math.abs(4.0 / 3.0 * (1.0 - Math.cos(halfAng)) / Math.sin(halfAng)));\n        var pointList = [];\n        for (var i = 0; (i < numFragments); i++) {\n            var theta0 = (((s1 + (i * fragAngle)) * (Math.PI / 180)));\n            var theta1 = (((s1 + ((i + 1) * fragAngle)) * (Math.PI / 180)));\n            var cos0 = (Math.cos(theta0));\n            var cos1 = (Math.cos(theta1));\n            var sin0 = (Math.sin(theta0));\n            var sin1 = (Math.sin(theta1));\n            if ((fragAngle > 0)) {\n                /* tslint:disable-next-line:max-line-length */\n                pointList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 - (kappa * sin0)))), (ycen - (ry * (sin0 + (kappa * cos0)))), (xcen + (rx * (cos1 + (kappa * sin1)))), (ycen - (ry * (sin1 - (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n            else {\n                /* tslint:disable-next-line:max-line-length */\n                pointList.push((xcen + (rx * cos0)), (ycen - (ry * sin0)), (xcen + (rx * (cos0 + (kappa * sin0)))), (ycen - (ry * (sin0 - (kappa * cos0)))), (xcen + (rx * (cos1 - (kappa * sin1)))), (ycen - (ry * (sin1 + (kappa * cos1)))), (xcen + (rx * cos1)), (ycen - (ry * sin1)));\n            }\n        }\n        return pointList;\n    };\n    /**\n     * `getBoundsInternal` Returns a rectangle that bounds this element.\n     * @public\n     */\n    PdfPath.prototype.getBoundsInternal = function () {\n        var points = this.pathPoints;\n        var bounds = new RectangleF(0, 0, 0, 0);\n        if ((points.length > 0)) {\n            var xmin = points[0].x;\n            var xmax = points[0].x;\n            var ymin = points[0].y;\n            var ymax = points[0].y;\n            for (var i = 1; i < points.length; i++) {\n                var point = points[i];\n                xmin = Math.min(point.x, xmin);\n                xmax = Math.max(point.x, xmax);\n                ymin = Math.min(point.y, ymin);\n                ymax = Math.max(point.y, ymax);\n            }\n            bounds = new RectangleF(xmin, ymin, (xmax - xmin), (ymax - ymin));\n        }\n        return bounds;\n    };\n    /**\n     * `drawInternal` Draws an element on the Graphics.\n     * @param graphics Graphics context where the element should be printed.\n     * @public\n     */\n    PdfPath.prototype.drawInternal = function (graphics) {\n        if ((graphics == null)) {\n            throw new Error('ArgumentNullException :graphics');\n        }\n        graphics.drawPath(this.obtainPen(), this.brush, this);\n    };\n    PdfPath.prototype.addPoints = function (points, pointType, startIndex, endIndex) {\n        if (typeof startIndex === 'undefined' && typeof endIndex === 'undefined') {\n            this.addPoints(points, pointType, 0, points.length);\n        }\n        else {\n            for (var i = startIndex; i < endIndex; i++) {\n                var point = new PointF(points[i], points[(i + 1)]);\n                if ((i === startIndex)) {\n                    if (((this.pointCount <= 0) || this.mStartFigure)) {\n                        this.addPoint(point, PathPointType.Start);\n                        this.mStartFigure = false;\n                    }\n                    else if (((point.x !== this.lastPoint.x) && (point.y !== this.lastPoint.y) && !this.isBeziers3)) {\n                        this.addPoint(point, PathPointType.Line);\n                    }\n                    else if ((point.x !== this.lastPoint.x) && (point.y !== this.lastPoint.y)) {\n                        this.addPoint(point, PathPointType.Bezier3);\n                    }\n                }\n                else {\n                    this.addPoint(point, pointType);\n                }\n                i++;\n            }\n        }\n    };\n    /**\n     * `add a point` Adds the point and its type\n     * @param points The points.\n     * @param pointType Type of the points.\n     * @private\n     */\n    PdfPath.prototype.addPoint = function (point, pointType) {\n        this.points.push(point);\n        this.types.push((pointType));\n    };\n    PdfPath.prototype.closeFigure = function (index) {\n        if (typeof index === 'undefined') {\n            if ((this.pointCount > 0)) {\n                this.closeFigure(this.pointCount - 1);\n            }\n            this.startFigure();\n        }\n        else {\n            if ((index < 0)) {\n                throw new Error('IndexOutOfRangeException()');\n            }\n            var pt = ((this.types[index]));\n            pt = (pt | PathPointType.CloseSubpath);\n            this.types[index] = (pt);\n        }\n    };\n    return PdfPath;\n}(PdfFillElement));\nexport { PdfPath };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPen } from './../pdf-pen';\nimport { RectangleF } from './../../drawing/pdf-drawing';\nimport { PdfFillElement } from './../figures/base/fill-element';\n/**\n * `PdfRectangleArea` class Implements graphics rectangle area, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfRectangleArea = /** @class */ (function (_super) {\n    __extends(PdfRectangleArea, _super);\n    /* tslint:disable-next-line:max-line-length */\n    function PdfRectangleArea(arg1, arg2, arg3, arg4, arg5, arg6) {\n        var _this = _super.call(this) || this;\n        //Fields\n        /**\n         * public variable to store the rectangle.\n         * @public\n         */\n        _this.bounds = new RectangleF(0, 0, 0, 0);\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof PdfPen) {\n            _this = _super.call(this, arg1, arg2) || this;\n            if (arg3 instanceof RectangleF) {\n                _this.bounds = arg3;\n            }\n            else {\n                _this.bounds = new RectangleF(arg3, arg4, arg5, arg6);\n            }\n        }\n        else if (arg1 instanceof RectangleF) {\n            _this.bounds = arg1;\n        }\n        else {\n            _this.bounds = new RectangleF(arg1, arg2, arg3, arg4);\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfRectangleArea.prototype, \"x\", {\n        //Properties\n        /**\n         * Gets or sets the X co-ordinate of the upper-left corner of this the element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.x;\n        },\n        set: function (value) {\n            this.bounds.x = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRectangleArea.prototype, \"y\", {\n        /**\n         * Gets or sets the Y co-ordinate of the upper-left corner of this the element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.y;\n        },\n        set: function (value) {\n            this.bounds.y = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRectangleArea.prototype, \"width\", {\n        /**\n         * Gets or sets the width of this element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.width;\n        },\n        set: function (value) {\n            this.bounds.width = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfRectangleArea.prototype, \"height\", {\n        /**\n         * Gets or sets the height of this element.\n         * @public\n         */\n        get: function () {\n            return this.bounds.height;\n        },\n        set: function (value) {\n            this.bounds.height = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    PdfRectangleArea.prototype.getBoundsInternal = function () {\n        return this.bounds;\n    };\n    return PdfRectangleArea;\n}(PdfFillElement));\nexport { PdfRectangleArea };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPen } from './../pdf-pen';\nimport { RectangleF } from './../../drawing/pdf-drawing';\nimport { PdfRectangleArea } from './rectangle-area';\n/**\n * `PdfEllipsePart` class Implements graphics ellipse part, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfEllipsePart = /** @class */ (function (_super) {\n    __extends(PdfEllipsePart, _super);\n    /* tslint:disable-next-line:max-line-length */\n    function PdfEllipsePart(arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * public variable to store the start angle.\n         * @public\n         */\n        _this.startAngle = 0;\n        /**\n         * public variable to store the sweep angle.\n         * @public\n         */\n        _this.sweepAngle = 0;\n        if (typeof arg1 === 'undefined') {\n            //\n        }\n        else if (arg1 instanceof RectangleF && typeof arg2 !== 'undefined' && typeof arg3 !== 'undefined') {\n            _this = _super.call(this, arg1) || this;\n            _this.startAngle = arg2;\n            _this.sweepAngle = arg3;\n        }\n        else if (arg1 instanceof PdfPen) {\n            if (arg3 instanceof RectangleF) {\n                _this = _super.call(this, arg1, arg2, arg3) || this;\n                _this.startAngle = arg4;\n                _this.sweepAngle = arg5;\n            }\n            else {\n                _this = _super.call(this, arg1, arg2, arg3, arg4, arg5, arg6) || this;\n                _this.startAngle = arg7;\n                _this.sweepAngle = arg8;\n            }\n        }\n        else {\n            _this = _super.call(this, arg1, arg2, arg3, arg4) || this;\n            _this.startAngle = arg5;\n            _this.sweepAngle = arg6;\n        }\n        return _this;\n    }\n    return PdfEllipsePart;\n}(PdfRectangleArea));\nexport { PdfEllipsePart };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * arc.ts class for EJ2-PDF\n */\nimport { PdfPen } from './../pdf-pen';\nimport { PdfLayoutFormat } from './../figures/base/element-layouter';\nimport { RectangleF, PointF } from './../../drawing/pdf-drawing';\nimport { PdfEllipsePart } from './../figures/ellipse-part';\n/**\n * `PdfArc` class Implements graphics arc, which is a sequence of primitive graphics elements.\n * @private\n */\nvar PdfArc = /** @class */ (function (_super) {\n    __extends(PdfArc, _super);\n    /* tslint:disable-next-line:max-line-length */\n    function PdfArc(arg1, arg2, arg3, arg4, arg5, arg6, arg7) {\n        var _this = this;\n        if (typeof arg1 === 'undefined') {\n            _this = _super.call(this) || this;\n        }\n        else if (arg1 instanceof RectangleF) {\n            _this = _super.call(this, arg1, arg2, arg3) || this;\n        }\n        else if (arg1 instanceof PdfPen) {\n            if (arg2 instanceof RectangleF) {\n                _this = _super.call(this, arg1, null, arg2, arg3, arg4) || this;\n            }\n            else if (typeof arg6 === 'undefined' && typeof arg7 === 'undefined') {\n                _this = _super.call(this, arg1, null, 0, 0, arg2, arg3, arg4, arg5) || this;\n            }\n            else if (typeof arg6 !== 'undefined' && typeof arg7 !== 'undefined') {\n                _this = _super.call(this, arg1, null, arg2, arg3, arg4, arg5, arg6, arg7) || this;\n            }\n        }\n        else if (typeof arg1 !== 'undefined' && typeof arg5 === 'undefined' && typeof arg6 === 'undefined') {\n            _this = _super.call(this, 0, 0, arg1, arg2, arg3, arg4) || this;\n        }\n        else if (typeof arg1 !== 'undefined' && typeof arg5 !== 'undefined' && typeof arg6 !== 'undefined') {\n            _this = _super.call(this, arg1, arg2, arg3, arg4, arg5, arg6) || this;\n        }\n        return _this;\n    }\n    PdfArc.prototype.draw = function (argu1, arg2, arg3, arg4) {\n        if (arg2 instanceof PointF && typeof arg2.width === 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(argu1, arg2.x, arg2.y);\n        }\n        else if (arg2 instanceof RectangleF && typeof arg2.width !== 'undefined' && typeof arg3 === 'undefined') {\n            return this.drawHelper(argu1, arg2, null);\n        }\n        else if (typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'undefined') {\n            return this.drawHelper(argu1, arg2, arg3, null);\n        }\n        else if (arg2 instanceof PointF && arg3 instanceof PdfLayoutFormat) {\n            return this.drawHelper(argu1, arg2.x, arg2.y, arg3);\n        }\n        else if (typeof arg2 === 'number' && (arg4 instanceof PdfLayoutFormat || arg4 == null) && typeof arg3 === 'number') {\n            var widthValue = (argu1.graphics.clientSize.width - arg2);\n            var layoutRect = new RectangleF(arg2, arg3, widthValue, 0);\n            return this.drawHelper(argu1, layoutRect, arg4);\n        }\n        else {\n            return this.drawHelper(argu1, arg2, arg3);\n        }\n    };\n    // Implementation\n    /**\n     * `drawInternal` Draws an element on the Graphics.\n     * @param graphics Graphics context where the element should be printed.\n     *\n     */\n    PdfArc.prototype.drawInternal = function (graphics) {\n        if ((graphics == null)) {\n            throw new Error('ArgumentNullException : graphics');\n        }\n        graphics.drawArc(this.obtainPen(), this.bounds, this.startAngle, this.sweepAngle);\n    };\n    return PdfArc;\n}(PdfEllipsePart));\nexport { PdfArc };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * PdfTrueTypeFont.ts class for EJ2-PDF\n */\nimport { UnicodeTrueTypeFont } from './unicode-true-type-font';\nimport { PdfFont } from './pdf-font';\nimport { PdfFontStyle } from './enum';\nimport { PdfDocument } from './../../document/pdf-document';\nimport { PdfTextDirection } from './../enum';\nimport { RtlRenderer } from './rtl-renderer';\n//https://www.giftofspeed.com/base64-encoder/\nvar PdfTrueTypeFont = /** @class */ (function (_super) {\n    __extends(PdfTrueTypeFont, _super);\n    function PdfTrueTypeFont(base64String, size, style) {\n        var _this = _super.call(this, size) || this;\n        /**\n         * Indicates whether the font is embedded or not.\n         * @private\n         */\n        _this.isEmbedFont = false;\n        /**\n         * Indicates whether the font is unicoded or not.\n         * @private\n         */\n        _this.isUnicode = true;\n        if (style !== undefined) {\n            _this.createFontInternal(base64String, style);\n        }\n        else {\n            _this.createFontInternal(base64String, PdfFontStyle.Regular);\n        }\n        return _this;\n    }\n    PdfTrueTypeFont.prototype.equalsToFont = function (font) {\n        var result = false;\n        //let result : boolean = this.fontInternal.equalsToFont(font);\n        return result;\n    };\n    PdfTrueTypeFont.prototype.getLineWidth = function (line, format) {\n        var width = 0;\n        if (format !== null && typeof format !== 'undefined' && format.textDirection !== PdfTextDirection.None) {\n            var returnValue = this.getUnicodeLineWidth(line, /*out*/ width, format);\n            width = returnValue.width;\n        }\n        else {\n            width = this.fontInternal.getLineWidth(line);\n        }\n        var size = this.metrics.getSize(format);\n        width *= (PdfFont.charSizeMultiplier * size);\n        width = this.applyFormatSettings(line, format, width);\n        return width;\n    };\n    /**\n     * Returns width of the char.\n     */\n    PdfTrueTypeFont.prototype.getCharWidth = function (charCode, format) {\n        var codeWidth = this.fontInternal.getCharWidth(charCode);\n        var size = this.metrics.getSize(format);\n        codeWidth *= (0.001 * size);\n        return codeWidth;\n    };\n    //Implementation\n    PdfTrueTypeFont.prototype.createFontInternal = function (base64String, style) {\n        this.fontInternal = new UnicodeTrueTypeFont(base64String, this.size);\n        this.calculateStyle(style);\n        this.initializeInternals();\n    };\n    PdfTrueTypeFont.prototype.calculateStyle = function (style) {\n        var iStyle = this.fontInternal.ttfMetrics.macStyle;\n        if ((style & PdfFontStyle.Underline) !== 0) {\n            iStyle |= PdfFontStyle.Underline;\n        }\n        if ((style & PdfFontStyle.Strikeout) !== 0) {\n            iStyle |= PdfFontStyle.Strikeout;\n        }\n        this.setStyle(iStyle);\n    };\n    PdfTrueTypeFont.prototype.initializeInternals = function () {\n        var equalFont = null;\n        if (PdfDocument.enableCache) {\n            // Search for the similar fonts.\n            equalFont = PdfDocument.cache.search(this);\n        }\n        var internals = null;\n        // There is not equal font in the cache.\n        if (equalFont !== null && equalFont !== undefined) {\n            // Get the settings from the cached font.\n            internals = equalFont.getInternals();\n            var metrics = equalFont.metrics;\n            metrics = metrics.clone();\n            metrics.size = this.size;\n            this.metrics = metrics;\n            this.fontInternal = equalFont.fontInternal;\n        }\n        else {\n            if (equalFont == null) {\n                if (this.fontInternal instanceof UnicodeTrueTypeFont) {\n                    this.fontInternal.isEmbed = this.isEmbedFont;\n                }\n                this.fontInternal.createInternals();\n                internals = this.fontInternal.getInternals();\n                this.metrics = this.fontInternal.metrics;\n            }\n        }\n        this.metrics.isUnicodeFont = true;\n        this.setInternals(internals);\n        //this.ttfReader = (this.fontInternal as UnicodeTrueTypeFont).ttfReader;\n    };\n    /**\n     * Stores used symbols.\n     */\n    PdfTrueTypeFont.prototype.setSymbols = function (text) {\n        var internalFont = this.fontInternal;\n        if (internalFont != null) {\n            internalFont.setSymbols(text);\n        }\n    };\n    Object.defineProperty(PdfTrueTypeFont.prototype, \"Unicode\", {\n        /**\n         * Property\n         *\n         */\n        get: function () {\n            return this.isUnicode;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // public get Font() : UnicodeTrueTypeFont {\n    //     return this.fontInternal as UnicodeTrueTypeFont;\n    // }\n    PdfTrueTypeFont.prototype.getUnicodeLineWidth = function (line, /*out*/ width, format) {\n        // if (line == null) {\n        //     throw new Error('ArgumentNullException : line');\n        // }\n        width = 0;\n        var glyphIndices = null;\n        var rtlRender = new RtlRenderer();\n        /* tslint:disable-next-line:max-line-length */\n        var result = rtlRender.getGlyphIndex(line, this, (format.textDirection === PdfTextDirection.RightToLeft) ? true : false, /*out*/ glyphIndices, true);\n        var resultGlyph = result.success;\n        glyphIndices = result.glyphs;\n        if (resultGlyph && glyphIndices !== null) {\n            var ttfReader = this.fontInternal.ttfReader;\n            for (var i = 0, len = glyphIndices.length; i < len; i++) {\n                var glyphIndex = glyphIndices[i];\n                var glyph = ttfReader.getGlyph(glyphIndex);\n                if (glyph !== null && typeof glyph !== 'undefined') {\n                    width += glyph.width;\n                }\n            }\n        }\n        return { success: resultGlyph, width: width };\n    };\n    return PdfTrueTypeFont;\n}(PdfFont));\nexport { PdfTrueTypeFont };\n","/**\n * PdfPageTemplateElement.ts class for EJ2-Pdf\n */\nimport { PdfDockStyle, PdfAlignmentStyle, TemplateType } from './enum';\nimport { PointF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTemplate } from './../graphics/figures/pdf-template';\nimport { PdfPage } from './pdf-page';\nimport { RectangleF } from './../drawing/pdf-drawing';\n/**\n * Describes a `page template` object that can be used as header/footer, watermark or stamp.\n */\nvar PdfPageTemplateElement = /** @class */ (function () {\n    /* tslint:disable */\n    function PdfPageTemplateElement(arg1, arg2, arg3, arg4, arg5) {\n        if (arg1 instanceof RectangleF && typeof arg2 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg1.width, arg1.height, null);\n        }\n        else if (arg1 instanceof RectangleF && arg2 instanceof PdfPage && typeof arg3 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg1.width, arg1.height, arg2);\n        }\n        else if (arg1 instanceof PointF && arg2 instanceof SizeF && typeof arg3 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg2.width, arg2.height, null);\n        }\n        else if (arg1 instanceof PointF && arg2 instanceof SizeF && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n            this.InitiateBounds(arg1.x, arg1.y, arg2.width, arg2.height, arg3);\n        }\n        else if (arg1 instanceof SizeF && typeof arg2 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1.width, arg1.height, null);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1, arg2, null);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && arg3 instanceof PdfPage && typeof arg4 === 'undefined') {\n            this.InitiateBounds(0, 0, arg1, arg2, arg3);\n        }\n        else if (typeof arg1 === 'number' && typeof arg2 === 'number' && typeof arg3 === 'number' && typeof arg4 === 'number' && typeof arg5 === 'undefined') {\n            this.InitiateBounds(arg1, arg2, arg3, arg4, null);\n        }\n        else {\n            this.InitiateBounds(arg1, arg2, arg3, arg4, null);\n            // this.graphics.colorSpace = this.page.document.colorSpace;\n        }\n        /* tslint:enable */\n    }\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"dock\", {\n        // Properties\n        /**\n         * Gets or sets the `dock style` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.dockStyle;\n        },\n        set: function (value) {\n            // if (this.dockStyle !== value && this.Type === TemplateType.None) {\n            this.dockStyle = value;\n            // Reset alignment.\n            this.resetAlignment();\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"alignment\", {\n        /**\n         * Gets or sets `alignment` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.alignmentStyle;\n        },\n        set: function (value) {\n            // if (this.alignmentStyle !== value) {\n            this.setAlignment(value);\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"foreground\", {\n        /**\n         * Indicates whether the page template is located `in front of the page layers or behind of it`.\n         * @private\n         */\n        get: function () {\n            return this.isForeground;\n        },\n        set: function (value) {\n            // if (this.foreground !== value) {\n            this.isForeground = value;\n            // }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"background\", {\n        /**\n         * Indicates whether the page template is located `behind of the page layers or in front of it`.\n         * @private\n         */\n        get: function () {\n            return !this.isForeground;\n        },\n        set: function (value) {\n            this.isForeground = !value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"location\", {\n        /**\n         * Gets or sets `location` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.currentLocation;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"x\", {\n        /**\n         * Gets or sets `X` co-ordinate of the template element on the page.\n         * @private\n         */\n        get: function () {\n            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.x : 0;\n            return value;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation.x = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"y\", {\n        /**\n         * Gets or sets `Y` co-ordinate of the template element on the page.\n         * @private\n         */\n        get: function () {\n            var value = (typeof this.currentLocation !== 'undefined') ? this.currentLocation.y : 0;\n            return value;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.currentLocation.y = value;\n            }\n            else {\n                //\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"size\", {\n        /**\n         * Gets or sets `size` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.size;\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.template.reset(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"width\", {\n        /**\n         * Gets or sets `width` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.width;\n        },\n        set: function (value) {\n            if (this.template.width !== value && this.type === TemplateType.None) {\n                var size = this.template.size;\n                size.width = value;\n                this.template.reset(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"height\", {\n        /**\n         * Gets or sets `height` of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.height;\n        },\n        set: function (value) {\n            if (this.template.height !== value && this.type === TemplateType.None) {\n                var size = this.template.size;\n                size.height = value;\n                this.template.reset(size);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"graphics\", {\n        /**\n         * Gets `graphics` context of the page template element.\n         * @private\n         */\n        get: function () {\n            return this.template.graphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"template\", {\n        /**\n         * Gets Pdf `template` object.\n         * @private\n         */\n        get: function () {\n            // if (typeof this.pdfTemplate === 'undefined' || this.pdfTemplate == null) {\n            //     this.pdfTemplate = new PdfTemplate(this.size);\n            // }\n            return this.pdfTemplate;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"type\", {\n        /**\n         * Gets or sets `type` of the usage of this page template.\n         * @private\n         */\n        get: function () {\n            return this.templateType;\n        },\n        set: function (value) {\n            this.updateDocking(value);\n            this.templateType = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfPageTemplateElement.prototype, \"bounds\", {\n        /**\n         * Gets or sets `bounds` of the page template.\n         * @public\n         */\n        get: function () {\n            return new RectangleF(new PointF(this.x, this.y), this.size);\n        },\n        set: function (value) {\n            if (this.type === TemplateType.None) {\n                this.location = new PointF(value.x, value.y);\n                this.size = new SizeF(value.width, value.height);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Initialize Bounds` Initialize the bounds value of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.InitiateBounds = function (arg1, arg2, arg3, arg4, arg5) {\n        this.x = arg1;\n        this.y = arg2;\n        this.pdfTemplate = new PdfTemplate(arg3, arg4);\n        // this.graphics.colorSpace = this.page.document.colorSpace;\n    };\n    /**\n     * `Updates Dock` property if template is used as header/footer.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.updateDocking = function (type) {\n        if (type !== TemplateType.None) {\n            switch (type) {\n                case TemplateType.Top:\n                    this.dock = PdfDockStyle.Top;\n                    break;\n                case TemplateType.Bottom:\n                    this.dock = PdfDockStyle.Bottom;\n                    break;\n                case TemplateType.Left:\n                    this.dock = PdfDockStyle.Left;\n                    break;\n                case TemplateType.Right:\n                    this.dock = PdfDockStyle.Right;\n                    break;\n            }\n            this.resetAlignment();\n        }\n    };\n    /**\n     * `Resets alignment` of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.resetAlignment = function () {\n        this.alignment = PdfAlignmentStyle.None;\n    };\n    /**\n     * `Sets alignment` of the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.setAlignment = function (alignment) {\n        if (this.dock === PdfDockStyle.None) {\n            this.alignmentStyle = alignment;\n        }\n        else {\n            // Template is docked and alignment has been changed.\n            var canBeSet = false;\n            switch (this.dock) {\n                case PdfDockStyle.Left:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.MiddleLeft ||\n                        alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Top:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopLeft || alignment === PdfAlignmentStyle.TopCenter ||\n                        alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Right:\n                    canBeSet = (alignment === PdfAlignmentStyle.TopRight || alignment === PdfAlignmentStyle.MiddleRight ||\n                        alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Bottom:\n                    canBeSet = (alignment === PdfAlignmentStyle.BottomLeft || alignment === PdfAlignmentStyle.BottomCenter\n                        || alignment === PdfAlignmentStyle.BottomRight || alignment === PdfAlignmentStyle.None);\n                    break;\n                case PdfDockStyle.Fill:\n                    canBeSet = (alignment === PdfAlignmentStyle.MiddleCenter || alignment === PdfAlignmentStyle.None);\n                    break;\n            }\n            if (canBeSet) {\n                this.alignmentStyle = alignment;\n            }\n        }\n    };\n    /**\n     * Draws the template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.draw = function (layer, document) {\n        var page = layer.page;\n        var bounds = this.calculateBounds(page, document);\n        layer.graphics.drawPdfTemplate(this.template, new PointF(bounds.x, bounds.y), new SizeF(bounds.width, bounds.height));\n    };\n    /**\n     * Calculates bounds of the page template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.calculateBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.alignmentStyle !== PdfAlignmentStyle.None) {\n            result = this.getAlignmentBounds(page, document);\n        }\n        else if (this.dockStyle !== PdfDockStyle.None) {\n            result = this.getDockBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getAlignmentBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.type === TemplateType.None) {\n            result = this.getSimpleAlignmentBounds(page, document);\n        }\n        else {\n            result = this.getTemplateAlignmentBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getSimpleAlignmentBounds = function (page, document) {\n        var bounds = this.bounds;\n        var pdfSection = page.section;\n        var actualBounds = pdfSection.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        switch (this.alignmentStyle) {\n            case PdfAlignmentStyle.TopLeft:\n                x = 0;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.TopCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.TopRight:\n                x = actualBounds.width - this.width;\n                y = 0;\n                break;\n            case PdfAlignmentStyle.MiddleLeft:\n                x = 0;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleRight:\n                x = actualBounds.width - this.width;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.BottomLeft:\n                x = 0;\n                y = actualBounds.height - this.height;\n                break;\n            case PdfAlignmentStyle.BottomCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = actualBounds.height - this.height;\n                break;\n            case PdfAlignmentStyle.BottomRight:\n                x = actualBounds.width - this.width;\n                y = actualBounds.height - this.height;\n                break;\n        }\n        bounds.x = x;\n        bounds.y = y;\n        return bounds;\n    };\n    /**\n     * Calculates bounds according to the alignment.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getTemplateAlignmentBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        switch (this.alignmentStyle) {\n            case PdfAlignmentStyle.TopLeft:\n                if (this.type === TemplateType.Left) {\n                    x = this.convertSign(actualBounds.x);\n                    y = 0;\n                }\n                else if (this.type === TemplateType.Top) {\n                    x = this.convertSign(actualBounds.x);\n                    y = this.convertSign(actualBounds.y);\n                }\n                break;\n            case PdfAlignmentStyle.TopCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = this.convertSign(actualBounds.y);\n                break;\n            case PdfAlignmentStyle.TopRight:\n                if (this.type === TemplateType.Right) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = 0;\n                }\n                else if (this.type === TemplateType.Top) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = this.convertSign(actualBounds.y);\n                }\n                break;\n            case PdfAlignmentStyle.MiddleLeft:\n                x = this.convertSign(actualBounds.x);\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.MiddleRight:\n                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                y = (actualBounds.height - this.height) / 2;\n                break;\n            case PdfAlignmentStyle.BottomLeft:\n                if (this.type === TemplateType.Left) {\n                    x = this.convertSign(actualBounds.x);\n                    y = actualBounds.height - this.height;\n                }\n                else if (this.type === TemplateType.Bottom) {\n                    x = this.convertSign(actualBounds.x);\n                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                }\n                break;\n            case PdfAlignmentStyle.BottomCenter:\n                x = (actualBounds.width - this.width) / 2;\n                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                break;\n            case PdfAlignmentStyle.BottomRight:\n                if (this.type === TemplateType.Right) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = actualBounds.height - this.height;\n                }\n                else if (this.type === TemplateType.Bottom) {\n                    x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                    y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                }\n                break;\n        }\n        result.x = x;\n        result.y = y;\n        return result;\n    };\n    /**\n     * Calculates bounds according to the docking.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getDockBounds = function (page, document) {\n        var result = this.bounds;\n        if (this.type === TemplateType.None) {\n            result = this.getSimpleDockBounds(page, document);\n        }\n        else {\n            result = this.getTemplateDockBounds(page, document);\n        }\n        return result;\n    };\n    /**\n     * Calculates bounds according to the docking.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getSimpleDockBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        switch (this.dockStyle) {\n            case PdfDockStyle.Left:\n                x = 0;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Top:\n                x = 0;\n                y = 0;\n                width = actualBounds.width;\n                height = this.height;\n                break;\n            case PdfDockStyle.Right:\n                x = actualBounds.width - this.width;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Bottom:\n                x = 0;\n                y = actualBounds.height - this.height;\n                width = actualBounds.width;\n                height = this.height;\n                break;\n            case PdfDockStyle.Fill:\n                x = 0;\n                x = 0;\n                width = actualBounds.width;\n                height = actualBounds.height;\n                break;\n        }\n        result = new RectangleF(x, y, width, height);\n        return result;\n    };\n    /**\n     * Calculates template bounds basing on docking if template is a page template.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.getTemplateDockBounds = function (page, document) {\n        var result = this.bounds;\n        var section = page.section;\n        var actualBounds = section.getActualBounds(document, page, false);\n        var actualSize = section.pageSettings.getActualSize();\n        var x = this.x;\n        var y = this.y;\n        var width = this.width;\n        var height = this.height;\n        switch (this.dockStyle) {\n            case PdfDockStyle.Left:\n                x = this.convertSign(actualBounds.x);\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Top:\n                x = this.convertSign(actualBounds.x);\n                y = this.convertSign(actualBounds.y);\n                width = actualSize.width;\n                height = this.height;\n                if (actualBounds.height < 0) {\n                    y = actualSize.height - actualBounds.y;\n                }\n                break;\n            case PdfDockStyle.Right:\n                x = actualBounds.width + section.getRightIndentWidth(document, page, false) - this.width;\n                y = 0;\n                width = this.width;\n                height = actualBounds.height;\n                break;\n            case PdfDockStyle.Bottom:\n                x = this.convertSign(actualBounds.x);\n                y = actualBounds.height + section.getBottomIndentHeight(document, page, false) - this.height;\n                width = actualSize.width;\n                height = this.height;\n                if (actualBounds.height < 0) {\n                    y -= actualSize.height;\n                }\n                break;\n            case PdfDockStyle.Fill:\n                x = 0;\n                x = 0;\n                width = actualBounds.width;\n                height = actualBounds.height;\n                break;\n        }\n        result = new RectangleF(x, y, width, height);\n        return result;\n    };\n    /**\n     * Ignore value zero, otherwise convert sign.\n     * @private\n     */\n    PdfPageTemplateElement.prototype.convertSign = function (value) {\n        return (value !== 0 || (value === 0 && 1 / value === -Infinity)) ? -value : value;\n    };\n    return PdfPageTemplateElement;\n}());\nexport { PdfPageTemplateElement };\n"],"names":["defaultToString","item","Object","prototype","toString","call","Dictionary","toStringFunction","this","table","nElements","toStr","getValue","key","pair","value","setValue","k","remove","previousElement","keys","keysArray","namesOfKeys","index1","length","pair1","push","values","valuesArray","namesOfValues","index2","pair2","containsKey","clear","size","PdfName","stringStartMark","internalValue","isSaving6","position6","normalizeValue","defineProperty","get","status6","set","enumerable","configurable","index6","val","save","writer","write","escapeString","clone","crossTable","newName","stringValue","result","i","len_1","ch","delimiters","indexOf","c","replacements","Operators","forTest","obj","endObj","r","whiteSpace","slash","newLine","stream","endStream","xref","f","n","trailer","startxref","eof","header","beginText","endText","beginPath","appendLineSegment","stroke","fill","fillEvenOdd","fillStroke","fillStrokeEvenOdd","appendbeziercurve","appendRectangle","saveState","restoreState","paintXObject","modifyCtm","modifyTM","setLineWidth","setLineCapStyle","setLineJoinStyle","setDashPattern","setFlatnessTolerance","closePath","closeStrokePath","closeFillStrokePath","setCharacterSpace","setWordSpace","setHorizontalScaling","setTextLeading","setFont","setRenderingMode","setTextRise","setTextScaling","setCoords","goToNextLine","setText","setTextWithFormatting","setTextOnNewLine","selectcolorspaceforstroking","selectcolorspacefornonstroking","setrbgcolorforstroking","setrbgcolorfornonstroking","setcmykcolorforstroking","setcmykcolorfornonstroking","setgraycolorforstroking","setgraycolorfornonstroking","clipPath","clipPathEvenOdd","endPath","setGraphicsState","comment","evenOdd","setMiterLimit","setColorAndPattern","setColorAndPatternStroking","DictionaryProperties","pages","kids","count","resources","type","mediaBox","parent","root","decodeParms","filter","font","type1","baseFont","encoding","subtype","contents","procset","colorSpace","extGState","pattern","xObject","width","height","bitsPerComponent","image","dctdecode","columns","blackIs1","s","predictor","deviceRgb","next","action","link","a","annot","p","rect","uri","annots","ca","CA","xyz","fit","dest","BM","flatedecode","rotate","bBox","form","w","cIDFontType2","cIDToGIDMap","cIDFontType0C","identity","dw","fontDescriptor","cIDSystemInfo","cIDFontType0","fontName","flags","fontBBox","missingWidth","stemV","italicAngle","capHeight","ascent","descent","leading","avgWidth","fontFile2","fontFile3","maxWidth","xHeight","stemH","registry","ordering","supplement","type0","identityH","toUnicode","descendantFonts","background","shading","matrix","antiAlias","function","extend","shadingType","coords","domain","range","functionType","bitsPerSample","patternType","paintType","tilingType","xStep","yStep","viewerPreferences","centerWindow","displayTitle","fitWindow","hideMenuBar","hideToolBar","hideWindowUI","pageMode","pageLayout","duplex","printScaling","PdfDictionary","dictionary","position7","primitiveItems","prefix","suffix","object","archive","isResource","encrypt","dictionaryProperties","items","index","status","freezeChanges","status7","isSaving7","index7","getArchive","setArchive","setEncrypt","modify","getEncrypt","freezer","bChanged","onBeginSave","beginSave","sender","onFontDictionaryBeginSave","fontDictionaryBeginSave","onDescendantFontBeginSave","descendantFontBeginSave","onTemplateBeginSave","pageBeginDrawTemplate","pageBeginSave","onBeginAnnotationSave","annotationBeginSave","onSectionBeginSave","saveEvent","sectionBeginSave","state","bRaiseEvent","Count","saveItems","SaveSectionCollectionEventHandler","SaveDescendantFontEventHandler","SaveFontDictionaryEventHandler","SaveAnnotationEventHandler","SaveSectionEventHandler","SaveTemplateEventHandler","PdfNumber","position5","integer","status5","isSaving5","index5","intValue","floatToString","number","returnString","toFixed","min","x","y","z","Math","PdfArray","array","startMark","endMark","position9","clonedObject9","isFont","internalElements","tempArray","elements","tempNumberArray","pdfNumber","add","status9","isSaving9","index9","pdfCrossTable","element","markedChange","contains","tempElement","inputElement","getItems","len","newArray","fromRectangle","bounds","insert","tempElements","markChanged","removeAt","__extends","extendStatics","d","b","setPrototypeOf","__proto__","Array","hasOwnProperty","__","constructor","create","PdfStream","_super","data","_this","dicPrefix","dicSuffix","clonedObject2","bCompress","dataStream2","bCompress2","clearStream","internalStream","text","Error","writeBytes","String","fromCharCode","onCmapBeginSave","cmapBeginSave","onFontProgramBeginSave","fontProgramBeginSave","compressContent","byteArray","charCodeAt","dataArray","Uint8Array","sw","CompressedStreamWriter","close","getCompressedString","addFilter","filterName","PdfReferenceHolder","name","bytesToString","output","SaveCmapEventHandler","SaveFontProgramEventHandler","InternalEnum","ForceEncoding","SourceType","PdfString","bHex","position1","clonedObject1","bDecrypted","isParentDecrypted","isPacked","isFormField","isColorSpace","isHexString","status1","isSaving1","bConverted","bForceEncoding","bytesToHex","bytes","undefined","encode","Ascii","pdfEncode","stringMark","escapeSymbols","currentData","CrossTable","newString","toUnicodeArray","bAddPrefix","code","byteToString","hexStringMark","hexFormatPattern","PdfReference","objNumber","genNumber","index3","position3","Number","status3","isSaving3","obj1","obj2","index4","position4","objectIndex","initialize","status4","isSaving4","primitiveObject","pdfReference","tempObj","position","cTable","document","isSaving","getReference","PdfAction","pdfDictionary","PdfUriAction","uniformResourceIdentifier","PdfHorizontalAlignment","PdfVerticalAlignment","PdfTextAlignment","TextRenderingMode","PdfLineJoin","PdfLineCap","PdfDashStyle","PdfFillMode","PdfColorSpace","PdfBlendMode","PdfGraphicsUnit","PdfGridImagePosition","PdfTextDirection","PdfColor","color1","color2","color3","color4","assignRGB","filled","redColor","greenColor","g","blueColor","grayColor","gray","alpha","maxColourChannelValue","cyanColor","magentaColor","yellowColor","blackColor","scaleFactor","inverseScale","max","round","assignCMYK","red","green","blue","black","cyan","magenta","yellow","isEmpty","str","Rgb","rgbToString","GrayScale","grayScaleToString","Cmyk","cmykToString","ifStroking","colour","grayStringsSroke","grayStringsFill","rgbStrings","m","toArray","PointF","SizeF","RectangleF","arg1","arg2","arg3","arg4","pointf","sizef","Rectangle","left","top","right","bottom","topLeft","PdfBrush","PdfSolidBrush","color","pdfColor","monitorChanges","brush","streamWriter","getResources","saveChanges","currentColorSpace","diff","setColorAndSpace","resetChanges","PdfFontStyle","PdfFontFamily","PdfFontType","PdfWordWrapType","PdfSubSuperScript","FontEncoding","TtfCmapFormat","TtfCmapEncoding","TtfPlatformID","TtfMicrosoftEncodingID","TtfMacintoshEncodingID","FontDescriptorFlags","TtfCompositeGlyphFlags","PdfStringFormat","scalingFactor","wordWrapType","Word","internalLineLimit","textAlignment","verticalAlignment","direction","Top","isRightToLeft","internalCharacterSpacing","internalWordSpacing","clip","pdfSubSuperScript","None","internalParagraphIndent","firstLineIndent","trailingSpaces","isNoClip","initialLineIndent","StringTokenizer","textValue","currentPosition","getCharsCount","symbols","numSymbols","curIndex","readLine","pos","substr","text2","peekLine","line","readWord","peekWord","word","read","end","num","builder","peek","readToEnd","symbol","tab","spaces","whiteSpacePattern","PdfStringLayouter","isOverloadWithPosition","layout","arg5","arg6","arg7","clientSize","doLayout","format","rectSize","pageHeight","rectangle","reader","PdfStringLayoutResult","lineResult","lines","lineIndent","getLineIndent","layoutLine","numSymbolsInserted","returnedValue","copyToResult","success","numInserted","finalizeResult","firstLine","paragraphIndent","getLineHeight","lineSpacing","getLineWidth","layoutLineHeight","lineWidth","lineType","LineType","FirstParagraphLine","addToLineResult","NewLineBreak","curLine","curIndent","curLineWidth","getWrapType","WordOnly","textRemainder","substring","wordWrap","Character","ln","LayoutBreak","LastParagraphLine","layoutLines","breakType","info","LineInfo","actualSize","allowPartialLines","lineLimit","maxHeight","expHeight","lineHeight","trimLine","size1","rightToLeft","trim","empty","content","PdfFont","style","fontStyle","Regular","fontSize","setStyle","metrics","getHeight","Bold","Italic","Strikeout","Underline","fontMetrics","pdfFontInternals","measureString","temparg2","layoutArea","temparg3","equalsTo","equalsToFont","getInternals","setInternals","internals","applyFormatSettings","realWidth","characterSpacing","wordSpacing","charSizeMultiplier","syncObject","_PdfChunkBuffer","chunkSize","chunks","offset","committed","current","grow","writeAscii","idx","byteLength","space","toWrite","toUint8Array","total","out","lastIdx","chunk","subarray","destroy","PdfWriter","byteCountForStreamWriter","pdfDocument","PdfWriterHelper","buffer","PdfArrayBuffer","buf","ObjectStatus","PdfMainObjectCollection","objectCollections","mainObjectCollection","primitiveObjectCollection","isNew","objInfo","ObjectInfo","Registered","lookFor","reference","wasNew","trySetReference","found","setReference","_i","_a","pdfObject","objectCollectionIndex","PdfDocumentBase","isStreamCopied","PdfDocument","objects","currentSavingObject","pdfCatalog","setMainObjectCollection","setCrossTable","setCatalog","catalog","filename","Encoding","SW","StreamWriter","encoding_1","SW_1","Promise","resolve","reject","blobData","Blob","docSave","_save","_docSave","ObjectType","PdfBoolean","objectStatus","saving","boolToStr","PdfViewerPreferences","_dictionaryProperties","_centerWindow","_fitWindow","_displayTitle","_splitWindow","_hideMenuBar","_hideToolBar","_hideWindowUI","_pageMode","PdfPageMode","UseNone","_pageLayout","PdfPageLayout","SinglePage","_dictionary","_duplex","DuplexMode","_catalog","_mapPageMode","_mapDuplexMode","_mapPageLayout","_pageScaling","PageScalingMode","AppDefault","mode","Simplex","DuplexFlipShortEdge","DuplexFlipLongEdge","UseOutlines","UseThumbs","FullScreen","UseOC","UseAttachments","OneColumn","TwoColumnLeft","TwoColumnRight","TwoPageLeft","TwoPageRight","PdfCatalog","sections","tempDictionaryProperties","_viewerPreferences","PdfCrossTable","maxGenNumIndex","objectCount","merging","internalTrailer","pdfObjects","_saveProcess","saveHead","mappedReferences","markTrailerReferences","saveObjects","saveCount","xrefPos","registerObject","saveSections","saveTrailer","saveTheEndess","objectCollection","prevXRef","objectNum","prepareSubsection","saveSubsection","Free","getItem","generation","isFree","addOffsetLength","addGenNumberLength","split","version","generateFileVersion","bNew","getSubReference","objnumber","nextObjNumber","tempIndex","tempkey","tempvalue","bForceNew","saveIndirectObject","currentSavingObj","doSaveObject","free","RegisteredObject","dereference","rh","tempOffset","offsetNumber","tempReference","Normal","PdfPageSize","letter","note","legal","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","a10","b0","b1","b2","b3","b4","b5","archE","archD","archC","archB","archA","flsa","halfLetter","letter11x17","ledger","PdfPageOrientation","PdfPageRotateAngle","PdfNumberStyle","PdfDockStyle","PdfAlignmentStyle","TemplateType","PdfMargins","pdfMargin","setMargins","leftMargin","topMargin","rightMargin","bottomMargin","margin1","margin2","margin3","margin4","PdfPageSettings","margins","pageMargins","pageSize","rotateAngle","RotateAngle0","pageOrientation","Portrait","pageOrigin","isRotation","setSize","orientation","updateSize","Landscape","settings","getActualSize","PdfStreamWriter","dictionaryName","writeOperator","executeObject","useEvenOddRule","fillStrokePath","fillPath","closeFillPath","textScaling","strokePath","restoreGraphicsState","saveGraphicsState","startNextLine","writePoint","showText","checkTextParam","writeText","setLeading","setTextRenderingMode","renderingMode","setCharacterSpacing","charSpacing","setWordSpacing","showNextLineText","setColorSpace","temparg1","op","opcode","start","updateY","arg","string","writeComment","forStroking","setLineDashPattern","patternOffset","setLineDashPatternHelper","tempPattern","miterLimit","setLineCap","lineCapStyle","setLineJoin","lineJoinStyle","returnValue","appendBezierSegment","setColourWithPattern","colours","patternName","PdfPen","dashOffsetValue","penDashPattern","pdfDashStyle","Solid","pdfLineCap","pdfLineJoin","penWidth","internalMiterLimit","setBrush","Custom","Dash","Dot","DashDot","DashDotDot","sBrush","pdfBrush","currentPen","dashControl","lineJoin","lineCap","pen","getPattern","dashOffset","dashPattern","PdfTransformationMatrix","radDegFactor","PI","transformationMatrix","Matrix","translate","offsetX","offsetY","scale","scaleX","scaleY","angle","cos","sin","multiply","degreesToRadians","degreesX","degRadFactor","radiansToDegrees","radians","metrixElements","transform","point","x2","y2","tempMatrix","dispose","ProcedureSets","pdf","imageB","imageC","imageI","TemporaryDictionary","mKeys","mValues","ReferenceError","RangeError","splice","PdfTransparency","PdfAutomaticFieldInfoCollection","automaticFieldsInformation","fieldInfo","automaticFields","PdfGraphicsElement","drawHelper","graphics","bNeedSave","gState","translateTransform","drawInternal","restore","PdfAutomaticField","internalBounds","internalTemplateSize","internalFont","internalBrush","internalPen","internalStringFormat","performDrawHelper","location","scalingX","scalingY","getFont","stringFormat","draw","location_1","PdfAutomaticFieldInfo","getSize","getBrush","defaultFont","getPageFromGraphics","page","currentPage","field","pageNumberFieldLocation","pageNumberField","ByteArray","mPosition","dataView","DataView","readByte","getBuffer","writeFromBase64String","base64","arr","encodedString","input","chr1","chr2","chr3","enc2","enc3","keyStr","resultIndex","totalLength","replace","charAt","readNextTwoBytes","ImageFormat","ImageDecoder","sof1Marker","sof2Marker","sof3Marker","sof5Marker","sof6Marker","sof7Marker","sof9Marker","sof10Marker","sof11Marker","sof13Marker","sof14Marker","sof15Marker","mFormat","Unknown","mbitsPerComponent","mStream","mHeight","mWidth","mImageData","internalBuffer","checkIfJpeg","TypeError","Jpeg","parseJpegImage","reset","imgData","isLengthExceed","skip","readExceededJPGImage","mJpegHeader","getImageDictionary","imageData","imageStream","tempString","decodedString","imageDataAsNumberArray","compress","getColorSpace","getDecodeParams","decodeParams","isContinueReading","getMarker","skipStream","noOfBytes","temp","marker","markerLength","mPngHeader","GIF_HEADER","BMP_HEADER","PdfUnitConverter","dpi","updateProportionsHelper","convertUnits","from","to","convertFromPixels","convertToPixels","proportions","pixelPerInch","horizontalResolution","verticalResolution","PdfImage","imageWidth","imageHeight","imagePhysicalDimension","getPointSize","dpiX","dpiY","ucX","ucY","ptWidth","Pixel","Point","ptHeight","PdfBitmap","imageStatus","loadImage","initializeAsync","decoder","TtfTableInfo","checksum","TtfNameTable","TtfNameRecord","TtfHeadTable","TtfMetrics","macStyle","TtfHorizontalHeaderTable","TtfOS2Table","TtfPostTable","TtfLongHorMetric","TtfCmapSubTable","TtfCmapTable","TtfGlyphInfo","charCode","compareTo","glyph","TtfLocaTable","TtfAppleCmapSubTable","TtfMicrosoftCmapSubTable","TtfTrimmedCmapSubTable","TtfGlyphHeader","BigEndianWriter","capacity","int32Size","int16Size","int64Size","bufferLength","length_1","internalPosition","writeShort","flush","writeInt","writeUInt","buff","writeString","TtfReader","fontData","isTtcFont","isMacTtf","metricsName","isMacTTF","missedGlyphs","tableNames","entrySelectors","_isOpenTypeFont","macintoshDictionary","microsoftDictionary","internalMacintoshGlyphs","internalMicrosoftGlyphs","readFontDictionary","nameTable","readNameTable","headTable","readHeadTable","initializeFontName","checkPreambula","numTables","readInt16","tableDirectory","tableKey","readString","readInt32","lowestPosition","fixOffsets","minOffset","MAX_VALUE","tableKeys","shift","tableInfo","getTable","formatSelector","readUInt16","recordsCount","nameRecords","record","platformID","encodingID","languageID","nameID","unicode","readFixed","fontRevision","checkSumAdjustment","readUInt32","magicNumber","unitsPerEm","created","readInt64","modified","xMin","yMin","xMax","yMax","lowestReadableSize","fontDirectionHint","indexToLocalFormat","glyphDataFormat","readHorizontalHeaderTable","ascender","descender","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","metricDataFormat","numberOfHMetrics","readOS2Table","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","readBytes","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","vendorIdentifier","fsSelection","usFirstCharIndex","usLastCharIndex","sTypoAscender","sTypoDescender","sTypoLineGap","usWinAscent","usWinDescent","ulCodePageRange1","ulCodePageRange2","sxHeight","sCapHeight","usDefaultChar","usBreakChar","usMaxContext","readPostTable","formatType","underlinePosition","underlineThickness","isFixedPitch","minType42","maxType42","minType1","maxType1","readWidthTable","glyphCount","advanceWidth","lsb","glyphWidth","floor","readCmapTable","tablesCount","subTables","subTable","readCmapSubTable","getCmapEncoding","Macintosh","Microsoft","Apple","readAppleCmapTable","readMicrosoftCmapTable","Trimmed","readTrimmedCmapTable","maxMacIndex","glyphInfo","getWidth","macintosh","addGlyph","collection","Unicode","microsoft","segCountX2","searchRange","entrySelector","rangeShift","segCount","endCount","readUshortArray","reservedPad","startCount","idDelta","idRangeOffset","glyphID","codeOffset","j","id","Symbol","firstCode","entryCount","fontFamily","postScriptName","glyphCode","Undefined","Roman","microsoftGlyphs","macintoshGlyphs","initializeMetrics","horizontalHeadTable","os2Table","postTable","cmapTables","bSymbol","isSymbol","factor","winAscent","macAscent","winDescent","macDescent","ceil","fontBox","widthTable","updateWidth","subScriptSizeFactor","superscriptSizeFactor","getGlyph","byteToProcess","getString","getDefaultGlyph","readLocaTable","bShort","offsets","updateGlyphChars","glyphChars","locaTable","glyphCharKeys","nextKey","processCompositeGlyph","glyphOffset","glyphHeader","numberOfContours","skipBytes","glyphIndex","MoreComponents","Arg1And2AreWords","WeHaveScale","WeHaveAnXyScale","WeHaveTwoByTwo","generateGlyphTable","newLocaTable","newGlyphTable","activeGlyphs","sort","glyphSize","glyphSizeAligned","align","nextGlyphOffset","nextGlyphIndex","oldGlyphOffset","oldNextGlyphOffset","glyphTableSize","updateLocaTable","bLocaIsShort","newLocaTableOut","newLocaUpdated","newLocaSize","getFontProgram","locaTableSize","getFontProgramLength","fontProgramLength","writeCheckSums","writeGlyphs","tableName","usedTablesSize","nextTableSize","calculateCheckSum","byte1","byte2","byte3","byte4","i_1","setOffset","createInternals","bIsLocaShort","isFontPresent","getGlyphChars","chars","charKeys","getAllGlyphs","allGlyphInfo","readFontProgram","result1","result2","_readCompactFontFormatTable","cffData","convertString","getCharWidth","isUnicode","i1","i2","i3","i4","low","written","PdfFontMetrics","getAscent","getDescent","getLineGap","subSuperScript","SubScript","SuperScript","WidthTable","internalWidthTable","StandardWidthTable","widths","swt","UnicodeTrueTypeFont","base64String","nameString","isCompress","isEmbedFont","cmapPrefix","cmapEndCodespaceRange","cmapBeginRange","cmapEndRange","cmapSuffix","fontString","Initialize","ttfReader","ttfMetrics","fontDictionary","fontProgram","cmap","descendantFont","subsetName","getFontName","createDescendantFont","createCmap","createFontDictionary","createFontProgram","isBold","random","formatName","ret","createFontDescriptor","systemInfo","createSystemInfo","descriptor","getDescriptorFlags","getBoundBox","descFonts","usedChars","getDescendantWidth","generateCmap","generateFontProgram","chLen","firstGlyphIndex","lastGlyphIndex","firstGlyphIndexWasSet","widthDetails","first","last","middlePart","toHexString","nextRange","FixedPitch","Symbolic","Nonsymbolic","isItalic","ForceBold","abs","isCaseChange","toUpperCase","setSymbols","ArabicShapeRenderer","arabicCharTable","alef","alefHamza","alefHamzaBelow","alefMadda","lam","hamza","zeroWidthJoiner","hamzaAbove","hamzaBelow","wawHamza","yehHamza","waw","alefMaksura","yeh","farsiYeh","shadda","madda","lwa","lwawh","lwawhb","lwawm","bwhb","fathatan","superScriptalef","vowel","arabicMapTable","getCharacterShape","shape","level","str2","st","doShape","previous","ArabicShape","present","ligature","shapeCount","getShapeCount","Shapes","Value","append","Ligature","Type","shapeValue","shapeType","shapeVowel","shapeLigature","shapeShapes","Bidi","indexes","indexLevels","mirroringShapeCharacters","update","doMirrorShaping","res","getLogicalToVisualString","inputText","isRtl","rtlCharacters","RtlCharacters","getVisualOrder","setDefaultIndexLevel","doOrder","resultBuilder","sIndex","eIndex","odd","even","reArrange","pstart","pend","types","textOrder","rtlCharacterTypes","L","LRE","LRO","R","AL","RLE","RLO","PDF","EN","ES","ET","AN","CS","NSM","BN","B","S","WS","ON","charTypes","getCharacterCode","doVisualOrder","levels","characterCodes","setDefaultLevels","setLevels","updateLevels","getEmbeddedCharactersLength","preview","preType","checkNSM","checkEmbeddedCharacters","startType","endType","charType","checkEuropeanDigits","checkArabicCharacters","checkEuropeanNumberSeparator","checkEuropeanNumberTerminator","l","getLength","checkOtherNeutrals","checkOtherCharacters","pst","checkCommanCharacters","validSet","t","byte","lt","tt","rt","RtlRenderer","openBracket","closeBracket","rtl","wordSpace","customLayout","splitLayout","customSplitLayout","getGlyphIndex","glyphs","custom","fontInternal","Uint16Array","textDirection","layouted","txt","words","addChars","PdfLayoutType","PdfLayoutBreakType","PathPointType","PdfGradientBrush","mbackground","mbStroking","mfunction","mpatternDictionary","sh","aa","mcolorSpace","csValue","colorSpaceToDeviceName","mshading","patternDictionary","mmatrix","resetFunction","name_1","getName","resetPatternDictionary","cloneAntiAliasingValue","cloneBackgroundValue","PdfTemplate","writeTransformation","tempSize","templateSize","pdfGraphics","gr","GetResourceEventHandler","PdfGraphics","initializeCoordinates","PdfResources","addType","addSubType","baseDictionary","properties","getNames","primitive","names","sName","generateName","PdfTilingBrush","pdfNames","fonts","requireProcedureSet","procedureSetName","procSets","removeFont","Guid","getNewGuidString","xobjects","savable","transDic","parentXObjects","hasSameImageStream","oldReference","values_1","mStroking","mLocation","mDictionaryProperties","PdfPage","mPage","brushStream","mResources","setBox","setObligatoryFields","mTransformationMatrix","tempBrushStream","tempResource","mBox","tileTransform","box","mGraphics","name1","previousTextRenderingMode","Fill","previousCharacterSpacing","previousWordSpacing","previousTextScaling","procedureSets","isNormalRender","isUseFontSize","isEmfTextScaled","isEmf","isEmfPlus","isBaselineFormat","emfScalingFactor","colorSpaceChanged","isPointOverload","currentColorSpaces","isImageOptimized","graphicsState","istransparencySet","internalAutomaticFields","startCutIndex","canvasSize","pdfStreamWriter","pdfStringLayoutResult","internalMediaBoxUpperRightBound","clipBounds","pageLayer","bStateSaved","currentBrush","currentFont","bCSInitialized","currentStringFormat","drawPdfTemplate","template","bNeedScale","getTranslateTransform","getScaleTransform","newLocation","drawString","arg8","arg9","temparg4","temparg5","temparg6","temparg7","temparg8","temparg9","checkCorrectLayoutRectangle","drawStringLayoutResult","drawLine","stateControl","drawRectangle","xOffset","yOffset","layer","drawPathHelper","drawRoundedRectangle","radius","diameter","arc","_pathPoints","_pathTypes","startFigure","_addArc","CloseSubpath","_drawPath","Alternate","startAngle","sweepAngle","points","_getBezierArcPoints","_addArcPoints","Bezier3","pointType","_addPoint","Start","_getLastPoint","Line","lastPoint","x1","y1","s1","e1","tmp","fragAngle","numFragments","xcen","ycen","rx","ry","halfAng","kappa","pointList","theta0","theta1","cos0","cos1","sin0","sin1","Winding","isPen","isBrush","isEvenOdd","drawImage","physicalDimension","name_2","setResources","resource","getLineBounds","lineIndex","layoutRectangle","lineCount","getTextVerticalAlignShift","hShift","getHorizontalAlignShift","shouldJustify","textSize","layoutedRectangle","alignment","Center","Right","lineAlignment","Middle","Bottom","setLayer","pageSave","performDraw","applyStringSettings","horizontalScalingFactor","resultHeight","remainingString","drawLayoutResult","underlineStrikeoutText","getNextPage","section","getPages","setClip","tm","getTextRenderingMode","cs","ws","textHeight","boundsHeight","vAlignShift","ttfFont","lineInfo","hAlignShift","drawUnicodeLine","drawAsciiLine","justifyLine","useWordSpace","Justify","rtlRender","blocks","rightAlign","RightToLeft","drawUnicodeBlocks","breakUnicodeLine","tokens","token","convertToUnicode","getUnicodeString","xShift","spaceWidth","tokenWidth","converted","boundsWidth","hasWordSpacing","whitespacesCount","justifyStyle","goodWidth","hasSpaces","goodLineBreakStyle","underline","strikeout","linePen","createUnderlineStikeoutPen","vShift","underlineYOffset","strikeoutYOffset","FillStroke","Stroke","ClipFlag","layoutBounds","firstParagraphLine","Left","lastDocumentCS","lastGraphicsCS","initCurrentColorSpace","penControl","brushControl","fontControl","colorspace","lgb","curSubSuper","prevSubSuper","setTransparency","trasparencies","transp","td","TransparencyData","name_3","clipTranslateMargins","clipArea","scaleTransform","rotateTransform","getRotateTransform","mediaBoxUpperRightBound","cropBox","PdfGraphicsState","textRenderingMode","doRestoreState","pop","drawPath","path","pathPoints","pathTypes","fillMode","buildUpPath","drawArc","constructArcPath","cnt","typeValue","p2","p3","getBezierPoints","checkFlags","pathTypesValuesMask","startAng","getBezierArc","pt","numX1","numY1","numX2","numY2","fragAngle1","pointsList","thetaValue0","thetaValue1","transparencyObject","internalTextRenderingMode","internalTextScaling","pdfColorSpace","elements_1","forEach","pdfPen","pdfFont","alphaPen","alphaBrush","blendMode","PdfPageLayer","streamClipPageTemplates","isVisible","sublayer","contentLength","pdfPage","clipPageTemplates","layerid","layerName","initializeGraphics","PdfPageLayerCollection","sign","oPage","sc","isSame","origin","clipRect","getActualBounds","pageSettings","PdfCollection","parentLayerCount","optionalContent","PdfPageBase","lPage","parseLayers","list","firstArgument","secondArgument","addLayer","insertLayer","loadedPage","saveStream","restoreStream","saveData","defLayerIndex","pageDictionary","pdfSection","layers","defaultLayerIndex","layerCollection","PdfAnnotationCollection","alreadyExistsAnnotationError","missingAnnotationException","internalAnnotations","lists","annotation","doAdd","destination","setPage","layoutResult","lastPosition","setColor","annotationCollection","defaultLayer","parentDocument","annotations","setSection","resetProgress","isProgressOn","getClientSize","doc","drawPageTemplates","containsTemplates","backLayer","drawTemplates","frontLayer","PageAddedEventArgs","PdfSectionPageCollection","PdfDocumentTemplate","leftTemplate","checkElement","topTemplate","rightTemplate","bottomTemplate","evenLeft","evenTop","evenRight","evenBottom","oddLeft","oddTop","oddRight","oddBottom","getLeft","isEven","EvenLeft","OddLeft","getTop","EvenTop","OddTop","getRight","EvenRight","OddRight","getBottom","EvenBottom","OddBottom","pageCollectionIndex","templateElement","PdfSectionTemplate","leftValue","topValue","rightValue","bottomValue","stampValue","PdfSection","pageAdded","pdfPages","initialSettings","sectionCollection","pagesReferences","pageTemplate","pagesCollection","pointToNativePdf","setPageSettings","PageSettingsState","pageCount","foreground","documentHeaders","getDocumentTemplates","sectionTemplates","getSectionTemplates","templates","applyDocumentTopTemplate","applyDocumentBottomTemplate","applyDocumentLeftTemplate","applyDocumentRightTemplate","page_1","checkPresence","pageAddedMethod","args","onPageAdded","document_1","getLeftIndentWidth","top_1","getTopIndentHeight","getRightIndentWidth","getBottomIndentHeight","includeMargins","templateWidth","docTemplateWidth","templateHeight","docTemplateHeight","temproaryPages","applyPageSettings","container","parentSettings","PdfSectionCollection","rotateFactor","sectionHeaders","drawTemplatesHelper","pageRotate","sectionCount","pdfSectionCollection","section_1","checkSection","countPages","PdfDocumentPageCollection","pdfPageCollectionIndex","getLastSection","getPageByIndex","getPage","sectionStartIndex","pageIndex","numPages","PdfCacheCollection","referenceObjects","pdfFontCollection","search","group","getGroup","createNewGroup","tGroup","representative","removeGroup","slice","isMerging","defaultMargin","isMerge","cacheCollection","documentPageCollection","defaultStandardFont","PdfStandardFont","Helvetica","isCacheEnabled","checkPagesPresence","cache","PdfStandardFontMetricsFactory","getMetrics","getHelveticaMetrics","Courier","getCourierMetrics","TimesRoman","getTimesMetrics","getSymbolMetrics","ZapfDingbats","getZapfDingbatsMetrics","subSuperScriptFactor","helveticaBoldItalicAscent","helveticaBoldItalicDescent","helveticaBoldItalicName","arialBoldWidth","helveticaBoldAscent","helveticaBoldDescent","helveticaBoldName","helveticaItalicAscent","helveticaItalicDescent","helveticaItalicName","arialWidth","helveticaAscent","helveticaDescent","helveticaName","courierBoldItalicAscent","courierBoldItalicDescent","courierBoldItalicName","fixedWidth","courierBoldAscent","courierBoldDescent","courierBoldName","courierItalicAscent","courierItalicDescent","courierItalicName","courierAscent","courierDescent","courierName","timesBoldItalicAscent","timesBoldItalicDescent","timesBoldItalicName","timesRomanBoldItalicWidths","timesBoldAscent","timesBoldDescent","timesBoldName","timesRomanBoldWidth","timesItalicAscent","timesItalicDescent","timesItalicName","timesRomanItalicWidth","timesAscent","timesDescent","timesName","timesRomanWidth","symbolAscent","symbolDescent","symbolName","symbolWidth","zapfDingbatsAscent","zapfDingbatsDescent","zapfDingbatsName","zapfDingbatsWidth","fontFamilyPrototype","encodings","pdfFontFamily","checkStyle","initializeInternals","convert","getCharWidthInternal","equal","stFont","fontFamilyEqual","lineReducer","styleEqual","WinAnsiEncoding","charOffset","PdfAnnotation","textBrush","textFont","internalColor","darkness","nativeRectangle","initialHeight","tempLoacation","PdfLinkAnnotation","PdfActionLinkAnnotation","pdfAction","getSetAction","PdfDocumentLinkAnnotation","pdfDestination","ElementLayouter","layoutElement","getElement","param","layoutInternal","Layouter","getPaginateBounds","usePaginateBounds","paginateBounds","PdfLayoutFormat","baseFormat","break","boundsSet","layoutType","layoutPaginateBounds","PdfLayoutParams","layoutFormat","PdfLayoutResult","PdfBorders","defaultBorderPenLeft","dashStyle","defaultBorderPenRight","defaultBorderPenTop","defaultBorderPenBottom","leftPen","rightPen","topPen","bottomPen","PdfPaddings","hasLeftPad","hasRightPad","hasTopPad","hasBottomPad","bottomPad","topPad","leftPad","rightPad","PdfLayoutElement","beginPageLayout","endPageLayout","onBeginPageLayout","onEndPageLayout","bEmbedFonts","default","newBound","TextLayouter","currentBounds","pageResult","TextPageLayoutResult","remainder","layoutOnPage","getLayoutResult","PdfTextLayoutResult","lastLineBounds","checkCorrectBounds","stringResult","textFinished","FitElement","PdfTextWebLink","_isLastElement","PdfTextElement","getTextPageBounds","verticalShift","remainderText","lastLineTextBounds","elementValue","hasPointOverload","isPdfTextElement","drawText","stringLayoutResult","previousPosition","calculateResultBounds","lineSize","maximumWidth","startPosition","PdfUriAnnotation","pdfUriAction","uriAction","uniformResourceLocator","uriAnnotation","recalculateBounds","defaultBorder","previousFontStyle","calculateBounds","url","drawMultipleLineWithPoint","drawMultipleLineWithBounds","PdfNumbersConvertor","intArabic","numberStyle","Numeric","LowerLatin","arabicToLetter","toLowerCase","LowerRoman","arabicToRoman","UpperLatin","UpperRoman","retval","retvalM","generateNumber","retvalCM","retvalD","retvalCD","retvalC","retvalXC","retvalL","retvalXL","retvalX","retvalIX","retvalV","retvalIV","retvalI","arabic","stack","convertToLetter","appendChar","magnitude","numberstring","letterLimit","acsiiStartIndex","PdfTemplateValuePair","pdfTemplate","PdfMultipleValueField","drawLocation","PdfPageNumberField","internalNumberStyle","internalGetValue","PdfCompositeField","arguments","internalText","automaticField","PdfSingleValueField","painterGraphics","PdfPageCountField","PdfDestinationMode","PdfExtend","PdfDestination","destinationMode","Location","zoomFactor","destinationLocation","initializePrimitive","simplePage","FitToPage","PdfFunction","mDictionary","PdfSampledFunction","sizes","samples","checkParams","setDomainAndRange","setSizeAndValues","PdfLinearGradientMode","ShadingType","KnownColor","PdfBrushes","sBrushes","AliceBlue","AntiqueWhite","Aqua","Aquamarine","Azure","Beige","Bisque","Black","BlanchedAlmond","Blue","BlueViolet","Brown","BurlyWood","CadetBlue","Chartreuse","Chocolate","Coral","CornflowerBlue","Cornsilk","Crimson","Cyan","DarkBlue","DarkCyan","DarkGoldenrod","DarkGray","DarkGreen","DarkKhaki","DarkMagenta","DarkOliveGreen","DarkOrange","DarkOrchid","DarkRed","DarkSalmon","DarkSeaGreen","DarkSlateBlue","DarkSlateGray","DarkTurquoise","DarkViolet","DeepPink","DeepSkyBlue","DimGray","DodgerBlue","Firebrick","FloralWhite","ForestGreen","Fuchsia","Gainsboro","GhostWhite","Gold","Goldenrod","Gray","Green","GreenYellow","Honeydew","HotPink","IndianRed","Indigo","Ivory","Khaki","Lavender","LavenderBlush","LawnGreen","LemonChiffon","LightBlue","LightCoral","LightCyan","LightGoldenrodYellow","LightGray","LightGreen","LightPink","LightSalmon","LightSeaGreen","LightSkyBlue","LightSlateGray","LightSteelBlue","LightYellow","Lime","LimeGreen","Linen","Magenta","Maroon","MediumAquamarine","MediumBlue","MediumOrchid","MediumPurple","MediumSeaGreen","MediumSlateBlue","MediumSpringGreen","MediumTurquoise","MediumVioletRed","MidnightBlue","MintCream","MistyRose","Moccasin","NavajoWhite","Navy","OldLace","Olive","OliveDrab","Orange","OrangeRed","Orchid","PaleGoldenrod","PaleGreen","PaleTurquoise","PaleVioletRed","PapayaWhip","PeachPuff","Peru","Pink","Plum","PowderBlue","Purple","Red","RosyBrown","RoyalBlue","SaddleBrown","Salmon","SandyBrown","SeaGreen","SeaShell","Sienna","Silver","SkyBlue","SlateBlue","SlateGray","Snow","SpringGreen","SteelBlue","Tan","Teal","Thistle","Tomato","Transparent","Turquoise","Violet","Wheat","White","WhiteSmoke","Yellow","YellowGreen","colorName","getColorValue","PdfBlend","precision","mFactors","mPositions","positionarray","mCount","generateColorBlend","positions","cBlend","PdfColorBlend","clrs","c1","c2","interpolate","colors","clonePdfBlend","blend","factors","gcd","u","v","iU","iV","gcdInt","mcolors","getFunction","colourComponents","getColorComponentsCount","maxComponentValue","getMaxComponentValue","setRange","func","mbrush","samplesCount","step","intervals","getIntervals","getSamplesValues","cloneColorBlend","maxValue","sampleCount","getGrayscaleSamples","getCmykSamples","getRgbSamples","getNextColor","indexHi","indexLow","getIndices","positionLow","positionHi","colorLow","colorHi","currPos","prev","PdfLinearGradientBrush","mPointStart","mPointEnd","setPoints","BackwardDiagonal","ForwardDiagonal","Horizontal","Vertical","mBoundaries","radAngle","tan","centre","p1","cp1","subPoints","choosePoint","coef","mulPoints","addPoints","mulPoint","mColours","mColourBlend","initShading","mBlend","extStart","extEnd","End","point1","point2","interpolationColors","PdfRadialGradientBrush","centerStart","radiusStart","centerEnd","radiusEnd","colorStart","colorEnd","mRadiusStart","mRadiusEnd","mColour","mColourBlends","extend1","extEnd1","pointStart","pointEnd","rBrush","PdfBorderOverlapStyle","PdfGridStyleBase","gridBackgroundBrush","gridTextBrush","gridTextPen","gridFont","gridBackgroundImage","PdfGridStyle","gridBorderOverlapStyle","Overlap","bAllowHorizontalOverflow","gridHorizontalOverflowType","PdfHorizontalOverflowType","LastPage","gridCellSpacing","gridCellPadding","PdfGridCellStyle","gridCellBorders","PdfGridRowStyle","gridRowBackgroundBrush","setBackgroundBrush","cells","getCell","backgroundBrush","gridRowTextBrush","setTextBrush","gridRowTextPen","setTextPen","textPen","gridRowFont","gridRowBorder","setBorder","borders","setParent","gridRowBackgroundImage","setBackgroundImage","PdfGridCell","row","cellWidth","cellHeight","tempval","fontSpilt","finsh","rowSpanRemainingHeight","hasRowSpan","hasColSpan","isFinish","gridRowSpan","colSpan","gridRow","internalIsCellMergeContinue","internalIsRowMergeContinue","internalIsCellMergeStart","internalIsRowMergeStart","remaining","objectValue","PdfGrid","grid","isSingleGrid","ParentCell","isChildGrid","rowCount","rows","getRow","colCount","rowSpanExists","hasRowSpanSpan","cellStyle","measureHeight","columnSpanExists","isComplete","measureWidth","layouter","getTextFont","webLink","cellPadding","cellSpacing","drawCellBackground","getBackgroundBrush","backgroundImage","getBackgroundImage","adjustContentLayoutArea","returnBounds","getStringFormat","rowSpan","border","cancelSubsequentSpans","allowHorizontalOverflow","rowOverflowIndex","adjustOuterLayoutArea","getTextPen","getTextBrush","strFormat","innerLayoutArea","allowRowBreakAcrossPages","_rowHeight","splitChildRowIndex","rowFontSplit","repeatFlag","childGrid","layoutRect","PdfGridLayouter","PdfGridLayoutFormat","LayoutFormat","Paginate","setSpan","checkSpan","childGridResult","rowBreakHeightValue","rowBreakHeight","NestedGridLayoutResult","imageBounds","drawCellBorders","borderOverlapStyle","Inside","Square","isHeader","currentColIndex","columnSpan","isCellMergeContinue","span","totalWidth","compWidth","getColumn","currentRowIndex","rowCollection","headers","totalHeight","getHeader","rowMergeComplete","calculateWidth","currentValue","cellIndex","internalWidth","tempWidth","PdfGridCellCollection","cell","tempcell","PdfGridColumn","columnWidth","isCustomWidth","PdfGridColumnCollection","internalColumns","measureColumnsWidth","initialWidth","isPageWidth","getDefaultWidths","subFactor","PdfGridRow","gridRowOverflowIndex","rowHeight","rowWidth","isrowFinish","isRowSpanRowHeightSet","noOfPageCount","isRowHeightSet","isPageBreakRowSpanApplied","isRowMergeComplete","isHeaderRow","pdfGrid","bRowSpanExists","gridCells","rowStyle","gridRowBreakHeight","gridResult","bColumnSpanExists","cellIn","rowin","rowWid","PdfGridRowCollection","addRow","temprow","PdfGridHeaderCollection","gridSize","isGridSplit","isRearranged","pageBounds","listOfNavigatePages","parentCellIndex","breakRow","hasColumnSpan","beginCellDraw","endCellDraw","bRepeatHeader","gridColumns","gridRows","gridHeaders","gridInitialWidth","gridStyle","ispageWidth","ischildGrid","measure","parentCell","onBeginCellDraw","raiseBeginCellDraw","onEndCellDraw","raiseEndCellDraw","hasChanged","currentRow","_gridLocation","currentCellIndex","maxSpan","isRowMergeContinue","isCellMergeStart","isRowMergeStart","maximumRowSpan","cellcolSpan","cellrowSpan","cellmaxSpan","padding","columnCount","childGridColumnWidth","colCount_1","colCount_2","RowCount","ColCount","colWidth","childGridColWidth","childheight","flag","columnRanges","currentLocation","slr","isPaginate","getFormat","gridLayoutFormat","currentPageBounds","currentGraphics","FitColumnsToPage","Grid","startLocation","hType","horizontalOverflowType","determineColumnDrawRanges","startColumn","endColumn","cellWidths","availableWidth","subWidths","layoutedPages","startPage","cellBounds","cellStartIndex","cellEndIndex","returnObject","raiseBeforePageLayout","drawHeader","headerHeight","headerResult","drawRow","repeatRowIndex","OnePage","getNextPageformat","repeatRow","originalHeight","rowResult","rowIndex","tempResult","raisePageLayouted","cancel","isRowBreaksNextPage","i_2","repeatHeader","j_1","headerRepeat","j_2","tempResult1","i_3","checkIsFisished","i_4","i_5","recalHeight","ReCalculateHeight","startIndex","endIndex","pageGraphics","location_2","totalwidth","childGridCell","i_6","bottomPadding","isPdfGrid","maximumCellBoundsWidth","largeNavigatePage","rowLayoutBoundsWidth","NextPage","reArrangePages","FinishedDrawingCell","nextPage","pageindex","CheckIfDefaultFormat","defaultFormat","measureTrailingSpaces","noClip","RaiseBeforeCellDraw","PdfGridBeginCellDrawEventArgs","raiseAfterCellDraw","cellstyle","PdfGridEndCellDrawEventArgs","count_1","isChanged","PdfGridLayoutResult","newHeight","raiseBeginPageLayout","PdfGridBeginPageLayoutEventArgs","startRowIndex","PdfGridEndPageLayoutEventArgs","raiseEndPageLayout","result_1","RowLayoutResult","rowHeightWithSpan","allowRowBreak","currRowIndex","i_7","currentBoundsHeight","newSpan","headerCell","nextHeaderCell","currCell","nextCell","calculatedHeight","FitPage","drawRowWithBreak","repeatRowNumber","isFit","isFitToCell","loc","cancelSpans","tempValue","currentHeight","column","calculateHeight","gridHeight","gridColumnWidth","cellstyle1","rowBreakPageHeightCellIndex","GridCellEventArgs","gridRowIndex","gridCellIndex","gridBounds","bSkip","PdfCancelEventArgs","isCancel","BeginPageLayoutEventArgs","EndPageLayoutEventArgs","nextPdfPage","startRow","layoutedBounds","bIsFinished","ShapeLayouter","olderPdfForm","shapeBounds","totalPageSize","shapeLayoutBounds","getBounds","ShapeLayoutResult","endArgs","getNextShapeBounds","curBounds","sBounds","checkCorrectCurrentBounds","fitToPage","fitsToBounds","shapeFinished","getDrawBounds","drawShape","getPageResultBounds","drawGraphicsHelper","bottomCellPadding","splitDiff","borderWidth","PdfShapeElement","apply","getBoundsInternal","drawShapeHelper","PdfDrawElement","mpen","PdfFillElement","obtainPen","PdfPath","mpoints","mpathTypes","mStartFigure","mfillMode","isBeziers3","isXps","addPath","getLastPoint","widthValue","addArc","getBezierArcPoints","addBezier","addEllipse","closeFigure","addLine","addPie","addPoint","addPolygon","addRectangle","closeAllFigures","startPath","pointCount","xmin","xmax","ymin","ymax","PdfRectangleArea","PdfEllipsePart","PdfArc","argu1","PdfTrueTypeFont","createFontInternal","getUnicodeLineWidth","codeWidth","calculateStyle","iStyle","equalFont","enableCache","isEmbed","isUnicodeFont","glyphIndices","resultGlyph","PdfPageTemplateElement","InitiateBounds","dockStyle","resetAlignment","alignmentStyle","setAlignment","isForeground","templateType","updateDocking","dock","canBeSet","TopLeft","MiddleLeft","BottomLeft","TopCenter","TopRight","MiddleRight","BottomRight","BottomCenter","MiddleCenter","getAlignmentBounds","getDockBounds","getSimpleAlignmentBounds","getTemplateAlignmentBounds","actualBounds","convertSign","getSimpleDockBounds","getTemplateDockBounds","Infinity"],"mappings":"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D,yBAAyBvjD,SAAS,IAAK,KAC5CR,KAAK+jD,yBAAyBvjD,SAAS,IAAK,KAC5CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,OAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,OAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,OAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,OAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,OAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,OAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAE7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,KAAM,MAC7CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,MAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,MAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,MAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,MAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,MAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,MAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,MAC9CR,KAAK+jD,yBAAyBvjD,SAAS,KAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAAO,OAC9CR,KAAK+jD,yBAAyBvjD,SAAS,MAA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AK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,KAMTjD,EAA8ByC,4BAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,EAAG,IAAK,EAAG,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,IAAM,IAAK,IAAK,IAAK,EACzE,IAAK,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAAM,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,EACzE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAC3E,IAAK,KAMTzC,EAA8ByD,aAC1B,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,IAAK,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,IAAK,IAClE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IACjE,KAAM,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK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"}